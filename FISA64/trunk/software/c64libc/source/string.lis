     1	
     2	byte *memcpy(byte *d, byte *s, int size)
     3	{
     4	    asm {
     5	        lw    r1,32[bp]
     6	        lw    r2,24[bp]
     7	        lw    r3,40[bp]
     8	    .0001:
     9	        lb    r4,[r1]
    10	        sb    r4,[r2]
    11	        addui r1,r1,#1
    12	        addui r2,r2,#1
    13	        subui r3,r3,#1
    14	        bgt   r3,.0001
    15	    }
    16		return d;
    17	}
    18	


*** local symbol table ***

d          =000018    -    Auto        Pointer to Byte
s          =000020    -    Auto        Pointer to Byte
size       =000028    -    Auto        Long



    19	short int *memcpyH(short int *d, short int *s, int size)
    20	{
    21	    asm {
    22	        lw    r1,32[bp]
    23	        lw    r2,24[bp]
    24	        lw    r3,40[bp]
    25	    .0001:
    26	        lh    r4,[r1]
    27	        sh    r4,[r2]
    28	        addui r1,r1,#4
    29	        addui r2,r2,#4
    30	        subui r3,r3,#1
    31	        bgt   r3,.0001
    32	    }
    33		return d;
    34	}
    35	


*** local symbol table ***

d          =000018    -    Auto        Pointer to Short
s          =000020    -    Auto        Pointer to Short
size       =000028    -    Auto        Long



    36	int *memcpyW(int *d, int *s, int size)
    37	{
    38	    asm {
    39	        lw    r1,32[bp]
    40	        lw    r2,24[bp]
    41	        lw    r3,40[bp]
    42	    .0001:
    43	        lw    r4,[r1]
    44	        sw    r4,[r2]
    45	        addui r1,r1,#8
    46	        addui r2,r2,#8
    47	        subui r3,r3,#1
    48	        bgt   r3,.0001
    49	    }
    50		return d;
    51	}
    52	


*** local symbol table ***

d          =000018    -    Auto        Pointer to Long
s          =000020    -    Auto        Pointer to Long
size       =000028    -    Auto        Long



    53	byte *memset(byte *p, byte val, int size)
    54	{
    55		asm {
    56	        lw    r1,24[bp]
    57	        lw    r2,32[bp]
    58	        lw    r3,40[bp]
    59	.0001:
    60	        sb    r2,[r1]
    61	        addui r1,r1,#1
    62	        subui r3,r3,#1
    63	        bgt   r3,.0001
    64	    }
    65		return p;
    66	}
    67	


*** local symbol table ***

p          =000018    -    Auto        Pointer to Byte
val        =000020    -    Auto        Byte
size       =000028    -    Auto        Long



    68	short int *memsetH(short int *p, short int val, int size)
    69	{
    70		asm {
    71	        lw    r1,24[bp]
    72	        lw    r2,32[bp]
    73	        lw    r3,40[bp]
    74	.0001:
    75	        sh    r2,[r1]
    76	        addui r1,r1,#4
    77	        subui r3,r3,#1
    78	        bgt   r3,.0001
    79	    }
    80		return p;
    81	}
    82	


*** local symbol table ***

p          =000018    -    Auto        Pointer to Short
val        =000020    -    Auto        Short
size       =000028    -    Auto        Long



    83	int *memsetW(int *p, int val, int size)
    84	{
    85		asm {
    86	        lw    r1,24[bp]
    87	        lw    r2,32[bp]
    88	        lw    r3,40[bp]
    89	.0001:
    90	        sw    r2,[r1]
    91	        addui r1,r1,#8
    92	        subui r3,r3,#1
    93	        bgt   r3,.0001
    94	    }
    95		return p;
    96	}
    97	


*** local symbol table ***

p          =000018    -    Auto        Pointer to Long
val        =000020    -    Auto        Long
size       =000028    -    Auto        Long



    98	byte *memchr(byte *p, byte val, int n)
    99	{
   100		byte *su;
   101	
   102		for (su = p; n > 0; ++su, --n)
   103			if (*su==val)
   104				return su;
   105		return 0;
   106	}
   107	


*** local symbol table ***

p          =000018    -    Auto        Pointer to Byte
val        =000020    -    Auto        Byte
n          =000028    -    Auto        Long
su         =fffffff8    -    Auto        Pointer to Byte



   108	int strlen(char *p)
   109	{
   110		int n;
   111	
   112		if (p==(char *)0) return 0;
   113		for (n = 0; p[n]; n++)
   114			;
   115		return n;
   116	}
   117	


*** local symbol table ***

p          =000018    -    Auto        Pointer to Char
n          =fffffff8    -    Auto        Long



   118	char *strcpy(char *d, char *s)
   119	{
   120		int nn;
   121	
   122		for (nn = 0; s[nn]; nn++)
   123			d[nn] = s[nn];
   124		d[nn] = '\0';
   125		return d;
   126	}
   127	


*** local symbol table ***

d          =000018    -    Auto        Pointer to Char
s          =000020    -    Auto        Pointer to Char
nn         =fffffff8    -    Auto        Long



   128	char *strncpy(char *d, char *s, int size)
   129	{
   130		int nn;
   131	
   132		for (nn = 0; nn < size; nn++) {
   133			d[nn] = s[nn];
   134			if (s[nn]=='\0')
   135				break;
   136		}
   137		for (; nn < size; nn++)
   138			d[nn] = '\0';
   139		return d;
   140	}
   141	


*** local symbol table ***

d          =000018    -    Auto        Pointer to Char
s          =000020    -    Auto        Pointer to Char
size       =000028    -    Auto        Long
nn         =fffffff8    -    Auto        Long



   142	int strncmp(unsigned char *a, unsigned char *b, int len)
   143	{
   144		unsigned char *ua;
   145		unsigned char *ub;
   146	
   147		ua = a;
   148		ub = b;
   149		if (ua==ub)	// duh
   150			return 0;
   151		for (; len > 0; ua++, ub++, len--)
   152			if (*ua != *ub)
   153				return *ua < *ub ? -1 : 1;
   154			else if (*ua == '\0')
   155				return 0;
   156		return 0;
   157	}
   158	


*** local symbol table ***

a          =000018    -    Auto        Pointer to 
b          =000020    -    Auto        Pointer to 
len        =000028    -    Auto        Long
ua         =fffffff8    -    Auto        Pointer to 
ub         =fffffff0    -    Auto        Pointer to 



   159	char *strchr(char *p, char val, int n)
   160	{
   161		char *su;
   162	
   163		for (su = p; n > 0; ++su, --n)
   164			if (*su==val)
   165				return su;
   166		return 0;
   167	}
   168	


*** local symbol table ***

p          =000018    -    Auto        Pointer to Char
val        =000020    -    Auto        Char
n          =000028    -    Auto        Long
su         =fffffff8    -    Auto        Pointer to Char




 *** global scope typedef symbol table ***

strncmp    =000000    -    Global      Function returning Long
strncpy    =000000    -    Global      Function returning Pointer to Char
memchr     =000000    -    Global      Function returning Pointer to Byte
memcpy     =000000    -    Global      Function returning Pointer to Byte
memset     =000000    -    Global      Function returning Pointer to Byte
strchr     =000000    -    Global      Function returning Pointer to Char
strlen     =000000    -    Global      Function returning Long
strcpy     =000000    -    Global      Function returning Pointer to Char
memcpyH    =000000    -    Global      Function returning Pointer to Short
memsetH    =000000    -    Global      Function returning Pointer to Short
memcpyW    =000000    -    Global      Function returning Pointer to Long
memsetW    =000000    -    Global      Function returning Pointer to Long

 *** structures and unions ***

