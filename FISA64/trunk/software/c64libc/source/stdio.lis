     1	//#include "c:\AtlysCores\RTF65000\trunk\software\stdio.h"
     2	
     3	pascal void putch(char ch)
     4	{
     5		asm {
     6	        push    r6
     7			lw		r1,24[bp]
     8			ldi     r6,#14    ; Teletype output function
     9	        sys     #410      ; Video BIOS call
    10	        pop     r6
    11		}
    12	}
    13	


*** local symbol table ***

ch_        =000018    -    Auto        Char



    14	pascal void putnum(int num, int wid, char sep, char padchar)
    15	{
    16		int n, m10;
    17		char sign;
    18		char numwka[200];
    19	
    20		if (wid < 0 or wid > 200)	// take care of nutty parameter
    21			wid = 0;
    22		sign = num < 0 ? '-' : '+';
    23		if (num < 0) num = -num;
    24		n = 0;
    25		do {
    26			if ((n % 4)==3 && sep) {
    27				numwka[n]=sep;
    28				n++;
    29			}
    30			m10 = num % 10;
    31			numwka[n] = m10 + '0';
    32			num = num / 10;
    33			n++;
    34		} until (num == 0 or n > 18);
    35		if (sign=='-') {
    36			numwka[n] = sign;
    37			n++;
    38		}
    39		for (; n < wid; wid--)
    40			putch(padchar);
    41		while (n > 0) {
    42			--n;
    43			putch(numwka[n]);
    44		}
    45	}
    46	


*** local symbol table ***

num_       =000018    -    Auto        Long
wid_       =000020    -    Auto        Long
sep_       =000028    -    Auto        Char
padchar_   =000030    -    Auto        Char
n_         =fffffff8    -    Auto        Long
m10_       =fffffff0    -    Auto        Long
sign_      =ffffffee    -    Auto        Char
numwka_    =fffffe5e    -    Auto        Array of Char



    47	pascal void puthexnum(int num, int wid, int ul, char padchar)
    48	{
    49		int n, m;
    50		char sign;
    51		char numwka[200];
    52	
    53		if (wid < 0 or wid > 200)	// take care of nutty parameter
    54			wid = 0;
    55		n = 0;
    56		sign = num < 0 ? '-' : '+';
    57		if (num < 0) num = -num;
    58		do {
    59			m = num & 15;
    60			if (m < 10)
    61				numwka[n] = m + '0';
    62			else if (ul)
    63				numwka[n] = m + 'A'-10;
    64			else
    65				numwka[n] = m + 'a'-10;
    66			num = num >> 4;
    67			n++;
    68		}
    69		while (num != 0 && n < 18);
    70		if (sign=='-') {
    71			numwka[n] = sign;
    72			n++;
    73		}
    74		while (n < wid) {
    75			putch(sign=='-' ? ' ' : padchar);
    76			wid--;
    77		}
    78		while (n > 0) {
    79			--n;
    80			putch(numwka[n]);
    81		}
    82	}
    83	


*** local symbol table ***

num_       =000018    -    Auto        Long
wid_       =000020    -    Auto        Long
ul_        =000028    -    Auto        Long
padchar_   =000030    -    Auto        Char
n_         =fffffff8    -    Auto        Long
m_         =fffffff0    -    Auto        Long
sign_      =ffffffee    -    Auto        Char
numwka_    =fffffe5e    -    Auto        Array of Char



    84	pascal int putstr(char *p, int maxchars)
    85	{
    86		char *q;
    87	
    88		for (q = p; *p && maxchars > 0; p++, maxchars--)
    89			putch(*p);
    90		return p-q;
    91	}
    92	


*** local symbol table ***

p_         =000018    -    Auto        Pointer to Char
maxchars_  =000020    -    Auto        Long
q_         =fffffff8    -    Auto        Pointer to Char



    93	pascal void putstr2(char *p)
    94	{
    95	    asm {
    96	        push    r6
    97	        lw      r1,24[bp]
    98	        ldi     r6,#$1B   ; Video BIOS DisplayString16 function
    99	        sys     #410
   100	        pop     r6
   101	    }
   102	}
   103	


*** local symbol table ***

p_         =000018    -    Auto        Pointer to Char



   104	naked int getcharNoWait()
   105	{
   106		asm {
   107	        push    lr
   108	        bsr     KeybdGetBufferedCharNoWait_
   109	        pop     lr
   110	        rtl
   111	        push    r6
   112	        ld      r6,#3    ; KeybdGetCharNoWait
   113	        sys     #10
   114	        pop     r6
   115	        rtl
   116		}
   117	}
   118	


*** local symbol table ***




   119	int (getchar)()
   120	{
   121		int ch;
   122	
   123		do {
   124			ch = getcharNoWait();
   125		}
   126		while (ch==-1);
   127		return ch & 255;
   128	}
   129	
   130	


*** local symbol table ***

ch_        =fffffff8    -    Auto        Long



   131	int printf(char *p, ...)
   132	{
   133		int *q;
   134		int fmtwidth;
   135		int maxwidth;
   136		int wd;
   137		char padchar;
   138		q = &p;
   139	
   140		for (; *p; p++) {
   141	        padchar = ' ';
   142			if (*p=='%') {
   143				fmtwidth = 0;
   144				maxwidth = 65535;
   145				p++;
   146	j1:
   147				switch(*p) {
   148				case '%':
   149					putch('%');
   150					break;
   151				case 'c':
   152					q++;
   153					putch(*q);
   154					break;
   155				case 'd':
   156					q++;
   157					putnum(*q,fmtwidth,0,padchar);
   158					break;
   159				case 'x':
   160					q++;
   161					puthexnum(*q,fmtwidth,0,padchar);
   162					break;
   163				case 'X':
   164					q++;
   165					puthexnum(*q,fmtwidth,1,padchar);
   166					break;
   167				case 's':
   168					q++;
   169					wd = putstr(*q,maxwidth);
   170					//while (wd < fmtwidth) {
   171					//	putch(' ');
   172					//	wd++;
   173					//}
   174					break;
   175				// width specification
   176				case '0':
   177	                padchar = '0';
   178	            case '1','2','3','4','5','6','7','8','9':
   179					fmtwidth = *p - '0';
   180					p++;
   181					while (isdigit(*p)) { 
   182						fmtwidth *= 10;
   183						fmtwidth += *p - '0';
   184						p++;
   185					}
   186					if (*p != '.')
   187						goto j1;
   188				case '.':
   189					p++;
   190					if (!isdigit(*p))
   191						goto j1;
   192					maxwidth = *p - '0';
   193					p++;
   194					while (isdigit(*p)) {
   195						maxwidth *= 10;
   196						maxwidth += *p - '0';
   197						p++;
   198					}
   199					goto j1;
   200				}
   201			}
   202			else
   203				putch(*p);
   204		}
   205	}


*** local symbol table ***

p_         =000018    -    Auto        Pointer to Char
...        =000020    -    Auto        Long
j1_        =00003c    -    Label
q_         =fffffff8    -    Auto        Pointer to Long
fmtwidth_  =fffffff0    -    Auto        Long
maxwidth_  =ffffffe8    -    Auto        Long
wd_        =ffffffe0    -    Auto        Long
padchar_   =ffffffde    -    Auto        Char




 *** global scope typedef symbol table ***

putnum_    =000000    -    Global      Function returning 
putstr_    =000000    -    Global      Function returning Long
getchar_   =000000    -    Global      Function returning Long
putstr2_   =000000    -    Global      Function returning 
isdigit_   =000000    -    External    Function returning Long
puthexnum_ =000000    -    Global      Function returning 
putch_     =000000    -    Global      Function returning 
getcharNoWait_ =000000    -    Global      Function returning Long
printf_    =000000    -    Global      Function returning Long

 *** structures and unions ***

