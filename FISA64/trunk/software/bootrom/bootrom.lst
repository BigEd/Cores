                	; ============================================================================
                	; bootrom.s
                	;        __
                	;   \\__/ o\    (C) 2014  Robert Finch, Stratford
                	;    \  __ /    All rights reserved.
                	;     \/_//     robfinch<remove>@finitron.ca
                	;       ||
                	;  
                	;
                	; This source file is free software: you can redistribute it and/or modify 
                	; it under the terms of the GNU Lesser General Public License as published 
                	; by the Free Software Foundation, either version 3 of the License, or     
                	; (at your option) any later version.                                      
                	;                                                                          
                	; This source file is distributed in the hope that it will be useful,      
                	; but WITHOUT ANY WARRANTY; without even the implied warranty of           
                	; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            
                	; GNU General Public License for more details.                             
                	;                                                                          
                	; You should have received a copy of the GNU General Public License        
                	; along with this program.  If not, see <http://www.gnu.org/licenses/>.    
                	;                                                                          
                	; ============================================================================
                	;
                	TXTCOLS		EQU		84
                	TXTROWS		EQU		31
                	
                	CR	EQU	0x0D		;ASCII equates
                	LF	EQU	0x0A
                	TAB	EQU	0x09
                	CTRLC	EQU	0x03
                	CTRLH	EQU	0x08
                	CTRLI	EQU	0x09
                	CTRLJ	EQU	0x0A
                	CTRLK	EQU	0x0B
                	CTRLM   EQU 0x0D
                	CTRLS	EQU	0x13
                	CTRLX	EQU	0x18
                	XON		EQU	0x11
                	XOFF	EQU	0x13
                	
                	E_Ok        EQU     $00
                	E_Timeout   EQU     $10
                	
                	SC_LSHIFT	EQU		$12
                	SC_RSHIFT	EQU		$59
                	SC_KEYUP	EQU		$F0
                	SC_EXTEND	EQU		$E0
                	SC_CTRL		EQU		$14
                	SC_ALT		EQU		$11
                	SC_DEL		EQU		$71		; extend
                	SC_LCTRL	EQU		$58
                	SC_NUMLOCK	EQU		$77
                	SC_SCROLLLOCK	EQU	$7E
                	SC_CAPSLOCK	EQU		$58
                	SC_TAB      EQU     $0D
                	
                	; Boot sector info (62 byte structure) */
                	BSI_JMP		= 0x00
                	BSI_OEMName	= 0x03
                	BSI_bps		= 0x0B
                	BSI_SecPerCluster	= 0x0D
                	BSI_ResSectors	= 0x0E
                	BSI_FATS	= 0x10
                	BSI_RootDirEnts	= 0x11
                	BSI_Sectors	= 0x13
                	BSI_Media	= 0x15
                	BSI_SecPerFAT	= 0x16
                	BSI_SecPerTrack	= 0x18
                	BSI_Heads	= 0x1A
                	BSI_HiddenSecs	= 0x1C
                	BSI_HugeSecs	= 0x1E
                	
                	BSI_DriveNum	= 0x24
                	BSI_Rsvd1		= 0x25
                	BSI_BootSig		= 0x26
                	BSI_VolID		= 0x27
                	BSI_VolLabel	= 0x2B
                	BSI_FileSysType = 0x36
                	
                	DBG_STACK   EQU     $7000
                	CPU0_DBG_STACK  EQU     $7CF000
                	CPU0_BIOS_STACK  EQU     $6800
                	MON_STACK   EQU     $6000
                	; CPU1 Ram allocations must be to the dram area.
                	CPU1_SYS_STACK      EQU  $21000
                	CPU1_BIOS_STACK     EQU  $21800
                	CPU0_SYS_STACK      EQU  $5000
                	
                	LEDS	equ		$FFDC0600
                	
                	BIOS_FREE      EQU       0
                	BIOS_DONE      EQU       1
                	BIOS_INSERVICE EQU       2
                	
                	MAX_BIOS_CALL  EQU       100
                	E_BadFuncno    EQU       1
                	BIOS_E_Timeout EQU       2
                	E_Unsupported  EQU       3
                	
                	; The following offsets in the I/O segment
                	TEXTSCR	equ		$FFD00000
                	TEXTREG		EQU		$A0000
                	TEXT_COLS	EQU		0x00
                	TEXT_ROWS	EQU		0x04
                	TEXT_CURPOS	EQU		0x2C
                	TEXT_CURCTL	EQU		0x20
                	
                	BMP_CLUT	EQU		$C5800
                	
                	PIC			EQU		0xFFDC0FC0
                	PIC_IE		EQU		0xFFDC0FC4
                	PIC_ES		EQU		0xFFDC0FD0
                	PIC_RSTE	EQU		0xFFDC0FD4
                	
                	KEYBD		EQU		0xFFDC0000
                	KEYBDCLR	EQU		0xFFDC0004
                	
                	SPIMASTER	EQU		0xFFDC0500
                	SPI_MASTER_VERSION_REG	EQU	0x00
                	SPI_MASTER_CONTROL_REG	EQU	0x04
                	SPI_TRANS_TYPE_REG	EQU		0x08
                	SPI_TRANS_CTRL_REG	EQU		0x0C
                	SPI_TRANS_STATUS_REG	EQU	0x10
                	SPI_TRANS_ERROR_REG		EQU	0x14
                	SPI_DIRECT_ACCESS_DATA_REG		EQU	0x18
                	SPI_SD_SECT_7_0_REG		EQU	0x1C
                	SPI_SD_SECT_15_8_REG	EQU	0x20
                	SPI_SD_SECT_23_16_REG	EQU	0x24
                	SPI_SD_SECT_31_24_REG	EQU	0x28
                	SPI_RX_FIFO_DATA_REG	EQU	0x40
                	SPI_RX_FIFO_DATA_COUNT_MSB	EQU	0x48
                	SPI_RX_FIFO_DATA_COUNT_LSB  EQU 0x4C
                	SPI_RX_FIFO_CTRL_REG		EQU	0x50
                	SPI_TX_FIFO_DATA_REG	EQU	0x80
                	SPI_TX_FIFO_CTRL_REG	EQU	0x90
                	SPI_RESP_BYTE1			EQU	0xC0
                	SPI_RESP_BYTE2			EQU	0xC4
                	SPI_RESP_BYTE3			EQU	0xC8
                	SPI_RESP_BYTE4			EQU	0xCC
                	
                	SPI_INIT_SD			EQU		0x01
                	SPI_TRANS_START		EQU		0x01
                	SPI_TRANS_BUSY		EQU		0x01
                	SPI_INIT_NO_ERROR	EQU		0x00
                	SPI_READ_NO_ERROR	EQU		0x00
                	SPI_WRITE_NO_ERROR	EQU		0x00
                	RW_READ_SD_BLOCK	EQU		0x02
                	RW_WRITE_SD_BLOCK	EQU		0x03
                	
                	I2C_MASTER		EQU		0xFFDC0E00
                	I2C_PRESCALE_LO	EQU		0x00
                	I2C_PRESCALE_HI	EQU		0x01
                	I2C_CONTROL		EQU		0x02
                	I2C_TX			EQU		0x03
                	I2C_RX			EQU		0x03
                	I2C_CMD			EQU		0x04
                	I2C_STAT		EQU		0x04
                	
                	SD_MASTER		EQU		0xFFDC0B00
                	
                	RANDOM_NUM      EQU     0xFFDC0C00
                	
                	UART            EQU     0xFFDC0A00
                	UART_TX         EQU     0
                	UART_RX         EQU     0
                	UART_LS         EQU     1
                	UART_MS         EQU     2
                	UART_IS         EQU     3
                	UART_IE         EQU     4
                	UART_FF         EQU     5
                	UART_MC         EQU     6
                	UART_CTRL       EQU     7
                	UART_CM0        EQU     8
                	UART_CM1        EQU     9
                	UART_CM2        EQU     10
                	UART_CM3        EQU     11
                	UART_SPR        EQU     15
                	
                	TCB_BASE       EQU     $0C00000
                	TCB_TOP        EQU     $1C00000
                	
                	; BIOS request structure
                	BIOS_op        EQU     $00
                	BIOS_arg1      EQU     $08
                	BIOS_arg2      EQU     $10
                	BIOS_arg3      EQU     $18
                	BIOS_arg4      EQU     $20
                	BIOS_arg5      EQU     $28
                	BIOS_resp      EQU     $30
                	BIOS_stat      EQU     $38
                	
                	; ============================================================================
                	;        __
                	;   \\__/ o\    (C) 2014,2015  Robert Finch, Stratford
                	;    \  __ /    All rights reserved.
                	;     \/_//     robfinch<remove>@finitron.ca
                	;       ||
                	;  
                	;
                	; This source file is free software: you can redistribute it and/or modify 
                	; it under the terms of the GNU Lesser General Public License as published 
                	; by the Free Software Foundation, either version 3 of the License, or     
                	; (at your option) any later version.                                      
                	;                                                                          
                	; This source file is distributed in the hope that it will be useful,      
                	; but WITHOUT ANY WARRANTY; without even the implied warranty of           
                	; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            
                	; GNU General Public License for more details.                             
                	;                                                                          
                	; You should have received a copy of the GNU General Public License        
                	; along with this program.  If not, see <http://www.gnu.org/licenses/>.    
                	;
                	; DeviceDriver.inc
                	; - Device driver structures and constants                                                                         
                	; ============================================================================
                	
                	;	.global			; global constants
                	
                	; Device Control Block
                	;
                	DCB_Name			EQU		0		; string: first byte is length, 11 chars max
                	DCB_Type			EQU		0x0C
                	DCB_nBPB			EQU		0x10
                	DCB_LastErc			EQU		0x18		; last error code
                	DCB_StartBlock		EQU		0x20		; starting block number (partitioned devices)
                	DCB_nBlocks			EQU		0x28		; number of blocks on device
                	DCB_pCmdProc		EQU		0x30		; pointer to command processor routine
                	DCB_ReentCount		EQU		0x38		; re-entrancy count (1 to 255)
                	DCB_fSingleUser		EQU		0x39
                	DCB_hJob			EQU		0x40		; handle to associated job
                	DCB_Mbx				EQU		0x48
                	DCB_pSema			EQU		0x50		; pointer to device semaphore
                	DCB_Resv1			EQU		0x58		; reserved
                	DCB_Resv2			EQU		0x60		; reserved
                	DCB_Size			EQU		0x68
                	
                	; Device command opcodes
                	;
                	DVC_Nop				EQU		0
                	DVC_Setup			EQU		1
                	DVC_Initialize		EQU		2
                	DVC_Status			EQU		3
                	DVC_MediaCheck		EQU		4
                	DVC_BuildBPB		EQU		5
                	DVC_Open			EQU		6
                	DVC_Close			EQU		7
                	DVC_GetChar			EQU		8
                	DVC_PeekChar		EQU		9
                	DVC_GetCharDirect	EQU		10
                	DVC_PeekCharDirect	EQU		11
                	DVC_InputStatus		EQU		12
                	DVC_PutChar			EQU		13
                	DVC_SetPosition		EQU		15
                	DVC_ReadBlock		EQU		16
                	DVC_WriteBlock		EQU		17
                	DVC_VerifyBlock		EQU		18
                	DVC_OutputStatus	EQU		19
                	DVC_FlushInput		EQU		20
                	DVC_FlushOutput		EQU		21
                	DVC_IRQ				EQU		22
                	DVC_IsRemoveable	EQU		23
                	DVC_IOCTRL_READ		EQU		24
                	DVC_IOCTRL_WRITE	EQU		25
                	DVC_OutputUntilBusy	EQU		26
                	
                	MAX_DEV_OP			EQU		31
                	
                	
                	DRSP_DONE			EQU		1
                	
                	;Standard Devices are:
                	
                	;#		Device					Standard name
                	
                	;0		NULL device 			NUL		(OS built-in)
                	;1		Keyboard (sequential)	KBD		(OS built-in)
                	;2		Video (sequential)		VID		(OS built-in)
                	;3		Printer (parallel 1)	LPT
                	;4		Printer (parallel 2)	LPT2
                	;5		RS-232 1				COM1	(OS built-in)
                	;6		RS-232 2				COM2
                	;7		RS-232 3				COM3
                	;8		RS-232 4				COM4
                	;9
                	;10		Floppy					FD0
                	;11		Floppy					FD1
                	;12		Hard disk				HD0
                	;13		Hard disk				HD1
                	;14
                	;15
                	;16		SDCard					CARD1 	(OS built-in)
                	;17
                	;18
                	;19
                	;20
                	;21
                	;22
                	;23
                	;24
                	;25
                	;26
                	;27
                	;28		Audio					PSG1	(OS built-in)
                	;29
                	;30
                	;31
                	
                	NR_DCB			EQU		32
                	NR_DCB			EQU		32
                	;include "FMTK_Equates.inc"
                	
                		code
                		org		$00010000
010000 3A 15 00 00 		bra     start
010004 00 00 00 00 		align   
                	
010008 CC 45 01 00 		dw		ClearScreen		; $8000
01000C 00 00 00 00 
010010 DC 44 01 00 		dw		HomeCursor		; $8008
010014 00 00 00 00 
010018 64 4C 01 00 		dw		DisplayString	; $8010
01001C 00 00 00 00 
010020 5C 1C 01 00 		dw		KeybdGetCharNoWait; $8018
010024 00 00 00 00 
010028 BF 00 00 00 		dw		ClearBmpScreen	; $8020
01002C 00 00 00 80 
010030 EC 48 01 00 		dw		DisplayChar		; $8028
010034 00 00 00 00 
010038 C1 00 00 00 		dw		SDInit			; $8030
01003C 00 00 00 80 
010040 C2 00 00 00 		dw		SDReadMultiple	; $8038
010044 00 00 00 80 
010048 C3 00 00 00 		dw		SDWriteMultiple	; $8040
01004C 00 00 00 80 
010050 C4 00 00 00 		dw		SDReadPart		; $8048
010054 00 00 00 80 
010058 C5 00 00 00 		dw		SDDiskSize		; $8050
01005C 00 00 00 80 
010060 5C 0A 01 00 		dw		DisplayWord		; $8058
010064 00 00 00 00 
010068 70 0A 01 00 		dw		DisplayHalf		; $8060
01006C 00 00 00 00 
010070 84 0A 01 00 		dw		DisplayCharHex	; $8068
010074 00 00 00 00 
010078 98 0A 01 00 		dw		DisplayByte		; $8070
01007C 00 00 00 00 
                	BIOS_FuncTable:
010080 CC 45       	    dc      ClearScreen
010082 DC 44       	    dc      HomeCursor
010084 64 4C       	    dc      DisplayString
010086 5C 1C       	    dc      KeybdGetCharNoWait
010088 00 00       	    dc      0
01008A B4 11       	    dc      OutChar
01008C 00 00       	    dc      0
01008E 00 00       	    dc      0
010090 00 00       	    dc      0
010092 00 00       	    dc      0
010094 00 00       	    dc      0
010096 5C 0A       	    dc      DisplayWord
010098 70 0A       	    dc      DisplayHalf
01009A 84 0A       	    dc      DisplayCharHex
01009C 98 0A       	    dc      DisplayByte
01009E DC 0A       	    dc      DisplayString16
0100A0 00 00       	    dc      0
0100A2 00 00       	    dc      0
0100A4 00 00       	    dc      0
                	    
0100A6 00 00       	    align   
                	
                	message "start"
                	start:
0100A8 FC C2 00 00 	    sw      r0,FMTK_Inited
0100AC 63 00 10 28 
0100B0 02 10 00 6C 	    cpuid   r1,r0,#0
0100B4 BD 00 2A 00 	    beq     r1,CPU0_Start
                	CPU1_Start:
0100B8 FC C5 00 00 	    ldi     sp,#stacks+4096+4088
0100BC 0A E0 31 65 
                	;    ldi     tr,#tcbs+TCB_Size
                	;	sw      sp,TCB_ISP[tr]
                	;	sw      sp,TCB_r30[tr]
                	;	ldi     r1,#BIOS_STACKS_Array+4096+4088  ; so we can call the BIOS during startup
                	;	sw      r1,TCB_BIOS_Stack[tr]
                	;	ldi     r1,#SYS_STACKS_Array+4096+4088  ; so we can call the BIOS during startup
                	;	sw      r1,TCB_SYS_Stack[tr]
                	;	sb      r0,TCB_hJCB[tr]             ; JCB#0 is the system JCB
                	;    bsr     SetupIntVectors1
                	;	bsr		InitPIC1
                		; Wait for CPU #0 to complete FMTK initialization before proceeding.
                	.0001:
0100C0 3F 00 00 00 	    nop
0100C4 3F 00 00 00 	    nop
0100C8 FC C2 00 00 		lw      r1,FMTK_Inited
0100CC 46 10 10 28 
0100D0 7C 34 12 00 		cmpu    r1,r1,#$12345678
0100D4 96 10 F0 AC 
0100D8 BD 10 F4 FF 		bne     r1,.0001
0100DC 39 7C 07 00 		bsr     FMTKInitialize        ;  Initialize for CPU #1
                	.0003:
0100E0 02 00 00 6E 	    cli
0100E4 7C 02 00 00 	    inc     $20000
0100E8 64 10 00 00 
0100EC 7C C2 00 00 	    lw      r1,StartCPU1Flag
0100F0 46 10 30 07 
0100F4 7C 34 12 00 	    cmp     r1,r1,#$12345678
0100F8 86 10 F0 AC 
0100FC BD 10 F2 FF 	    bne     r1,.0003
010100 7C C2 00 00 	    jmp     (StartCPU1Addr)
010104 3E 00 40 07 
                	    ; This is a little bit kludgy, we setup just enough of the FMTK vars
                	    ; in order to be able to get display output.
                	CPU0_Start:
                	.0002:
010108 FC C5 00 00 		ldi     sp,#stacks+4088
01010C 0A E0 31 45 
010110 0A 10 02 00 	    ldi     r1,#1
010114 7C DC FF 00 	    sc      r1,LEDS
010118 61 10 00 0C 
                		; Copy initialized data to data area
01011C FC 01 00 00 		lea     r1,begin_init_data
010120 47 10 E0 84 
010124 7C C1 00 00 		lea     r2,$C10000
010128 47 20 00 00 
                	.cpy_loop:
01012C C6 30 00 00 		lw      r3,[r1]
010130 63 31 00 00 		sw      r3,[r2]
010134 94 10 10 00 		addui   r1,r1,#8
010138 14 21 10 00 		addui   r2,r2,#8
01013C FC 01 00 00 		cmpu    r3,r1,#end_init_data
010140 96 30 20 86 
010144 BD 41 F4 FF 		blt     r3,.cpy_loop
010148 0A 10 14 00 	    ldi     r1,#10
01014C 7C DC FF 00 	    sc      r1,LEDS
010150 61 10 00 0C 
                	
010154 39 6D 07 00 		bsr     FMTKInitialize
010158 0A 10 1E 00 	    ldi     r1,#15
01015C 7C DC FF 00 	    sc      r1,LEDS
010160 61 10 00 0C 
                	
                	;	ldi     tr,#tcbs                   ; load task register with BIOS task
                	;	sw      sp,TCB_ISP[tr]
                	;	sw      sp,TCB_r30[tr]
                	;	ldi     r1,#bios_stacks+4088  ; so we can call the BIOS during startup
                	;	sw      r1,TCB_BIOS_Stack[tr]
                	;	ldi     r1,#SYS_STACKS_Array+4088  ; so we can System Call during startup
                	;	sw      r1,TCB_SYS_Stack[tr]
                	;	sb      r0,TCB_hJCB[tr]             ; JCB#0 is the system JCB
                	;	bsr     GetJCBPtr
                	;	sw      r1,IOFocusNdx               ; The screen routines check this var
                	;	ldi     r2,#TEXTSCR
                	;	sw      r2,JCB_pVidMem[r1]          ; point JCB#0 to real screen
                	;	ldi		r4,#%000000100_110101110_0000000000	; grey on blue
                	;	sh		r4,JCB_NormAttr[r1]
                	;	sh		r4,JCB_CurrAttr[r1]
010164 0A 50 00 00 	    ldi     r5,#$0000
010168 0A 10 28 00 	    ldi     r1,#20
                	.0001:
01016C 7C DC FF 00 	    sc      r5,LEDS
010170 61 50 00 0C 
010174 94 52 02 00 	    addui   r5,r5,#1
010178 7C C2 00 00 		sw		r0,Milliseconds
01017C 63 00 10 02 
010180 0A 10 FE FF 		ldi     r1,#-1
010184 7C C2 00 00 		sw      r1,API_sema
010188 63 10 10 07 
01018C 7C 08 01 00 		sw      r0,BIOS1_sema
010190 63 00 A0 55 
010194 B9 63 01 00 		bsr     UnlockBIOS
010198 39 F0 00 00 		bsr     UnlockVideoBIOS
01019C FC 26 00 00 		ldi		r1,#%000000100_110101110_0000000000
0101A0 0A 10 00 70 
0101A4 7C C2 00 00 		sb		r1,KeybdEcho
0101A8 60 10 78 02 
0101AC 7C C2 00 00 		sb		r0,KeybdBad
0101B0 60 00 7A 02 
0101B4 7C C2 00 00 		sh		r1,NormAttr
0101B8 62 10 60 02 
0101BC 7C 01 00 00 		ldi		r1,#VBDisplayChar
0101C0 0A 10 38 14 
0101C4 7C C2 00 00 		sw		r1,OutputVec
0101C8 63 10 20 02 
0101CC 39 80 08 00 		bsr		ClearScreen
0101D0 B9 61 08 00 		bsr		HomeCursor
0101D4 7C 01 00 00 		pea     msgStart
0101D8 65 E0 25 1E 
0101DC B9 5D 09 00 		bsr     DisplayStringCRLF
0101E0 14 EF 11 00 		addui   sp,sp,#8
0101E4 39 13 00 00 		bsr		SetupIntVectors
0101E8 39 44 01 00 		bsr     ROMChecksum
0101EC 39 00 14 00 		bsr     dbg_init
                	;	bsr		KeybdInit
                	    ; set data breakpoint at FreeTCB address
                	;    ldi     r1,#$C00108
                	;    mtspr   dbad0,r1
                	;    ldi     r1,#$D0001
                	;    mtspr   dbctrl,r1
0101F0 7C 01 00 00 	     lea     r1,sprite_main
0101F4 47 10 40 5D 
0101F8 82 00 64 3C 	     mtspr   dbad0,r1
0101FC 7C 08 00 00 	     ldi     r1,#$80001
010200 0A 10 02 00 
010204 82 00 6C 3C 	     mtspr   dbctrl,r1
                	;    ldi     sp,#$8000
                	;    bsr     ramtest
                	;    bsr     FMTKInitialize
010208 7C 01 00 00 	    ldi     r1,#UserTickRout     ; set user tick vector
01020C 0A 10 50 1D 
010210 7C C0 00 00 	    sw      r1,$C00000
010214 63 10 00 00 
010218 39 41 00 00 		bsr		InitPIC
01021C B9 47 00 00 		bsr     InitUart
010220 39 6F 04 00 		bsr     RTCCReadbuf          ; read the real-time clock
010224 39 77 05 00 		bsr     set_time_serial      ; set the system time serial
                	
                		; Startup BIOS call task so that CPU#1 may make BIOS calls
010228 0A 10 00 00 		ldi     r1,#0                ; task priority
01022C 0A 20 00 00 		ldi     r2,#0                ; cpu affinity
010230 7C 01 00 00 		ldi     r3,#BIOSCallTask|1   ; start address (start in kernel mode)
010234 0A 30 0A 1C 
010238 0A 40 00 00 		ldi     r4,#0                ; start parameter
01023C 0A 50 00 00 		ldi     r5,#0                ; owning job
                	;	sys     #FMTK_CALL
                	;	dh      1                    ; start task function
010240 B9 02 07 00 	    bsr     DumpTaskList
010244 3A A1 01 00 		bra		Monitor
                	
                	SerialStartMsg:
010248 E7 EF 01 00 	    push    lr
01024C 7C 01 00 00 		ldi     r1,#SerialPutChar
010250 0A 10 28 0A 
010254 7C C2 00 00 		sw      r1,OutputVec
010258 63 10 20 02 
01025C 7C 01 00 00 		ldi     r1,#msgStart
010260 0A 10 24 1E 
010264 B9 4C 09 00 		bsr     DisplayStringCRLF
010268 7C 01 00 00 		ldi		r1,#DisplayChar
01026C 0A 10 D8 91 
010270 7C C2 00 00 		sw		r1,OutputVec
010274 63 10 20 02 
010278 3B FF 11 00 	    rts
 
                	SetupIntVectors:
01027C 02 00 14 3C 		mtspr   vbr,r0               ; place vector table at $0000
010280 3F 00 00 00 		nop
010284 3F 00 00 00 		nop
010288 02 20 14 3E 		mfspr   r2,vbr
01028C 7C 01 00 00 		ldi     r1,#UninitIRQ
010290 0A 10 D8 54 
010294 0A 30 FE 03 		ldi     r3,#511
                	.0001:
010298 6B 11 C6 00 		sw      r1,[r2+r3*8]
01029C 95 31 02 00 		subui   r3,r3,#1
0102A0 BD 31 FC FF 		bge     r3,.0001
0102A4 7C 01 00 00 		ldi     r1,#BIOSCall
0102A8 0A 10 40 1B 
0102AC 63 11 A0 00 		sw      r1,10*8[r2]
0102B0 7C 01 00 00 		ldi     r1,#VideoBIOSCall
0102B4 0A 10 68 12 
0102B8 63 11 A0 19 		sw      r1,410*8[r2]
0102BC 7C 01 00 00 		ldi		r1,#Tick1024Rout
0102C0 0A 10 B0 1D 
0102C4 63 11 20 1C 		sw		r1,450*8[r2]
                	;	ldi		r1,#TickRout         ; This vector will be taken over by FMTK
                	;	sw		r1,451*8[r2]
0102C8 7C 01 00 00 		ldi     r1,#SerialIRQ
0102CC 0A 10 B0 0E 
0102D0 63 11 80 1C 		sw      r1,456*8[r2]
0102D4 7C 00 00 00 		ldi     r1,#ServiceRequestIRQ
0102D8 7C 00 00 00 
0102DC 0A 10 F6 01 
0102E0 63 11 90 1C 		sw      r1,457*8[r2]
0102E4 7C 01 00 00 		ldi		r1,#KeybdIRQ
0102E8 0A 10 28 40 
0102EC 63 11 F0 1C 		sw		r1,463*8[r2]
0102F0 7C 01 00 00 	    ldi     r1,#SSM_ISR          ; set ISR vector for single step routine
0102F4 0A 10 F8 55 
0102F8 63 11 F0 1E 	    sw      r1,495*8[r2]
0102FC 7C 01 00 00 	    ldi     r1,#BPT_ISR          ; set ISR vector for breakpoint routine
010300 0A 10 00 56 
010304 63 11 00 1F 	    sw      r1,496*8[r2]
010308 7C 01 00 00 		ldi		r1,#exf_rout
01030C 0A 10 38 52 
010310 63 11 10 1F 		sw		r1,497*8[r2]
010314 7C 01 00 00 		ldi		r1,#dwf_rout
010318 0A 10 A8 52 
01031C 63 11 20 1F 		sw		r1,498*8[r2]
010320 7C 01 00 00 		ldi		r1,#drf_rout
010324 0A 10 70 52 
010328 63 11 30 1F 		sw		r1,499*8[r2]
01032C 7C 01 00 00 		ldi		r1,#priv_rout
010330 0A 10 E0 52 
010334 63 11 50 1F 		sw		r1,501*8[r2]
010338 7C 01 00 00 		ldi		r1,#berr_rout
01033C 0A 10 28 55 
010340 63 11 C0 1F 		sw		r1,508*8[r2]
010344 7C 01 00 00 		ldi		r1,#berr_rout
010348 0A 10 28 55 
01034C 63 11 D0 1F 		sw		r1,509*8[r2]
010350 7C 01 00 00 		ldi		r1,#nmi_rout
010354 0A 10 A8 51 
010358 63 11 E0 1F 		sw		r1,510*8[r2]
01035C 37 FF 01 00 	    rtl
 
                	; Setup interrupt vector table for processor #1
                	SetupIntVectors1:
010360 02 00 14 3C 		mtspr   vbr,r0               ; place vector table at $0000
010364 3F 00 00 00 		nop
010368 3F 00 00 00 		nop
01036C 02 20 14 3E 		mfspr   r2,vbr
010370 7C 01 00 00 		ldi     r1,#UninitIRQ
010374 0A 10 D8 54 
010378 0A 30 FE 03 		ldi     r3,#511
                	.0001:
01037C 6B 11 C6 00 		sw      r1,[r2+r3*8]
010380 95 31 02 00 		subui   r3,r3,#1
010384 BD 31 FC FF 		bge     r3,.0001
010388 7C 01 00 00 		ldi     r1,#BIOSCall1
01038C 0A 10 D0 19 
010390 63 11 A0 00 		sw      r1,10*8[r2]
010394 7C 01 00 00 		ldi		r1,#TickRout         ; This vector will be taken over by FMTK
010398 0A 10 E8 1C 
01039C 63 11 30 1C 		sw		r1,451*8[r2]
0103A0 7C 00 00 00 		ldi     r1,#ServiceRequestIRQ
0103A4 7C 00 00 00 
0103A8 0A 10 F6 01 
0103AC 63 11 90 1C 		sw      r1,457*8[r2]
0103B0 7C 01 00 00 	    ldi     r1,#SSM_ISR          ; set ISR vector for single step routine
0103B4 0A 10 F8 55 
0103B8 63 11 F0 1E 	    sw      r1,495*8[r2]
0103BC 7C 01 00 00 	    ldi     r1,#BPT_ISR          ; set ISR vector for instruction breakpoint routine
0103C0 0A 10 00 56 
0103C4 63 11 00 1F 	    sw      r1,496*8[r2]
0103C8 7C 01 00 00 		ldi		r1,#exf_rout
0103CC 0A 10 38 52 
0103D0 63 11 10 1F 		sw		r1,497*8[r2]
0103D4 7C 01 00 00 		ldi		r1,#dwf_rout
0103D8 0A 10 A8 52 
0103DC 63 11 20 1F 		sw		r1,498*8[r2]
0103E0 7C 01 00 00 		ldi		r1,#drf_rout
0103E4 0A 10 70 52 
0103E8 63 11 30 1F 		sw		r1,499*8[r2]
0103EC 7C 01 00 00 		ldi		r1,#priv_rout
0103F0 0A 10 E0 52 
0103F4 63 11 50 1F 		sw		r1,501*8[r2]
0103F8 7C 01 00 00 		ldi		r1,#berr_rout
0103FC 0A 10 28 55 
010400 63 11 C0 1F 		sw		r1,508*8[r2]
010404 7C 01 00 00 		ldi		r1,#berr_rout
010408 0A 10 28 55 
01040C 63 11 D0 1F 		sw		r1,509*8[r2]
010410 7C 01 00 00 		ldi		r1,#nmi_rout1
010414 0A 10 F8 51 
010418 63 11 E0 1F 		sw		r1,510*8[r2]
01041C 37 FF 01 00 	    rtl
 
                	;------------------------------------------------------------------------------
                	; Initialize the interrupt controller.
                	;------------------------------------------------------------------------------
                	
                	InitPIC:
010420 0A 10 18 00 		ldi		r1,#$000C		; timer interrupt(s) are edge sensitive
010424 7C DC FF 00 		sh		r1,PIC_ES
010428 62 10 A0 1F 
01042C 0A 10 1E 00 		ldi		r1,#$000F		; enable keyboard reset, timer interrupts
010430 7C DC FF 00 		sh		r1,PIC_IE
010434 62 10 88 1F 
010438 37 FF 01 00 		rtl

                	; For CPU #1 the only interrupt to be serviced is the 30Hz time slice.
                	
                	InitPIC1:
01043C 0A 10 18 00 		ldi		r1,#$000C		; timer interrupt(s) are edge sensitive
010440 7C DC FF 00 		sh		r1,PIC_ES
010444 62 10 A0 1F 
010448 0A 10 16 00 		ldi		r1,#$000B		; enable keyboard reset, timer interrupts
01044C 7C DC FF 00 		sh		r1,PIC_IE
010450 62 10 88 1F 
010454 37 FF 01 00 		rtl

                	
                	;==============================================================================
                	; Serial port
                	;==============================================================================
                		code
                	;------------------------------------------------------------------------------
                	; Initialize UART
                	;------------------------------------------------------------------------------
                	
                	InitUart:
010458 7C DC FF 00 	    ldi     r2,#UART
01045C 0A 20 00 14 
                	;    ldi     r1,#$025BF7BA   ; constant for clock multiplier with 16.667MHz clock for 9600 baud
010460 FC 27 0E 00 	    ldi     r1,#$0E27CE61   ; constant for clock multiplier with 16.667MHz clock for 57600 baud
010464 0A 10 C2 9C 
010468 82 10 10 72 	    lsr     r1,r1,#8          ; drop the LSB (not used)
01046C 60 11 12 00 	    sb      r1,UART_CM1[r2]
010470 82 10 10 72 	    lsr     r1,r1,#8
010474 60 11 14 00 	    sb      r1,UART_CM2[r2]
010478 82 10 10 72 	    lsr     r1,r1,#8
01047C 60 11 16 00 	    sb      r1,UART_CM3[r2]
010480 60 01 0E 00 	    sb      r0,UART_CTRL[r2]           ; no hardware flow control
010484 7C C2 00 00 		sc		r0,Uart_rxhead			; reset buffer indexes
010488 61 00 DC 02 
01048C 7C C2 00 00 		sc		r0,Uart_rxtail
010490 61 00 E0 02 
010494 0A 10 E0 03 		ldi		r1,#0x1f0
010498 7C C2 00 00 		sc		r1,Uart_foff		; set threshold for XOFF
01049C 61 10 EC 02 
0104A0 0A 10 20 00 		ldi		r1,#0x010
0104A4 7C C2 00 00 		sc		r1,Uart_fon			; set threshold for XON
0104A8 61 10 F0 02 
0104AC 0A 10 02 00 		ldi		r1,#1
0104B0 60 11 08 00 		sb		r1,UART_IE[r2]		; enable receive interrupt only
0104B4 7C C2 00 00 		sb		r0,Uart_rxrts		; no RTS/CTS signals available
0104B8 60 00 E6 02 
0104BC 7C C2 00 00 		sb		r0,Uart_txrts		; no RTS/CTS signals available
0104C0 60 00 F4 02 
0104C4 7C C2 00 00 		sb		r0,Uart_txdtr		; no DTR signals available
0104C8 60 00 F6 02 
0104CC 7C C2 00 00 		sb		r0,Uart_rxdtr		; no DTR signals available
0104D0 60 00 E8 02 
0104D4 0A 10 02 00 		ldi		r1,#1
0104D8 7C C2 00 00 		sb		r1,Uart_txxon		; for now
0104DC 60 10 F8 02 
0104E0 0A 10 02 00 		ldi		r1,#1
                	;	sb		r1,SERIAL_SEMA
0104E4 37 FF 01 00 	    rtl

                	;---------------------------------------------------------------------------------
                	; Get character directly from serial port. Blocks until a character is available.
                	;---------------------------------------------------------------------------------
                	;
                	SerialGetCharDirect:
                	sgc1:
0104E8 7C DC FF 00 		lb		r1,UART+UART_LS	; uart status
0104EC 40 10 02 14 
0104F0 8C 10 02 00 		and		r1,r1,#1		; is there a char available ?
0104F4 BD 00 FA FF 		beq		r1,sgc1
0104F8 7C DC FF 00 		lb		r1,UART+UART_RX
0104FC 40 10 00 14 
010500 37 FF 01 00 		rtl

                	;------------------------------------------------
                	; Check for a character at the serial port
                	; returns r1 = 1 if char available, 0 otherwise
                	;------------------------------------------------
                	;
                	SerialCheckForCharDirect:
010504 7C DC FF 00 		lb		r1,UART+UART_LS			; uart status
010508 40 10 02 14 
01050C 8C 10 02 00 		and		r1,r1,#rxfull			; is there a char available ?
010510 37 FF 01 00 		rtl

                	;-----------------------------------------
                	; Put character to serial port
                	; r1 = char to put
                	;-----------------------------------------
                	;
                	SerialPutChar:
010514 67 E1 01 00 	    push    r2
010518 E7 E1 01 00 	    push    r3
01051C 67 E2 01 00 		push	r4
010520 E7 E2 01 00 		push	r5
010524 67 E3 01 00 	    push    r6
010528 7C DC FF 00 	    ldi     r6,#UART
01052C 0A 60 00 14 
010530 40 23 0C 00 		lb		r2,UART_MC[r6]
010534 0D 21 06 00 		or		r2,r2,#3		; assert DTR / RTS
010538 60 23 0C 00 		sb		r2,UART_MC[r6]
01053C 7C C2 00 00 		lb		r2,Uart_txrts
010540 40 20 F4 02 
010544 3D 01 1E 00 		beq		r2,spcb1
010548 7C C2 00 00 		lw		r4,Milliseconds
01054C 46 40 10 02 
010550 0A 30 00 08 		ldi		r3,#1024		; delay count (1 s)
                	spcb3:
010554 40 23 04 00 		lb		r2,UART_MS[r6]
010558 0C 21 20 00 		and		r2,r2,#$10		; is CTS asserted ?
01055C 3D 11 12 00 		bne		r2,spcb1
010560 7C C2 00 00 		lw		r5,Milliseconds
010564 46 50 10 02 
010568 02 22 0A 0C 		cmp		r2,r4,r5
01056C 3D 01 F4 FF 		beq		r2,spcb3
010570 82 42 00 1A 		mov		r4,r5
010574 95 31 02 00 		subui   r3,r3,#1
010578 BD 11 EE FF 		bne		r3,spcb3
01057C 3A 15 00 00 		bra		spcabort
                	spcb1:
010580 7C C2 00 00 		lb		r2,Uart_txdtr
010584 40 20 F6 02 
010588 3D 01 1E 00 		beq		r2,spcb2
01058C 7C C2 00 00 		lw		r4,Milliseconds
010590 46 40 10 02 
010594 0A 30 00 08 		ldi		r3,#1024		; delay count
                	spcb4:
010598 40 23 04 00 		lb		r2,UART_MS[r6]
01059C 0C 21 40 00 		and		r2,r2,#$20		; is DSR asserted ?
0105A0 3D 11 12 00 		bne		r2,spcb2
0105A4 7C C2 00 00 		lw		r5,Milliseconds
0105A8 46 50 10 02 
0105AC 02 22 0A 0C 		cmp		r2,r4,r5
0105B0 3D 01 F4 FF 		beq		r2,spcb4
0105B4 82 42 00 1A 		mov		r4,r5
0105B8 95 31 02 00 		subui   r3,r3,#1
0105BC BD 11 EE FF 		bne		r3,spcb4
0105C0 BA 0C 00 00 		bra		spcabort
                	spcb2:	
0105C4 7C C2 00 00 		lb		r2,Uart_txxon
0105C8 40 20 F8 02 
0105CC 3D 01 0E 00 		beq		r2,spcb5
                	spcb6:
0105D0 7C C2 00 00 		lb		r2,Uart_txxonoff
0105D4 40 20 DA 02 
0105D8 3D 01 08 00 		beq		r2,spcb5
0105DC 40 43 04 00 		lb		r4,UART_MS[r6]
0105E0 0C 42 00 01 		and		r4,r4,#0x80			; DCD ?
0105E4 3D 12 F6 FF 		bne		r4,spcb6
                	spcb5:
0105E8 7C C2 00 00 		lw		r4,Milliseconds
0105EC 46 40 10 02 
0105F0 0A 30 00 08 		ldi		r3,#1024			; wait up to 1s
                	spcb8:
0105F4 40 23 02 00 		lb		r2,UART_LS[r6]
0105F8 0C 21 40 00 		and		r2,r2,#0x20			; tx not full ?
0105FC 3D 11 12 00 		bne		r2,spcb7
010600 7C C2 00 00 		lw		r5,Milliseconds
010604 46 50 10 02 
010608 02 22 0A 0C 		cmp		r2,r4,r5
01060C 3D 01 F4 FF 		beq		r2,spcb8
010610 82 42 00 1A 		mov		r4,r5
010614 95 31 02 00 		subui   r3,r3,#1
010618 BD 11 EE FF 		bne		r3,spcb8
01061C 3A 01 00 00 		bra		spcabort
                	spcb7:
010620 60 13 00 00 		sb		r1,UART_TX[r6]
                	spcabort:
010624 57 6F 10 00 	    pop     r6
010628 57 5F 10 00 		pop		r5
01062C 57 4F 10 00 		pop		r4
010630 57 3F 10 00 		pop     r3
010634 57 2F 10 00 		pop     r2
010638 37 FF 01 00 		rtl

                	
                	;-------------------------------------------------
                	; Compute number of characters in recieve buffer.
                	; r4 = number of chars
                	;-------------------------------------------------
                	CharsInRxBuf:
01063C 7C C2 00 00 		lcu		r4,Uart_rxhead
010640 43 40 DC 02 
010644 7C C2 00 00 		lcu		r3,Uart_rxtail
010648 43 30 E0 02 
01064C 02 42 06 2A 		subu	r4,r4,r3
010650 3D 22 0C 00 		bgt		r4,cirxb1
010654 0A 40 00 04 		ldi		r4,#0x200
010658 02 42 06 28 		addu	r4,r4,r3
01065C 7C C2 00 00 		lcu		r3,Uart_rxhead
010660 43 30 DC 02 
010664 02 42 06 2A 		subu	r4,r4,r3
                	cirxb1:
010668 37 FF 01 00 		rtl

                	;----------------------------------------------
                	; Get character from rx fifo
                	; If the fifo is empty enough then send an XON
                	;----------------------------------------------
                	;
                	SerialGetChar:
01066C 67 E1 01 00 	    push    r2
010670 E7 E1 01 00 	    push    r3
010674 67 E2 01 00 		push	r4
010678 E7 E2 01 00 	    push    r5
01067C 7C DC FF 00 	    ldi     r5,#UART
010680 0A 50 00 14 
010684 7C C2 00 00 		lcu		r3,Uart_rxhead
010688 43 30 DC 02 
01068C 7C C2 00 00 		lcu		r2,Uart_rxtail
010690 43 20 E0 02 
010694 02 31 06 0C 		cmp		r3,r2,r3
010698 BD 01 54 00 		beq		r3,sgcfifo1		    ; is there a char available ?
01069C 7C C2 00 00 		lbu		r1,Uart_rxfifo[r2]	; get the char from the fifo into r1
0106A0 41 11 FA 02 
0106A4 14 21 02 00 		addui   r2,r2,#1    		; increment the fifo pointer
0106A8 0C 21 FE 03 		and		r2,r2,#$1ff
0106AC 7C C2 00 00 		sc		r2,Uart_rxtail
0106B0 61 20 E0 02 
0106B4 7C C2 00 00 		lb		r2,Uart_rxflow		; using flow control ?
0106B8 40 20 E4 02 
0106BC 3D 01 38 00 		beq		r2,sgcfifo2
0106C0 7C C2 00 00 		lcu		r3,Uart_fon		; enough space in Rx buffer ?
0106C4 43 30 F0 02 
0106C8 E7 EF 01 00 		push    lr
0106CC 39 EE FF FF 		bsr		CharsInRxBuf
0106D0 57 FF 11 00 		pop     lr
0106D4 02 42 06 0C 		cmp		r4,r4,r3
0106D8 3D 22 2A 00 		bgt		r4,sgcfifo2
0106DC 7C C2 00 00 		sb		r0,Uart_rxflow		; flow off
0106E0 60 00 E4 02 
0106E4 7C C2 00 00 		lb		r4,Uart_rxrts
0106E8 40 40 E6 02 
0106EC 3D 02 08 00 		beq		r4,sgcfifo3
0106F0 C0 42 0C 00 		lb		r4,UART_MC[r5]		; set rts bit in MC
0106F4 0D 42 04 00 		or		r4,r4,#2
0106F8 E0 42 0C 00 		sb		r4,UART_MC[r5]
                	sgcfifo3:
0106FC 7C C2 00 00 		lb		r4,Uart_rxdtr
010700 40 40 E8 02 
010704 3D 02 08 00 		beq		r4,sgcfifo4
010708 C0 42 0C 00 		lb		r4,UART_MC[r5]		; set DTR
01070C 0D 42 02 00 		or		r4,r4,#1
010710 E0 42 0C 00 		sb		r4,UART_MC[r5]
                	sgcfifo4:
010714 7C C2 00 00 		lb		r4,Uart_rxxon
010718 40 40 EA 02 
01071C 3D 02 08 00 		beq		r4,sgcfifo5
010720 0A 40 22 00 		ldi		r4,#XON
010724 7C DC FF 00 		sb		r4,UART[r5]
010728 E0 42 00 14 
                	sgcfifo5:
                	sgcfifo2:					; return with char in r1
01072C 57 5F 10 00 	    pop     r5
010730 57 4F 10 00 		pop		r4
010734 57 3F 10 00 		pop     r3
010738 57 2F 10 00 		pop     r2
01073C 37 FF 01 00 		rtl
sgcfifo1:
010740 0A 10 FE FF 		ldi		r1,#-1				; no char available
010744 57 5F 10 00 		pop     r5
010748 57 4F 10 00 		pop		r4
01074C 57 3F 10 00 		pop     r3
010750 57 2F 10 00 		pop     r2
010754 3B FF 11 00 		rts

                	
                	;-----------------------------------------
                	; Serial port IRQ
                	;-----------------------------------------
                	;
                	SerialIRQ:
010758 7C 00 00 00 	    ldi     sp,#CPU0_IRQ_STACK
01075C 7C 00 00 00 
010760 0A E0 5B 02 
010764 E7 E0 01 00 		push    r1
010768 67 E1 01 00 		push    r2
01076C E7 E1 01 00 		push    r3
010770 67 E2 01 00 		push	r4
                	
010774 7C DC FF 00 	    ldi     r2,#UART
010778 0A 20 00 14 
01077C 40 11 06 00 	    lb      r1,UART_IS[r2]  ; get interrupt status
010780 BD 20 10 00 		bgt		r1,sirq1		; no interrupt
010784 8C 10 FE 00 		and		r1,r1,#0x7f  	; switch on interrupt type
010788 86 30 08 00 		cmp		r3,r1,#4
01078C BD 01 1E 00 		beq		r3,srxirq
010790 86 30 18 00 		cmp		r3,r1,#$0C
010794 BD 01 18 00 		beq		r3,stxirq
010798 86 30 20 00 		cmp		r3,r1,#$10
01079C BD 01 0C 00 		beq		r3,smsirq
                		; unknown IRQ type
                	sirq1:
0107A0 57 4F 10 00 		pop		r4
0107A4 57 3F 10 00 		pop     r3
0107A8 57 2F 10 00 		pop     r2
0107AC 57 1F 10 00 		pop     r1
0107B0 02 E0 3F 6E 		rti
                	
                	; Get the modem status and record it
                	smsirq:
0107B4 41 11 04 00 	    lbu     r1,UART_MS[r2]
0107B8 7C C2 00 00 		sb      r1,Uart_ms
0107BC 60 10 D8 02 
0107C0 3A FC FF FF 		bra		sirq1
                	
                	stxirq:
0107C4 BA FB FF FF 		bra		sirq1
                	
                	; Get a character from the uart and store it in the rx fifo
                	srxirq:
                	srxirq1:
0107C8 41 11 00 00 	    lbu     r1,UART_RX[r2]      ; get the char (clears interrupt)
0107CC 7C C2 00 00 	    lbu     r3,Uart_txxon
0107D0 41 30 F8 02 
0107D4 BD 01 18 00 		beq		r3,srxirq3
0107D8 86 40 26 00 		cmp		r4,r1,#XOFF
0107DC 3D 12 0A 00 		bne		r4,srxirq2
0107E0 0A 10 02 00 		ldi     r1,#1
0107E4 7C C2 00 00 		sb		r1,Uart_txxonoff
0107E8 60 10 DA 02 
0107EC 3A 08 00 00 		bra		srxirq5
                	srxirq2:
0107F0 86 40 22 00 		cmp		r4,r1,#XON
0107F4 3D 12 08 00 		bne		r4,srxirq3
0107F8 7C C2 00 00 		sb		r0,Uart_txxonoff
0107FC 60 00 DA 02 
010800 BA 05 00 00 		bra		srxirq5
                	srxirq3:
010804 7C C2 00 00 		sb		r0,Uart_txxonoff
010808 60 00 DA 02 
01080C 7C C2 00 00 		lcu		r4,Uart_rxhead
010810 43 40 DC 02 
010814 7C C2 00 00 		sb		r1,Uart_rxfifo[r4]  ; store in buffer
010818 60 12 FA 02 
01081C 14 42 02 00 		addui   r4,r4,#1
010820 0C 42 FE 03 		and		r4,r4,#$1ff
010824 7C C2 00 00 		sc		r4,Uart_rxhead
010828 61 40 DC 02 
                	srxirq5:
01082C 40 11 02 00 	    lb      r1,UART_LS[r2]      ; check for another ready character
010830 8C 10 02 00 		and		r1,r1,#1            ; check rxfull bit
010834 BD 10 CA FF 		bne		r1,srxirq1          ; loop back for another character
010838 7C C2 00 00 		lb		r1,Uart_rxflow		; are we using flow controls?
01083C 40 10 E4 02 
010840 BD 10 38 00 		bne		r1,srxirq8
010844 E7 EF 01 00 		push    lr
010848 B9 BE FF FF 		bsr		CharsInRxBuf
01084C 57 FF 11 00 		pop     lr
010850 7C C2 00 00 		lb		r1,Uart_foff
010854 40 10 EC 02 
010858 02 12 02 0C 		cmp		r1,r4,r1
01085C BD 40 2A 00 		blt		r1,srxirq8
010860 0A 10 02 00 		ldi		r1,#1
010864 7C C2 00 00 		sb		r1,Uart_rxflow
010868 60 10 E4 02 
01086C 7C C2 00 00 		lb		r1,Uart_rxrts
010870 40 10 E6 02 
010874 BD 00 08 00 		beq		r1,srxirq6
010878 40 11 0C 00 		lb		r1,UART_MC[r2]
01087C 8C 10 FA 01 		and		r1,r1,#$FD		; turn off RTS
010880 60 11 0C 00 		sb		r1,UART_MC[r2]
                	srxirq6:
010884 7C C2 00 00 		lb		r1,Uart_rxdtr
010888 40 10 E8 02 
01088C BD 00 08 00 		beq		r1,srxirq7
010890 40 11 0C 00 		lb		r1,UART_MC[r2]
010894 8C 10 FC 01 		and		r1,r1,#$FE		; turn off DTR
010898 60 11 0C 00 		sb		r1,UART_MC[r2]
                	srxirq7:
01089C 7C C2 00 00 		lb		r1,Uart_rxxon
0108A0 40 10 EA 02 
0108A4 BD 00 06 00 		beq		r1,srxirq8
0108A8 0A 10 26 00 		ldi		r1,#XOFF
0108AC 60 11 00 00 		sb		r1,UART_TX[r2]
                	srxirq8:
0108B0 3A DE FF FF 		bra		sirq1
                	
                	
                	;------------------------------------------------------------------------------
                	; Video BIOS
                	; Video Exception #410
                	;
                	; Function in R6
                	; 0x02 = Set Cursor Position	r1 = row, r2 = col 
                	; 0x03 = Get Cursor position	returns r1 = row, r2 = col
                	; 0x06 = Scroll screen up
                	; 0x09 = Display character+attribute, r1=char, r2=attrib, r3=#times
                	; 0x0A = Display character at cursor position, r1 = char, r2 = # times
                	; 0x0B = Set background color, r1 = color
                	; 0x0C = Display Pixel r1 = x, r2 = y, r3 = color
                	; 0x0D = Get pixel  r1 = x, r2 = y
                	; 0x0E = Teletype output, r1 = char
                	; 0x14 = Display String	r1 = pointer to string
                	; 0x15 = Display number r1 = number, r2 = # digits
                	; 0x16 = Display String + CRLF   r1 = pointer to string
                	; 0x17 = Display Word r1 as hex = word
                	; 0x18 = Display Half word as hex r1 = half word
                	; 0x19 = Display Charr char in hex r1 = char
                	; 0x1A = Display Byte in hex r1 = byte
                	; 0x1B = Display String -wide characters r1=pointer to string
                	; 0x1C = Display hexidecimal number, r1 = number, r2 = # of digits
                	; 0x20 = Convert ascii to screen
                	; 0x21 = Convert screen to ascii
                	; 0x22 = Set normal attribute
                	; 0x23 = Get normal attribute
                	;------------------------------------------------------------------------------
                	
                	MAX_VIDEO_BIOS_CALL = 0x23
                	TCB_BIOS_Stack      EQU   $160
                	
                	    code
                	    align   2                	
                	VideoBIOS_FuncTable:
0108B4 00 00       	    dc      0            ; 0x00
0108B6 00 00       	    dc      0
0108B8 F8 09       	    dc      VBSetCursorPos ; 0x02
0108BA 10 0A       	    dc      VBGetCursorPos ; 0x03
0108BC 00 00       	    dc      0
0108BE 00 00       	    dc      0
0108C0 70 47       	    dc      ScrollUp     ; 0x06
0108C2 00 00       	    dc      0
0108C4 00 00       	    dc      0
0108C6 98 09       	    dc      DispCharAttr ; 0x09
0108C8 00 00       	    dc      0
0108CA 41 01       	    dc      SetBkColor   ; 0x0B
0108CC 42 01       	    dc      SetPixel     ; 0x0C
0108CE 43 01       	    dc      GetPixel     ; 0x0D
0108D0 1C 0A       	    dc      VBDisplayChar  ; 0x0E
0108D2 00 00       	    dc      0
0108D4 00 00       	    dc      0
0108D6 00 00       	    dc      0
0108D8 00 00       	    dc      0
0108DA 00 00       	    dc      0
0108DC 44 01       	    dc      VBDisplayString  ; 0x14
0108DE 3C 0B       	    dc      PRTNUM         ; 0x15
0108E0 C8 4C       	    dc      DisplayStringCRLF    ; 0x16
0108E2 5C 0A       	    dc      DisplayWord    ; 0x17
0108E4 70 0A       	    dc      DisplayHalf    ; 0x18
0108E6 84 0A       	    dc      DisplayCharHex ; 0x19
0108E8 98 0A       	    dc      DisplayByte    ; 0x1A
0108EA 46 01       	    dc      VBDisplayString16  ; 0x1B
0108EC 00 00       	    dc      0
0108EE 00 00       	    dc      0
0108F0 00 00       	    dc      0
0108F2 00 00       	    dc      0
0108F4 47 01       	    dc      VBAsciiToScreen    ; 0x20
0108F6 D0 0B       	    dc      VBScreenToAscii    ; 0x21
0108F8 44 0A       	    dc      VBSetCurrAttr      ; 0x22
0108FA 58 0A       	    dc      VBGetCurrAttr      ; 0x23
                	    
                	    
                	                    
                	    align   4                	
                	;------------------------------------------------------------------------------
                	;------------------------------------------------------------------------------
                	
                	LockVideoBIOS:
0108FC E7 EF 01 00 	    push    lr
010900 E7 E0 01 00 	    push    r1
010904 7C C2 00 00 	    ldi     r1,#VideoBIOS_sema
010908 0A 10 00 02 
01090C B9 F8 14 00 	    bsr     LockSema
010910 57 1F 10 00 	    pop     r1
010914 3B FF 11 00 	    rts
UnlockVideoBIOS:
010918 E7 EF 01 00 	    push    lr
01091C E7 E0 01 00 	    push    r1
010920 7C C2 00 00 	    lea     r1,VideoBIOS_sema
010924 47 10 00 02 
010928 39 FE 14 00 	    bsr     UnlockSema
01092C 57 1F 10 00 	    pop     r1
010930 3B FF 11 00 	    rts

                	;------------------------------------------------------------------------------
                	;------------------------------------------------------------------------------
                	
                	VideoBIOSCall:
010934 46 EC C1 02 	    lw      sp,TCB_BIOS_Stack[tr]
010938 E7 EF 01 00 	    push    lr
01093C 39 F8 FF FF 	    bsr     LockVideoBIOS
010940 67 E5 01 00 	    push    r10
010944 02 A0 12 3E 	    mfspr   r10,epc             ; update the return address
010948 14 A5 08 00 	    addui   r10,r10,#4
01094C 02 05 12 3C 	    mtspr   epc,r10
010950 06 A3 46 00 	    cmp     r10,r6,#MAX_VIDEO_BIOS_CALL
010954 3D 25 1A 00 	    bgt     r10,.0003
010958 7C 01 00 00 	    lea     r10,VideoBIOS_FuncTable
01095C 47 A0 68 11 
010960 4B A5 4C 00 	    lcu     r10,[r10+r6*2]
010964 3D 05 16 00 	    beq     r10,.0005
010968 7C 01 00 00 	    or      r10,r10,#VideoBIOSCall & 0xFFFFFFFFFFFF0000    ; recover high order bits
01096C 0D A5 00 00 
010970 3C F5 01 00 	    jsr     [r10]
                	.0004:
010974 3F 00 00 00 	    nop
010978 39 F4 FF FF 	    bsr     UnlockVideoBIOS
01097C 57 AF 10 00 	    pop     r10
010980 57 FF 11 00 	    pop     lr
010984 02 E0 3D 6E 	    rte
                	.0003:
010988 0A 20 02 00 	    ldi     r2,#E_BadFuncno
01098C 3A FD FF FF 	    bra     .0004
                	.0005:
010990 0A 20 06 00 	    ldi     r2,#E_Unsupported
010994 3A FC FF FF 	    bra     .0004
                	
                	;------------------------------------------------------------------------------
                	; Display a character with a specific attribute.
                	;------------------------------------------------------------------------------
                	
                	DispCharAttr:
010998 E7 EF 01 00 	    push    lr
01099C E7 E1 01 00 	    push    r3
0109A0 67 E2 01 00 	    push    r4
0109A4 E7 E2 01 00 	    push    r5
0109A8 82 40 00 1A 	    mov     r4,r1
0109AC B9 0B 05 00 	    bsr     GetJCBPtr
0109B0 82 50 00 1A 	    mov     r5,r1
0109B4 7C 00 00 00 	    lh      r3,JCB_NormAttr[r5]
0109B8 7C 00 00 00 
0109BC C4 32 A6 02 
0109C0 E7 E1 01 00 	    push    r3
0109C4 7C 00 00 00 	    sh      r2,JCB_NormAttr[r5]
0109C8 7C 00 00 00 
0109CC E2 22 A6 02 
0109D0 02 12 00 1A 	    mov     r1,r4
0109D4 39 FC 00 00 	    bsr     OutChar
0109D8 57 3F 10 00 	    pop     r3
0109DC 7C 00 00 00 	    sh      r3,JCB_NormAttr[r5]    ; restore normal attribute
0109E0 7C 00 00 00 
0109E4 E2 32 A6 02 
0109E8 57 5F 10 00 	    pop     r5
0109EC 57 4F 10 00 	    pop     r4
0109F0 57 3F 10 00 	    pop     r3
0109F4 3B FF 11 00 	    rts

                	VBSetCursorPos:
0109F8 E7 EF 01 00 	    push    lr
0109FC 67 E1 01 00 	    push    r2
010A00 E7 E0 01 00 	    push    r1
010A04 39 06 07 00 	    bsr     SetCursorPos
010A08 14 EF 21 00 	    addui   sp,sp,#16
010A0C 3B FF 11 00 	    rts

                	VBGetCursorPos:
010A10 E7 EF 01 00 	    push    lr
010A14 39 1C 07 00 	    bsr     GetCursorPos
010A18 3B FF 11 00 	    rts

                	VBDisplayChar:
010A1C E7 EF 01 00 	    push    lr
010A20 E7 E0 01 00 	    push    r1
010A24 39 D9 07 00 	    bsr     DisplayChar
010A28 14 EF 11 00 	    addui   sp,sp,#8
010A2C 3B FF 11 00 	    rts

                	VBASciiToScreen:
010A30 E7 EF 01 00 	    push    lr
010A34 E7 E0 01 00 	    push    r1
010A38 39 24 07 00 	    bsr     AsciiToScreen
010A3C 14 EF 11 00 	    addui   sp,sp,#8
010A40 3B FF 11 00 	    rts

                	VBSetCurrAttr:
010A44 E7 EF 01 00 	    push    lr
010A48 E7 E0 01 00 	    push    r1
010A4C B9 EE 06 00 	    bsr     SetCurrAttr
010A50 14 EF 11 00 	    addui   sp,sp,#8
010A54 3B FF 11 00 	    rts

                	VBGetCurrAttr:
010A58 3A E4 06 00 	    bra     GetCurrAttr
                	
                	;------------------------------------------------------------------------------
                	; Display the word in r1
                	;------------------------------------------------------------------------------
                	
                	DisplayWord:
010A5C E7 EF 01 00 	    push    lr
010A60 82 10 40 74 		rol	    r1,r1,#32
010A64 B9 01 00 00 		bsr		DisplayHalf
010A68 82 10 40 74 		rol	    r1,r1,#32
010A6C 57 FF 11 00 	    pop     lr
                	
                	;------------------------------------------------------------------------------
                	; Display the half-word in r1
                	;------------------------------------------------------------------------------
                	
                	DisplayHalf:
010A70 E7 EF 01 00 	    push    lr
010A74 82 10 20 76 		ror		r1,r1,#16
010A78 B9 01 00 00 		bsr		DisplayCharHex
010A7C 82 10 20 74 		rol		r1,r1,#16
010A80 57 FF 11 00 	    pop     lr
                	
                	;------------------------------------------------------------------------------
                	; Display the char in r1
                	;------------------------------------------------------------------------------
                	
                	DisplayCharHex:
010A84 E7 EF 01 00 	    push    lr
010A88 82 10 10 76 		ror		r1,r1,#8
010A8C B9 01 00 00 		bsr		DisplayByte
010A90 82 10 10 74 		rol		r1,r1,#8
010A94 57 FF 11 00 	    pop     lr
                	
                	;------------------------------------------------------------------------------
                	; Display the byte in r1
                	;------------------------------------------------------------------------------
                	
                	DisplayByte:
010A98 E7 EF 01 00 	    push    lr
010A9C 82 10 08 76 		ror		r1,r1,#4
010AA0 B9 01 00 00 		bsr		DisplayNybble
010AA4 82 10 08 74 		rol		r1,r1,#4
010AA8 57 FF 11 00 		pop     lr
                	 
                	;------------------------------------------------------------------------------
                	; Display nybble in r1
                	;------------------------------------------------------------------------------
                	
                	DisplayNybble:
010AAC E7 EF 01 00 	    push    lr
010AB0 E7 E0 01 00 		push	r1
010AB4 67 E1 01 00 		push    r2
010AB8 8C 10 1E 00 		and		r1,r1,#$0F
010ABC 94 10 60 00 		addui	r1,r1,#'0'
010AC0 96 20 74 00 		cmpu	r2,r1,#'9'+1
010AC4 3D 41 04 00 		blt		r2,.0001
010AC8 94 10 0E 00 		addui	r1,r1,#7
                	.0001:
010ACC 39 DD 00 00 		bsr		OutChar
010AD0 57 2F 10 00 		pop     r2
010AD4 57 1F 10 00 		pop		r1
010AD8 3B FF 11 00 		rts

                	;------------------------------------------------------------------------------
                	; Display a string pointer to string in r1 using 16 bit characters.
                	;------------------------------------------------------------------------------
                	
                	DisplayString16:
010ADC E7 EF 01 00 	    push    lr
010AE0 E7 E0 01 00 		push	r1
010AE4 67 E1 01 00 		push    r2
010AE8 0A 20 6E 00 		ldi     r2,#55
010AEC 7C DC FF 00 		sb      r2,LEDS
010AF0 60 20 00 0C 
010AF4 82 20 00 1A 		mov		r2,r1
                	.dm2:
010AF8 43 11 00 00 		lcu		r1,[r2]
010AFC 14 21 04 00 		addui   r2,r2,#2	; increment text pointer
010B00 BD 00 0E 00 		beq		r1,.dm1
010B04 8C 10 FE 01 		and     r1,r1,#$FF
010B08 B9 D5 00 00 		bsr		OutChar
010B0C 0A 10 70 00 		ldi     r1,#56
010B10 7C DC FF 00 		sb      r1,LEDS
010B14 60 10 00 0C 
010B18 3A FC FF FF 		bra		.dm2
                	.dm1:
010B1C 57 2F 10 00 		pop		r2
010B20 57 1F 10 00 	    pop     r1
010B24 3B FF 11 00 		rts

                	DispCharQ:
010B28 E7 EF 01 00 	    push    lr
010B2C B9 05 07 00 		bsr		AsciiToScreen
010B30 E1 11 00 00 		sc		r1,[r3]
010B34 84 31 08 00 		add		r3,r3,#4
010B38 3B FF 11 00 	    rts

                	;------------------------------------------------------------------------------
                	; 'PRTNUM' prints the 64 bit number in r1, leading blanks are added if
                	; needed to pad the number of spaces to the number in r2.
                	; However, if the number of digits is larger than the no. in
                	; r2, all digits are printed anyway. Negative sign is also
                	; printed and counted in, positive sign is not.
                	;
                	; r1 = number to print
                	; r2 = number of digits
                	; Register Usage
                	;	r5 = number of padding spaces
                	;------------------------------------------------------------------------------
                	PRTNUM:
010B3C E7 EF 01 00 	    push    lr
010B40 E7 E1 01 00 		push	r3
010B44 E7 E2 01 00 		push	r5
010B48 67 E3 01 00 		push	r6
010B4C E7 E3 01 00 		push	r7
010B50 7C C2 00 00 		ldi		r7,#NUMWKA	; r7 = pointer to numeric work area
010B54 0A 70 88 02 
010B58 82 60 00 1A 		mov		r6,r1		; save number for later
010B5C 02 51 00 1A 		mov		r5,r2		; r5 = min number of chars
010B60 BD 30 06 00 		bge		r1,PN2			; is it negative? if not
010B64 02 10 02 2A 		subu	r1,r0,r1	; else make it positive
010B68 95 52 02 00 		subui   r5,r5,#1	; one less for width count
                	PN2:
                	;	ldi		r3,#10
                	PN1:
010B6C 89 20 14 00 		mod		r2,r1,#10	; r2 = r1 mod 10
010B70 88 10 14 00 		div		r1,r1,#10	; r1 /= 10 divide by 10
010B74 04 21 60 00 		add		r2,r2,#'0'	; convert remainder to ascii
010B78 E0 23 00 00 		sb		r2,[r7]		; and store in buffer
010B7C 94 73 02 00 		addui   r7,r7,#1
010B80 95 52 02 00 		subui   r5,r5,#1	; decrement width
010B84 BD 10 F4 FF 		bne		r1,PN1
                	PN6:
010B88 BD 52 08 00 		ble		r5,PN4		; test pad count, skip padding if not needed
                	PN3:
010B8C 39 1E 00 00 		bsr     DisplaySpace	; display the required leading spaces
010B90 95 52 02 00 		subui   r5,r5,#1
010B94 BD 12 FC FF 		bne		r5,PN3
                	PN4:
010B98 3D 33 06 00 		bge		r6,PN5		; is number negative?
010B9C 0A 10 5A 00 		ldi		r1,#'-'		; if so, display the sign
010BA0 B9 C2 00 00 		bsr		OutChar
                	PN5:
010BA4 95 73 02 00 	    subui   r7,r7,#1
010BA8 C0 13 00 00 		lb		r1,[r7]		; now unstack the digits and display
010BAC 39 C1 00 00 		bsr		OutChar
010BB0 7C C2 00 00 		cmp		r1,r7,#NUMWKA
010BB4 86 13 88 02 
010BB8 BD 20 F6 FF 		bgt		r1,PN5
                	PNRET:
010BBC 57 7F 10 00 		pop		r7
010BC0 57 6F 10 00 		pop		r6
010BC4 57 5F 10 00 		pop		r5
010BC8 57 3F 10 00 		pop		r3
010BCC 3B FF 11 00 		rts

                	;------------------------------------------------------------------------------
                	; Returns:
                	; r1 = pointer to screen from JCB. This may be either the real screen or
                	;      the virtual screen buffer.
                	;------------------------------------------------------------------------------
                	
                	
                	
                	;------------------------------------------------------------------------------
                	; Display a character on-screen.
                	;------------------------------------------------------------------------------
                	
                	;------------------------------------------------------------------------------
                	; Convert screen display character to ascii.
                	;------------------------------------------------------------------------------
                	
                	VBScreenToAscii:
010BD0 E7 EF 01 00 	    push    lr
010BD4 E7 E0 01 00 	    push    r1
010BD8 B9 03 07 00 	    bsr     ScreenToAscii
010BDC 14 EF 11 00 	    addui   sp,sp,#8
010BE0 3B FF 11 00 	    rts

                	CursorOff:
010BE4 37 FF 01 00 		rtl
CursorOn:
010BE8 37 FF 01 00 		rtl
	rtl

010BEC 37 FF 01 00 
                	
                	DispStartMsg:
010BF0 E7 EF 01 00 	    push    lr
010BF4 7C 01 00 00 		ldi		r1,#msgStart
010BF8 0A 10 24 1E 
010BFC 39 0D 08 00 		bsr		DisplayString
010C00 3B FF 11 00 	    rts

                	   
                	BranchToSelf2:
010C04 3A 00 00 00 	    bra      BranchToSelf2
                	
                	;------------------------------------------------------------------------------
                	;------------------------------------------------------------------------------
                	
                	ROMChecksum:
010C08 E7 EF 01 00 	    push     lr
010C0C 7C 01 00 00 	    ldi      r2,#$10000
010C10 0A 20 00 00 
010C14 0A 40 00 00 	    ldi      r4,#0
010C18 0A 30 00 00 	    ldi      r3,#0
010C1C 0A 50 00 00 	    ldi      r5,#0
                	.0001:
010C20 4D 31 08 00 	    lhu      r3,[r2+r4]
010C24 82 52 06 28 	    addu     r5,r5,r3
010C28 14 42 08 00 	    addui    r4,r4,#4
010C2C 7C 01 00 00 	    cmp      r3,r4,#$10000
010C30 06 32 00 00 
010C34 BD 41 F6 FF 	    blt      r3,.0001
010C38 7C 01 00 00 	    pea      msgROMChecksum
010C3C 65 E0 B1 18 
010C40 B9 04 08 00 	    bsr      DisplayString
010C44 14 EF 11 00 	    addui    sp,sp,#8
010C48 82 12 00 1A 	    mov      r1,r5
010C4C B9 C4 FF FF 	    bsr      DisplayHalf
010C50 B9 F8 07 00 	    bsr      CRLF
010C54 3B FF 11 00 	    rts

                	msgROMChecksum:
010C58 0D 00 0A 00 	    dc    CR,LF,"ROM Checksum: ",0
010C5C 52 00 4F 00 
010C60 4D 00 20 00 
010C64 43 00 68 00 
010C68 65 00 63 00 
010C6C 6B 00 73 00 
010C70 75 00 6D 00 
010C74 3A 00 20 00 
010C78 00 00       
                	
010C7A 00 00       	    align 
                	 
                	;------------------------------------------------------------------------------
                	; Display a space on the output device.
                	;------------------------------------------------------------------------------
                	
                	DisplaySpace:
010C7C E7 EF 01 00 	    push     lr
010C80 E7 E0 01 00 	    push     r1
010C84 0A 10 40 00 	    ldi      r1,#' '
010C88 B9 A5 00 00 	    bsr      OutChar
010C8C 57 1F 10 00 	    pop      r1
010C90 3B FF 11 00 	    rts

                	;GetJCBPtr:
                	;    push    r2
                	;	lbu     r1,TCB_hJCB[tr]
                	;    beq     r1,.0001
                	;    cmpu    r2,r1,#NR_JCB
                	;    bge     r2,.0001
                	;	mulu    r1,r1,#JCB_Size
                	;	addui   r1,r1,#JCB_Array
                	;	pop     r2
                	;    rtl
                	;.0001:
                	;    pop     r2
                	;    ldi     r1,#JCB0
                	;    rtl 
                	
                	;------------------------------------------------------------------------------
                	;------------------------------------------------------------------------------
                	
                	LockBIOS:
010C94 E7 EF 01 00 	    push    lr
010C98 E7 E0 01 00 	    push    r1
010C9C 7C C2 00 00 	    ldi     r1,#BIOS_sema
010CA0 0A 10 20 07 
010CA4 B9 85 14 00 	    bsr     LockSema
010CA8 57 1F 10 00 	    pop     r1
010CAC 3B FF 11 00 	    rts
UnlockBIOS:
010CB0 E7 EF 01 00 	    push    lr
010CB4 E7 E0 01 00 	    push    r1
010CB8 7C C2 00 00 	    lea     r1,BIOS_sema
010CBC 47 10 20 07 
010CC0 39 8B 14 00 	    bsr     UnlockSema
010CC4 57 1F 10 00 	    pop     r1
010CC8 3B FF 11 00 	    rts

                	LockBIOS1:
010CCC E7 EF 01 00 	    push    lr
010CD0 E7 E0 01 00 	    push    r1
010CD4 7C 08 01 00 	    ldi     r1,#BIOS1_sema
010CD8 0A 10 A0 55 
010CDC B9 7E 14 00 	    bsr     LockSema
010CE0 57 1F 10 00 	    pop     r1
010CE4 3B FF 11 00 	    rts

                	;------------------------------------------------------------------------------
                	; Perform a BIOS call from CPU #1
                	; This routine sets up a structure variable in memory for the primary CPU
                	; to process.
                	;------------------------------------------------------------------------------
                	
                	BIOSCall1:
010CE8 46 EC C1 02 	    lw      sp,TCB_BIOS_Stack[tr]
010CEC E7 EF 01 00 	    push    lr
010CF0 67 E5 01 00 	    push    r10
010CF4 E7 E5 01 00 	    push    r11
010CF8 02 A0 12 3E 	    mfspr   r10,epc             ;
010CFC 14 A5 08 00 	    addui   r10,r10,#4
010D00 02 05 12 3C 	    mtspr   epc,r10
010D04 06 A3 C8 00 	    cmp     r10,r6,#MAX_BIOS_CALL
010D08 3D 25 42 00 	    bgt     r10,.0003
010D0C 39 F8 FF FF 	    bsr     LockBIOS1
010D10 63 60 00 00 	    sw      r6,BIOS_op
010D14 63 10 10 00 	    sw      r1,BIOS_arg1
010D18 63 20 20 00 	    sw      r2,BIOS_arg2
010D1C 63 30 30 00 	    sw      r3,BIOS_arg3
010D20 63 40 40 00 	    sw      r4,BIOS_arg4
010D24 63 50 50 00 	    sw      r5,BIOS_arg5
010D28 63 00 60 00 	    sw      r0,BIOS_resp
010D2C 63 00 70 00 	    sw      r0,BIOS_stat
010D30 7C C0 00 00 	    lw      r1,BIOS_MbxHandle
010D34 46 10 10 00 
010D38 0A 20 00 00 	    ldi     r2,#BIOS_op          ;
010D3C 7C 08 01 00 	    lw      r3,BIOS_RespMbx      ; response mailbox handle
010D40 46 30 D0 55 
010D44 38 0F 08 00 	    sys     #FMTK_CALL
010D48 09 00 00 00 	    dh      9                    ; SendMsg
010D4C 7C 08 01 00 	    lw      r1,BIOS_RespMbx
010D50 46 10 D0 55 
010D54 0A 20 FE FF 	    ldi     r2,#-1
010D58 38 0F 08 00 	    sys     #FMTK_CALL
010D5C 0A 00 00 00 	    dh      10                   ; WaitMsg
010D60 86 70 20 00 	    cmp     r7,r1,#E_Timeout
010D64 BD 13 06 00 	    bne     r7,.0004
010D68 0A 20 04 00 	    ldi     r2,#BIOS_E_Timeout
010D6C 3A 01 00 00 	    bra     .0002
                	.0004:
010D70 02 11 00 1A 	    mov     r1,r2
                	.0002:
010D74 7C 08 01 00 	    sw      r0,BIOS1_sema
010D78 63 00 A0 55 
010D7C 57 BF 10 00 	    pop     r11
010D80 57 AF 10 00 	    pop     r10
010D84 57 FF 11 00 	    pop     lr
010D88 02 E0 3D 6E 	    rte
                	.0003:
010D8C 0A 20 02 00 	    ldi     r2,#E_BadFuncno
010D90 57 BF 10 00 	    pop     r11
010D94 57 AF 10 00 	    pop     r10
010D98 57 FF 11 00 	    pop     lr
010D9C 02 E0 3D 6E 	    rte
                	
                	;------------------------------------------------------------------------------
                	; BIOSCall
                	;
                	; Peform a BIOS function for CPU #0
                	;
                	; Parameters:
                	; r1 = first function argument
                	; r2 = second function argument
                	; r3 = third function argument
                	; r4 = fourth function argument
                	; r5 = fifth function argument
                	; r6 = function
                	;
                	; Returns:
                	; r1 = response from BIOS routine
                	;------------------------------------------------------------------------------
                	
                	BIOSCall:
010DA0 46 EC C1 02 	    lw      sp,352[tr]
010DA4 E7 EF 01 00 	    push    lr
010DA8 B9 DD FF FF 	    bsr     LockBIOS
010DAC 67 E5 01 00 	    push    r10
010DB0 02 A0 12 3E 	    mfspr   r10,epc             ; update the return address
010DB4 14 A5 08 00 	    addui   r10,r10,#4
010DB8 02 05 12 3C 	    mtspr   epc,r10
010DBC 06 A3 C8 00 	    cmp     r10,r6,#MAX_BIOS_CALL
010DC0 3D 25 1E 00 	    bgt     r10,.0003
010DC4 7C 01 00 00 	    ldi     r10,#BIOS_FuncTable
010DC8 0A A0 00 01 
010DCC 4B A5 4C 00 	    lcu     r10,[r10+r6*2]
010DD0 7C 01 00 00 	    or      r10,r10,#BIOSCall & 0xFFFFFFFFFFFF0000
010DD4 0D A5 00 00 
010DD8 3C F5 01 00 	    jsr     [r10]
010DDC 7C 00 00 00 	    ldi     r1,#$5678
010DE0 0A 10 F0 AC 
010DE4 7C DC FF 00 	    sc      r1,LEDS
010DE8 61 10 00 0C 
                	.0004:
010DEC B9 D8 FF FF 	    bsr     UnlockBIOS
010DF0 57 AF 10 00 	    pop     r10
010DF4 57 FF 11 00 	    pop     lr
010DF8 02 E0 3D 6E 	    rte
                	.0003:
010DFC 0A 20 02 00 	    ldi     r2,#E_BadFuncno
010E00 BA FD FF FF 	    bra     .0004
                	
                	;------------------------------------------------------------------------------
                	; This task is a BIOS service task.
                	;------------------------------------------------------------------------------
                	
                	BIOSCallTask:
                	    ; Get a mailbox for BIOS calls
010E04 7C C0 00 00 	    ldi     r1,#BIOS_MbxHandle
010E08 0A 10 10 00 
010E0C 38 0F 08 00 	    sys     #FMTK_CALL            ; call FMTK AllocMbx function
010E10 06 00 00 00 	    dh      6
                	.0001:
010E14 7C C0 00 00 	    lw      r1,BIOS_MbxHandle
010E18 46 10 10 00 
010E1C 0A 20 FE FF 	    ldi     r2,#-1                ; infinite timeout
010E20 38 0F 08 00 	    sys     #FMTK_CALL
010E24 0A 00 00 00 	    dh      10                    ; call FMTK Waitmsg Function
010E28 86 B0 00 00 	    cmp     r11,r1,#E_Ok          ; ignore bad reponses
010E2C BD 15 F4 FF 	    bne     r11,.0001
010E30 02 B1 00 1A 	    mov     r11,r2
010E34 82 C1 00 1A 	    mov     r12,r3
010E38 02 B0 00 1A 	    mov     r11,r0   ; for now
010E3C C6 65 00 00 	    lw      r6,BIOS_op[r11]
010E40 C6 15 10 00 	    lw      r1,BIOS_arg1[r11]
010E44 C6 25 20 00 	    lw      r2,BIOS_arg2[r11]
010E48 C6 35 30 00 	    lw      r3,BIOS_arg3[r11]
010E4C C6 45 40 00 	    lw      r4,BIOS_arg4[r11]
010E50 C6 55 50 00 	    lw      r5,BIOS_arg5[r11]
                	;    sys     #BIOS_CALL
010E54 3D 06 E0 FF 	    beq     r12,.0001
010E58 E3 15 60 00 	    sw      r1,BIOS_resp[r11]
010E5C 82 20 00 1A 	    mov     r2,r1                ; r2 = return value from BIOS
010E60 02 16 00 1A 	    mov     r1,r12               ; r1 = mailbox to respond to
010E64 0A 30 00 00 	    ldi     r3,#0                ; r3 = not used
010E68 38 0F 08 00 	    sys     #FMTK_CALL
010E6C 08 00 00 00 	    dh      8                    ; PostMsg
010E70 BA F4 FF FF 	    bra     .0001        
                	
                	;------------------------------------------------------------------------------
                	; 60 Hz interrupt routine.
                	; Both cpu's will execute this interrupt.
                	;------------------------------------------------------------------------------
                	
                	TickRout:
010E74 FC C2 00 00 	    ldi     sp,#irq_stack       ; set stack pointer to interrupt processing stack
010E78 0A E0 11 08 
010E7C E7 EF 01 00 	    push    lr
010E80 E7 E0 01 00 	    push    r1
010E84 0A 10 06 00 		ldi		r1,#3				; reset the edge sense circuit
010E88 7C DC FF 00 		sh		r1,PIC_RSTE
010E8C 62 10 A8 1F 
010E90 02 10 00 6C 		cpuid   r1,r0,#0
010E94 BD 10 04 00 		bne     r1,.0001
010E98 39 02 00 00 		bsr     UserTickRout
                	.0001:
010E9C 57 1F 10 00 		pop     r1
010EA0 57 FF 11 00 		pop     lr
010EA4 02 E0 3F 6E 		rti
                	
                	UserTickRout:
010EA8 E7 E0 01 00 	    push    r1
010EAC 7C D0 FF 00 		lh	    r1,TEXTSCR+220
010EB0 44 10 B8 01 
010EB4 94 10 02 00 		addui	r1,r1,#1
010EB8 7C D0 FF 00 		sh	    r1,TEXTSCR+220
010EBC 62 10 B8 01 
010EC0 7C 02 00 00 		lw      r1,$20000
010EC4 46 10 00 00 
010EC8 7C D0 FF 00 		sh      r1,TEXTSCR+224
010ECC 62 10 C0 01 
010ED0 57 1F 10 00 		pop     r1
010ED4 37 FF 01 00 	    rtl

                	;------------------------------------------------------------------------------
                	; 1024Hz interupt routine. This must be fast. Allows the system time to be
                	; gotten by right shifting by 10 bits.
                	;------------------------------------------------------------------------------
                	
                	Tick1024Rout:
010ED8 FC C2 00 00 	    ldi     sp,#irq_stack  ; set stack pointer to interrupt processing stack
010EDC 0A E0 11 08 
010EE0 E7 E0 01 00 		push	r1
010EE4 0A 10 04 00 		ldi		r1,#2				; reset the edge sense circuit
010EE8 7C DC FF 00 		sh		r1,PIC_RSTE
010EEC 62 10 A8 1F 
010EF0 7C C2 00 00 		inc     Milliseconds
010EF4 64 10 10 02 
010EF8 57 1F 10 00 		pop		r1
010EFC 02 E0 3F 6E 		rti                         ; restore stack pointer and return
                	
                	;------------------------------------------------------------------------------
                	; GetSystemTime
                	;
                	; Returns 
                	;    r1 = the system time in seconds.
                	;------------------------------------------------------------------------------
                	
                	GetSystemTime:
010F00 7C C2 00 00 	    lw      r1,Milliseconds
010F04 46 10 10 02 
010F08 82 10 14 72 	    lsr     r1,r1,#10
010F0C 37 FF 01 00 	    rtl

                	
010F10 00 00       		dc	0
                	msgStart:
010F12 46 00 49 00 		dc	"FISA64 test system starting.",0
010F16 53 00 41 00 
010F1A 36 00 34 00 
010F1E 20 00 74 00 
010F22 65 00 73 00 
010F26 74 00 20 00 
010F2A 73 00 79 00 
010F2E 73 00 74 00 
010F32 65 00 6D 00 
010F36 20 00 73 00 
010F3A 74 00 61 00 
010F3E 72 00 74 00 
010F42 69 00 6E 00 
010F46 67 00 2E 00 
010F4A 00 00       
                	
                	
                	; ============================================================================
                	; Monitor Task
                	; ============================================================================
                	    align   4                	
                	Monitor:
010F4C 7C 01 00 00 		pea		msgMonitorStarted
010F50 65 E0 AD 30 
010F54 B9 AE 07 00 		bsr		DisplayStringCRLF
010F58 14 EF 11 00 		addui   sp,sp,#8
010F5C 7C C2 00 00 		sb		r0,KeybdEcho
010F60 60 00 78 02 
010F64 7C C2 00 00 		ldi     r1,#JCB0
010F68 0A 10 90 07 
010F6C 7C 00 00 00 		sb      r0,JCB_KeybdEcho[r1]
010F70 7C 00 00 00 
010F74 E0 00 02 03 
010F78 0A 10 0E 00 		ldi		r1,#7
010F7C 0A 20 00 00 		ldi		r2,#0
010F80 7C 01 00 00 		ldi		r3,#IdleTask|1
010F84 0A 30 7A 76 
010F88 0A 40 00 00 		ldi		r4,#0
010F8C 0A 50 00 00 		ldi		r5,#0
                	;	sys     #4                  ; start task
                	;	dh      1
                	mon1:
                	;	ldi		sp,#TCBs+TCB_Size-8		; reload the stack pointer, it may have been trashed
010F90 7C 00 00 00 		ldi		sp,#MON_STACK
010F94 0A E0 01 C0 
010F98 02 00 00 6E 		cli
                	.PromptLn:
010F9C 39 8F 07 00 		bsr		CRLF
010FA0 0A 10 48 00 		ldi		r1,#'$'
010FA4 39 42 00 00 		bsr		OutChar
                	.Prompt3:
010FA8 B9 96 01 00 		bsr		KeybdGetCharNoWait		; KeybdGetCharDirectNB
010FAC BD 40 FE FF 		blt	    r1,.Prompt3
010FB0 86 20 1A 00 		cmp		r2,r1,#CR
010FB4 3D 01 06 00 		beq		r2,.Prompt1
010FB8 B9 3F 00 00 		bsr		OutChar
010FBC BA FD FF FF 		bra		.Prompt3
                	.Prompt1:
010FC0 67 E0 01 00 		push    r0
010FC4 B9 5A 06 00 		bsr     SetCursorCol
010FC8 14 EF 11 00 		addui   sp,sp,#8
010FCC B9 AD 06 00 		bsr		CalcScreenLocation
010FD0 82 30 00 1A 		mov		r3,r1
010FD4 39 11 00 00 		bsr		MonGetch
010FD8 86 20 48 00 		cmp		r2,r1,#'$'
010FDC 3D 11 04 00 		bne		r2,.Prompt2
010FE0 B9 0F 00 00 		bsr		MonGetch
                	.Prompt2:
010FE4 86 20 7E 00 		cmp		r2,r1,#'?'
010FE8 3D 01 30 00 		beq		r2,.doHelp
010FEC 86 20 86 00 		cmp		r2,r1,#'C'
010FF0 3D 01 44 04 		beq		r2,doCLS
010FF4 86 20 C6 00 		cmp     r2,r1,#'c'
010FF8 3D 01 CA 78 		beq     r2,doCS
010FFC 86 20 9A 00 		cmp		r2,r1,#'M'
011000 3D 01 72 00 		beq		r2,doDumpmem
011004 86 20 8C 00 		cmp		r2,r1,#'F'
011008 3D 01 82 00 		beq		r2,doFillmem
01100C 86 20 DA 00 		cmp		r2,r1,#'m'
011010 3D 01 C0 78 		beq		r2,MRTest
011014 86 20 A6 00 		cmp		r2,r1,#'S'
011018 3D 01 BC 00 		beq		r2,doSDBoot
01101C 86 20 CE 00 		cmp		r2,r1,#'g'
011020 3D 01 B8 78 		beq		r2,doRand
011024 86 20 CA 00 		cmp		r2,r1,#'e'
011028 3D 01 B4 78 		beq		r2,eval
01102C 86 20 94 00 		cmp		r2,r1,#'J'
011030 3D 01 C6 00 		beq		r2,doJump
011034 86 20 88 00 		cmp		r2,r1,#'D'
011038 3D 01 C6 01 		beq		r2,doDate
01103C 86 20 A8 00 		cmp     r2,r1,#'T'
011040 3D 01 62 00 		beq     r2,doDumpTL
011044 BA E9 FF FF 		bra     mon1
                	
                	.doHelp:
011048 7C 01 00 00 		pea		msgHelp
01104C 65 E0 A1 2D 
011050 B9 82 07 00 		bsr		DisplayString
011054 14 EF 11 00 		addui   sp,sp,#8
011058 3A E7 FF FF 		bra     mon1
                	
                	MonGetch:
01105C E7 EF 01 00 	    push    lr
011060 C5 11 00 00 		lhu	    r1,[r3]
011064 8C 10 FE 03 		andi	r1,r1,#$1FF
011068 84 31 08 00 		add		r3,r3,#4
01106C E7 E1 01 00 		push    r3
011070 E7 E0 01 00 		push    r1
011074 39 70 06 00 		bsr		ScreenToAscii
011078 14 EF 11 00 		addui   sp,sp,#8
01107C 57 3F 10 00 		pop     r3
011080 57 FF 11 00 		pop     lr
011084 37 FF 01 00 		rtl

                	;------------------------------------------------------------------------------
                	; Ignore blanks in the input
                	; r3 = text pointer
                	; r1 destroyed
                	;------------------------------------------------------------------------------
                	
                	ignBlanks:
011088 E7 EF 01 00 	    push    lr
01108C 67 E1 01 00 	    push    r2
                	ignBlanks1:
011090 B9 F9 FF FF 		bsr		MonGetch
011094 86 20 40 00 		cmp		r2,r1,#' '
011098 3D 01 FC FF 		beq		r2,ignBlanks1
01109C 85 31 08 00 		sub		r3,r3,#4
0110A0 57 2F 10 00 		pop     r2
0110A4 3B FF 11 00 		rts

                	;------------------------------------------------------------------------------
                	;------------------------------------------------------------------------------
                	
                	GetTwoParams:
0110A8 E7 EF 01 00 	    push    lr
0110AC B9 FB FF FF 		bsr		ignBlanks
0110B0 B9 AA 00 00 		bsr		GetHexNumber	; get start address of dump
0110B4 82 20 00 1A 		mov		r2,r1
0110B8 39 FA FF FF 		bsr		ignBlanks
0110BC 39 A9 00 00 		bsr		GetHexNumber	; get end address of dump
0110C0 3B FF 11 00 		rts

                	;------------------------------------------------------------------------------
                	; Get a range, the end must be greater or equal to the start.
                	;------------------------------------------------------------------------------
                	
                	GetRange:
0110C4 E7 EF 01 00 	    push    lr
0110C8 67 E2 01 00 	    push    r4
0110CC B9 FB FF FF 		bsr		GetTwoParams
0110D0 02 41 02 2C 		cmpu	r4,r2,r1
0110D4 3D 22 EE 02 		bgt		r4,DisplayErr
0110D8 57 4F 10 00 		pop     r4
0110DC 57 FF 11 00 		pop     lr
0110E0 37 FF 01 00 		rtl

                	doDumpmem:
0110E4 39 60 FF FF 		bsr		CursorOff
0110E8 B9 FB FF FF 		bsr		GetRange
0110EC 39 65 07 00 		bsr		CRLF
                	;	bra     mon1
                	.001:
0110F0 B9 93 00 00 		bsr		CheckKeys
0110F4 39 7A 00 00 		bsr		DisplayMemBytes
0110F8 02 41 02 2C 		cmpu	r4,r2,r1
0110FC 3D 52 FA FF 		ble		r4,.001
011100 3A D2 FF FF 		bra     mon1
                	
                	doDumpTL:
011104 39 2A 05 00 	    bsr     DumpTaskList
011108 3A D1 FF FF 	    bra     mon1
                	
                	;------------------------------------------------------------------------------
                	; Fill memory
                	;
                	; FB FFD80000 FFD8FFFF r	; fill sprite memory with random bytes
                	;------------------------------------------------------------------------------
                	
                	doFillmem:
01110C 39 5B FF FF 		bsr		CursorOff
011110 B9 E9 FF FF 		bsr		MonGetch		; skip over 'B' of "FB"
011114 86 20 84 00 		cmp		r2,r1,#'B'
011118 3D 01 04 00 		beq		r2,.0004
01111C 95 31 08 00 		subui	r3,r3,#4		; backup text pointer
                	.0004:
011120 B9 F4 FF FF 		bsr		GetRange
011124 E7 E0 01 00 		push	r1
011128 67 E1 01 00 	    push    r2
01112C B9 EB FF FF 		bsr		ignBlanks
011130 B9 E5 FF FF 		bsr		MonGetch		; check for random fill
011134 86 20 E4 00 		cmp		r2,r1,#'r'
011138 3D 01 18 00 		beq		r2,.0001
01113C 95 31 08 00 		subui   r3,r3,#4
011140 B9 98 00 00 		bsr		GetHexNumber
011144 82 30 00 1A 		mov		r3,r1
011148 57 2F 10 00 		pop		r2
01114C 57 1F 10 00 	    pop     r1
                	.0002:
011150 B9 87 00 00 		bsr		CheckKeys
011154 60 31 00 00 		sb		r3,[r2]
011158 14 21 02 00 		addui	r2,r2,#1
01115C 02 51 02 2C 		cmpu	r5,r2,r1
011160 BD 42 F8 FF 		blt		r5,.0002
011164 BA C5 FF FF 		bra		mon1
                	.0001:
011168 57 2F 10 00 		pop		r2
01116C 57 1F 10 00 	    pop     r1
                	.0003:
011170 B9 83 00 00 		bsr		CheckKeys
011174 7C DC FF 00 		lw	    r3,RANDOM_NUM
011178 46 30 00 18 
01117C 60 31 00 00 		sb		r3,[r2]
011180 14 21 02 00 		addui	r2,r2,#1
011184 02 51 02 2C 		cmpu	r5,r2,r1
011188 BD 42 F4 FF 		blt		r5,.0003
01118C BA C0 FF FF 		bra		mon1
                	
                	;------------------------------------------------------------------------------
                	;------------------------------------------------------------------------------
                	
                	doSDBoot:
                	;	sub		r3,r3,#4
011190 39 E6 DD FF 		bsr		SDInit
011194 BD 10 FE FE 		bne	    r1,mon1
011198 B9 E5 DD FF 		bsr		SDReadPart
01119C BD 10 FA FE 		bne	    r1,mon1
0111A0 B9 00 DE FF 		bsr		SDReadBoot
0111A4 BD 10 F6 FE 		bne	    r1,mon1
0111A8 B9 FF DD FF 		bsr		loadBootFile
0111AC 7C 00 00 00 		jmp		mon1
0111B0 3C 00 C8 87 
                	
                	OutChar:
0111B4 7C C2 00 00 	    jmp     (OutputVec)
0111B8 3E 00 20 02 
                	
                	;------------------------------------------------------------------------------
                	; Jump to subroutine
                	;
                	; J 10000     ; restart system
                	;------------------------------------------------------------------------------
                	
                	doJump:
0111BC 39 D4 FF FF 		bsr		MonGetch		; skip over 'S'
0111C0 39 D9 FF FF 		bsr		ignBlanks
0111C4 39 88 00 00 		bsr		GetHexNumber
0111C8 7C C2 00 00 		sw      r1,jmp_vector
0111CC 63 10 40 02 
0111D0 7C C2 00 00 	    lw      r31,MON_r31
0111D4 46 F0 F1 01 
0111D8 7C C2 00 00 	    lw      r30,MON_r30
0111DC 46 E0 E1 01 
0111E0 7C C2 00 00 	    lw      r29,MON_r29
0111E4 46 D0 D1 01 
0111E8 7C C2 00 00 	    lw      r28,MON_r28
0111EC 46 C0 C1 01 
0111F0 7C C2 00 00 	    lw      r27,MON_r27
0111F4 46 B0 B1 01 
0111F8 7C C2 00 00 	    lw      r26,MON_r26
0111FC 46 A0 A1 01 
011200 7C C2 00 00 	    lw      r25,MON_r25
011204 46 90 91 01 
                	;   lw      r24,MON_r24    ; r24 is the task register - no need to load
011208 7C C2 00 00 	    lw      r23,MON_r23
01120C 46 70 71 01 
011210 7C C2 00 00 	    lw      r22,MON_r22
011214 46 60 61 01 
011218 7C C2 00 00 	    lw      r21,MON_r21
01121C 46 50 51 01 
011220 7C C2 00 00 	    lw      r20,MON_r20
011224 46 40 41 01 
011228 7C C2 00 00 	    lw      r19,MON_r19
01122C 46 30 31 01 
011230 7C C2 00 00 	    lw      r18,MON_r18
011234 46 20 21 01 
011238 7C C2 00 00 	    lw      r17,MON_r17
01123C 46 10 11 01 
011240 7C C2 00 00 	    lw      r16,MON_r16
011244 46 00 01 01 
011248 7C C2 00 00 	    lw      r15,MON_r15
01124C 46 F0 F0 00 
011250 7C C2 00 00 	    lw      r14,MON_r14
011254 46 E0 E0 00 
011258 7C C2 00 00 	    lw      r13,MON_r13
01125C 46 D0 D0 00 
011260 7C C2 00 00 	    lw      r12,MON_r12
011264 46 C0 C0 00 
011268 7C C2 00 00 	    lw      r11,MON_r11
01126C 46 B0 B0 00 
011270 7C C2 00 00 	    lw      r10,MON_r10
011274 46 A0 A0 00 
011278 7C C2 00 00 	    lw      r9,MON_r9
01127C 46 90 90 00 
011280 7C C2 00 00 	    lw      r8,MON_r8
011284 46 80 80 00 
011288 7C C2 00 00 	    lw      r7,MON_r7
01128C 46 70 70 00 
011290 7C C2 00 00 	    lw      r6,MON_r6
011294 46 60 60 00 
011298 7C C2 00 00 	    lw      r5,MON_r5
01129C 46 50 50 00 
0112A0 7C C2 00 00 	    lw      r4,MON_r4
0112A4 46 40 40 00 
0112A8 7C C2 00 00 	    lw      r3,MON_r3
0112AC 46 30 30 00 
0112B0 7C C2 00 00 	    lw      r2,MON_r2
0112B4 46 20 20 00 
0112B8 7C C2 00 00 	    lw      r1,MON_r1
0112BC 46 10 10 00 
0112C0 7C C2 00 00 	    jsr		(jmp_vector)
0112C4 3E F0 41 02 
0112C8 7C C2 00 00 	    sw      r1,MON_r1
0112CC 63 10 10 00 
0112D0 7C C2 00 00 	    sw      r2,MON_r2
0112D4 63 20 20 00 
0112D8 7C C2 00 00 	    sw      r3,MON_r3
0112DC 63 30 30 00 
0112E0 7C C2 00 00 	    sw      r4,MON_r4
0112E4 63 40 40 00 
0112E8 7C C2 00 00 	    sw      r5,MON_r5
0112EC 63 50 50 00 
0112F0 7C C2 00 00 	    sw      r6,MON_r6
0112F4 63 60 60 00 
0112F8 7C C2 00 00 	    sw      r7,MON_r7
0112FC 63 70 70 00 
011300 7C C2 00 00 	    sw      r8,MON_r8
011304 63 80 80 00 
011308 7C C2 00 00 	    sw      r9,MON_r9
01130C 63 90 90 00 
011310 7C C2 00 00 	    sw      r10,MON_r10
011314 63 A0 A0 00 
011318 7C C2 00 00 	    sw      r11,MON_r11
01131C 63 B0 B0 00 
011320 7C C2 00 00 	    sw      r12,MON_r12
011324 63 C0 C0 00 
011328 7C C2 00 00 	    sw      r13,MON_r13
01132C 63 D0 D0 00 
011330 7C C2 00 00 	    sw      r14,MON_r14
011334 63 E0 E0 00 
011338 7C C2 00 00 	    sw      r15,MON_r15
01133C 63 F0 F0 00 
011340 7C C2 00 00 	    sw      r16,MON_r16
011344 63 00 01 01 
011348 7C C2 00 00 	    sw      r17,MON_r17
01134C 63 10 11 01 
011350 7C C2 00 00 	    sw      r18,MON_r18
011354 63 20 21 01 
011358 7C C2 00 00 	    sw      r19,MON_r19
01135C 63 30 31 01 
011360 7C C2 00 00 	    sw      r20,MON_r20
011364 63 40 41 01 
011368 7C C2 00 00 	    sw      r21,MON_r21
01136C 63 50 51 01 
011370 7C C2 00 00 	    sw      r22,MON_r22
011374 63 60 61 01 
011378 7C C2 00 00 	    sw      r23,MON_r23
01137C 63 70 71 01 
011380 7C C2 00 00 	    sw      r24,MON_r24
011384 63 80 81 01 
011388 7C C2 00 00 	    sw      r25,MON_r25
01138C 63 90 91 01 
011390 7C C2 00 00 	    sw      r26,MON_r26
011394 63 A0 A1 01 
011398 7C C2 00 00 	    sw      r27,MON_r27
01139C 63 B0 B1 01 
0113A0 7C C2 00 00 	    sw      r28,MON_r28
0113A4 63 C0 C1 01 
0113A8 7C C2 00 00 	    sw      r29,MON_r29
0113AC 63 D0 D1 01 
0113B0 7C C2 00 00 	    sw      r30,MON_r30
0113B4 63 E0 E1 01 
0113B8 7C C2 00 00 	    sw      r31,MON_r31
0113BC 63 F0 F1 01 
0113C0 3A 7A FF FF 		bra		mon1
                	
                	;------------------------------------------------------------------------------
                	;------------------------------------------------------------------------------
                	
                	doDate:
0113C4 39 93 FF FF 		bsr		MonGetch		; skip over 'T'
0113C8 86 50 84 00 		cmp     r5,r1,#'B'
0113CC BD 02 6E 00 		beq     r5,doDebug
0113D0 86 50 82 00 		cmp		r5,r1,#'A'		; look for DAY
0113D4 BD 02 48 00 		beq		r5,doDay
0113D8 86 50 A8 00 		cmp     r5,r1,#'T'
0113DC BD 12 52 00 		bne     r5,doDisassem
0113E0 39 95 FF FF 		bsr		ignBlanks
0113E4 39 8F FF FF 		bsr		MonGetch
0113E8 86 50 7E 00 		cmp		r5,r1,#'?'
0113EC BD 02 1A 00 		beq		r5,.0001
0113F0 95 31 08 00 		subui	r3,r3,#4
0113F4 39 42 00 00 		bsr		GetHexNumber
0113F8 7C C2 00 00 		sb		r1,RTCC_BUF+5	; update month
0113FC 60 10 AA 17 
011400 B9 40 00 00 		bsr		GetHexNumber
011404 7C C2 00 00 		sb		r1,RTCC_BUF+4	; update day
011408 60 10 A8 17 
01140C 39 3F 00 00 		bsr		GetHexNumber
011410 7C C2 00 00 		sb		r1,RTCC_BUF+6	; update year
011414 60 10 AC 17 
011418 B9 35 02 00 		bsr		RTCCWritebuf
01141C BA 6E FF FF 		bra		mon1
                	.0001:
011420 39 2F 02 00 		bsr		RTCCReadbuf
011424 39 FE 06 00 		bsr		CRLF
011428 7C C2 00 00 		lbu		r1,RTCC_BUF+5
01142C 41 10 AA 17 
011430 39 CD FE FF 		bsr		DisplayByte
011434 0A 10 5E 00 		ldi		r1,#'/'
011438 B9 AF FF FF 		bsr		OutChar
01143C 7C C2 00 00 		lbu		r1,RTCC_BUF+4
011440 41 10 A8 17 
011444 B9 CA FE FF 		bsr		DisplayByte
011448 0A 10 5E 00 		ldi		r1,#'/'
01144C 39 AD FF FF 		bsr		OutChar
011450 7C C2 00 00 		lbu		r1,RTCC_BUF+6
011454 41 10 AC 17 
011458 39 C8 FE FF 		bsr		DisplayByte
01145C 39 F7 06 00 		bsr		CRLF
011460 3A 66 FF FF 		bra		mon1
                	
                	doDay:
011464 B9 84 FF FF 		bsr		ignBlanks
011468 B9 33 00 00 		bsr		GetHexNumber
01146C 82 30 00 1A 		mov		r3,r1			; value to write
011470 0A 10 DE 00 		ldi		r1,#$6F			; device $6F
011474 0A 20 06 00 		ldi		r2,#$03			; register 3
011478 39 12 02 00 		bsr		I2C_WRITE
01147C BA 62 FF FF 		bra		mon1
                	
                	doDisassem:
011480 95 31 08 00 	    subui   r3,r3,#4
011484 B9 80 FF FF 	    bsr     ignBlanks
011488 B9 2F 00 00 	    bsr     GetHexNumber
01148C 95 10 40 00 	    subu    r1,r1,#32
011490 E7 E0 01 00 	    push    r1
011494 94 10 40 00 	    addu    r1,r1,#32
011498 E7 E0 01 00 	    push    r1
01149C 39 50 0D 00 	    bsr     disassem20
0114A0 14 EF 21 00 	    addui   sp,sp,#16
0114A4 BA 5D FF FF 	    bra     mon1
                	
                	doDebug:
0114A8 39 7C FF FF 	   bsr   ignBlanks
0114AC 39 2B 00 00 	   bsr   GetHexNumber
0114B0 65 E0 01 00 	   push  #0
0114B4 E7 E0 01 00 	   push  r1
0114B8 B9 4B 11 00 	   bsr   debugger
0114BC 14 EF 21 00 	   addui sp,sp,#16
0114C0 3A 5A FF FF 	   bra   mon1
                	
                	;------------------------------------------------------------------------------
                	; Display memory pointed to by r2.
                	; destroys r1,r3
                	;------------------------------------------------------------------------------
                	;
                	DisplayMemBytes:
0114C4 E7 EF 01 00 	    push    lr
0114C8 E7 E0 01 00 		push	r1
0114CC E7 E1 01 00 	    push    r3
0114D0 67 E2 01 00 	    push    r4
0114D4 0A 10 7C 00 		ldi		r1,#'>'
0114D8 B9 9B FF FF 		bsr		OutChar
0114DC 0A 10 84 00 		ldi		r1,#'B'
0114E0 B9 9A FF FF 		bsr		OutChar
0114E4 0A 10 40 00 		ldi		r1,#' '
0114E8 B9 99 FF FF 		bsr		OutChar
0114EC 02 11 00 1A 		mov		r1,r2
0114F0 39 B0 FE FF 		bsr		DisplayHalf
0114F4 0A 30 10 00 		ldi		r3,#8
                	.001:
0114F8 0A 10 40 00 		ldi		r1,#' '
0114FC 39 97 FF FF 		bsr		OutChar
011500 41 11 00 00 		lbu		r1,[r2]
011504 B9 B2 FE FF 		bsr		DisplayByte
011508 14 21 02 00 		addui	r2,r2,#1
01150C 95 31 02 00 		subui   r3,r3,#1
011510 BD 11 F4 FF 		bne	    r3,.001
011514 0A 10 74 00 		ldi		r1,#':'
011518 B9 93 FF FF 		bsr		OutChar
01151C 7C 70 0D 00 		ldi		r1,#%110101110_000000100_0000000000	; reverse video
011520 0A 10 00 20 
011524 7C C2 00 00 		sh		r1,NormAttr
011528 62 10 60 02 
01152C 0A 30 10 00 		ldi		r3,#8
011530 15 21 10 00 		subui	r2,r2,#8
                	.002
011534 41 11 00 00 		lbu		r1,[r2]
011538 96 40 34 00 		cmpu	r4,r1,#26				; convert control characters to '.'
01153C 3D 32 06 00 		bge		r4,.004
011540 0A 10 5C 00 		ldi		r1,#'.'
011544 3A 02 00 00 		bra     .003
                	.004:
011548 96 40 00 01 		cmpu	r4,r1,#$80				; convert other non-ascii to '.'
01154C 3D 42 04 00 		blt		r4,.003
011550 0A 10 5C 00 		ldi		r1,#'.'
                	.003:
011554 39 8C FF FF 		bsr		OutChar
011558 14 21 02 00 		addui	r2,r2,#1
01155C 95 31 02 00 		subui   r3,r3,#1
011560 BD 11 EA FF 		bne	    r3,.002
011564 FC 26 00 00 		ldi		r1,#%000000100_110101110_0000000000	; normal video
011568 0A 10 00 70 
01156C 7C C2 00 00 		sh		r1,NormAttr
011570 62 10 60 02 
011574 39 D4 06 00 		bsr		CRLF
011578 57 4F 10 00 		pop     r4
01157C 57 3F 10 00 		pop		r3
011580 57 1F 10 00 	    pop     r1
011584 57 FF 11 00 	    pop     lr
011588 37 FF 01 00 		rtl

                	;------------------------------------------------------------------------------
                	; CheckKeys:
                	;	Checks for a CTRLC or a scroll lock during long running dumps.
                	;------------------------------------------------------------------------------
                	
                	CheckKeys:
01158C E7 EF 01 00 	    push    lr
011590 39 02 00 00 		bsr	    CTRLCCheck
011594 B9 07 00 00 		bsr     CheckScrollLock
011598 57 FF 11 00 		pop     lr
01159C 37 FF 01 00 		rtl

                	;------------------------------------------------------------------------------
                	; CTRLCCheck
                	;	Checks to see if CTRL-C is pressed. If so then the current routine is
                	; aborted and control is returned to the monitor.
                	;------------------------------------------------------------------------------
                	
                	CTRLCCheck:
0115A0 E7 EF 01 00 	    push    lr
0115A4 E7 E0 01 00 		push	r1
0115A8 67 E1 01 00 		push    r2
0115AC 39 D6 00 00 		bsr		KeybdGetCharNoWait
0115B0 86 20 06 00 		cmp		r2,r1,#CTRLC
0115B4 3D 01 0A 00 		beq		r2,.0001
0115B8 57 2F 10 00 		pop     r2
0115BC 57 1F 10 00 		pop		r1
0115C0 57 FF 11 00 		pop     lr
0115C4 37 FF 01 00 		rtl
.0001:
0115C8 14 EF 31 00 		addui	sp,sp,#24
0115CC BA 38 FF FF 		bra     mon1
                	
                	;------------------------------------------------------------------------------
                	; CheckScrollLock:
                	;	Check for a scroll lock by the user. If scroll lock is active then tasks
                	; are rescheduled while the scroll lock state is tested in a loop.
                	;------------------------------------------------------------------------------
                	
                	CheckScrollLock:
0115D0 E7 EF 01 00 	    push    lr
0115D4 E7 E0 01 00 		push	r1
0115D8 67 E1 01 00 		push    r2
                	.0002:
0115DC 7C C2 00 00 		lcu		r1,KeybdLocks
0115E0 43 10 7C 02 
0115E4 7C 00 00 00 		and		r2,r1,#$4000		; is scroll lock active ?
0115E8 8C 20 00 80 
0115EC 3D 01 04 00 		beq		r2,.0001
                	;	brk		#2*16				; reschedule tasks
0115F0 BA FD FF FF 		bra     .0002
                	.0001:
0115F4 57 2F 10 00 	    pop     r2
0115F8 57 1F 10 00 		pop		r1
0115FC 57 FF 11 00 		pop     lr
011600 37 FF 01 00 		rtl

                	;------------------------------------------------------------------------------
                	; Get a hexidecimal number. Maximum of eight digits.
                	; R3 = text pointer (updated)
                	; R1 = hex number
                	;------------------------------------------------------------------------------
                	;
                	GetHexNumber:
011604 E7 EF 01 00 	    push    lr
011608 67 E1 01 00 		push	r2
01160C 67 E2 01 00 	    push    r4
011610 0A 20 00 00 		ldi		r2,#0
011614 0A 40 20 00 		ldi		r4,#16
                	.gthxn2:
011618 B9 48 FF FF 		bsr		MonGetch
01161C 39 05 00 00 		bsr		AsciiToHexNybble
011620 BD 40 0A 00 		bmi		r1,.gthxn1
011624 02 21 08 70 		asl		r2,r2,#4
011628 02 21 02 1A 		or		r2,r2,r1
01162C 15 42 02 00 		subui   r4,r4,#1
011630 3D 12 F4 FF 	    bne	    r4,.gthxn2
                	.gthxn1:
011634 02 11 00 1A 		mov		r1,r2
011638 57 4F 10 00 		pop		r4
01163C 57 2F 10 00 	    pop     r2
011640 3B FF 11 00 	    rts

                	;------------------------------------------------------------------------------
                	; Convert ASCII character in the range '0' to '9', 'a' to 'f' or 'A' to 'F'
                	; to a hex nybble.
                	;------------------------------------------------------------------------------
                	;
                	AsciiToHexNybble:
011644 67 E1 01 00 	    push    r2
011648 96 20 60 00 		cmpu	r2,r1,#'0'
01164C 3D 41 2C 00 		blt		r2,.gthx3
011650 96 20 74 00 		cmpu	r2,r1,#'9'+1
011654 3D 31 08 00 		bge		r2,.gthx5
011658 95 10 60 00 		subui	r1,r1,#'0'
01165C 57 2F 10 00 		pop     r2
011660 37 FF 01 00 		rtl
.gthx5:
011664 96 20 82 00 		cmpu	r2,r1,#'A'
011668 3D 41 1E 00 		blt		r2,.gthx3
01166C 96 20 8E 00 		cmpu	r2,r1,#'F'+1
011670 3D 31 0A 00 		bge		r2,.gthx6
011674 95 10 82 00 		subui	r1,r1,#'A'
011678 94 10 14 00 		addui	r1,r1,#10
01167C 57 2F 10 00 		pop     r2
011680 37 FF 01 00 		rtl
.gthx6:
011684 96 20 C2 00 		cmpu	r2,r1,#'a'
011688 3D 41 0E 00 		blt		r2,.gthx3
01168C 96 20 F6 00 		cmpu	r2,r1,#'z'+1
011690 3D 31 0A 00 		bge		r2,.gthx3
011694 95 10 C2 00 		subui	r1,r1,#'a'
011698 94 10 14 00 		addui	r1,r1,#10
01169C 57 2F 10 00 		pop     r2
0116A0 37 FF 01 00 		rtl
.gthx3:
0116A4 57 2F 10 00 	    pop     r2
0116A8 0A 10 FE FF 		ldi		r1,#-1		; not a hex number
0116AC 37 FF 01 00 		rtl

                	DisplayErr:
0116B0 7C 01 00 00 		ldi		r1,#msgErr
0116B4 0A 10 80 2D 
0116B8 B9 B5 06 00 		bsr		DisplayString
0116BC BA 1A FF FF 		bra mon1
                	
                	msgErr:
0116C0 2A 00 2A 00 		dc	"**Err",CR,LF,0
0116C4 45 00 72 00 
0116C8 72 00 0D 00 
0116CC 0A 00 00 00 
                	
                	msgHelp:
0116D0 3F 00 20 00 		dc		"? = Display Help",CR,LF
0116D4 3D 00 20 00 
0116D8 44 00 69 00 
0116DC 73 00 70 00 
0116E0 6C 00 61 00 
0116E4 79 00 20 00 
0116E8 48 00 65 00 
0116EC 6C 00 70 00 
0116F0 0D 00 0A 00 
0116F4 43 00 4C 00 		dc		"CLS = clear screen",CR,LF
0116F8 53 00 20 00 
0116FC 3D 00 20 00 
011700 63 00 6C 00 
011704 65 00 61 00 
011708 72 00 20 00 
01170C 73 00 63 00 
011710 72 00 65 00 
011714 65 00 6E 00 
011718 0D 00 0A 00 
01171C 44 00 20 00 		dc      "D = disassemble",CR,LF
011720 3D 00 20 00 
011724 64 00 69 00 
011728 73 00 61 00 
01172C 73 00 73 00 
011730 65 00 6D 00 
011734 62 00 6C 00 
011738 65 00 0D 00 
01173C 0A 00       
01173E 44 00 42 00 		dc      "DB = start debugger",CR,LF
011742 20 00 3D 00 
011746 20 00 73 00 
01174A 74 00 61 00 
01174E 72 00 74 00 
011752 20 00 64 00 
011756 65 00 62 00 
01175A 75 00 67 00 
01175E 67 00 65 00 
011762 72 00 0D 00 
011766 0A 00       
011768 44 00 54 00 		dc		"DT = set/read date",CR,LF
01176C 20 00 3D 00 
011770 20 00 73 00 
011774 65 00 74 00 
011778 2F 00 72 00 
01177C 65 00 61 00 
011780 64 00 20 00 
011784 64 00 61 00 
011788 74 00 65 00 
01178C 0D 00 0A 00 
011790 46 00 42 00 		dc		"FB = fill memory",CR,LF
011794 20 00 3D 00 
011798 20 00 66 00 
01179C 69 00 6C 00 
0117A0 6C 00 20 00 
0117A4 6D 00 65 00 
0117A8 6D 00 6F 00 
0117AC 72 00 79 00 
0117B0 0D 00 0A 00 
0117B4 4D 00 42 00 		dc		"MB = dump memory",CR,LF
0117B8 20 00 3D 00 
0117BC 20 00 64 00 
0117C0 75 00 6D 00 
0117C4 70 00 20 00 
0117C8 6D 00 65 00 
0117CC 6D 00 6F 00 
0117D0 72 00 79 00 
0117D4 0D 00 0A 00 
0117D8 4A 00 53 00 		dc		"JS = jump to code",CR,LF
0117DC 20 00 3D 00 
0117E0 20 00 6A 00 
0117E4 75 00 6D 00 
0117E8 70 00 20 00 
0117EC 74 00 6F 00 
0117F0 20 00 63 00 
0117F4 6F 00 64 00 
0117F8 65 00 0D 00 
0117FC 0A 00       
0117FE 54 00 20 00 		dc	    "T = Dump task list",CR,LF
011802 3D 00 20 00 
011806 44 00 75 00 
01180A 6D 00 70 00 
01180E 20 00 74 00 
011812 61 00 73 00 
011816 6B 00 20 00 
01181A 6C 00 69 00 
01181E 73 00 74 00 
011822 0D 00 0A 00 
011826 53 00 20 00 		dc		"S = boot from SD card",CR,LF
01182A 3D 00 20 00 
01182E 62 00 6F 00 
011832 6F 00 74 00 
011836 20 00 66 00 
01183A 72 00 6F 00 
01183E 6D 00 20 00 
011842 53 00 44 00 
011846 20 00 63 00 
01184A 61 00 72 00 
01184E 64 00 0D 00 
011852 0A 00       
011854 00 00       		dc		0
                	
                	msgMonitorStarted
011856 4D 00 6F 00 		dc		"Monitor started.",0
01185A 6E 00 69 00 
01185E 74 00 6F 00 
011862 72 00 20 00 
011866 73 00 74 00 
01186A 61 00 72 00 
01186E 74 00 65 00 
011872 64 00 2E 00 
011876 00 00       
                	
                	doCLS:
011878 B9 AA 05 00 		bsr		ClearScreen
01187C 39 8C 05 00 		bsr		HomeCursor
011880 3A E2 FE FF 		bra     mon1
                	
                	;------------------------------------------------------------------------------
                	; Get a random number from peripheral device.
                	;------------------------------------------------------------------------------
                	
                	GetRandomNumber:
011884 7C DC FF 00 	    lw      r1,$FFDC0C00
011888 46 10 00 18 
01188C 37 FF 01 00 	    rtl
                
                	;------------------------------------------------------------------------------
                	;------------------------------------------------------------------------------
                	; Keyboard processing routines follow.
                	;------------------------------------------------------------------------------
                	;------------------------------------------------------------------------------
                	
                	KEYBD_DELAY		EQU		1000
                	
                	KeybdGetCharDirectNB:
011890 E7 EF 01 00 	    push    lr
011894 67 E1 01 00 		push	r2
011898 02 00 02 6E 		sei
01189C 7C DC FF 00 		lcu		r1,KEYBD
0118A0 43 10 00 00 
0118A4 FC 00 00 00 		and		r2,r1,#$8000
0118A8 8C 20 00 00 
0118AC 3D 01 26 00 		beq		r2,.0001
0118B0 7C DC FF 00 		lbu		r0,KEYBD+4		; clear keyboard strobe
0118B4 41 00 08 00 
0118B8 02 00 00 6E 		cli
0118BC 8C 20 00 10 		and		r2,r1,#$800	; is it keydown ?
0118C0 3D 11 1C 00 		bne	    r2,.0001
0118C4 8C 10 FE 01 		and		r1,r1,#$FF
0118C8 7C C2 00 00 		lbu		r2,KeybdEcho
0118CC 41 20 78 02 
0118D0 3D 01 0E 00 		beq		r2,.0002
0118D4 86 20 1A 00 		cmp		r2,r1,#CR
0118D8 3D 11 06 00 		bne		r2,.0003
0118DC 39 67 06 00 		bsr		CRLF
0118E0 BA 01 00 00 		bra     .0002
                	.0003:
0118E4 7C C2 00 00 		jsr		(OutputVec)
0118E8 3E F0 21 02 
                	.0002:
0118EC 57 2F 10 00 		pop		r2
0118F0 57 FF 11 00 		pop     lr
0118F4 37 FF 01 00 		rtl
.0001:
0118F8 02 00 00 6E 		cli
0118FC 0A 10 FE FF 		ldi		r1,#-1
011900 57 2F 10 00 		pop		r2
011904 57 FF 11 00 		pop     lr
011908 37 FF 01 00 		rtl

                	KeybdGetCharDirect:
01190C E7 EF 01 00 	    push    lr
011910 67 E1 01 00 		push	r2
                	.0001:
011914 7C DC FF 00 		lc		r1,KEYBD
011918 42 10 00 00 
01191C FC 00 00 00 		and		r2,r1,#$8000
011920 8C 20 00 00 
011924 3D 01 F8 FF 		beq		r2,.0001
011928 7C DC FF 00 		lbu		r0,KEYBD+4		; clear keyboard strobe
01192C 41 00 08 00 
011930 8C 20 00 10 		and		r2,r1,#$800	; is it keydown ?
011934 3D 11 F0 FF 		bne	    r2,.0001
011938 8C 10 FE 01 		and		r1,r1,#$FF
01193C 7C C2 00 00 		lbu		r2,KeybdEcho
011940 41 20 78 02 
011944 3D 01 0E 00 		beq		r2,.gk1
011948 86 20 1A 00 		cmp		r2,r1,#CR
01194C 3D 11 06 00 		bne		r2,.gk2
011950 B9 58 06 00 		bsr		CRLF
011954 BA 01 00 00 		bra     .gk1
                	.gk2:
011958 7C C2 00 00 		jsr		(OutputVec)
01195C 3E F0 21 02 
                	.gk1:
011960 57 2F 10 00 		pop		r2
011964 57 FF 11 00 		pop     lr
011968 37 FF 01 00 		rtl

                	;KeybdInit:
                	;	mfspr	r1,cr0		; turn off tmr mode
                	;	push	r1
                	;	mtspr	cr0,r0
                	;	ldi		r1,#33
                	;	sb		r1,LEDS
                	;	bsr		WaitForKeybdAck	; grab a byte from the keyboard
                	;	cmp		flg0,r1,#$AA	; did it send a ack ?
                	;	
                	;	ldi		r1,#$ff			; issue keyboard reset
                	;	bsr		SendByteToKeybd
                	;	ldi		r1,#38
                	;	sb		r1,LEDS
                	;	ldi		r1,#4
                	;	jsr		Sleep
                	;	ldi		r1,#KEYBD_DELAY	; delay a bit
                	kbdi5:
                	;	sub		r1,r1,#1
                	;	brnz	r1,kbdi5
                	;	ldi		r1,#34
                	;	sb		r1,LEDS
                	;	ldi		r1,#0xf0		; send scan code select
                	;	bsr		SendByteToKeybd
                	;	ldi		r1,#35
                	;	sb		r1,LEDS
                	;	ldi		r2,#0xFA
                	;	bsr		WaitForKeybdAck
                	;	cmp		fl0,r1,#$FA
                	;	bne		fl0,kbdi2
                	;	ldi		r1,#36
                	;	sb		r1,LEDS
                	;	ldi		r1,#2			; select scan code set#2
                	;	bsr		SendByteToKeybd
                	;	ldi		r1,#39
                	;	sb		r1,LEDS
                	;kbdi2:
                	;	ldi		r1,#45
                	;	sb		r1,LEDS
                	;	pop		r1				; turn back on tmr mode
                	;	mtspr	cr0,r1
                	;	rtl
                	
                	msgBadKeybd:
01196C 4B 00 65 00 		dc		"Keyboard not responding.",0
011970 79 00 62 00 
011974 6F 00 61 00 
011978 72 00 64 00 
01197C 20 00 6E 00 
011980 6F 00 74 00 
011984 20 00 72 00 
011988 65 00 73 00 
01198C 70 00 6F 00 
011990 6E 00 64 00 
011994 69 00 6E 00 
011998 67 00 2E 00 
01199C 00 00       
                	
                	;SendByteToKeybd:
                	;	push	r2
                	;	sb		r1,KEYBD
                	;	ldi		r1,#40
                	;	sb		r1,LEDS
                	;	mfspr	r3,tick
                	;kbdi4:						; wait for transmit complete
                	;	mfspr	r4,tick
                	;	sub		r4,r4,r3
                	;	cmp		fl0,r4,#KEYBD_DELAY
                	;	bhi		fl0,kbdbad
                	;	ldi		r1,#41
                	;	sb		r1,LEDS
                	;	lbu		r1,KEYBD+1
                	;	and		fl0,r1,#64
                	;	brz		fl0,kbdi4
                	;	bra 	sbtk1
                	;kbdbad:
                	;	ldi		r1,#42
                	;	sb		r1,LEDS
                	;	lbu		r1,KeybdBad
                	;	brnz	r1,sbtk2
                	;	ldi		r1,#1
                	;	sb		r1,KeybdBad
                	;	ldi		r1,#43
                	;	sb		r1,LEDS
                	;	ldi		r1,#msgBadKeybd
                	;	bsr		DisplayStringCRLF
                	;sbtk1:
                	;	ldi		r1,#44
                	;	sb		r1,LEDS
                	;	pop		r2
                	;	rtl
                	;sbtk2:
                	;	bra sbtk1
                	
                	; Wait for keyboard to respond with an ACK (FA)
                	;
                	;WaitForKeybdAck:
                	;	ldi		r1,#64
                	;	sb		r1,LEDS
                	;	mfspr	r3,tick
                	;wkbdack1:
                	;	mfspr	r4,tick
                	;	sub		r4,r4,r3
                	;	cmp		fl0,r4,#KEYBD_DELAY
                	;	bhi		fl0,wkbdbad
                	;	ldi		r1,#65
                	;	sb		r1,LEDS
                	;	lb		r1,KEYBD+1				; check keyboard status for key
                	;	brpl	r1,wkbdack1				; no key available, go back
                	;	lbu		r1,KEYBD				; get the scan code
                	;	sb		r0,KEYBD+1				; clear recieve register
                	;wkbdbad:
                	;	rtl
                	
                	KeybdInit:
01199E 00 00 E7 EF 	    push    lr
0119A2 01 00       
0119A4 0A 30 0A 00 		ldi		r3,#5
                	.0001:
0119A8 B9 44 00 00 		bsr		KeybdRecvByte	; Look for $AA
0119AC BD 40 06 00 		bmi		r1,.0002
0119B0 86 20 54 01 		cmp		r2,r1,#$AA		;
0119B4 3D 01 20 00 		beq		r2,.config
                	.0002:
0119B8 B9 C5 00 00 		bsr		Wait10ms
0119BC 0A 10 FE FF 		ldi		r1,#-1			; send reset code to keyboard
0119C0 7C DC FF 00 		sb		r1,KEYBD+1		; write to status reg to clear TX state
0119C4 60 10 02 00 
0119C8 B9 C3 00 00 		bsr		Wait10ms
0119CC 0A 10 FE 01 		ldi		r1,#$FF
0119D0 39 C1 00 00 		bsr		KeybdSendByte	; now write to transmit register
0119D4 39 47 00 00 		bsr		KeybdWaitTx		; wait until no longer busy
0119D8 B9 3E 00 00 		bsr		KeybdRecvByte	; look for an ACK ($FA)
0119DC 86 20 F4 01 		cmp		r2,r1,#$FA
0119E0 B9 3D 00 00 		bsr		KeybdRecvByte
0119E4 86 20 F8 01 		cmp		r2,r1,#$FC		; reset error ?
0119E8 3D 01 1A 00 		beq		r2,.tryAgain
0119EC 86 20 54 01 		cmp		r2,r1,#$AA		; reset complete okay ?
0119F0 3D 11 16 00 		bne		r2,.tryAgain
                	.config:
0119F4 0A 10 E0 01 		ldi		r1,#$F0			; send scan code select
0119F8 7C DC FF 00 		sc		r1,LEDS
0119FC 61 10 00 0C 
011A00 39 BB 00 00 		bsr		KeybdSendByte
011A04 39 41 00 00 		bsr		KeybdWaitTx
011A08 BD 40 0A 00 		bmi		r1,.tryAgain
011A0C 39 38 00 00 		bsr		KeybdRecvByte	; wait for response from keyboard
011A10 BD 40 06 00 		bmi		r1,.tryAgain
011A14 86 20 F4 01 		cmp		r2,r1,#$FA
011A18 3D 01 10 00 		beq		r2,.0004
                	.tryAgain:
011A1C 95 31 02 00 	    subui   r3,r3,#1
011A20 BD 11 C4 FF 		bne	    r3,.0001
                	.keybdErr:
011A24 7C 01 00 00 		ldi		r1,#msgBadKeybd
011A28 0A 10 D8 32 
011A2C 39 47 06 00 		bsr		DisplayString
011A30 57 FF 11 00 		pop     lr
011A34 37 FF 01 00 		rtl
.0004:
011A38 0A 10 04 00 		ldi		r1,#2			; select scan code set #2
011A3C B9 B3 00 00 		bsr		KeybdSendByte
011A40 B9 39 00 00 		bsr		KeybdWaitTx
011A44 BD 40 EC FF 		bmi		r1,.tryAgain
011A48 57 FF 11 00 		pop     lr
011A4C 37 FF 01 00 		rtl

                	; Get the keyboard status
                	;
                	KeybdGetStatus:
011A50 7C DC FF 00 		lb		r1,KEYBD+1
011A54 40 10 02 00 
011A58 37 FF 01 00 		rtl
    push    r2
011A5C 67 E1 01 00 
011A60 7C 00 00 00 	    lbu     r2,TCB_hJCB[tr]
011A64 7C 00 00 00 
011A68 41 2C F2 03 
011A6C 7C 00 00 00 	    cmp     r1,r2,#NR_JCB
011A70 7C 00 00 00 
011A74 06 11 F4 03 
011A78 BD 30 3A 00 	    bge     r1,.0001
011A7C 7C 00 00 00 	    mulu    r2,#JCB_Size
011A80 7C 00 00 00 
011A84 97 FF FF FF 
011A88 7C 00 00 00 	    addui   r2,r2,#JCB_Array
011A8C 7C 00 00 00 
011A90 14 21 FA 03 
011A94 E7 E1 01 00 	    push    r3
011A98 67 E2 01 00 	    push    r4
011A9C E7 EF 01 00 	    push    lr
011AA0 39 D5 12 00 	    bsr     LockSYS
011AA4 7C 00 00 00 	    lbu     r1,JCB_KeybdHead[r2]
011AA8 7C 00 00 00 
011AAC 41 11 FE 03 
011AB0 7C 00 00 00 	    lbu     r3,JCB_KeybdTail[r2]
011AB4 7C 00 00 00 
011AB8 41 31 00 04 
011ABC 39 D5 12 00 	    bsr     UnlockSYS
011AC0 82 40 06 2C 	    cmpu    r4,r1,r3
011AC4 3D 02 0E 00 	    beq     r4,.0002
011AC8 0A 10 FE FF 	    ldi     r1,#-1
011ACC 57 FF 11 00 	    pop     lr
011AD0 57 4F 10 00 	    pop     r4
011AD4 57 3F 10 00 	    pop     r3
011AD8 57 2F 10 00 	    pop     r2
011ADC 37 FF 01 00 	    rtl
.0002:
011AE0 57 FF 11 00 	    pop     lr
011AE4 57 4F 10 00 	    pop     r4
011AE8 57 3F 10 00 	    pop     r3
                	.0001:
011AEC 0A 10 00 00 	    ldi     r1,#0   ; no scancode available
011AF0 57 2F 10 00 	    pop     r2
011AF4 37 FF 01 00 	    rtl

                	; Get the scancode from the keyboard port
                	;
                	KeybdGetScancode:
011AF8 7C DC FF 00 		lbu		r1,KEYBD				; get the scan code
011AFC 41 10 00 00 
011B00 7C DC FF 00 		sb		r0,KEYBD+1				; clear receive register
011B04 60 00 02 00 
011B08 37 FF 01 00 		rtl
    push    r2
011B0C 67 E1 01 00 
011B10 7C 00 00 00 	    lbu     r2,TCB_hJCB[tr]
011B14 7C 00 00 00 
011B18 41 2C F2 03 
011B1C 7C 00 00 00 	    cmp     r1,r2,#NR_JCB
011B20 7C 00 00 00 
011B24 06 11 F4 03 
011B28 BD 30 4C 00 	    bge     r1,.0001
011B2C 7C 00 00 00 	    mulu    r2,#JCB_Size
011B30 7C 00 00 00 
011B34 97 FF FF FF 
011B38 7C 00 00 00 	    addui   r2,r2,#JCB_Array
011B3C 7C 00 00 00 
011B40 14 21 FA 03 
011B44 E7 E1 01 00 	    push    r3
011B48 67 E2 01 00 	    push    r4
011B4C E7 EF 01 00 	    push    lr
011B50 39 BF 12 00 	    bsr     LockSYS
011B54 7C 00 00 00 	    lbu     r1,JCB_KeybdHead[r2]
011B58 7C 00 00 00 
011B5C 41 11 FE 03 
011B60 7C 00 00 00 	    lbu     r3,JCB_KeybdTail[r2]
011B64 7C 00 00 00 
011B68 41 31 00 04 
011B6C 82 40 06 2C 	    cmpu    r4,r1,r3
011B70 3D 02 20 00 	    beq     r4,.0002
011B74 7C 00 00 00 	    lea     r4,JCB_KeybdBuffer[r2]
011B78 7C 00 00 00 
011B7C 47 41 0C 04 
011B80 49 12 06 00 	    lbu     r1,[r4+r3]
011B84 94 31 02 00 	    addui   r3,r3,#1
011B88 8C 31 3E 00 	    and     r3,r3,#31 ; mod 32
011B8C 7C 00 00 00 	    sb      r3,JCB_KeybdTail[r2]
011B90 7C 00 00 00 
011B94 60 31 00 04 
011B98 B9 B9 12 00 	    bsr     UnlockSYS
011B9C 57 FF 11 00 	    pop     lr
011BA0 57 4F 10 00 	    pop     r4
011BA4 57 3F 10 00 	    pop     r3
011BA8 57 2F 10 00 	    pop     r2
011BAC 37 FF 01 00 	    rtl
.0002:
011BB0 B9 B6 12 00 	    bsr     UnlockSYS
011BB4 57 FF 11 00 	    pop     lr
011BB8 57 4F 10 00 	    pop     r4
011BBC 57 3F 10 00 	    pop     r3
                	.0001:
011BC0 0A 10 00 00 	    ldi     r1,#0   ; no scancode available
011BC4 57 2F 10 00 	    pop     r2
011BC8 37 FF 01 00 	    rtl

                	
                	; Recieve a byte from the keyboard, used after a command is sent to the
                	; keyboard in order to wait for a response.
                	;
                	KeybdRecvByte:
011BCC E7 EF 01 00 	    push    lr
011BD0 E7 E1 01 00 		push	r3
011BD4 0A 30 C8 00 		ldi		r3,#100			; wait up to 1s
                	.0003:
011BD8 39 CF FF FF 		bsr		KeybdGetStatus	; wait for response from keyboard
011BDC BD 40 10 00 		bmi		r1,.0004		; is input buffer full ? yes, branch
011BE0 B9 80 00 00 		bsr		Wait10ms		; wait a bit
011BE4 95 31 02 00 		subui   r3,r3,#1
011BE8 BD 11 F8 FF 		bne     r3,.0003		; go back and try again
011BEC 57 3F 10 00 		pop		r3				; timeout
011BF0 0A 10 FE FF 		ldi		r1,#-1			; return -1
011BF4 57 FF 11 00 		pop     lr
011BF8 37 FF 01 00 		rtl
.0004:
011BFC B9 DF FF FF 		bsr		KeybdGetScancode
011C00 57 3F 10 00 		pop		r3
011C04 57 FF 11 00 		pop     lr
011C08 37 FF 01 00 		rtl

                	
                	; Wait until the keyboard transmit is complete
                	; Returns .CF = 1 if successful, .CF=0 timeout
                	;
                	KeybdWaitTx:
011C0C E7 EF 01 00 	    push    lr
011C10 67 E1 01 00 		push	r2
011C14 E7 E1 01 00 	    push    r3
011C18 0A 30 C8 00 		ldi		r3,#100			; wait a max of 1s
                	.0001:
011C1C B9 C6 FF FF 		bsr		KeybdGetStatus
011C20 8C 10 80 00 		and		r1,r1,#$40		; check for transmit complete bit
011C24 BD 10 12 00 		bne	    r1,.0002		; branch if bit set
011C28 B9 77 00 00 		bsr		Wait10ms		; delay a little bit
011C2C 95 31 02 00 		subui   r3,r3,#1
011C30 BD 11 F6 FF 		bne	    r3,.0001		; go back and try again
011C34 57 3F 10 00 		pop		r3
011C38 57 2F 10 00 	    pop     r2			    ; timed out
011C3C 0A 10 FE FF 		ldi		r1,#-1			; return -1
011C40 57 FF 11 00 		pop     lr
011C44 37 FF 01 00 		rtl
.0002:
011C48 57 3F 10 00 		pop		r3
011C4C 57 2F 10 00 	    pop     r2			    ; wait complete, return 
011C50 0A 10 00 00 		ldi		r1,#0			; return 0
011C54 57 FF 11 00 		pop     lr
011C58 37 FF 01 00 		rtl

                	KeybdGetCharNoWait:
011C5C 7C C2 00 00 		sb		r0,KeybdWaitFlag
011C60 60 00 84 02 
011C64 3A 02 00 00 		bra		KeybdGetChar
                	
                	KeybdGetCharWait:
011C68 0A 10 FE FF 		ldi		r1,#-1
011C6C 7C C2 00 00 		sb		r1,KeybdWaitFlag
011C70 60 10 84 02 
                	
                	;
                	; KeyState2
                	; 876543210
                	; ||||||||+ = alt
                	; |||||||+- =
                	; ||||||+-- = control
                	; |||||+--- = numlock
                	; ||||+---- = capslock
                	; |||+----- = scrolllock
                	; ||+------ =
                	; |+------- = 
                	; +-------- = extended
                	;
                	KeybdGetChar:
011C74 E7 EF 01 00 	    push    lr
011C78 67 E1 01 00 		push	r2
011C7C E7 E1 01 00 	    push    r3
                	.0003:
011C80 39 BA FF FF 		bsr		KeybdGetStatus			; check keyboard status for key available
011C84 BD 40 12 00 		bmi		r1,.0006				; yes, go process
011C88 7C C2 00 00 		lb		r1,KeybdWaitFlag		; are we willing to wait for a key ?
011C8C 40 10 84 02 
011C90 BD 40 F8 FF 		bmi		r1,.0003				; yes, branch back
011C94 0A 10 FE FF 		ldi		r1,#-1					; flag no char available
011C98 57 3F 10 00 		pop		r3
011C9C 57 2F 10 00 	    pop     r2
011CA0 57 FF 11 00 	    pop     lr
011CA4 37 FF 01 00 		rtl
.0006:
011CA8 39 CA FF FF 		bsr		KeybdGetScancode
                	.0001:
011CAC 0A 20 02 00 		ldi		r2,#1
011CB0 7C DC FF 00 		sb		r2,LEDS
011CB4 60 20 00 0C 
011CB8 86 20 E0 01 		cmp		r2,r1,#SC_KEYUP
011CBC 3D 01 7E 00 		beq		r2,.doKeyup
011CC0 86 20 C0 01 		cmp		r2,r1,#SC_EXTEND
011CC4 3D 01 82 00 		beq		r2,.doExtend
011CC8 86 20 28 00 		cmp		r2,r1,#$14				; code for CTRL
011CCC 3D 01 8A 00 		beq		r2,.doCtrl
011CD0 86 20 24 00 		cmp		r2,r1,#$12				; code for left shift
011CD4 3D 01 E4 00 		beq		r2,.doShift
011CD8 86 20 B2 00 		cmp		r2,r1,#$59				; code for right-shift
011CDC 3D 01 E0 00 		beq		r2,.doShift
011CE0 86 20 EE 00 		cmp		r2,r1,#SC_NUMLOCK
011CE4 3D 01 FE 00 		beq		r2,.doNumLock
011CE8 86 20 B0 00 		cmp		r2,r1,#SC_CAPSLOCK
011CEC 3D 01 08 01 		beq		r2,.doCapsLock
011CF0 86 20 FC 00 		cmp		r2,r1,#SC_SCROLLLOCK
011CF4 3D 01 12 01 		beq		r2,.doScrollLock
011CF8 86 20 22 00 		cmp     r2,r1,#SC_ALT
011CFC 3D 01 94 00 		beq     r2,.doAlt
011D00 7C C2 00 00 		lb		r2,KeyState1			; check key up/down
011D04 40 20 80 02 
011D08 7C C2 00 00 		sb		r0,KeyState1			; clear keyup status
011D0C 60 00 80 02 
011D10 3D 11 B8 FF 		bne	    r2,.0003				; ignore key up
011D14 86 20 1A 00 		cmp     r2,r1,#SC_TAB
011D18 3D 01 AC 00 		beq     r2,.doTab
                	.0013:
011D1C 7C C2 00 00 		lb		r2,KeyState2
011D20 40 20 82 02 
011D24 0C 31 00 01 		and		r3,r2,#$80				; is it extended code ?
011D28 BD 01 12 00 		beq		r3,.0010
011D2C 0C 31 FE 00 		and		r3,r2,#$7f				; clear extended bit
011D30 7C C2 00 00 		sb		r3,KeyState2
011D34 60 30 82 02 
011D38 7C C2 00 00 		sb		r0,KeyState1			; clear keyup
011D3C 60 00 80 02 
011D40 7C 01 00 00 		lbu		r1,keybdExtendedCodes[r1]
011D44 C1 10 40 47 
011D48 BA 0A 00 00 		bra		.0008
                	.0010:
011D4C 7C C2 00 00 		lb		r2,KeyState2
011D50 40 20 82 02 
011D54 0C 31 08 00 		and		r3,r2,#$04				; is it CTRL code ?
011D58 BD 01 0A 00 		beq		r3,.0009
011D5C 8C 10 FE 00 		and		r1,r1,#$7F
011D60 7C 01 00 00 		lbu		r1,keybdControlCodes[r1]
011D64 C1 10 40 46 
011D68 BA 06 00 00 		bra		.0008
                	.0009:
011D6C 7C C2 00 00 		lb		r2,KeyState2
011D70 40 20 82 02 
011D74 0C 31 02 00 		and		r3,r2,#$01				; is it shift down ?
011D78 BD 01 08 00 		beq  	r3,.0007
011D7C 7C 01 00 00 		lbu		r1,shiftedScanCodes[r1]
011D80 C1 10 40 44 
011D84 3A 03 00 00 		bra		.0008
                	.0007:
011D88 7C 01 00 00 		lbu		r1,unshiftedScanCodes[r1]
011D8C C1 10 40 42 
011D90 0A 20 04 00 		ldi		r2,#2
011D94 7C DC FF 00 		sb		r2,LEDS
011D98 60 20 00 0C 
                	.0008:
011D9C 0A 20 06 00 		ldi		r2,#3
011DA0 7C DC FF 00 		sb		r2,LEDS
011DA4 60 20 00 0C 
011DA8 57 3F 10 00 		pop		r3
011DAC 57 2F 10 00 	    pop     r2
011DB0 57 FF 11 00 	    pop     lr
011DB4 37 FF 01 00 		rtl
.doKeyup:
011DB8 0A 10 FE FF 		ldi		r1,#-1
011DBC 7C C2 00 00 		sb		r1,KeyState1
011DC0 60 10 80 02 
011DC4 BA D7 FF FF 		bra		.0003
                	.doExtend:
011DC8 7C C2 00 00 		lbu		r1,KeyState2
011DCC 41 10 82 02 
011DD0 8D 10 00 01 		or		r1,r1,#$80
011DD4 7C C2 00 00 		sb		r1,KeyState2
011DD8 60 10 82 02 
011DDC BA D4 FF FF 		bra		.0003
                	.doCtrl:
011DE0 7C C2 00 00 		lb		r1,KeyState1
011DE4 40 10 80 02 
011DE8 7C C2 00 00 		sb		r0,KeyState1
011DEC 60 00 80 02 
011DF0 BD 30 0E 00 		bpl		r1,.0004
011DF4 7C C2 00 00 		lb		r1,KeyState2
011DF8 40 10 82 02 
011DFC 8C 10 F6 FF 		and		r1,r1,#-5
011E00 7C C2 00 00 		sb		r1,KeyState2
011E04 60 10 82 02 
011E08 3A CF FF FF 		bra		.0003
                	.0004:
011E0C 7C C2 00 00 		lb		r1,KeyState2
011E10 40 10 82 02 
011E14 8D 10 08 00 		or		r1,r1,#4
011E18 7C C2 00 00 		sb		r1,KeyState2
011E1C 60 10 82 02 
011E20 3A CC FF FF 		bra		.0003
                	.doAlt:
011E24 7C C2 00 00 		lb		r1,KeyState1
011E28 40 10 80 02 
011E2C 7C C2 00 00 		sb		r0,KeyState1
011E30 60 00 80 02 
011E34 BD 30 12 00 		bpl		r1,.0011
011E38 7C C2 00 00 	    lb      r1,KeyState2
011E3C 40 10 82 02 
011E40 7C C2 00 00 		lb		r1,KeyState2
011E44 40 10 82 02 
011E48 8C 10 FC FF 		and		r1,r1,#-2
011E4C 7C C2 00 00 		sb		r1,KeyState2
011E50 60 10 82 02 
011E54 BA C5 FF FF 		bra		.0003
                	.0011:
011E58 7C C2 00 00 		lb		r1,KeyState2
011E5C 40 10 82 02 
011E60 8D 10 02 00 		or		r1,r1,#1
011E64 7C C2 00 00 		sb		r1,KeyState2
011E68 60 10 82 02 
011E6C BA C2 FF FF 		bra		.0003
                	.doTab:
011E70 E7 E0 01 00 	    push    r1
011E74 7C C2 00 00 	    lb      r1,KeyState2
011E78 40 10 82 02 
011E7C 8C 10 02 00 	    and     r1,r1,#1                 ; is ALT down ?
011E80 BD 00 0A 00 	    beq     r1,.0012
011E84 7C 08 01 00 	    inc     iof_switch
011E88 64 10 90 55 
011E8C 57 1F 10 00 	    pop     r1
011E90 3A BE FF FF 	    bra     .0003
                	.0012:
011E94 57 1F 10 00 	    pop     r1
011E98 BA D0 FF FF 	    bra     .0013
                	.doShift:
011E9C 7C C2 00 00 		lb		r1,KeyState1
011EA0 40 10 80 02 
011EA4 7C C2 00 00 		sb		r0,KeyState1
011EA8 60 00 80 02 
011EAC BD 30 0E 00 		bpl		r1,.0005
011EB0 7C C2 00 00 		lb		r1,KeyState2
011EB4 40 10 82 02 
011EB8 8C 10 FC FF 		and		r1,r1,#-2
011EBC 7C C2 00 00 		sb		r1,KeyState2
011EC0 60 10 82 02 
011EC4 BA B7 FF FF 		bra		.0003
                	.0005:
011EC8 7C C2 00 00 		lb		r1,KeyState2
011ECC 40 10 82 02 
011ED0 8D 10 02 00 		or		r1,r1,#1
011ED4 7C C2 00 00 		sb		r1,KeyState2
011ED8 60 10 82 02 
011EDC BA B4 FF FF 		bra		.0003
                	.doNumLock:
011EE0 7C C2 00 00 		lb		r1,KeyState2
011EE4 40 10 82 02 
011EE8 8E 10 20 00 		eor		r1,r1,#16
011EEC 7C C2 00 00 		sb		r1,KeyState2
011EF0 60 10 82 02 
011EF4 39 08 00 00 		bsr		KeybdSetLEDStatus
011EF8 3A B1 FF FF 		bra		.0003
                	.doCapsLock:
011EFC 7C C2 00 00 		lb		r1,KeyState2
011F00 40 10 82 02 
011F04 8E 10 40 00 		eor		r1,r1,#32
011F08 7C C2 00 00 		sb		r1,KeyState2
011F0C 60 10 82 02 
011F10 B9 04 00 00 		bsr		KeybdSetLEDStatus
011F14 BA AD FF FF 		bra		.0003
                	.doScrollLock:
011F18 7C C2 00 00 		lb		r1,KeyState2
011F1C 40 10 82 02 
011F20 8E 10 80 00 		eor		r1,r1,#64
011F24 7C C2 00 00 		sb		r1,KeyState2
011F28 60 10 82 02 
011F2C 39 01 00 00 		bsr		KeybdSetLEDStatus
011F30 3A AA FF FF 		bra		.0003
                	
                	KeybdSetLEDStatus:
011F34 E7 EF 01 00 	    push    lr
011F38 67 E1 01 00 		push	r2
011F3C E7 E1 01 00 	    push    r3
011F40 7C C2 00 00 		sb		r0,KeybdLEDs
011F44 60 00 86 02 
011F48 7C C2 00 00 		lb		r1,KeyState2
011F4C 40 10 82 02 
011F50 8C 20 20 00 		and		r2,r1,#16
011F54 3D 01 08 00 		beq		r2,.0002
011F58 0A 30 04 00 		ldi		r3,#2
011F5C 7C C2 00 00 		sb		r3,KeybdLEDs
011F60 60 30 86 02 
                	.0002:
011F64 8C 20 40 00 		and		r2,r1,#32
011F68 3D 01 0C 00 		beq		r2,.0003
011F6C 7C C2 00 00 		lb		r3,KeybdLEDs
011F70 40 30 86 02 
011F74 8D 31 08 00 		or		r3,r3,#4
011F78 7C C2 00 00 		sb		r3,KeybdLEDs
011F7C 60 30 86 02 
                	.0003:
011F80 8C 20 80 00 		and		r2,r1,#64
011F84 3D 01 0C 00 		beq		r2,.0004
011F88 7C C2 00 00 		lb		r3,KeybdLEDs
011F8C 40 30 86 02 
011F90 8D 31 02 00 		or		r3,r3,#1
011F94 7C C2 00 00 		sb		r3,KeybdLEDs
011F98 60 30 86 02 
                	.0004:
011F9C 0A 10 DA 01 		ldi		r1,#$ED
011FA0 39 07 00 00 		bsr		KeybdSendByte
011FA4 39 8D FF FF 		bsr		KeybdWaitTx
011FA8 B9 84 FF FF 		bsr		KeybdRecvByte
011FAC BD 40 0E 00 		bmi		r1,.0001
011FB0 86 20 F4 01 		cmp		r2,r1,#$FA
011FB4 7C C2 00 00 		lb		r1,KeybdLEDs
011FB8 40 10 86 02 
011FBC B9 03 00 00 		bsr		KeybdSendByte
011FC0 B9 89 FF FF 		bsr		KeybdWaitTx
011FC4 39 81 FF FF 		bsr		KeybdRecvByte
                	.0001:
011FC8 57 3F 10 00 		pop		r3
011FCC 57 2F 10 00 	    pop     r2
011FD0 57 FF 11 00 	    pop     lr
011FD4 37 FF 01 00 		rtl

                	KeybdSendByte:
011FD8 7C DC FF 00 		sb		r1,KEYBD
011FDC 60 10 00 00 
011FE0 37 FF 01 00 		rtl
	
                	Wait10ms:
011FE4 E7 E1 01 00 		push	r3
011FE8 67 E2 01 00 	    push    r4
011FEC 02 30 08 3E 		mfspr	r3,tick					; get orginal count
                	.0001:
011FF0 02 40 08 3E 		mfspr	r4,tick
011FF4 02 42 06 0A 		sub		r4,r4,r3
011FF8 3D 42 08 00 		blt  	r4,.0002				; shouldn't be -ve unless counter overflowed
011FFC FC 03 00 00 		cmpu	r4,r4,#250000			; about 10ms at 25 MHz
012000 16 42 20 A1 
012004 3D 42 F6 FF 		blt		r4,.0001
                	.0002:
012008 57 4F 10 00 		pop		r4
01200C 57 3F 10 00 	    pop     r3
012010 37 FF 01 00 		rtl

                	;------------------------------------------------------------------------------
                	; KeybdIRQ
                	;     Keyboard interrupt processing routine. Must be short.
                	; Grab a scancode from the keyboard and place it into the keyboard buffer
                	; for the job with the I/O focus.
                	;------------------------------------------------------------------------------
                	
                	KeybdIRQ:
012014 FC C2 00 00 	    ldi     sp,#irq_stack
012018 0A E0 11 08 
01201C E7 EF 01 00 	    push    lr
012020 E7 E0 01 00 	    push    r1
012024 67 E1 01 00 	    push    r2
012028 E7 E1 01 00 	    push    r3
01202C 67 E2 01 00 	    push    r4
012030 7C DC FF 00 	    lb      r1,KEYBD+1      ; get the keyboard status
012034 40 10 02 00 
012038 BD 20 60 00 	    bgt     r1,.0001        ; is there a scancode present ?
01203C 7C DC FF 00 		lbu		r1,KEYBD		; get the scan code
012040 41 10 00 00 
012044 7C DC FF 00 		sb		r0,KEYBD+1		; clear receive register (acknowledges interrupt)
012048 60 00 02 00 
01204C 7C 08 01 00 		lw      r2,IOFocusNdx   ; get task with I/O focus
012050 46 20 40 55 
012054 3D 01 52 00 		beq     r2,.0001
012058 7C 00 00 00 	    lb      r2,TCB_hJCB[r2] ; get JCB handle
01205C 7C 00 00 00 
012060 40 21 F2 03 
012064 7C 00 00 00 	    cmpu    r3,r3,#NR_JCB   ; make sure valid handle
012068 7C 00 00 00 
01206C 96 31 F4 03 
012070 BD 31 44 00 	    bge     r3,.0001
012074 7C 00 00 00 	    mulu    r2,r2,#JCB_Size ; and convert it to a pointer
012078 7C 00 00 00 
01207C 17 21 F8 03 
012080 7C 00 00 00 	    addui   r2,r2,#JCB_Array
012084 7C 00 00 00 
012088 14 21 FA 03 
01208C B9 17 12 00 	    bsr     LockSYS
012090 7C 00 00 00 	    lbu     r3,JCB_KeybdHead[r2]  ; get head index of keyboard buffer
012094 7C 00 00 00 
012098 41 31 FE 03 
01209C 7C 00 00 00 	    lbu     r4,JCB_KeybdTail[r2]  ; get tail index of keyboard buffer
0120A0 7C 00 00 00 
0120A4 41 41 00 04 
0120A8 94 31 02 00 	    addui   r3,r3,#1        ; advance head      
0120AC 8C 31 3E 00 	    and     r3,r3,#31       ; mod 32
0120B0 82 51 08 0C 	    cmp     r5,r3,r4        ; is there room in the buffer ?
0120B4 BD 02 2E 00 	    beq     r5,.0002        ; if not, newest chars will be lost
0120B8 7C 00 00 00 	    sb      r3,JCB_KeybdHead[r2]
0120BC 7C 00 00 00 
0120C0 60 31 FE 03 
0120C4 7C 00 00 00 	    lea     r2,JCB_KeybdBuffer[r2]
0120C8 7C 00 00 00 
0120CC 47 21 0C 04 
0120D0 68 11 06 00 	    sb      r1,[r2+r3]      ; save off the scan code
0120D4 39 12 12 00 	    bsr     UnlockSYS
0120D8 7C C2 00 00 	    lb      r2,KeyState2    ; check for ALT-tab
0120DC 40 20 82 02 
0120E0 0C 21 02 00 	    and     r2,r2,#1        ; is ALT down ?
0120E4 3D 01 0A 00 	    beq     r2,.0001        
0120E8 86 20 1A 00 	    cmp     r2,r1,#SC_TAB
0120EC 3D 11 06 00 	    bne     r2,.0001
0120F0 7C 08 01 00 	    inc     iof_switch      ; flag an I/O focus switch
0120F4 64 10 90 55 
                	.0001:
0120F8 57 4F 10 00 	    pop     r4
0120FC 57 3F 10 00 	    pop     r3
012100 57 2F 10 00 	    pop     r2
012104 57 1F 10 00 		pop     r1
012108 57 FF 11 00 		pop     lr
01210C 02 E0 3F 6E 	    rti
                	.0002:
012110 B9 0A 12 00 	    bsr     UnlockSYS
012114 BA FC FF FF 	    bra     .0001
                	KeybdIRQ1:
012118 02 E0 3F 6E 	    rti
                	
                	
                		;--------------------------------------------------------------------------
                		; PS2 scan codes to ascii conversion tables.
                		;--------------------------------------------------------------------------
                		;
01211C 00 00 00 00 		align	1
                	
                	unshiftedScanCodes:
012120 2E A9 2E A5 		.byte	$2e,$a9,$2e,$a5,$a3,$a1,$a2,$ac
012124 A3 A1 A2 AC 
012128 2E AA A8 A6 		.byte	$2e,$aa,$a8,$a6,$a4,$09,$60,$2e
01212C A4 09 60 2E 
012130 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$71,$31,$2e
012134 2E 71 31 2E 
012138 2E 2E 7A 73 		.byte	$2e,$2e,$7a,$73,$61,$77,$32,$2e
01213C 61 77 32 2E 
012140 2E 63 78 64 		.byte	$2e,$63,$78,$64,$65,$34,$33,$2e
012144 65 34 33 2E 
012148 2E 20 76 66 		.byte	$2e,$20,$76,$66,$74,$72,$35,$2e
01214C 74 72 35 2E 
012150 2E 6E 62 68 		.byte	$2e,$6e,$62,$68,$67,$79,$36,$2e
012154 67 79 36 2E 
012158 2E 2E 6D 6A 		.byte	$2e,$2e,$6d,$6a,$75,$37,$38,$2e
01215C 75 37 38 2E 
012160 2E 2C 6B 69 		.byte	$2e,$2c,$6b,$69,$6f,$30,$39,$2e
012164 6F 30 39 2E 
012168 2E 2E 2F 6C 		.byte	$2e,$2e,$2f,$6c,$3b,$70,$2d,$2e
01216C 3B 70 2D 2E 
012170 2E 2E 27 2E 		.byte	$2e,$2e,$27,$2e,$5b,$3d,$2e,$2e
012174 5B 3D 2E 2E 
012178 AD 2E 0D 5D 		.byte	$ad,$2e,$0d,$5d,$2e,$5c,$2e,$2e
01217C 2E 5C 2E 2E 
012180 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$08,$2e
012184 2E 2E 08 2E 
012188 2E 95 2E 93 		.byte	$2e,$95,$2e,$93,$94,$2e,$2e,$2e
01218C 94 2E 2E 2E 
012190 98 7F 92 2E 		.byte	$98,$7f,$92,$2e,$91,$90,$1b,$af
012194 91 90 1B AF 
012198 AB 2E 97 2E 		.byte	$ab,$2e,$97,$2e,$2e,$96,$ae,$2e
01219C 2E 96 AE 2E 
                	
0121A0 2E 2E 2E A7 		.byte	$2e,$2e,$2e,$a7,$2e,$2e,$2e,$2e
0121A4 2E 2E 2E 2E 
0121A8 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
0121AC 2E 2E 2E 2E 
0121B0 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
0121B4 2E 2E 2E 2E 
0121B8 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
0121BC 2E 2E 2E 2E 
0121C0 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
0121C4 2E 2E 2E 2E 
0121C8 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
0121CC 2E 2E 2E 2E 
0121D0 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
0121D4 2E 2E 2E 2E 
0121D8 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
0121DC 2E 2E 2E 2E 
0121E0 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
0121E4 2E 2E 2E 2E 
0121E8 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
0121EC 2E 2E 2E 2E 
0121F0 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
0121F4 2E 2E 2E 2E 
0121F8 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
0121FC 2E 2E 2E 2E 
012200 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
012204 2E 2E 2E 2E 
012208 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
01220C 2E 2E 2E 2E 
012210 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
012214 2E 2E 2E 2E 
012218 2E 2E FA 2E 		.byte	$2e,$2e,$fa,$2e,$2e,$2e,$2e,$2e
01221C 2E 2E 2E 2E 
                	
                	shiftedScanCodes:
012220 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
012224 2E 2E 2E 2E 
012228 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$09,$7e,$2e
01222C 2E 09 7E 2E 
012230 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$51,$21,$2e
012234 2E 51 21 2E 
012238 2E 2E 5A 53 		.byte	$2e,$2e,$5a,$53,$41,$57,$40,$2e
01223C 41 57 40 2E 
012240 2E 43 58 44 		.byte	$2e,$43,$58,$44,$45,$24,$23,$2e
012244 45 24 23 2E 
012248 2E 20 56 46 		.byte	$2e,$20,$56,$46,$54,$52,$25,$2e
01224C 54 52 25 2E 
012250 2E 4E 42 48 		.byte	$2e,$4e,$42,$48,$47,$59,$5e,$2e
012254 47 59 5E 2E 
012258 2E 2E 4D 4A 		.byte	$2e,$2e,$4d,$4a,$55,$26,$2a,$2e
01225C 55 26 2A 2E 
012260 2E 3C 4B 49 		.byte	$2e,$3c,$4b,$49,$4f,$29,$28,$2e
012264 4F 29 28 2E 
012268 2E 3E 3F 4C 		.byte	$2e,$3e,$3f,$4c,$3a,$50,$5f,$2e
01226C 3A 50 5F 2E 
012270 2E 2E 22 2E 		.byte	$2e,$2e,$22,$2e,$7b,$2b,$2e,$2e
012274 7B 2B 2E 2E 
012278 2E 2E 0D 7D 		.byte	$2e,$2e,$0d,$7d,$2e,$7c,$2e,$2e
01227C 2E 7C 2E 2E 
012280 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$08,$2e
012284 2E 2E 08 2E 
012288 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
01228C 2E 2E 2E 2E 
012290 2E 7F 2E 2E 		.byte	$2e,$7f,$2e,$2e,$2e,$2e,$1b,$2e
012294 2E 2E 1B 2E 
012298 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
01229C 2E 2E 2E 2E 
                	
0122A0 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
0122A4 2E 2E 2E 2E 
0122A8 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
0122AC 2E 2E 2E 2E 
0122B0 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
0122B4 2E 2E 2E 2E 
0122B8 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
0122BC 2E 2E 2E 2E 
0122C0 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
0122C4 2E 2E 2E 2E 
0122C8 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
0122CC 2E 2E 2E 2E 
0122D0 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
0122D4 2E 2E 2E 2E 
0122D8 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
0122DC 2E 2E 2E 2E 
0122E0 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
0122E4 2E 2E 2E 2E 
0122E8 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
0122EC 2E 2E 2E 2E 
0122F0 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
0122F4 2E 2E 2E 2E 
0122F8 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
0122FC 2E 2E 2E 2E 
012300 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
012304 2E 2E 2E 2E 
012308 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
01230C 2E 2E 2E 2E 
012310 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
012314 2E 2E 2E 2E 
012318 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
01231C 2E 2E 2E 2E 
                	
                	; control
                	keybdControlCodes:
012320 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
012324 2E 2E 2E 2E 
012328 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$09,$7e,$2e
01232C 2E 09 7E 2E 
012330 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$11,$21,$2e
012334 2E 11 21 2E 
012338 2E 2E 1A 13 		.byte	$2e,$2e,$1a,$13,$01,$17,$40,$2e
01233C 01 17 40 2E 
012340 2E 03 18 04 		.byte	$2e,$03,$18,$04,$05,$24,$23,$2e
012344 05 24 23 2E 
012348 2E 20 16 06 		.byte	$2e,$20,$16,$06,$14,$12,$25,$2e
01234C 14 12 25 2E 
012350 2E 0E 02 08 		.byte	$2e,$0e,$02,$08,$07,$19,$5e,$2e
012354 07 19 5E 2E 
012358 2E 2E 0D 0A 		.byte	$2e,$2e,$0d,$0a,$15,$26,$2a,$2e
01235C 15 26 2A 2E 
012360 2E 3C 0B 09 		.byte	$2e,$3c,$0b,$09,$0f,$29,$28,$2e
012364 0F 29 28 2E 
012368 2E 3E 3F 0C 		.byte	$2e,$3e,$3f,$0c,$3a,$10,$5f,$2e
01236C 3A 10 5F 2E 
012370 2E 2E 22 2E 		.byte	$2e,$2e,$22,$2e,$7b,$2b,$2e,$2e
012374 7B 2B 2E 2E 
012378 2E 2E 0D 7D 		.byte	$2e,$2e,$0d,$7d,$2e,$7c,$2e,$2e
01237C 2E 7C 2E 2E 
012380 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$08,$2e
012384 2E 2E 08 2E 
012388 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
01238C 2E 2E 2E 2E 
012390 2E 7F 2E 2E 		.byte	$2e,$7f,$2e,$2e,$2e,$2e,$1b,$2e
012394 2E 2E 1B 2E 
012398 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
01239C 2E 2E 2E 2E 
                	
                	keybdExtendedCodes:
0123A0 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$a3,$a1,$a2,$2e
0123A4 A3 A1 A2 2E 
0123A8 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
0123AC 2E 2E 2E 2E 
0123B0 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
0123B4 2E 2E 2E 2E 
0123B8 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
0123BC 2E 2E 2E 2E 
0123C0 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
0123C4 2E 2E 2E 2E 
0123C8 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
0123CC 2E 2E 2E 2E 
0123D0 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
0123D4 2E 2E 2E 2E 
0123D8 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
0123DC 2E 2E 2E 2E 
0123E0 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
0123E4 2E 2E 2E 2E 
0123E8 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
0123EC 2E 2E 2E 2E 
0123F0 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
0123F4 2E 2E 2E 2E 
0123F8 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
0123FC 2E 2E 2E 2E 
012400 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
012404 2E 2E 2E 2E 
012408 2E 95 2E 93 		.byte	$2e,$95,$2e,$93,$94,$2e,$2e,$2e
01240C 94 2E 2E 2E 
012410 98 99 92 2E 		.byte	$98,$99,$92,$2e,$91,$90,$2e,$2e
012414 91 90 2E 2E 
012418 2E 2E 97 2E 		.byte	$2e,$2e,$97,$2e,$2e,$96,$2e,$2e
01241C 2E 96 2E 2E 
                	
                	
                	; ============================================================================
                	; I2C interface to RTCC
                	; ============================================================================
                	
                	I2C_INIT:
012420 E7 E0 01 00 	    push    r1
012424 67 E1 01 00 	    push    r2
012428 7C DC FF 00 		ldi		r2,#I2C_MASTER
01242C 0A 20 00 1C 
012430 60 01 04 00 		sb		r0,I2C_CONTROL[r2]		; disable the contoller
012434 60 01 02 00 		sb		r0,I2C_PRESCALE_HI[r2]	; set clock divisor for 100kHz
012438 0A 10 C6 00 		ldi		r1,#99					; 24=400kHz, 99=100KHz
01243C 60 11 00 00 		sb		r1,I2C_PRESCALE_LO[r2]
012440 0A 10 00 01 		ldi		r1,#$80					; controller enable bit
012444 60 11 04 00 		sb		r1,I2C_CONTROL[r2]
012448 57 2F 10 00 		pop		r2
01244C 57 1F 10 00 	    pop     r1
012450 37 FF 01 00 		rtl

                	;------------------------------------------------------------------------------
                	; I2C Read
                	;
                	; Parameters:
                	; 	r1 = device ($6F for RTCC)
                	; 	r2 = register to read
                	; Returns
                	; 	r1 = register value $00 to $FF if successful, else r1 = -1 on error
                	;------------------------------------------------------------------------------
                	;
                	I2C_READ:
012454 E7 EF 01 00 	    push    lr
012458 67 E1 01 00 		push	r2
01245C E7 E1 01 00 	    push    r3
012460 67 E2 01 00 	    push    r4
012464 82 10 02 70 		asl		r1,r1,#1				; clear rw bit for write
                	;	or		r1,r1,#1				; set rw bit for a read
012468 82 40 00 1A 		mov		r4,r1					; save device address in r4
01246C 02 31 00 1A 		mov		r3,r2
                		; transmit device #
012470 7C DC FF 00 		ldi		r2,#I2C_MASTER
012474 0A 20 00 1C 
012478 60 11 06 00 		sb		r1,I2C_TX[r2]
01247C 0A 10 20 01 		ldi		r1,#$90					; STA($80) and WR($10) bits set
012480 60 11 08 00 		sb		r1,I2C_CMD[r2]
012484 B9 20 00 00 		bsr		I2C_WAIT_TC				; wait for transmit to complete
                		; transmit register #
012488 40 11 08 00 		lb		r1,I2C_STAT[r2]
01248C 8C 10 00 01 		and		r1,r1,#$80				; test RxACK bit
012490 BD 10 30 00 		bne	    r1,I2C_ERR
012494 60 31 06 00 		sb		r3,I2C_TX[r2]			; select register r3
012498 0A 10 20 00 		ldi		r1,#$10					; set WR bit
01249C 60 11 08 00 		sb		r1,I2C_CMD[r2]
0124A0 39 1D 00 00 		bsr		I2C_WAIT_TC
                	
                		; transmit device #
0124A4 40 11 08 00 		lb		r1,I2C_STAT[r2]
0124A8 8C 10 00 01 		and		r1,r1,#$80				; test RxACK bit
0124AC BD 10 22 00 		bne	    r1,I2C_ERR
0124B0 0D 42 02 00 		or		r4,r4,#1				; set read flag
0124B4 60 41 06 00 		sb		r4,I2C_TX[r2]
0124B8 0A 10 20 01 		ldi		r1,#$90					; STA($80) and WR($10) bits set
0124BC 60 11 08 00 		sb		r1,I2C_CMD[r2]
0124C0 39 19 00 00 		bsr		I2C_WAIT_TC				; wait for transmit to complete
                	
                		; receive data byte
0124C4 40 11 08 00 		lb		r1,I2C_STAT[r2]
0124C8 8C 10 00 01 		and		r1,r1,#$80				; test RxACK bit
0124CC BD 10 12 00 		bne	    r1,I2C_ERR
0124D0 0A 10 D0 00 		ldi		r1,#$68					; STO($40), RD($20), and NACK($08)
0124D4 60 11 08 00 		sb		r1,I2C_CMD[r2]
0124D8 39 16 00 00 		bsr		I2C_WAIT_TC
0124DC 41 11 06 00 		lbu		r1,I2C_RX[r2]			; $00 to $FF = byte read, -1=err
0124E0 57 4F 10 00 		pop		r4
0124E4 57 3F 10 00 	    pop     r3
0124E8 57 2F 10 00 	    pop     r2
0124EC 3B FF 11 00 		rts

                	I2C_ERR:
0124F0 0A 10 FE FF 		ldi		r1,#-1
0124F4 82 02 00 3C 		mtspr	cr0,r5					; restore TMR
0124F8 57 4F 10 00 		pop     r4
0124FC 57 3F 10 00 		pop     r3
012500 57 2F 10 00 		pop     r2
012504 3B FF 11 00 		rts

                	;------------------------------------------------------------------------------
                	; I2C Write
                	;
                	; Parameters:
                	; 	r1 = device ($6F)
                	; 	r2 = register to write
                	; 	r3 = value for register
                	; Returns
                	; 	r1 = 0 if successful, else r1 = -1 on error
                	;------------------------------------------------------------------------------
                	;
                	I2C_WRITE:
012508 E7 EF 01 00 		push	lr
01250C 67 E1 01 00 	    push    r2
012510 E7 E1 01 00 	    push    r3
012514 67 E2 01 00 	    push    r4
012518 82 10 02 70 		asl		r1,r1,#1				; clear rw bit for write
01251C 82 41 00 1A 		mov		r4,r3					; save value r4
012520 02 31 00 1A 		mov		r3,r2
                		; transmit device #
012524 7C DC FF 00 		ldi		r2,#I2C_MASTER			; r2 = I/O base address of controller
012528 0A 20 00 1C 
01252C 60 11 06 00 		sb		r1,I2C_TX[r2]
012530 0A 10 20 01 		ldi		r1,#$90					; STA($80) and WR($10) bits set
012534 60 11 08 00 		sb		r1,I2C_CMD[r2]
012538 39 0A 00 00 		bsr		I2C_WAIT_TC				; wait for transmit to complete
                		; transmit register #
01253C 40 11 08 00 		lb		r1,I2C_STAT[r2]
012540 8C 10 00 01 		and		r1,r1,#$80				; test RxACK bit
012544 BD 10 D6 FF 		bne  	r1,I2C_ERR
012548 60 31 06 00 		sb		r3,I2C_TX[r2]			; select register r3
01254C 0A 10 20 00 		ldi		r1,#$10					; set WR bit
012550 60 11 08 00 		sb		r1,I2C_CMD[r2]
012554 B9 06 00 00 		bsr		I2C_WAIT_TC
                		; transmit value
012558 40 11 08 00 		lb		r1,I2C_STAT[r2]
01255C 8C 10 00 01 		and		r1,r1,#$80				; test RxACK bit
012560 BD 10 C8 FF 		bne  	r1,I2C_ERR
012564 60 41 06 00 		sb		r4,I2C_TX[r2]			; select value in r4
012568 0A 10 A0 00 		ldi		r1,#$50					; set STO, WR bit
01256C 60 11 08 00 		sb		r1,I2C_CMD[r2]
012570 39 03 00 00 		bsr		I2C_WAIT_TC
012574 0A 10 00 00 		ldi		r1,#0					; everything okay
012578 57 4F 10 00 		pop		r4
01257C 57 3F 10 00 	    pop     r3
012580 57 2F 10 00 	    pop     r2
012584 3B FF 11 00 		rts

                	; Wait for I2C controller transmit complete
                	
                	I2C_WAIT_TC:
                	.0001:
012588 40 11 08 00 		lb		r1,I2C_STAT[r2]
01258C 8C 10 04 00 		and		r1,r1,#2
012590 BD 10 FC FF 		bne 	r1,.0001
012594 37 FF 01 00 		rtl

                	; Read the entire contents of the RTCC including 64 SRAM bytes
                	
                	RTCCReadbuf:
012598 E7 EF 01 00 	    push    lr
01259C B9 D0 FF FF 		bsr		I2C_INIT
0125A0 0A 20 00 00 		ldi		r2,#$00
                	.0001:
0125A4 0A 10 DE 00 		ldi		r1,#$6F
0125A8 B9 D5 FF FF 		bsr		I2C_READ
0125AC 7C C2 00 00 		sb		r1,RTCC_BUF[r2]
0125B0 60 11 A0 17 
0125B4 04 21 02 00 		add		r2,r2,#1
0125B8 16 11 C0 00 		cmpu	r1,r2,#$60
0125BC BD 40 F4 FF 		blt		r1,.0001
0125C0 3B FF 11 00 		rts

                	; Write the entire contents of the RTCC including 64 SRAM bytes
                	
                	RTCCWritebuf:
0125C4 E7 EF 01 00 	    push    lr
0125C8 39 CB FF FF 		bsr		I2C_INIT
0125CC 0A 20 00 00 		ldi		r2,#$00
                	.0001:
0125D0 0A 10 DE 00 		ldi		r1,#$6F
0125D4 7C C2 00 00 		lbu		r3,RTCC_BUF[r2]
0125D8 41 31 A0 17 
0125DC B9 E5 FF FF 		bsr		I2C_WRITE
0125E0 04 21 02 00 		add		r2,r2,#1
0125E4 16 11 C0 00 		cmpu	r1,r2,#$60
0125E8 BD 40 F4 FF 		blt		r1,.0001
0125EC 3B FF 11 00 		rts

                	RTCCOscOn:
0125F0 E7 EF 01 00 	    push    lr
0125F4 B9 C5 FF FF 		bsr		I2C_INIT
0125F8 0A 10 DE 00 		ldi		r1,#$6F
0125FC 0A 20 00 00 		ldi		r2,#$00			; register zero
012600 B9 CA FF FF 		bsr		I2C_READ		; read register zero
012604 8D 30 00 01 		or		r3,r1,#$80		; set start osc bit
012608 0A 10 DE 00 		ldi		r1,#$6F
01260C B9 DF FF FF 		bsr		I2C_WRITE
012610 3B FF 11 00 		rts

                	; ============================================================================
                	; SD/MMC Card interface
                	; ============================================================================
                	SD_INIT:
012614 E7 EF 01 00 	    push    lr
012618 7C DC FF 00 		ldi		r3,#SD_MASTER
01261C 0A 30 00 16 
012620 7C 00 00 00 		ldi		r2,#25000
012624 0A 20 50 C3 
012628 E1 21 58 00 		sc		r2,0x2c[r3]		; timeout register
                		; Software reset should be held active for several cycles to allow
                		; reset to be detected on the sd_clk domain.
01262C 0A 20 02 00 		ldi		r2,#1
012630 E0 21 50 00 		sb		r2,0x28[r3]		; software reset reg
012634 0A 20 04 00 		ldi		r2,#2
012638 E0 21 98 00 		sb		r2,0x4c[r3]		; prog /6 for clock divider
01263C 0A 10 C8 00 		ldi		r1,#100			; software reset delay
012640 39 47 00 00 		bsr     MicroDelay
012644 E0 01 50 00 		sb		r0,0x28[r3]		; clear software reset
012648 E1 01 08 00 		sc		r0,0x04[r3]		; command 0
01264C E2 01 00 00 		sh		r0,0x00[r3]		; arg 0
012650 39 28 00 00 		bsr		SD_WAIT_RESP
012654 C4 11 18 00 		lh		r1,0x0C[r3]		; read response register
012658 39 83 FC FF 		bsr		DisplayHalf
01265C 3B FF 11 00 		rts

                	SD_CMD8:
012660 E7 EF 01 00 	    push    lr
012664 7C DC FF 00 		ldi		r3,#SD_MASTER
012668 0A 30 00 16 
01266C 0A 20 34 10 		ldi		r2,#$81A
012670 E1 21 08 00 		sc		r2,0x04[r3]		; set command register
012674 0A 20 54 03 		ldi		r2,#$1AA
012678 E2 21 00 00 		sh		r2,0x00[r3]		; set command argument x1AA
01267C B9 22 00 00 		bsr		SD_WAIT_RESP
012680 7C 00 00 00 		sb		r1,SD_2_0
012684 7C 00 00 00 
012688 60 10 84 04 
01268C C4 11 18 00 		lh		r1,0x0C[r3]		; read response register
012690 39 7C FC FF 		bsr		DisplayHalf
                		; send command zero
012694 E1 01 08 00 		sc		r0,0x04[r3]
012698 E2 01 00 00 		sh		r0,0x00[r3]
01269C B9 1E 00 00 		bsr		SD_WAIT_RESP
0126A0 7C 00 00 00 		lbu		r1,SD_2_0
0126A4 7C 00 00 00 
0126A8 41 10 84 04 
0126AC BD 00 12 00 		beq		r1,.0001
0126B0 0A 10 64 00 		ldi		r1,#'2'
0126B4 39 60 FD FF 		bsr		OutChar
0126B8 0A 10 5C 00 		ldi		r1,#'.'
0126BC 39 5F FD FF 		bsr		OutChar
0126C0 0A 10 60 00 		ldi		r1,#'0'
0126C4 39 5E FD FF 		bsr		OutChar
0126C8 B9 A9 04 00 		bsr		CRLF
0126CC 3B FF 11 00 		rts
.0001:
0126D0 E1 01 08 00 		sc		r0,0x04[r3]		; send CMD0
0126D4 E2 01 00 00 		sh		r0,0x00[r3]
                	.0002:
0126D8 C3 11 10 00 		lcu		r1,0x08[r3]
0126DC 8C 10 02 00 		and		r1,r1,#1
0126E0 BD 10 FC FF 		bne  	r1,.0002
0126E4 02 40 00 1A 		mov		r4,r0			; ret_reg = r4 = 0
                	.0004:
0126E8 02 52 00 1A 		mov		r5,r4
0126EC 7C 00 80 00 		and		r4,r4,#$80000000
0126F0 0C 42 00 00 
0126F4 3D 12 20 00 		bne  	r4,.0003
0126F8 0A 10 04 6E 		ldi		r1,#$3702		; CMD55|RSP48
0126FC E1 11 08 00 		sc		r1,0x04[r3]
012700 E2 01 00 00 		sh		r0,0x00[r3]
012704 B9 11 00 00 		bsr		SD_WAIT_RESP
012708 BD 10 38 00 		bne  	r1,.respOk
01270C 0A 10 04 52 		ldi		r1,#$2902		; ACMD41|RSP48
012710 E1 11 08 00 		sc		r1,0x04[r3]
012714 E2 01 00 00 		sh		r0,0x00[r3]
012718 39 0F 00 00 		bsr		SD_WAIT_RESP
01271C BD 10 2E 00 		bne  	r1,.respOk
012720 C4 41 18 00 		lh		r4,0x0c[r3]		; ret_reg = RESP1
012724 02 12 00 1A 		mov		r1,r4
012728 39 69 FC FF 		bsr		DisplayHalf
01272C 39 9D 04 00 		bsr		CRLF
012730 3A F7 FF FF 		bra		.0004
                	.0003:
012734 FC FF 00 00 		and		r1,r5,#$FFFFFF	; voltage mask
012738 8C 12 FE FF 
01273C B9 66 FC FF 		bsr		DisplayHalf
012740 B9 9A 04 00 		bsr		CRLF
                		; GetCID
012744 0A 10 02 04 		ldi		r1,#$201		; CMD2 + RSP146
012748 E1 11 08 00 		sc		r1,0x04[r3]
01274C E2 01 00 00 		sh		r0,0x00[r3]
012750 39 08 00 00 		bsr		SD_WAIT_RESP
                		; GetRCA
012754 0A 10 34 06 		ldi		r1,#$31A		; CMD3 + CICE + CRCE + RSP48
012758 E1 11 08 00 		sc		r1,0x04[r3]
01275C E2 01 00 00 		sh		r0,0x00[r3]
012760 39 06 00 00 		bsr		SD_WAIT_RESP
012764 C4 41 18 00 		lh		r4,0x0c[r3]			; r4 = RESP1
012768 7C FF FF 00 		and		r1,r4,#$FFFF0000	; r4 & RCA_MASK
01276C 0C 12 00 00 
012770 39 60 FC FF 		bsr		DisplayHalf
012774 39 94 04 00 		bsr		CRLF
                	.respOk:
012778 0A 10 9E 00 		ldi		r1,#'O'
01277C 39 47 FD FF 		bsr		OutChar
012780 0A 10 D6 00 		ldi		r1,#'k'
012784 39 46 FD FF 		bsr		OutChar
012788 B9 91 04 00 		bsr		CRLF
01278C 3B FF 11 00 		rts

                	SD_WAIT_RESP:
012790 E7 EF 01 00 	    push    lr
012794 67 E1 01 00 		push	r2
012798 E7 E1 01 00 	    push    r3
01279C 7C DC FF 00 		ldi		r2,#SD_MASTER
0127A0 0A 20 00 16 
                	.0001:
0127A4 42 31 68 00 		lc		r3,0x34[r2]		; read error interrupt status reg
0127A8 42 11 60 00 		lc		r1,0x30[r2]		; read normal interrupt status reg
0127AC 8C 31 02 00 		and		r3,r3,#1		; get command timeout indicator
0127B0 BD 11 10 00 		bne  	r3,.0002
0127B4 8C 10 02 00 		and		r1,r1,#1		; wait for command complete bit to set
0127B8 BD 00 F6 FF 		beq		r1,.0001
0127BC 0A 10 02 00 		ldi		r1,#1
0127C0 57 3F 10 00 		pop		r3
0127C4 57 2F 10 00 	    pop     r2
0127C8 57 FF 11 00 	    pop     lr
0127CC 37 FF 01 00 		rtl
.0002:
0127D0 0A 10 A8 00 		ldi		r1,#'T'
0127D4 39 3C FD FF 		bsr		OutChar
0127D8 0A 10 9E 00 		ldi		r1,#'O'
0127DC 39 3B FD FF 		bsr		OutChar
0127E0 B9 86 04 00 		bsr		CRLF
0127E4 0A 10 00 00 		ldi		r1,#0
0127E8 57 3F 10 00 		pop		r3
0127EC 57 2F 10 00 	    pop     r2
0127F0 57 FF 11 00 	    pop     lr
0127F4 37 FF 01 00 		rtl

                	; ============================================================================
                	; ============================================================================
                	
0127F8 7C 01 00 00 	    ldi     r1,#brkpt1           ; set breakpoint address
0127FC 0A 10 78 50 
012800 82 00 64 3C 	    mtspr   dbad0,r1
012804 0A 10 00 00 	    ldi     r1,#$0000000000000000   ; enable instruction breakpoint, turn on single step mode
012808 82 00 6C 3C 	    mtspr   dbctrl,r1
01280C 02 00 54 3C 	    mtspr   lotgrp,r0            ; operating system is group #0
012810 B9 04 00 00 	    bsr     SetupMemtags
012814 0A 10 C8 00 	    ldi     r1,#100
012818 39 0C 00 00 	    bsr     MicroDelay
01281C 3F 00 00 00 	    nop
012820 3F 00 00 00 	    nop
                	hangprg:
012824 3F 00 00 00 	    nop
012828 3F 00 00 00 	    nop
01282C 3F 00 00 00 	    nop
012830 BA FE FF FF 	    bra     hangprg
                	
                	SetupMemtags:
012834 02 00 50 3C 	    mtspr   ea,r0                ; select tag for first 64kB
012838 0A 10 0C 00 	    ldi     r1,#$0006            ; system only: readable, writeable, not executable
                	brkpt1:
01283C 82 00 52 3C 	    mtspr   tag,r1
012840 7C 01 00 00 	    ldi     r1,#$10000           ; select tag for second 64kB
012844 0A 10 00 00 
012848 82 00 50 3C 	    mtspr   ea,r1
01284C 0A 20 0A 00 	    ldi     r2,#$0005            ; system only: readable, executable, not writeable
012850 02 01 52 3C 	    mtspr   tag,r2
012854 0A 30 24 00 	    ldi     r3,#20-2             ; number of tags to setup
                	.0001:
012858 7C 01 00 00 	    addui   r1,r1,#$10000
01285C 94 10 00 00 
012860 82 00 50 3C 	    mtspr   ea,r1
012864 0A 20 0C 00 	    ldi     r2,#$0006            ; set them up as data
012868 02 01 52 3C 	    mtspr   tag,r2
01286C 95 31 02 00 	    subui   r3,r3,#1
012870 BD 11 F4 FF 	    bne     r3,.0001
012874 37 FF 01 00 	    rtl

                	;------------------------------------------------------------------------------
                	; MicroDelay
                	;     Delay for a short time for at least the specified number of clock cycles
                	;
                	; Parameters:
                	;     r1 = required delay in clock ticks
                	;------------------------------------------------------------------------------
                	;
                	MicroDelay:
012878 67 E1 01 00 	    push    r2
01287C E7 E1 01 00 	    push    r3
012880 02 30 08 3E 	    mfspr   r3,tick             ; get starting tick
                	.0001:
012884 02 20 08 3E 	    mfspr   r2,tick
012888 02 21 06 2A 	    subu    r2,r2,r3
01288C 02 21 02 0C 	    cmp     r2,r2,r1
012890 3D 41 FA FF 	    blt     r2,.0001
012894 57 3F 10 00 	    pop     r3
012898 57 2F 10 00 	    pop     r2
01289C 37 FF 01 00 	    rtl
;
0128A0 3F 00 00 00 	    nop
0128A4 3F 00 00 00 	    nop
                	
                	;------------------------------------------------------------------------------
                	;------------------------------------------------------------------------------
                	
                	LoadFromSerial:
0128A8 E7 EF 01 00 	    push    lr
0128AC 7C 00 00 00 	    ldi     r3,#16384
0128B0 0A 30 00 80 
0128B4 7C 02 00 00 	    ldi     r2,#$24000          ; target store address
0128B8 0A 20 00 80 
                	.0001:
0128BC B9 85 FB FF 	    bsr     SerialGetCharDirect
0128C0 60 11 00 00 	    sb      r1,[r2]
0128C4 14 21 02 00 	    addui   r2,r2,#1
0128C8 95 31 02 00 	    subui   r3,r3,#1
0128CC BD 11 F8 FF 	    bne     r3,.0001
0128D0 3B FF 11 00 	    rts

                	nmi_rout:
0128D4 FC C2 00 00 	    ldi    sp,#irq_stack
0128D8 0A E0 11 08 
0128DC E7 E0 01 00 	    push   r1
0128E0 7C 01 00 00 	    pea    msgParErr
0128E4 65 E0 01 52 
0128E8 39 7C 04 00 	    bsr    DisplayStringCRLF
0128EC 14 EF 11 00 	    addui  sp,sp,#8
0128F0 39 6F FE FF 	    bsr    KeybdGetCharWait
0128F4 57 1F 10 00 	    pop    r1
0128F8 02 E0 3F 6E 	    rti
                	
                	nmi_rout1:
0128FC 02 E0 3F 6E 	    rti
                	
                	msgParErr:
012900 50 00 61 00 	    dc "Parity error",0
012904 72 00 69 00 
012908 74 00 79 00 
01290C 20 00 65 00 
012910 72 00 72 00 
012914 6F 00 72 00 
012918 00 00       
                	    
01291A 00 00       	    align  
                	
                	;------------------------------------------------------------------------------
                	; Execution fault. Occurs when an attempt is made to execute code from a
                	; page marked as non-executable.
                	;------------------------------------------------------------------------------
                	
                	exf_rout:
01291C 0A 10 76 01 		ldi		r1,#$bb
012920 7C DC FF 00 		sc		r1,LEDS
012924 61 10 00 0C 
012928 7C 01 00 00 		ldi		r1,#msgexf
01292C 0A 10 88 53 
012930 39 73 04 00 		bsr		DisplayStringCRLF
                	.0001:
012934 3A 00 00 00 		bra .0001
                	
                	;------------------------------------------------------------------------------
                	; Data read fault. Occurs when an attempt is made to read from a page marked
                	; as non-readble.
                	;------------------------------------------------------------------------------
                	
                	drf_rout:
012938 0A 10 76 01 		ldi		r1,#$bb
01293C 7C DC FF 00 		sc		r1,LEDS
012940 61 10 00 0C 
012944 7C 01 00 00 		ldi		r1,#msgdrf
012948 0A 10 9C 53 
01294C B9 6F 04 00 		bsr		DisplayStringCRLF
                	.0001:
012950 3A 00 00 00 		bra .0001
                	
                	;------------------------------------------------------------------------------
                	; Data write fault. Occurs when an attempt is made to write to a page marked
                	; as non-writeable.
                	;------------------------------------------------------------------------------
                	
                	dwf_rout:
012954 0A 10 76 01 		ldi		r1,#$bb
012958 7C DC FF 00 		sc		r1,LEDS
01295C 61 10 00 0C 
012960 7C 01 00 00 		ldi		r1,#msgdwf
012964 0A 10 B0 53 
012968 39 6C 04 00 		bsr		DisplayStringCRLF
                	.0001:
01296C 3A 00 00 00 		bra .0001
                	
                	;------------------------------------------------------------------------------
                	; Privilege violation fault. Occurs when the current privilege level isn't
                	; sufficient to allow access.
                	;------------------------------------------------------------------------------
                	
                	priv_rout:
012970 7C 00 00 00 	    lw      sp,TCB_SYS_Stack[tr]
012974 7C 00 00 00 
012978 46 EC B1 04 
01297C 0A 10 78 01 		ldi		r1,#$bc
012980 7C DC FF 00 		sc		r1,LEDS
012984 61 10 00 0C 
012988 7C 01 00 00 		pea		msgPriv
01298C 65 E0 C5 53 
012990 B9 5A 04 00 		bsr		DisplayString
012994 14 EF 11 00 		addui   sp,sp,#8
012998 02 10 12 3E 		mfspr   r1,epc
01299C B9 1A FC FF 		bsr     DisplayHalf
0129A0 B9 4E 04 00 		bsr     CRLF
0129A4 B9 58 FE FF 		bsr		KeybdGetCharWait
0129A8 7C 01 00 00 		ldi     r1,#Monitor|1
0129AC 0A 10 9A 1E 
0129B0 82 00 12 3C 		mtspr   epc,r1
0129B4 3F 00 00 00 		nop
0129B8 3F 00 00 00 		nop
0129BC 02 E0 3D 6E 		rte
                	.0001:
0129C0 3A 00 00 00 		bra .0001
                	
                	;------------------------------------------------------------------------------
                	; Message strings for the faults.
                	;------------------------------------------------------------------------------
                	
                	msgexf:
0129C4 65 00 78 00 		dc	"exf ",0
0129C8 66 00 20 00 
0129CC 00 00       
                	msgdrf:
0129CE 64 00 72 00 		dc	"drf ",0
0129D2 66 00 20 00 
0129D6 00 00       
                	msgdwf:
0129D8 64 00 77 00 		dc	"dwf ",0
0129DC 66 00 20 00 
0129E0 00 00       
                	msgPriv:
0129E2 70 00 72 00 		dc	"priv fault: PC=",0
0129E6 69 00 76 00 
0129EA 20 00 66 00 
0129EE 61 00 75 00 
0129F2 6C 00 74 00 
0129F6 3A 00 20 00 
0129FA 50 00 43 00 
0129FE 3D 00 00 00 
                	msgUninit:
012A02 75 00 6E 00 		dc	"uninit int.",0
012A06 69 00 6E 00 
012A0A 69 00 74 00 
012A0E 20 00 69 00 
012A12 6E 00 74 00 
012A16 2E 00 00 00 
                	msgBusErr:
012A1A 0D 00 0A 00 	    dc  CR,LF,"Bus error PC=",0
012A1E 42 00 75 00 
012A22 73 00 20 00 
012A26 65 00 72 00 
012A2A 72 00 6F 00 
012A2E 72 00 20 00 
012A32 50 00 43 00 
012A36 3D 00 00 00 
                	msgEA:
012A3A 20 00 45 00 	    dc  " EA=",0
012A3E 41 00 3D 00 
012A42 00 00       
                	msgUninitIRQ:
012A44 55 00 6E 00 	    dc  "Uninitialized IRQ: ",0
012A48 69 00 6E 00 
012A4C 69 00 74 00 
012A50 69 00 61 00 
012A54 6C 00 69 00 
012A58 7A 00 65 00 
012A5C 64 00 20 00 
012A60 49 00 52 00 
012A64 51 00 3A 00 
012A68 20 00 00 00 
                	
                	    align 4                	
                	UninitIRQ:
012A6C 7C 01 00 00 	    pea   msgUninitIRQ
012A70 65 E0 89 54 
012A74 39 3E 04 00 	    bsr   DisplayString
012A78 14 EF 11 00 	    addui sp,sp,#8
012A7C 02 10 18 3E 	    mfspr r1,12          ; vecno
012A80 B9 00 FC FF 	    bsr   DisplayCharHex
012A84 39 32 04 00 		bsr     CRLF
012A88 39 3C FE FF 		bsr		KeybdGetCharWait
012A8C BA C3 FA FF 		bra   start
                	.0001:
012A90 3A 00 00 00 	    bra   .0001
                	
                	;------------------------------------------------------------------------------
                	; Bus error routine.
                	;------------------------------------------------------------------------------
                	
                	berr_rout:
012A94 7C 00 00 00 	    ldi     sp,#$7800
012A98 0A E0 01 F0 
012A9C FC 00 00 00 		ldi		r1,#$bebe
012AA0 0A 10 7C 7D 
012AA4 7C DC FF 00 		sc		r1,LEDS
012AA8 61 10 00 0C 
012AAC 7C 01 00 00 		pea     msgBusErr
012AB0 65 E0 35 54 
012AB4 39 36 04 00 		bsr     DisplayString
012AB8 14 EF 11 00 		addui   sp,sp,#8
012ABC 02 10 10 3E 		mfspr   r1,ipc
012AC0 B9 F3 FB FF 		bsr		DisplayWord
012AC4 7C 01 00 00 		pea     msgEA
012AC8 65 E0 75 54 
012ACC 39 33 04 00 		bsr     DisplayString
012AD0 14 EF 11 00 		addui   sp,sp,#8
012AD4 02 10 16 3E 	    mfspr   r1,bear
012AD8 B9 F0 FB FF 		bsr     DisplayWord
012ADC 39 27 04 00 		bsr     CRLF
012AE0 39 31 FE FF 		bsr		KeybdGetCharWait
                	
                		; In order to return an RTI must be used to exit the routine (or interrupts
                		; will permanently disabled). The RTI instruction clears an internal
                		; processor flag used to prevent nested interrupts.
                		; Since this is a serious error the system is just restarted. So the IPC
                		; is set to point to the restart address.
                	
012AE4 7C 01 00 00 		ldi     r1,#start|1
012AE8 0A 10 52 01 
012AEC 82 00 10 3C 		mtspr   ipc,r1
                		
                		; Allow pipeline time for IPC to update before RTI (there's no results
                		; forwarding on SPR's).
012AF0 3F 00 00 00 		nop     
012AF4 3F 00 00 00 		nop
012AF8 02 E0 3F 6E 		rti
                	
                	
                	SSM_ISR:
012AFC 02 E0 3B 6E 	    rtd
                	
                	; -----------------------------------------------------------------------------
                	; Breakpoint routine.
                	; -----------------------------------------------------------------------------
                	
                	BPT_ISR:
012B00 FC 7C 00 00 	    ldi      sp,#CPU0_DBG_STACK
012B04 0A E0 01 E0 
012B08 02 00 6C 3C 	    mtspr    dbctrl,r0
012B0C 02 10 0E 3E 	    mfspr    r1,dpc
012B10 8C 10 FC FF 	    and      r1,r1,#-2        ; clear LSB
012B14 E7 E0 01 00 	    push     r1
012B18 95 10 40 00 	    subui    r1,r1,#32
012B1C E7 E0 01 00 	    push     r1
012B20 B9 7F 0A 00 	    bsr      disassem20
012B24 B9 28 FE FF 		bsr		 KeybdGetCharWait
012B28 02 E0 3B 6E 	    rtd
                	.0001:
012B2C 3A 00 00 00 	    bra     .0001
                	
                		code
                		align	16                	
                	get_datetime:
012B30 15 EF 21 00 		      	subui	sp,sp,#16
012B34 E7 ED 01 00 		      	push 	bp
012B38 02 BF 01 1A 		      	mov  	bp,sp
012B3C 15 EF 11 00 		      	subui	sp,sp,#8
012B40 E7 E5 01 00 		      	push 	r11
012B44 67 E6 01 00 		      	push 	r12
012B48 E7 E6 01 00 		      	push 	r13
012B4C 67 E7 01 00 		      	push 	r14
012B50 E7 E7 01 00 		      	push 	r15
012B54 67 E8 01 00 		      	push 	r16
012B58 E7 E8 01 00 		      	push 	r17
012B5C 7C C2 00 00 		      	ldi  	r11,#RTCC_BUF
012B60 0A B0 A0 17 
012B64 C6 CD A0 00 		      	lw   	r12,80[bp]
012B68 C6 DD 90 00 		      	lw   	r13,72[bp]
012B6C C6 ED 80 00 		      	lw   	r14,64[bp]
012B70 C6 FD 70 00 		      	lw   	r15,56[bp]
012B74 C6 0D 61 00 		      	lw   	r16,48[bp]
012B78 C6 1D 51 00 		      	lw   	r17,40[bp]
012B7C BD 08 20 00 		      	beq  	r17,set_time_serial_2
012B80 C1 35 0C 00 		      	lbu  	r3,6[r11]
012B84 82 31 00 20 		      	sxb  	r3,r3
012B88 E3 3D F0 FF 		      	sw   	r3,-8[bp]
012B8C 0A 30 A0 0F 		      	ldi  	r3,#2000
012B90 C6 4D F0 FF 		      	lw   	r4,-8[bp]
012B94 0C 42 1E 00 		      	and  	r4,r4,#15
012B98 C6 5D F0 FF 		      	lw   	r5,-8[bp]
012B9C 8C 52 E0 01 		      	and  	r5,r5,#240
012BA0 82 52 08 78 		      	asri 	r5,r5,#4
012BA4 87 52 14 00 		      	mul  	r5,r5,#10
012BA8 02 42 0A 28 		      	addu 	r4,r4,r5
012BAC 82 31 08 28 		      	addu 	r3,r3,r4
012BB0 E3 3D F0 FF 		      	sw   	r3,-8[bp]
012BB4 C6 3D F0 FF 		      	lw   	r3,-8[bp]
012BB8 E3 38 00 00 		      	sw   	r3,[r17]
                	set_time_serial_2:
012BBC 3D 08 1C 00 		      	beq  	r16,set_time_serial_4
012BC0 C1 35 08 00 		      	lbu  	r3,4[r11]
012BC4 82 31 00 20 		      	sxb  	r3,r3
012BC8 E3 3D F0 FF 		      	sw   	r3,-8[bp]
012BCC C6 3D F0 FF 		      	lw   	r3,-8[bp]
012BD0 8C 31 1E 00 		      	and  	r3,r3,#15
012BD4 C6 4D F0 FF 		      	lw   	r4,-8[bp]
012BD8 0C 42 20 00 		      	and  	r4,r4,#16
012BDC 02 42 08 78 		      	asri 	r4,r4,#4
012BE0 07 42 14 00 		      	mul  	r4,r4,#10
012BE4 82 31 08 28 		      	addu 	r3,r3,r4
012BE8 E3 3D F0 FF 		      	sw   	r3,-8[bp]
012BEC C6 3D F0 FF 		      	lw   	r3,-8[bp]
012BF0 63 38 00 00 		      	sw   	r3,[r16]
                	set_time_serial_4:
012BF4 BD 07 1C 00 		      	beq  	r15,set_time_serial_6
012BF8 C1 35 0A 00 		      	lbu  	r3,5[r11]
012BFC 82 31 00 20 		      	sxb  	r3,r3
012C00 E3 3D F0 FF 		      	sw   	r3,-8[bp]
012C04 C6 3D F0 FF 		      	lw   	r3,-8[bp]
012C08 8C 31 1E 00 		      	and  	r3,r3,#15
012C0C C6 4D F0 FF 		      	lw   	r4,-8[bp]
012C10 0C 42 60 00 		      	and  	r4,r4,#48
012C14 02 42 08 78 		      	asri 	r4,r4,#4
012C18 07 42 14 00 		      	mul  	r4,r4,#10
012C1C 82 31 08 28 		      	addu 	r3,r3,r4
012C20 E3 3D F0 FF 		      	sw   	r3,-8[bp]
012C24 C6 3D F0 FF 		      	lw   	r3,-8[bp]
012C28 E3 37 00 00 		      	sw   	r3,[r15]
                	set_time_serial_6:
012C2C 3D 07 22 00 		      	beq  	r14,set_time_serial_8
012C30 C1 35 04 00 		      	lbu  	r3,2[r11]
012C34 82 31 00 20 		      	sxb  	r3,r3
012C38 E3 3D F0 FF 		      	sw   	r3,-8[bp]
012C3C C6 3D F0 FF 		      	lw   	r3,-8[bp]
012C40 8C 31 1E 00 		      	and  	r3,r3,#15
012C44 C6 4D F0 FF 		      	lw   	r4,-8[bp]
012C48 0C 42 60 00 		      	and  	r4,r4,#48
012C4C 02 42 08 78 		      	asri 	r4,r4,#4
012C50 07 42 14 00 		      	mul  	r4,r4,#10
012C54 82 31 08 28 		      	addu 	r3,r3,r4
012C58 E3 3D F0 FF 		      	sw   	r3,-8[bp]
012C5C C6 3D F0 FF 		      	lw   	r3,-8[bp]
012C60 8C 31 7E 00 		      	and  	r3,r3,#63
012C64 E3 3D F0 FF 		      	sw   	r3,-8[bp]
012C68 C6 3D F0 FF 		      	lw   	r3,-8[bp]
012C6C 63 37 00 00 		      	sw   	r3,[r14]
                	set_time_serial_8:
012C70 BD 06 1C 00 		      	beq  	r13,set_time_serial_10
012C74 C1 35 02 00 		      	lbu  	r3,1[r11]
012C78 82 31 00 20 		      	sxb  	r3,r3
012C7C E3 3D F0 FF 		      	sw   	r3,-8[bp]
012C80 C6 3D F0 FF 		      	lw   	r3,-8[bp]
012C84 8C 31 1E 00 		      	and  	r3,r3,#15
012C88 C6 4D F0 FF 		      	lw   	r4,-8[bp]
012C8C 0C 42 E0 00 		      	and  	r4,r4,#112
012C90 02 42 08 78 		      	asri 	r4,r4,#4
012C94 07 42 14 00 		      	mul  	r4,r4,#10
012C98 82 31 08 28 		      	addu 	r3,r3,r4
012C9C E3 3D F0 FF 		      	sw   	r3,-8[bp]
012CA0 C6 3D F0 FF 		      	lw   	r3,-8[bp]
012CA4 E3 36 00 00 		      	sw   	r3,[r13]
                	set_time_serial_10:
012CA8 3D 06 1C 00 		      	beq  	r12,set_time_serial_12
012CAC C1 35 00 00 		      	lbu  	r3,[r11]
012CB0 82 31 00 20 		      	sxb  	r3,r3
012CB4 E3 3D F0 FF 		      	sw   	r3,-8[bp]
012CB8 C6 3D F0 FF 		      	lw   	r3,-8[bp]
012CBC 8C 31 1E 00 		      	and  	r3,r3,#15
012CC0 C6 4D F0 FF 		      	lw   	r4,-8[bp]
012CC4 0C 42 E0 00 		      	and  	r4,r4,#112
012CC8 02 42 08 78 		      	asri 	r4,r4,#4
012CCC 07 42 14 00 		      	mul  	r4,r4,#10
012CD0 82 31 08 28 		      	addu 	r3,r3,r4
012CD4 E3 3D F0 FF 		      	sw   	r3,-8[bp]
012CD8 C6 3D F0 FF 		      	lw   	r3,-8[bp]
012CDC 63 36 00 00 		      	sw   	r3,[r12]
                	set_time_serial_12:
                	set_time_serial_14:
012CE0 57 1F 11 00 		      	pop  	r17
012CE4 57 0F 11 00 		      	pop  	r16
012CE8 57 FF 10 00 		      	pop  	r15
012CEC 57 EF 10 00 		      	pop  	r14
012CF0 57 DF 10 00 		      	pop  	r13
012CF4 57 CF 10 00 		      	pop  	r12
012CF8 57 BF 10 00 		      	pop  	r11
012CFC 82 ED 01 1A 		      	mov  	sp,bp
012D00 57 BF 11 00 		      	pop  	bp
012D04 37 FF 21 00 		      	rtl  	#16
                	ToJul:
012D08 15 EF 21 00 		      	subui	sp,sp,#16
012D0C E7 ED 01 00 		      	push 	bp
012D10 02 BF 01 1A 		      	mov  	bp,sp
012D14 15 EF 41 00 		      	subui	sp,sp,#32
012D18 C6 3D 50 00 		      	lw   	r3,40[bp]
012D1C E3 3D E0 FF 		      	sw   	r3,-16[bp]
012D20 C6 3D 60 00 		      	lw   	r3,48[bp]
012D24 E3 3D D0 FF 		      	sw   	r3,-24[bp]
012D28 C6 3D 70 00 		      	lw   	r3,56[bp]
012D2C E3 3D C0 FF 		      	sw   	r3,-32[bp]
012D30 FC FF FF FF 		      	ldi  	r3,#-32075
012D34 0A 30 6A 05 
012D38 C6 4D C0 FF 		      	lw   	r4,-32[bp]
012D3C 7C 6B 00 00 		      	ldi  	r5,#7012800
012D40 0A 50 80 03 
012D44 C6 6D E0 FF 		      	lw   	r6,-16[bp]
012D48 C6 7D D0 FF 		      	lw   	r7,-24[bp]
012D4C 95 73 1C 00 		      	subu 	r7,r7,#14
012D50 88 73 18 00 		      	divs 	r7,r7,#12
012D54 02 63 0E 28 		      	addu 	r6,r6,r7
012D58 07 63 6A 0B 		      	mul  	r6,r6,#1461
012D5C 82 52 0C 28 		      	addu 	r5,r5,r6
012D60 82 52 04 78 		      	asri 	r5,r5,#2
012D64 02 42 0A 28 		      	addu 	r4,r4,r5
012D68 0A 50 44 FA 		      	ldi  	r5,#-734
012D6C C6 6D D0 FF 		      	lw   	r6,-24[bp]
012D70 C6 7D D0 FF 		      	lw   	r7,-24[bp]
012D74 95 73 1C 00 		      	subu 	r7,r7,#14
012D78 88 73 18 00 		      	divs 	r7,r7,#12
012D7C 87 73 18 00 		      	mul  	r7,r7,#12
012D80 02 63 0E 2A 		      	subu 	r6,r6,r7
012D84 07 63 DE 02 		      	mul  	r6,r6,#367
012D88 82 52 0C 28 		      	addu 	r5,r5,r6
012D8C 88 52 18 00 		      	divs 	r5,r5,#12
012D90 02 42 0A 28 		      	addu 	r4,r4,r5
012D94 0A 50 48 26 		      	ldi  	r5,#4900
012D98 C6 6D E0 FF 		      	lw   	r6,-16[bp]
012D9C C6 7D D0 FF 		      	lw   	r7,-24[bp]
012DA0 95 73 1C 00 		      	subu 	r7,r7,#14
012DA4 88 73 18 00 		      	divs 	r7,r7,#12
012DA8 02 63 0E 28 		      	addu 	r6,r6,r7
012DAC 82 52 0C 28 		      	addu 	r5,r5,r6
012DB0 88 52 C8 00 		      	divs 	r5,r5,#100
012DB4 87 52 06 00 		      	mul  	r5,r5,#3
012DB8 82 52 04 78 		      	asri 	r5,r5,#2
012DBC 02 42 0A 2A 		      	subu 	r4,r4,r5
012DC0 82 31 08 28 		      	addu 	r3,r3,r4
012DC4 E3 3D F0 FF 		      	sw   	r3,-8[bp]
012DC8 C6 3D F0 FF 		      	lw   	r3,-8[bp]
012DCC 82 11 00 1A 		      	mov  	r1,r3
                	set_time_serial_17:
012DD0 82 ED 01 1A 		      	mov  	sp,bp
012DD4 57 BF 11 00 		      	pop  	bp
012DD8 37 FF 21 00 		      	rtl  	#16
                	set_time_serial:
012DDC E7 EF 01 00 		      	push 	lr
012DE0 67 EE 01 00 		      	push 	xlr
012DE4 E7 ED 01 00 		      	push 	bp
012DE8 7C 01 00 00 		      	ldi  	xlr,#set_time_serial_19
012DEC 0A C0 21 5D 
012DF0 02 BF 01 1A 		      	mov  	bp,sp
012DF4 15 EF 91 00 		      	subui	sp,sp,#72
012DF8 E5 ED 81 FF 		      	pea  	-64[bp]
012DFC E5 ED 91 FF 		      	pea  	-56[bp]
012E00 E5 ED A1 FF 		      	pea  	-48[bp]
012E04 E5 ED B1 FF 		      	pea  	-40[bp]
012E08 E5 ED C1 FF 		      	pea  	-32[bp]
012E0C E5 ED D1 FF 		      	pea  	-24[bp]
012E10 39 A4 FF FF 		      	bsr  	get_datetime
012E14 14 EF 61 00 		      	addui	sp,sp,#48
012E18 C6 3D 80 FF 		      	lw   	r3,-64[bp]
012E1C 82 31 14 70 		      	asli 	r3,r3,#10
012E20 C6 4D 90 FF 		      	lw   	r4,-56[bp]
012E24 FC 00 00 00 		      	mul  	r4,r4,#61440
012E28 07 42 00 E0 
012E2C 82 31 08 28 		      	addu 	r3,r3,r4
012E30 C6 4D A0 FF 		      	lw   	r4,-48[bp]
012E34 7C 38 00 00 		      	mul  	r4,r4,#3686400
012E38 07 42 00 80 
012E3C 82 31 08 28 		      	addu 	r3,r3,r4
012E40 E7 E1 01 00 		      	push 	r3
012E44 E6 ED B1 FF 		      	push 	-40[bp]
012E48 E6 ED C1 FF 		      	push 	-32[bp]
012E4C E6 ED D1 FF 		      	push 	-24[bp]
012E50 39 D7 FF FF 		      	bsr  	ToJul
012E54 14 EF 31 00 		      	addui	sp,sp,#24
012E58 57 3F 10 00 		      	pop  	r3
012E5C 82 40 00 1A 		      	mov  	r4,r1
012E60 7C 46 05 00 		      	mul  	r4,r4,#88473600
012E64 07 42 00 00 
012E68 82 31 08 28 		      	addu 	r3,r3,r4
012E6C 7C C2 00 00 		      	sw   	r3,Milliseconds
012E70 63 30 10 02 
012E74 C6 3D E0 FF 		      	lw   	r3,-16[bp]
012E78 82 11 00 1A 		      	mov  	r1,r3
                	set_time_serial_20:
012E7C 82 ED 01 1A 		      	mov  	sp,bp
012E80 57 BF 11 00 		      	pop  	bp
012E84 57 CF 11 00 		      	pop  	xlr
012E88 57 FF 11 00 		      	pop  	lr
012E8C 37 FF 01 00 		      	rtl  	#0
                	set_time_serial_19:
012E90 C6 FD 11 00 		      	lw   	lr,8[bp]
012E94 E3 FD 21 00 		      	sw   	lr,16[bp]
012E98 BA FC FF FF 		      	bra  	set_time_serial_20
                		code
012E9C 00 00 00 00 		align	1
                	
                	public code sprite_main:
012EA0 E7 EF 01 00 		      	     	          push  lr
012EA4 FC C2 00 00 	          lea   sp,demo_stack+4088
012EA8 47 E0 01 00 
012EAC 39 01 00 00 	          bsr   sprite_demo
012EB0 3B FF 11 00 	          rts
      
                	endpublic
                	
                	sprite_demo:
012EB4 E7 EF 01 00 		      	push 	lr
012EB8 67 EE 01 00 		      	push 	xlr
012EBC E7 ED 01 00 		      	push 	bp
012EC0 7C 01 00 00 		      	ldi  	xlr,#sprite_demo_3
012EC4 0A C0 E1 61 
012EC8 02 BF 01 1A 		      	mov  	bp,sp
012ECC 15 EF 31 00 		      	subui	sp,sp,#24
012ED0 E7 E5 01 00 		      	push 	r11
012ED4 67 E6 01 00 		      	push 	r12
012ED8 E7 E6 01 00 		      	push 	r13
012EDC FC C2 00 00 		      	ldi  	r11,#sprites
012EE0 0A B0 10 00 
012EE4 7C DC FF 00 		      	ldi  	r12,#4292611072
012EE8 0A C0 00 18 
012EEC 7C D8 FF 00 		      	ldi  	r13,#4292345856
012EF0 0A D0 00 00 
012EF4 E3 0D F0 FF 		      	sw   	r0,-8[bp]
                	sprite_demo_4:
012EF8 C6 3D F0 FF 		      	lw   	r3,-8[bp]
012EFC 86 31 40 00 		      	cmp  	r3,r3,#32
012F00 BD 31 18 00 		      	bge  	r3,sprite_demo_5
012F04 C6 3D F0 FF 		      	lw   	r3,-8[bp]
012F08 82 31 04 70 		      	asli 	r3,r3,#2
012F0C 82 31 04 70 		      	asli 	r3,r3,#2
012F10 7C C1 00 00 		      	lw   	r4,pSpriteController
012F14 46 40 00 00 
012F18 82 31 08 28 		      	addu 	r3,r3,r4
012F1C FC 00 00 00 		      	ldi  	r4,#56292
012F20 0A 40 C8 B7 
012F24 E2 41 08 00 		      	sh   	r4,4[r3]
                	sprite_demo_6:
012F28 E4 1D F0 FF 		      	inc  	-8[bp],#1
012F2C BA F9 FF FF 		      	bra  	sprite_demo_4
                	sprite_demo_5:
012F30 E3 0D F0 FF 		      	sw   	r0,-8[bp]
                	sprite_demo_7:
012F34 C6 3D F0 FF 		      	lw   	r3,-8[bp]
012F38 7C 00 00 00 		      	cmp  	r3,r3,#16384
012F3C 86 31 00 80 
012F40 BD 31 0E 00 		      	bge  	r3,sprite_demo_8
012F44 C6 3D F0 FF 		      	lw   	r3,-8[bp]
012F48 82 31 04 70 		      	asli 	r3,r3,#2
012F4C 45 46 00 00 		      	lhu  	r4,[r12]
012F50 EA 46 06 00 		      	sh   	r4,0[r13+r3]
                	sprite_demo_9:
012F54 E4 1D F0 FF 		      	inc  	-8[bp],#1
012F58 BA FB FF FF 		      	bra  	sprite_demo_7
                	sprite_demo_8:
012F5C E3 0D F0 FF 		      	sw   	r0,-8[bp]
                	sprite_demo_10:
012F60 C6 3D F0 FF 		      	lw   	r3,-8[bp]
012F64 86 31 40 00 		      	cmp  	r3,r3,#32
012F68 BD 31 3C 00 		      	bge  	r3,sprite_demo_11
012F6C 46 36 00 00 		      	lw   	r3,[r12]
012F70 89 31 A8 0A 		      	mod  	r3,r3,#1364
012F74 94 31 B4 01 		      	addu 	r3,r3,#218
012F78 C6 4D F0 FF 		      	lw   	r4,-8[bp]
012F7C 02 42 0A 70 		      	asli 	r4,r4,#5
012F80 EB 35 08 00 		      	sw   	r3,0[r11+r4]
012F84 46 36 00 00 		      	lw   	r3,[r12]
012F88 89 31 00 06 		      	mod  	r3,r3,#768
012F8C 94 31 36 00 		      	addu 	r3,r3,#27
012F90 C6 4D F0 FF 		      	lw   	r4,-8[bp]
012F94 02 42 0A 70 		      	asli 	r4,r4,#5
012F98 02 42 16 28 		      	addu 	r4,r4,r11
012F9C 63 32 10 00 		      	sw   	r3,8[r4]
012FA0 46 36 00 00 		      	lw   	r3,[r12]
012FA4 8C 31 0E 00 		      	and  	r3,r3,#7
012FA8 95 31 08 00 		      	subu 	r3,r3,#4
012FAC C6 4D F0 FF 		      	lw   	r4,-8[bp]
012FB0 02 42 0A 70 		      	asli 	r4,r4,#5
012FB4 02 42 16 28 		      	addu 	r4,r4,r11
012FB8 63 32 20 00 		      	sw   	r3,16[r4]
012FBC 46 36 00 00 		      	lw   	r3,[r12]
012FC0 8C 31 0E 00 		      	and  	r3,r3,#7
012FC4 95 31 08 00 		      	subu 	r3,r3,#4
012FC8 C6 4D F0 FF 		      	lw   	r4,-8[bp]
012FCC 02 42 0A 70 		      	asli 	r4,r4,#5
012FD0 02 42 16 28 		      	addu 	r4,r4,r11
012FD4 63 32 30 00 		      	sw   	r3,24[r4]
                	sprite_demo_12:
012FD8 E4 1D F0 FF 		      	inc  	-8[bp],#1
012FDC BA F0 FF FF 		      	bra  	sprite_demo_10
                	sprite_demo_11:
                	sprite_demo_13:
012FE0 0A 30 02 00 		      	ldi  	r3,#1
012FE4 BD 01 84 00 		      	beq  	r3,sprite_demo_14
012FE8 E3 0D F0 FF 		      	sw   	r0,-8[bp]
                	sprite_demo_15:
012FEC C6 3D F0 FF 		      	lw   	r3,-8[bp]
012FF0 86 31 40 00 		      	cmp  	r3,r3,#32
012FF4 BD 31 5C 00 		      	bge  	r3,sprite_demo_16
012FF8 C6 3D F0 FF 		      	lw   	r3,-8[bp]
012FFC 82 31 0A 70 		      	asli 	r3,r3,#5
013000 CE 35 06 00 		      	lw   	r3,0[r11+r3]
013004 C6 4D F0 FF 		      	lw   	r4,-8[bp]
013008 02 42 0A 70 		      	asli 	r4,r4,#5
01300C 02 42 16 28 		      	addu 	r4,r4,r11
013010 46 42 20 00 		      	lw   	r4,16[r4]
013014 82 31 08 28 		      	addu 	r3,r3,r4
013018 89 31 AC 0A 		      	mod  	r3,r3,#1366
01301C 94 31 B4 01 		      	addu 	r3,r3,#218
013020 C6 4D F0 FF 		      	lw   	r4,-8[bp]
013024 02 42 0A 70 		      	asli 	r4,r4,#5
013028 EB 35 08 00 		      	sw   	r3,0[r11+r4]
01302C C6 3D F0 FF 		      	lw   	r3,-8[bp]
013030 82 31 0A 70 		      	asli 	r3,r3,#5
013034 82 31 16 28 		      	addu 	r3,r3,r11
013038 C6 31 10 00 		      	lw   	r3,8[r3]
01303C C6 4D F0 FF 		      	lw   	r4,-8[bp]
013040 02 42 0A 70 		      	asli 	r4,r4,#5
013044 02 42 16 28 		      	addu 	r4,r4,r11
013048 46 42 30 00 		      	lw   	r4,24[r4]
01304C 82 31 08 28 		      	addu 	r3,r3,r4
013050 89 31 00 06 		      	mod  	r3,r3,#768
013054 94 31 36 00 		      	addu 	r3,r3,#27
013058 C6 4D F0 FF 		      	lw   	r4,-8[bp]
01305C 02 42 0A 70 		      	asli 	r4,r4,#5
013060 02 42 16 28 		      	addu 	r4,r4,r11
013064 63 32 10 00 		      	sw   	r3,8[r4]
013068 C6 3D F0 FF 		      	lw   	r3,-8[bp]
01306C 82 31 0A 70 		      	asli 	r3,r3,#5
013070 CE 35 06 00 		      	lw   	r3,0[r11+r3]
013074 C6 4D F0 FF 		      	lw   	r4,-8[bp]
013078 02 42 0A 70 		      	asli 	r4,r4,#5
01307C 02 42 16 28 		      	addu 	r4,r4,r11
013080 46 42 10 00 		      	lw   	r4,8[r4]
013084 02 42 20 70 		      	asli 	r4,r4,#16
013088 82 31 08 28 		      	addu 	r3,r3,r4
01308C C6 4D F0 FF 		      	lw   	r4,-8[bp]
013090 02 42 04 70 		      	asli 	r4,r4,#2
013094 02 42 04 70 		      	asli 	r4,r4,#2
013098 7C C1 00 00 		      	lw   	r5,pSpriteController
01309C 46 50 00 00 
0130A0 EA 32 08 00 		      	sh   	r3,0[r5+r4]
                	sprite_demo_17:
0130A4 E4 1D F0 FF 		      	inc  	-8[bp],#1
0130A8 BA E8 FF FF 		      	bra  	sprite_demo_15
                	sprite_demo_16:
0130AC 7C 0F 00 00 		      	     	            ldi  r1,#1000000
0130B0 0A 10 80 84 
0130B4 B9 F8 FE FF 	            bsr  MicroDelay
                	        
0130B8 B9 A4 04 00 		      	bsr  	getcharNoWait
0130BC 82 30 00 1A 		      	mov  	r3,r1
0130C0 86 31 06 00 		      	cmp  	r3,r3,#3
0130C4 BD 11 12 00 		      	bne  	r3,sprite_demo_18
                	sprite_demo_20:
0130C8 57 DF 10 00 		      	pop  	r13
0130CC 57 CF 10 00 		      	pop  	r12
0130D0 57 BF 10 00 		      	pop  	r11
0130D4 82 ED 01 1A 		      	mov  	sp,bp
0130D8 57 BF 11 00 		      	pop  	bp
0130DC 57 CF 11 00 		      	pop  	xlr
0130E0 57 FF 11 00 		      	pop  	lr
0130E4 37 FF 01 00 		      	rtl  	#0
                	sprite_demo_18:
0130E8 3A DF FF FF 		      	bra  	sprite_demo_13
                	sprite_demo_14:
0130EC BA FB FF FF 		      	bra  	sprite_demo_20
                	sprite_demo_3:
0130F0 C6 FD 11 00 		      	lw   	lr,8[bp]
0130F4 E3 FD 21 00 		      	sw   	lr,16[bp]
0130F8 3A FA FF FF 		      	bra  	sprite_demo_20
                		code
0130FC 00 00 00 00 		align	1
                	
                	public code getCPU:
013100 02 10 00 6C 		      	     	         cpuid r1,r0,#0
013104 37 FF 01 00 	         rtl
     
                	endpublic
                	
                	public code SetBound48:
013108 15 EF 21 00 		      	subui	sp,sp,#16
01310C E7 ED 01 00 		      	push 	bp
013110 02 BF 01 1A 		      	mov  	bp,sp
013114 C6 1D 30 00 		      	     	     lw      r1,24[bp]
013118 82 00 E0 3C 	     mtspr   112,r1      ; set lower bound
01311C C7 1D 40 00 	     lea     r1,32[bp]
013120 82 00 60 3D 	     mtspr   176,r1      ; set upper bound
013124 02 00 E0 3D 	     mtspr   240,r0      ; modulo mask not used
                	     
                	FMTKc_3:
013128 82 ED 01 1A 		      	mov  	sp,bp
01312C 57 BF 11 00 		      	pop  	bp
013130 37 FF 21 00 		      	rtl  	#16
                	endpublic
                	
                	public code SetBound49:
013134 15 EF 21 00 		      	subui	sp,sp,#16
013138 E7 ED 01 00 		      	push 	bp
01313C 02 BF 01 1A 		      	mov  	bp,sp
013140 C6 1D 30 00 		      	     	     lw      r1,24[bp]
013144 82 00 E2 3C 	     mtspr   113,r1      ; set lower bound
013148 C7 1D 40 00 	     lea     r1,32[bp]
01314C 82 00 62 3D 	     mtspr   177,r1      ; set upper bound
013150 02 00 E2 3D 	     mtspr   241,r0      ; modulo mask not used
                	     
                	FMTKc_5:
013154 82 ED 01 1A 		      	mov  	sp,bp
013158 57 BF 11 00 		      	pop  	bp
01315C 37 FF 21 00 		      	rtl  	#16
                	endpublic
                	
                	public code SetBound50:
013160 15 EF 21 00 		      	subui	sp,sp,#16
013164 E7 ED 01 00 		      	push 	bp
013168 02 BF 01 1A 		      	mov  	bp,sp
01316C C6 1D 30 00 		      	     	     lw      r1,24[bp]
013170 82 00 E4 3C 	     mtspr   114,r1      ; set lower bound
013174 C7 1D 40 00 	     lea     r1,32[bp]
013178 82 00 64 3D 	     mtspr   178,r1      ; set upper bound
01317C 02 00 E4 3D 	     mtspr   242,r0      ; modulo mask not used
                	     
                	FMTKc_7:
013180 82 ED 01 1A 		      	mov  	sp,bp
013184 57 BF 11 00 		      	pop  	bp
013188 37 FF 21 00 		      	rtl  	#16
                	endpublic
                	
                	public code SetBound51:
01318C 15 EF 21 00 		      	subui	sp,sp,#16
013190 E7 ED 01 00 		      	push 	bp
013194 02 BF 01 1A 		      	mov  	bp,sp
013198 C6 1D 30 00 		      	     	     lw      r1,24[bp]
01319C 82 00 E6 3C 	     mtspr   115,r1      ; set lower bound
0131A0 C7 1D 40 00 	     lea     r1,32[bp]
0131A4 82 00 66 3D 	     mtspr   179,r1      ; set upper bound
0131A8 02 00 E6 3D 	     mtspr   243,r0      ; modulo mask not used
                	     
                	FMTKc_9:
0131AC 82 ED 01 1A 		      	mov  	sp,bp
0131B0 57 BF 11 00 		      	pop  	bp
0131B4 37 FF 21 00 		      	rtl  	#16
                	endpublic
                	
                	public code chkTCB:
0131B8 15 EF 21 00 		      	subui	sp,sp,#16
0131BC E7 ED 01 00 		      	push 	bp
0131C0 02 BF 01 1A 		      	mov  	bp,sp
0131C4 C6 1D 30 00 		      	     	        lw    r1,24[bp]
0131C8 82 10 60 34 	        chk   r1,r1,b48
                	    
                	FMTKc_11:
0131CC 82 ED 01 1A 		      	mov  	sp,bp
0131D0 57 BF 11 00 		      	pop  	bp
0131D4 37 FF 21 00 		      	rtl  	#16
                	endpublic
                	
                	public code GetRunningTCB:
0131D8 02 1C 00 1A 		      	     	        mov r1,tr
0131DC 37 FF 01 00 	        rtl
    
                	endpublic
                	
                	public code SetRunningTCB:
0131E0 15 EF 21 00 		      	subui	sp,sp,#16
0131E4 E7 ED 01 00 		      	push 	bp
0131E8 02 BF 01 1A 		      	mov  	bp,sp
0131EC C6 8D 31 00 		      	     	         lw  tr,24[bp]
                	     
                	FMTKc_15:
0131F0 82 ED 01 1A 		      	mov  	sp,bp
0131F4 57 BF 11 00 		      	pop  	bp
0131F8 37 FF 21 00 		      	rtl  	#16
                	endpublic
                	
                	public code DisplayIRQLive:
0131FC 7C D0 FF 00 		      	     	         inc  $FFD00000+220,#1
013200 64 10 B8 01 
013204 37 FF 01 00 	         rtl
     
                	endpublic
                	
                	public code GetJCBPtr:
013208 E7 EF 01 00 		      	push 	lr
01320C 67 EE 01 00 		      	push 	xlr
013210 E7 ED 01 00 		      	push 	bp
013214 7C 01 00 00 		      	ldi  	xlr,#FMTKc_18
013218 0A C0 89 64 
01321C 02 BF 01 1A 		      	mov  	bp,sp
013220 39 F7 FF FF 		      	bsr  	GetRunningTCB
013224 82 30 00 1A 		      	mov  	r3,r1
013228 C6 31 F0 02 		      	lw   	r3,376[r3]
01322C 82 11 00 1A 		      	mov  	r1,r3
                	FMTKc_19:
013230 82 ED 01 1A 		      	mov  	sp,bp
013234 57 BF 11 00 		      	pop  	bp
013238 57 CF 11 00 		      	pop  	xlr
01323C 57 FF 11 00 		      	pop  	lr
013240 37 FF 01 00 		      	rtl  	#0
                	FMTKc_18:
013244 C6 FD 11 00 		      	lw   	lr,8[bp]
013248 E3 FD 21 00 		      	sw   	lr,16[bp]
01324C BA FC FF FF 		      	bra  	FMTKc_19
                	endpublic
                	
                	InsertIntoReadyList:
013250 E7 EF 01 00 		      	push 	lr
013254 67 EE 01 00 		      	push 	xlr
013258 E7 ED 01 00 		      	push 	bp
01325C 7C 01 00 00 		      	ldi  	xlr,#FMTKc_21
013260 0A C0 51 66 
013264 02 BF 01 1A 		      	mov  	bp,sp
013268 15 EF 11 00 		      	subui	sp,sp,#8
01326C E7 E5 01 00 		      	push 	r11
013270 67 E6 01 00 		      	push 	r12
013274 E6 ED 31 00 		      	push 	24[bp]
013278 39 E8 FF FF 		      	bsr  	chkTCB
01327C 14 EF 11 00 		      	addui	sp,sp,#8
013280 82 30 00 1A 		      	mov  	r3,r1
013284 BD 11 12 00 		      	bne  	r3,FMTKc_22
013288 0A 10 02 00 		      	ldi  	r1,#1
                	FMTKc_24:
01328C 57 CF 10 00 		      	pop  	r12
013290 57 BF 10 00 		      	pop  	r11
013294 82 ED 01 1A 		      	mov  	sp,bp
013298 57 BF 11 00 		      	pop  	bp
01329C 57 CF 11 00 		      	pop  	xlr
0132A0 57 FF 11 00 		      	pop  	lr
0132A4 37 FF 01 00 		      	rtl  	#0
                	FMTKc_22:
0132A8 C0 35 10 03 		      	lb   	r3,392[r11]
0132AC 86 31 0E 00 		      	cmp  	r3,r3,#7
0132B0 BD 21 06 00 		      	bgt  	r3,FMTKc_27
0132B4 C0 35 10 03 		      	lb   	r3,392[r11]
0132B8 BD 31 06 00 		      	bge  	r3,FMTKc_25
                	FMTKc_27:
0132BC 0A 10 04 00 		      	ldi  	r1,#2
0132C0 BA F9 FF FF 		      	bra  	FMTKc_24
                	FMTKc_25:
0132C4 0A 30 20 00 		      	ldi  	r3,#16
0132C8 E0 35 12 03 		      	sb   	r3,393[r11]
0132CC C0 35 10 03 		      	lb   	r3,392[r11]
0132D0 82 31 00 20 		      	sxb  	r3,r3
0132D4 82 31 06 70 		      	asli 	r3,r3,#3
0132D8 7C C5 00 00 		      	lw   	r12,readyQ[r3]
0132DC C6 C1 A0 E4 
0132E0 3D 16 14 00 		      	bne  	r12,FMTKc_28
0132E4 E3 B5 70 02 		      	sw   	r11,312[r11]
0132E8 E3 B5 80 02 		      	sw   	r11,320[r11]
0132EC C0 35 10 03 		      	lb   	r3,392[r11]
0132F0 82 31 00 20 		      	sxb  	r3,r3
0132F4 82 31 06 70 		      	asli 	r3,r3,#3
0132F8 7C C5 00 00 		      	sw   	r11,readyQ[r3]
0132FC E3 B1 A0 E4 
013300 0A 10 00 00 		      	ldi  	r1,#0
013304 3A F1 FF FF 		      	bra  	FMTKc_24
                	FMTKc_28:
013308 E3 C5 70 02 		      	sw   	r12,312[r11]
01330C 46 36 80 02 		      	lw   	r3,320[r12]
013310 E3 35 80 02 		      	sw   	r3,320[r11]
013314 46 36 80 02 		      	lw   	r3,320[r12]
013318 E3 B1 70 02 		      	sw   	r11,312[r3]
01331C 63 B6 80 02 		      	sw   	r11,320[r12]
013320 0A 10 00 00 		      	ldi  	r1,#0
013324 3A ED FF FF 		      	bra  	FMTKc_24
                	FMTKc_21:
013328 C6 FD 11 00 		      	lw   	lr,8[bp]
01332C E3 FD 21 00 		      	sw   	lr,16[bp]
013330 BA EB FF FF 		      	bra  	FMTKc_24
                	RemoveFromReadyList:
013334 E7 EF 01 00 		      	push 	lr
013338 67 EE 01 00 		      	push 	xlr
01333C E7 ED 01 00 		      	push 	bp
013340 7C 01 00 00 		      	ldi  	xlr,#FMTKc_31
013344 0A C0 51 68 
013348 02 BF 01 1A 		      	mov  	bp,sp
01334C E7 E5 01 00 		      	push 	r11
013350 67 E6 01 00 		      	push 	r12
013354 C6 BD 30 00 		      	lw   	r11,24[bp]
013358 7C C5 00 00 		      	ldi  	r12,#readyQ
01335C 0A C0 A0 E4 
013360 E7 E5 01 00 		      	push 	r11
013364 B9 CA FF FF 		      	bsr  	chkTCB
013368 14 EF 11 00 		      	addui	sp,sp,#8
01336C 82 30 00 1A 		      	mov  	r3,r1
013370 BD 11 12 00 		      	bne  	r3,FMTKc_32
013374 0A 10 02 00 		      	ldi  	r1,#1
                	FMTKc_34:
013378 57 CF 10 00 		      	pop  	r12
01337C 57 BF 10 00 		      	pop  	r11
013380 82 ED 01 1A 		      	mov  	sp,bp
013384 57 BF 11 00 		      	pop  	bp
013388 57 CF 11 00 		      	pop  	xlr
01338C 57 FF 11 00 		      	pop  	lr
013390 37 FF 01 00 		      	rtl  	#0
                	FMTKc_32:
013394 C0 35 10 03 		      	lb   	r3,392[r11]
013398 86 31 0E 00 		      	cmp  	r3,r3,#7
01339C BD 21 06 00 		      	bgt  	r3,FMTKc_37
0133A0 C0 35 10 03 		      	lb   	r3,392[r11]
0133A4 BD 31 06 00 		      	bge  	r3,FMTKc_35
                	FMTKc_37:
0133A8 0A 10 04 00 		      	ldi  	r1,#2
0133AC BA F9 FF FF 		      	bra  	FMTKc_34
                	FMTKc_35:
0133B0 C0 35 10 03 		      	lb   	r3,392[r11]
0133B4 82 31 00 20 		      	sxb  	r3,r3
0133B8 82 31 06 70 		      	asli 	r3,r3,#3
0133BC 4E 36 06 00 		      	lw   	r3,0[r12+r3]
0133C0 82 B5 06 0C 		      	cmp  	r11,r11,r3
0133C4 BD 15 0C 00 		      	bne  	r11,FMTKc_38
0133C8 C0 35 10 03 		      	lb   	r3,392[r11]
0133CC 82 31 00 20 		      	sxb  	r3,r3
0133D0 82 31 06 70 		      	asli 	r3,r3,#3
0133D4 C6 45 70 02 		      	lw   	r4,312[r11]
0133D8 6B 46 06 00 		      	sw   	r4,0[r12+r3]
                	FMTKc_38:
0133DC C0 35 10 03 		      	lb   	r3,392[r11]
0133E0 82 31 00 20 		      	sxb  	r3,r3
0133E4 82 31 06 70 		      	asli 	r3,r3,#3
0133E8 4E 36 06 00 		      	lw   	r3,0[r12+r3]
0133EC 82 B5 06 0C 		      	cmp  	r11,r11,r3
0133F0 BD 15 06 00 		      	bne  	r11,FMTKc_40
0133F4 82 B5 06 70 		      	asli 	r11,r11,#3
0133F8 6B 06 16 00 		      	sw   	r0,0[r12+r11]
                	FMTKc_40:
0133FC C6 35 70 02 		      	lw   	r3,312[r11]
013400 C6 45 80 02 		      	lw   	r4,320[r11]
013404 E3 41 80 02 		      	sw   	r4,320[r3]
013408 C6 35 80 02 		      	lw   	r3,320[r11]
01340C C6 45 70 02 		      	lw   	r4,312[r11]
013410 E3 41 70 02 		      	sw   	r4,312[r3]
013414 E3 05 70 02 		      	sw   	r0,312[r11]
013418 E3 05 80 02 		      	sw   	r0,320[r11]
01341C E0 05 12 03 		      	sb   	r0,393[r11]
013420 0A 10 00 00 		      	ldi  	r1,#0
013424 BA EA FF FF 		      	bra  	FMTKc_34
                	FMTKc_31:
013428 C6 FD 11 00 		      	lw   	lr,8[bp]
01342C E3 FD 21 00 		      	sw   	lr,16[bp]
013430 3A E9 FF FF 		      	bra  	FMTKc_34
                	InsertIntoTimeoutList:
013434 15 EF 21 00 		      	subui	sp,sp,#16
013438 E7 ED 01 00 		      	push 	bp
01343C 02 BF 01 1A 		      	mov  	bp,sp
013440 15 EF 21 00 		      	subui	sp,sp,#16
013444 E7 E5 01 00 		      	push 	r11
013448 67 E6 01 00 		      	push 	r12
01344C E7 E6 01 00 		      	push 	r13
013450 C6 CD 30 00 		      	lw   	r12,24[bp]
013454 FC 14 01 00 		      	ldi  	r13,#TimeoutList
013458 0A D0 E0 D5 
01345C C6 36 00 00 		      	lw   	r3,[r13]
013460 BD 11 1A 00 		      	bne  	r3,FMTKc_44
013464 C6 3D 40 00 		      	lw   	r3,32[bp]
013468 63 36 E0 02 		      	sw   	r3,368[r12]
01346C E3 C6 00 00 		      	sw   	r12,[r13]
013470 63 06 70 02 		      	sw   	r0,312[r12]
013474 63 06 80 02 		      	sw   	r0,320[r12]
013478 0A 10 00 00 		      	ldi  	r1,#0
                	FMTKc_46:
01347C 57 DF 10 00 		      	pop  	r13
013480 57 CF 10 00 		      	pop  	r12
013484 57 BF 10 00 		      	pop  	r11
013488 82 ED 01 1A 		      	mov  	sp,bp
01348C 57 BF 11 00 		      	pop  	bp
013490 37 FF 21 00 		      	rtl  	#16
                	FMTKc_44:
013494 E3 0D E0 FF 		      	sw   	r0,-16[bp]
013498 C6 B6 00 00 		      	lw   	r11,[r13]
                	FMTKc_47:
01349C C6 3D 40 00 		      	lw   	r3,32[bp]
0134A0 C6 45 E0 02 		      	lw   	r4,368[r11]
0134A4 82 31 08 0C 		      	cmp  	r3,r3,r4
0134A8 BD 51 10 00 		      	ble  	r3,FMTKc_48
0134AC C6 35 E0 02 		      	lw   	r3,368[r11]
0134B0 C6 4D 40 00 		      	lw   	r4,32[bp]
0134B4 02 42 06 2A 		      	subu 	r4,r4,r3
0134B8 E3 4D 40 00 		      	sw   	r4,32[bp]
0134BC E3 BD E0 FF 		      	sw   	r11,-16[bp]
0134C0 C6 B5 70 02 		      	lw   	r11,312[r11]
0134C4 3A FB FF FF 		      	bra  	FMTKc_47
                	FMTKc_48:
0134C8 63 B6 70 02 		      	sw   	r11,312[r12]
0134CC C6 3D E0 FF 		      	lw   	r3,-16[bp]
0134D0 63 36 80 02 		      	sw   	r3,320[r12]
0134D4 BD 05 0C 00 		      	beq  	r11,FMTKc_49
0134D8 C6 3D 40 00 		      	lw   	r3,32[bp]
0134DC C6 45 E0 02 		      	lw   	r4,368[r11]
0134E0 02 42 06 2A 		      	subu 	r4,r4,r3
0134E4 E3 45 E0 02 		      	sw   	r4,368[r11]
0134E8 E3 C5 80 02 		      	sw   	r12,320[r11]
                	FMTKc_49:
0134EC C6 3D E0 FF 		      	lw   	r3,-16[bp]
0134F0 BD 01 08 00 		      	beq  	r3,FMTKc_51
0134F4 C6 3D E0 FF 		      	lw   	r3,-16[bp]
0134F8 E3 C1 70 02 		      	sw   	r12,312[r3]
0134FC 3A 01 00 00 		      	bra  	FMTKc_52
                	FMTKc_51:
013500 E3 C6 00 00 		      	sw   	r12,[r13]
                	FMTKc_52:
013504 40 36 12 03 		      	lb   	r3,393[r12]
013508 8D 31 02 00 		      	ori  	r3,r3,#1
01350C 60 36 12 03 		      	sb   	r3,393[r12]
013510 0A 10 00 00 		      	ldi  	r1,#0
013514 3A ED FF FF 		      	bra  	FMTKc_46
                	RemoveFromTimeoutList:
013518 15 EF 21 00 		      	subui	sp,sp,#16
01351C E7 ED 01 00 		      	push 	bp
013520 02 BF 01 1A 		      	mov  	bp,sp
013524 E7 E5 01 00 		      	push 	r11
013528 C6 BD 30 00 		      	lw   	r11,24[bp]
01352C C6 35 70 02 		      	lw   	r3,312[r11]
013530 BD 01 12 00 		      	beq  	r3,FMTKc_55
013534 C6 35 70 02 		      	lw   	r3,312[r11]
013538 C6 45 80 02 		      	lw   	r4,320[r11]
01353C E3 41 80 02 		      	sw   	r4,320[r3]
013540 C6 35 70 02 		      	lw   	r3,312[r11]
013544 C6 45 E0 02 		      	lw   	r4,368[r11]
013548 C6 51 E0 02 		      	lw   	r5,368[r3]
01354C 82 52 08 28 		      	addu 	r5,r5,r4
013550 E3 51 E0 02 		      	sw   	r5,368[r3]
                	FMTKc_55:
013554 C6 35 80 02 		      	lw   	r3,320[r11]
013558 BD 01 08 00 		      	beq  	r3,FMTKc_57
01355C C6 35 80 02 		      	lw   	r3,320[r11]
013560 C6 45 70 02 		      	lw   	r4,312[r11]
013564 E3 41 70 02 		      	sw   	r4,312[r3]
                	FMTKc_57:
013568 E0 05 12 03 		      	sb   	r0,393[r11]
01356C E3 05 70 02 		      	sw   	r0,312[r11]
013570 E3 05 80 02 		      	sw   	r0,320[r11]
                	FMTKc_59:
013574 57 BF 10 00 		      	pop  	r11
013578 82 ED 01 1A 		      	mov  	sp,bp
01357C 57 BF 11 00 		      	pop  	bp
013580 37 FF 21 00 		      	rtl  	#16
                	PopTimeoutList:
013584 15 EF 21 00 		      	subui	sp,sp,#16
013588 E7 ED 01 00 		      	push 	bp
01358C 02 BF 01 1A 		      	mov  	bp,sp
013590 15 EF 11 00 		      	subui	sp,sp,#8
013594 E7 E5 01 00 		      	push 	r11
013598 FC 14 01 00 		      	ldi  	r11,#TimeoutList
01359C 0A B0 E0 D5 
0135A0 C6 35 00 00 		      	lw   	r3,[r11]
0135A4 E3 3D F0 FF 		      	sw   	r3,-8[bp]
0135A8 C6 35 00 00 		      	lw   	r3,[r11]
0135AC BD 01 08 00 		      	beq  	r3,FMTKc_62
0135B0 C6 35 00 00 		      	lw   	r3,[r11]
0135B4 C6 41 70 02 		      	lw   	r4,312[r3]
0135B8 E3 45 00 00 		      	sw   	r4,[r11]
                	FMTKc_62:
0135BC C6 3D F0 FF 		      	lw   	r3,-8[bp]
0135C0 82 11 00 1A 		      	mov  	r1,r3
                	FMTKc_64:
0135C4 57 BF 10 00 		      	pop  	r11
0135C8 82 ED 01 1A 		      	mov  	sp,bp
0135CC 57 BF 11 00 		      	pop  	bp
0135D0 37 FF 21 00 		      	rtl  	#16
                		code
0135D4 00 00 00 00 		align	1
0135D8 00 00 00 00 
0135DC 00 00 00 00 
                	
                	SelectTaskToRun:
0135E0 E7 EF 01 00 		      	push 	lr
0135E4 67 EE 01 00 		      	push 	xlr
0135E8 E7 ED 01 00 		      	push 	bp
0135EC 7C 01 00 00 		      	ldi  	xlr,#FMTKc_69
0135F0 0A C0 11 6E 
0135F4 02 BF 01 1A 		      	mov  	bp,sp
0135F8 15 EF 41 00 		      	subui	sp,sp,#32
0135FC E7 E5 01 00 		      	push 	r11
013600 67 E6 01 00 		      	push 	r12
013604 7C C1 00 00 		      	ldi  	r12,#FMTKc_66
013608 0A C0 50 00 
01360C 40 36 00 00 		      	lb   	r3,[r12]
013610 94 31 02 00 		      	addui	r3,r3,#1
013614 60 36 00 00 		      	sb   	r3,[r12]
013618 40 36 00 00 		      	lb   	r3,[r12]
01361C 8C 31 3E 00 		      	andi 	r3,r3,#31
013620 60 36 00 00 		      	sb   	r3,[r12]
013624 40 36 00 00 		      	lb   	r3,[r12]
013628 82 31 00 20 		      	sxb  	r3,r3
01362C 7C C1 00 00 		      	lb   	r3,FMTKc_65[r3]
013630 C0 31 10 00 
013634 82 31 00 20 		      	sxb  	r3,r3
013638 82 31 00 20 		      	sxb  	r3,r3
01363C E3 3D C0 FF 		      	sw   	r3,-32[bp]
013640 E3 0D F0 FF 		      	sw   	r0,-8[bp]
                	FMTKc_70:
013644 C6 3D F0 FF 		      	lw   	r3,-8[bp]
013648 86 31 10 00 		      	cmp  	r3,r3,#8
01364C BD 31 56 00 		      	bge  	r3,FMTKc_71
013650 C6 3D C0 FF 		      	lw   	r3,-32[bp]
013654 82 31 06 70 		      	asli 	r3,r3,#3
013658 7C C5 00 00 		      	lw   	r4,readyQ[r3]
01365C C6 41 A0 E4 
013660 E3 4D E0 FF 		      	sw   	r4,-16[bp]
013664 C6 3D E0 FF 		      	lw   	r3,-16[bp]
013668 BD 01 3C 00 		      	beq  	r3,FMTKc_73
01366C C6 3D E0 FF 		      	lw   	r3,-16[bp]
013670 C6 B1 70 02 		      	lw   	r11,312[r3]
                	FMTKc_75:
013674 C0 35 12 03 		      	lb   	r3,393[r11]
013678 8C 31 10 00 		      	and  	r3,r3,#8
01367C BD 11 2A 00 		      	bne  	r3,FMTKc_77
013680 C0 35 14 03 		      	lb   	r3,394[r11]
013684 82 31 00 20 		      	sxb  	r3,r3
013688 E7 E1 01 00 		      	push 	r3
01368C B9 4E FF FF 		      	bsr  	getCPU
013690 57 3F 10 00 		      	pop  	r3
013694 82 40 00 1A 		      	mov  	r4,r1
013698 82 31 08 0C 		      	cmp  	r3,r3,r4
01369C BD 11 1A 00 		      	bne  	r3,FMTKc_79
0136A0 C6 3D C0 FF 		      	lw   	r3,-32[bp]
0136A4 82 31 06 70 		      	asli 	r3,r3,#3
0136A8 7C C5 00 00 		      	sw   	r11,readyQ[r3]
0136AC E3 B1 A0 E4 
0136B0 82 15 00 1A 		      	mov  	r1,r11
                	FMTKc_81:
0136B4 57 CF 10 00 		      	pop  	r12
0136B8 57 BF 10 00 		      	pop  	r11
0136BC 82 ED 01 1A 		      	mov  	sp,bp
0136C0 57 BF 11 00 		      	pop  	bp
0136C4 57 CF 11 00 		      	pop  	xlr
0136C8 57 FF 11 00 		      	pop  	lr
0136CC 37 FF 01 00 		      	rtl  	#0
                	FMTKc_79:
                	FMTKc_77:
0136D0 C6 B5 70 02 		      	lw   	r11,312[r11]
0136D4 C6 3D E0 FF 		      	lw   	r3,-16[bp]
0136D8 82 B5 06 0C 		      	cmp  	r11,r11,r3
0136DC BD 15 CC FF 		      	bne  	r11,FMTKc_75
                	FMTKc_76:
                	FMTKc_73:
0136E0 E4 1D C0 FF 		      	inc  	-32[bp],#1
0136E4 C6 3D C0 FF 		      	lw   	r3,-32[bp]
0136E8 8C 31 0E 00 		      	andi 	r3,r3,#7
0136EC E3 3D C0 FF 		      	sw   	r3,-32[bp]
                	FMTKc_72:
0136F0 E4 1D F0 FF 		      	inc  	-8[bp],#1
0136F4 3A EA FF FF 		      	bra  	FMTKc_70
                	FMTKc_71:
0136F8 39 5C FF FF 		      	bsr  	GetRunningTCB
0136FC 82 30 00 1A 		      	mov  	r3,r1
013700 82 11 00 1A 		      	mov  	r1,r3
013704 3A F6 FF FF 		      	bra  	FMTKc_81
                	FMTKc_69:
013708 C6 FD 11 00 		      	lw   	lr,8[bp]
01370C E3 FD 21 00 		      	sw   	lr,16[bp]
013710 BA F4 FF FF 		      	bra  	FMTKc_81
                	public code TimerIRQ:
013714 E7 E5 01 00 		      	push 	r11
013718 FC 14 01 00 		      	ldi  	r11,#TimeoutList
01371C 0A B0 E0 D5 
013720 FC F5 00 00 		      	     	         lea   sp,fmtk_irq_stack+4088
013724 47 E0 31 45 
013728 63 1C 10 00 	         sw    r1,8[tr]
01372C 63 2C 20 00 	         sw    r2,16[tr]
013730 63 3C 30 00 	         sw    r3,24[tr]
013734 63 4C 40 00 	         sw    r4,32[tr]
013738 63 5C 50 00 	         sw    r5,40[tr]
01373C 63 6C 60 00 	         sw    r6,48[tr]
013740 63 7C 70 00 	         sw    r7,56[tr]
013744 63 8C 80 00 	         sw    r8,64[tr]
013748 63 9C 90 00 	         sw    r9,72[tr]
01374C 63 AC A0 00 	         sw    r10,80[tr]
013750 63 BC B0 00 	         sw    r11,88[tr]
013754 63 CC C0 00 	         sw    r12,96[tr]
013758 63 DC D0 00 	         sw    r13,104[tr]
01375C 63 EC E0 00 	         sw    r14,112[tr]
013760 63 FC F0 00 	         sw    r15,120[tr]
013764 63 0C 01 01 	         sw    r16,128[tr]
013768 63 1C 11 01 	         sw    r17,136[tr]
01376C 63 2C 21 01 	         sw    r18,144[tr]
013770 63 3C 31 01 	         sw    r19,152[tr]
013774 63 4C 41 01 	         sw    r20,160[tr]
013778 63 5C 51 01 	         sw    r21,168[tr]
01377C 63 6C 61 01 	         sw    r22,176[tr]
013780 63 7C 71 01 	         sw    r23,184[tr]
013784 63 8C 81 01 	         sw    r24,192[tr]
013788 63 9C 91 01 	         sw    r25,200[tr]
01378C 63 AC A1 01 	         sw    r26,208[tr]
013790 63 BC B1 01 	         sw    r27,216[tr]
013794 63 CC C1 01 	         sw    r28,224[tr]
013798 63 DC D1 01 	         sw    r29,232[tr]
01379C 63 EC E1 01 	         sw    r30,240[tr]
0137A0 63 FC F1 01 	         sw    r31,248[tr]
0137A4 02 10 1E 3E 	         mfspr r1,isp
0137A8 63 1C 00 02 	         sw    r1,256[tr]
0137AC 02 10 20 3E 	         mfspr r1,dsp
0137B0 63 1C 10 02 	         sw    r1,264[tr]
0137B4 02 10 22 3E 	         mfspr r1,esp
0137B8 63 1C 20 02 	         sw    r1,272[tr]
0137BC 02 10 10 3E 	         mfspr r1,ipc
0137C0 63 1C 30 02 	         sw    r1,280[tr]
0137C4 02 10 0E 3E 	         mfspr r1,dpc
0137C8 63 1C 40 02 	         sw    r1,288[tr]
0137CC 02 10 12 3E 	         mfspr r1,epc
0137D0 63 1C 50 02 	         sw    r1,296[tr]
0137D4 02 10 00 3E 	         mfspr r1,cr0
0137D8 63 1C 60 02 	         sw    r1,304[tr]
                	     
0137DC 39 44 FF FF 		      	bsr  	DisplayIRQLive
0137E0 39 3F FF FF 		      	bsr  	GetRunningTCB
0137E4 82 30 00 1A 		      	mov  	r3,r1
0137E8 0A 40 08 00 		      	ldi  	r4,#4
0137EC E0 41 12 03 		      	sb   	r4,393[r3]
                	FMTKc_83:
0137F0 C6 35 00 00 		      	lw   	r3,[r11]
0137F4 BD 01 1C 00 		      	beq  	r3,FMTKc_84
0137F8 C6 35 00 00 		      	lw   	r3,[r11]
0137FC C6 31 E0 02 		      	lw   	r3,368[r3]
013800 BD 11 0E 00 		      	bne  	r3,FMTKc_85
013804 39 B0 FF FF 		      	bsr  	PopTimeoutList
013808 82 30 00 1A 		      	mov  	r3,r1
01380C E7 E1 01 00 		      	push 	r3
013810 39 48 FF FF 		      	bsr  	InsertIntoReadyList
013814 14 EF 11 00 		      	addui	sp,sp,#8
013818 3A 02 00 00 		      	bra  	FMTKc_86
                	FMTKc_85:
01381C C6 35 00 00 		      	lw   	r3,[r11]
013820 E4 F1 E1 02 		      	dec  	368[r3],#1
013824 3A 01 00 00 		      	bra  	FMTKc_84
                	FMTKc_86:
013828 3A F9 FF FF 		      	bra  	FMTKc_83
                	FMTKc_84:
01382C B9 FA D8 FF 		      	bsr  	SelectTasktoRun
013830 82 30 00 1A 		      	mov  	r3,r1
013834 E7 E1 01 00 		      	push 	r3
013838 39 35 FF FF 		      	bsr  	SetRunningTCB
01383C 14 EF 11 00 		      	addui	sp,sp,#8
013840 39 33 FF FF 		      	bsr  	GetRunningTCB
013844 82 30 00 1A 		      	mov  	r3,r1
013848 0A 40 10 00 		      	ldi  	r4,#8
01384C E0 41 12 03 		      	sb   	r4,393[r3]
                		      	     	RestoreContext:
013850 46 1C 00 02 	         lw    r1,256[tr]
013854 82 00 1E 3C 	         mtspr isp,r1
013858 46 1C 10 02 	         lw    r1,264[tr]
01385C 82 00 20 3C 	         mtspr dsp,r1
                	         sl    r1,272[tr]
013860 82 00 22 3C 	         mtspr esp,r1
013864 46 1C 30 02 	         lw    r1,280[tr]
013868 82 00 10 3C 	         mtspr ipc,r1
01386C 46 1C 40 02 	         lw    r1,288[tr]
013870 82 00 0E 3C 	         mtspr dpc,r1
013874 46 1C 50 02 	         lw    r1,296[tr]
013878 82 00 12 3C 	         mtspr epc,r1
01387C 46 1C 60 02 	         lw    r1,304[tr]
013880 82 00 00 3C 	         mtspr cr0,r1
013884 46 1C 10 00 	         lw    r1,8[tr]
013888 46 2C 20 00 	         lw    r2,16[tr]
01388C 46 3C 30 00 	         lw    r3,24[tr]
013890 46 4C 40 00 	         lw    r4,32[tr]
013894 46 5C 50 00 	         lw    r5,40[tr]
013898 46 6C 60 00 	         lw    r6,48[tr]
01389C 46 7C 70 00 	         lw    r7,56[tr]
0138A0 46 8C 80 00 	         lw    r8,64[tr]
0138A4 46 9C 90 00 	         lw    r9,72[tr]
0138A8 46 AC A0 00 	         lw    r10,80[tr]
0138AC 46 BC B0 00 	         lw    r11,88[tr]
0138B0 46 CC C0 00 	         lw    r12,96[tr]
0138B4 46 DC D0 00 	         lw    r13,104[tr]
0138B8 46 EC E0 00 	         lw    r14,112[tr]
0138BC 46 FC F0 00 	         lw    r15,120[tr]
0138C0 46 0C 01 01 	         lw    r16,128[tr]
0138C4 46 1C 11 01 	         lw    r17,136[tr]
0138C8 46 2C 21 01 	         lw    r18,144[tr]
0138CC 46 3C 31 01 	         lw    r19,152[tr]
0138D0 46 4C 41 01 	         lw    r20,160[tr]
0138D4 46 5C 51 01 	         lw    r21,168[tr]
0138D8 46 6C 61 01 	         lw    r22,176[tr]
0138DC 46 7C 71 01 	         lw    r23,184[tr]
0138E0 46 9C 91 01 	         lw    r25,200[tr]
0138E4 46 AC A1 01 	         lw    r26,208[tr]
0138E8 46 BC B1 01 	         lw    r27,216[tr]
0138EC 46 CC C1 01 	         lw    r28,224[tr]
0138F0 46 DC D1 01 	         lw    r29,232[tr]
0138F4 46 EC E1 01 	         lw    r30,240[tr]
0138F8 46 FC F1 01 	         lw    r31,248[tr]
0138FC 02 E0 3F 6E 	         rti
                	     
                	FMTKc_87:
                	FMTKc_82:
013900 C6 FD 11 00 		      	lw   	lr,8[bp]
013904 E3 FD 21 00 		      	sw   	lr,16[bp]
013908 3A FF FF FF 		      	bra  	FMTKc_87
                	endpublic
                	
                	public code RescheduleIRQ:
01390C FC F5 00 00 		      	     	         lea   sp,fmtk_irq_stack+4088
013910 47 E0 31 45 
013914 63 1C 10 00 	         sw    r1,8[tr]
013918 63 2C 20 00 	         sw    r2,16[tr]
01391C 63 3C 30 00 	         sw    r3,24[tr]
013920 63 4C 40 00 	         sw    r4,32[tr]
013924 63 5C 50 00 	         sw    r5,40[tr]
013928 63 6C 60 00 	         sw    r6,48[tr]
01392C 63 7C 70 00 	         sw    r7,56[tr]
013930 63 8C 80 00 	         sw    r8,64[tr]
013934 63 9C 90 00 	         sw    r9,72[tr]
013938 63 AC A0 00 	         sw    r10,80[tr]
01393C 63 BC B0 00 	         sw    r11,88[tr]
013940 63 CC C0 00 	         sw    r12,96[tr]
013944 63 DC D0 00 	         sw    r13,104[tr]
013948 63 EC E0 00 	         sw    r14,112[tr]
01394C 63 FC F0 00 	         sw    r15,120[tr]
013950 63 0C 01 01 	         sw    r16,128[tr]
013954 63 1C 11 01 	         sw    r17,136[tr]
013958 63 2C 21 01 	         sw    r18,144[tr]
01395C 63 3C 31 01 	         sw    r19,152[tr]
013960 63 4C 41 01 	         sw    r20,160[tr]
013964 63 5C 51 01 	         sw    r21,168[tr]
013968 63 6C 61 01 	         sw    r22,176[tr]
01396C 63 7C 71 01 	         sw    r23,184[tr]
013970 63 8C 81 01 	         sw    r24,192[tr]
013974 63 9C 91 01 	         sw    r25,200[tr]
013978 63 AC A1 01 	         sw    r26,208[tr]
01397C 63 BC B1 01 	         sw    r27,216[tr]
013980 63 CC C1 01 	         sw    r28,224[tr]
013984 63 DC D1 01 	         sw    r29,232[tr]
013988 63 EC E1 01 	         sw    r30,240[tr]
01398C 63 FC F1 01 	         sw    r31,248[tr]
013990 02 10 1E 3E 	         mfspr r1,isp
013994 63 1C 00 02 	         sw    r1,256[tr]
013998 02 10 20 3E 	         mfspr r1,dsp
01399C 63 1C 10 02 	         sw    r1,264[tr]
0139A0 02 10 22 3E 	         mfspr r1,esp
0139A4 63 1C 20 02 	         sw    r1,272[tr]
0139A8 02 10 10 3E 	         mfspr r1,ipc
0139AC 63 1C 30 02 	         sw    r1,280[tr]
0139B0 02 10 0E 3E 	         mfspr r1,dpc
0139B4 63 1C 40 02 	         sw    r1,288[tr]
0139B8 02 10 12 3E 	         mfspr r1,epc
0139BC 63 1C 50 02 	         sw    r1,296[tr]
0139C0 02 10 00 3E 	         mfspr r1,cr0
0139C4 63 1C 60 02 	         sw    r1,304[tr]
                	     
0139C8 39 02 FF FF 		      	bsr  	GetRunningTCB
0139CC 82 30 00 1A 		      	mov  	r3,r1
0139D0 0A 40 08 00 		      	ldi  	r4,#4
0139D4 E0 41 12 03 		      	sb   	r4,393[r3]
0139D8 39 C5 D8 FF 		      	bsr  	SelectTasktoRun
0139DC 82 30 00 1A 		      	mov  	r3,r1
0139E0 E7 E1 01 00 		      	push 	r3
0139E4 B9 FF FE FF 		      	bsr  	SetRunningTCB
0139E8 14 EF 11 00 		      	addui	sp,sp,#8
0139EC B9 FD FE FF 		      	bsr  	GetRunningTCB
0139F0 82 30 00 1A 		      	mov  	r3,r1
0139F4 0A 40 10 00 		      	ldi  	r4,#8
0139F8 E0 41 12 03 		      	sb   	r4,393[r3]
0139FC BA CA FF FF 		      	     	         bra   RestoreContext
                	     
                	FMTKc_89:
                	FMTKc_88:
013A00 C6 FD 11 00 		      	lw   	lr,8[bp]
013A04 E3 FD 21 00 		      	sw   	lr,16[bp]
013A08 3A FF FF FF 		      	bra  	FMTKc_89
                	endpublic
                	
                	public code panic:
013A0C E7 EF 01 00 		      	push 	lr
013A10 67 EE 01 00 		      	push 	xlr
013A14 E7 ED 01 00 		      	push 	bp
013A18 7C 01 00 00 		      	ldi  	xlr,#FMTKc_91
013A1C 0A C0 91 74 
013A20 02 BF 01 1A 		      	mov  	bp,sp
013A24 E6 ED 31 00 		      	push 	24[bp]
013A28 39 60 03 00 		      	bsr  	putstr
013A2C 14 EF 11 00 		      	addui	sp,sp,#8
                	FMTKc_90:
013A30 3A 00 00 00 		      	bra  	FMTKc_90
                	FMTKc_92:
013A34 82 ED 01 1A 		      	mov  	sp,bp
013A38 57 BF 11 00 		      	pop  	bp
013A3C 57 CF 11 00 		      	pop  	xlr
013A40 57 FF 11 00 		      	pop  	lr
013A44 37 FF 01 00 		      	rtl  	#0
                	FMTKc_91:
013A48 C6 FD 11 00 		      	lw   	lr,8[bp]
013A4C E3 FD 21 00 		      	sw   	lr,16[bp]
013A50 BA FC FF FF 		      	bra  	FMTKc_92
                	endpublic
                	
                	public code DumpTaskList:
013A54 E7 EF 01 00 		      	push 	lr
013A58 67 EE 01 00 		      	push 	xlr
013A5C E7 ED 01 00 		      	push 	bp
013A60 7C 01 00 00 		      	ldi  	xlr,#FMTKc_96
013A64 0A C0 61 76 
013A68 02 BF 01 1A 		      	mov  	bp,sp
013A6C 15 EF 31 00 		      	subui	sp,sp,#24
013A70 E7 E5 01 00 		      	push 	r11
013A74 FC 01 00 00 		      	push 	#FMTKc_93
013A78 65 E0 79 60 
013A7C 39 7C 03 00 		      	bsr  	printf
013A80 14 EF 11 00 		      	addui	sp,sp,#8
013A84 E3 0D D0 FF 		      	sw   	r0,-24[bp]
                	FMTKc_97:
013A88 C6 3D D0 FF 		      	lw   	r3,-24[bp]
013A8C 86 31 10 00 		      	cmp  	r3,r3,#8
013A90 BD 31 44 00 		      	bge  	r3,FMTKc_98
013A94 C6 3D D0 FF 		      	lw   	r3,-24[bp]
013A98 82 31 06 70 		      	asli 	r3,r3,#3
013A9C 7C C5 00 00 		      	lw   	r4,readyQ[r3]
013AA0 C6 41 A0 E4 
013AA4 E3 4D E0 FF 		      	sw   	r4,-16[bp]
013AA8 C6 BD E0 FF 		      	lw   	r11,-16[bp]
013AAC C6 3D E0 FF 		      	lw   	r3,-16[bp]
013AB0 BD 01 30 00 		      	beq  	r3,FMTKc_100
                	FMTKc_102:
013AB4 E6 E5 E1 02 		      	push 	368[r11]
013AB8 E6 E5 71 02 		      	push 	312[r11]
013ABC E6 E5 81 02 		      	push 	320[r11]
013AC0 E7 E5 01 00 		      	push 	r11
013AC4 C0 35 10 03 		      	lb   	r3,392[r11]
013AC8 82 31 00 20 		      	sxb  	r3,r3
013ACC E7 E1 01 00 		      	push 	r3
013AD0 C0 35 14 03 		      	lb   	r3,394[r11]
013AD4 82 31 00 20 		      	sxb  	r3,r3
013AD8 E7 E1 01 00 		      	push 	r3
013ADC FC 01 00 00 		      	push 	#FMTKc_94
013AE0 65 E0 01 60 
013AE4 39 6F 03 00 		      	bsr  	printf
013AE8 14 EF 71 00 		      	addui	sp,sp,#56
013AEC C6 B5 70 02 		      	lw   	r11,312[r11]
013AF0 B9 5D 03 00 		      	bsr  	getcharNoWait
013AF4 82 30 00 1A 		      	mov  	r3,r1
013AF8 86 31 06 00 		      	cmp  	r3,r3,#3
013AFC BD 11 04 00 		      	bne  	r3,FMTKc_104
013B00 3A 03 00 00 		      	bra  	FMTKc_95
                	FMTKc_104:
013B04 C6 3D E0 FF 		      	lw   	r3,-16[bp]
013B08 82 B5 06 0C 		      	cmp  	r11,r11,r3
013B0C BD 15 D4 FF 		      	bne  	r11,FMTKc_102
                	FMTKc_103:
                	FMTKc_100:
                	FMTKc_99:
013B10 E4 1D D0 FF 		      	inc  	-24[bp],#1
013B14 BA EE FF FF 		      	bra  	FMTKc_97
                	FMTKc_98:
                	FMTKc_95:
                	FMTKc_106:
013B18 57 BF 10 00 		      	pop  	r11
013B1C 82 ED 01 1A 		      	mov  	sp,bp
013B20 57 BF 11 00 		      	pop  	bp
013B24 57 CF 11 00 		      	pop  	xlr
013B28 57 FF 11 00 		      	pop  	lr
013B2C 37 FF 01 00 		      	rtl  	#0
                	FMTKc_96:
013B30 C6 FD 11 00 		      	lw   	lr,8[bp]
013B34 E3 FD 21 00 		      	sw   	lr,16[bp]
013B38 3A FC FF FF 		      	bra  	FMTKc_106
                	endpublic
                	
                	public code IdleTask:
013B3C 15 EF 21 00 		      	subui	sp,sp,#16
013B40 E7 ED 01 00 		      	push 	bp
013B44 02 BF 01 1A 		      	mov  	bp,sp
                	FMTKc_108:
013B48 0A 30 02 00 		      	ldi  	r3,#1
013B4C BD 01 08 00 		      	beq  	r3,FMTKc_109
013B50 7C D0 FF 00 		      	     	             inc  $FFD00000+228
013B54 64 10 C8 01 
                	         
013B58 3A FE FF FF 		      	bra  	FMTKc_108
                	FMTKc_109:
                	FMTKc_110:
013B5C 82 ED 01 1A 		      	mov  	sp,bp
013B60 57 BF 11 00 		      	pop  	bp
013B64 37 FF 21 00 		      	rtl  	#16
                	endpublic
                	
                	public code ExitTask:
013B68 E7 EF 01 00 		      	push 	lr
013B6C 67 EE 01 00 		      	push 	xlr
013B70 E7 ED 01 00 		      	push 	bp
013B74 7C 01 00 00 		      	ldi  	xlr,#FMTKc_112
013B78 0A C0 01 78 
013B7C 02 BF 01 1A 		      	mov  	bp,sp
013B80 15 EF 31 00 		      	subui	sp,sp,#24
013B84 B9 B8 0E 00 		      	bsr  	LockSYS
013B88 E6 ED F1 FF 		      	push 	-8[bp]
013B8C 39 F5 FE FF 		      	bsr  	RemoveFromReadyList
013B90 14 EF 11 00 		      	addui	sp,sp,#8
013B94 E6 ED F1 FF 		      	push 	-8[bp]
013B98 39 30 FF FF 		      	bsr  	RemoveFromTimeoutList
013B9C 14 EF 11 00 		      	addui	sp,sp,#8
013BA0 39 C7 FE FF 		      	bsr  	GetRunningTCB
013BA4 82 30 00 1A 		      	mov  	r3,r1
013BA8 E3 3D F0 FF 		      	sw   	r3,-8[bp]
013BAC C6 3D F0 FF 		      	lw   	r3,-8[bp]
013BB0 C6 41 00 03 		      	lw   	r4,384[r3]
013BB4 E3 4D E0 FF 		      	sw   	r4,-16[bp]
                	FMTKc_113:
013BB8 C6 3D E0 FF 		      	lw   	r3,-16[bp]
013BBC BD 01 12 00 		      	beq  	r3,FMTKc_114
013BC0 C6 3D E0 FF 		      	lw   	r3,-16[bp]
013BC4 E3 3D D0 FF 		      	sw   	r3,-24[bp]
013BC8 E6 ED E1 FF 		      	push 	-16[bp]
013BCC B9 86 D8 FF 		      	bsr  	FreeMbx
013BD0 14 EF 11 00 		      	addui	sp,sp,#8
013BD4 C6 3D D0 FF 		      	lw   	r3,-24[bp]
013BD8 E3 3D E0 FF 		      	sw   	r3,-16[bp]
013BDC BA FB FF FF 		      	bra  	FMTKc_113
                	FMTKc_114:
013BE0 B9 B0 0E 00 		      	bsr  	UnlockSYS
013BE4 38 0F 04 80 		      	     	int #2 
                	FMTKc_111:
013BE8 3A 00 00 00 		      	bra  	FMTKc_111
                	FMTKc_115:
013BEC 82 ED 01 1A 		      	mov  	sp,bp
013BF0 57 BF 11 00 		      	pop  	bp
013BF4 57 CF 11 00 		      	pop  	xlr
013BF8 57 FF 11 00 		      	pop  	lr
013BFC 37 FF 01 00 		      	rtl  	#0
                	FMTKc_112:
013C00 C6 FD 11 00 		      	lw   	lr,8[bp]
013C04 E3 FD 21 00 		      	sw   	lr,16[bp]
013C08 BA FC FF FF 		      	bra  	FMTKc_115
                	endpublic
                	
                	public code StartTask:
013C0C E7 EF 01 00 		      	push 	lr
013C10 67 EE 01 00 		      	push 	xlr
013C14 E7 ED 01 00 		      	push 	bp
013C18 7C 01 00 00 		      	ldi  	xlr,#FMTKc_116
013C1C 0A C0 61 79 
013C20 02 BF 01 1A 		      	mov  	bp,sp
013C24 15 EF 11 00 		      	subui	sp,sp,#8
013C28 E7 E5 01 00 		      	push 	r11
013C2C B9 A3 0E 00 		      	bsr  	LockSYS
013C30 7C C5 00 00 		      	lw   	r11,freeTCB
013C34 46 B0 30 E5 
013C38 C6 35 70 02 		      	lw   	r3,312[r11]
013C3C 7C C5 00 00 		      	sw   	r3,freeTCB
013C40 63 30 30 E5 
013C44 39 A4 0E 00 		      	bsr  	UnlockSYS
013C48 C6 3D 40 00 		      	lw   	r3,32[bp]
013C4C E0 35 14 03 		      	sb   	r3,394[r11]
013C50 C6 3D 50 00 		      	lw   	r3,40[bp]
013C54 E3 35 30 02 		      	sw   	r3,280[r11]
013C58 C6 35 D0 02 		      	lw   	r3,360[r11]
013C5C 94 31 F0 1F 		      	addu 	r3,r3,#4088
013C60 E3 35 00 02 		      	sw   	r3,256[r11]
013C64 C6 3D 70 00 		      	lw   	r3,56[bp]
013C68 E3 35 F0 02 		      	sw   	r3,376[r11]
013C6C C6 3D 60 00 		      	lw   	r3,48[bp]
013C70 E3 35 10 00 		      	sw   	r3,8[r11]
013C74 7C 01 00 00 		      	ldi  	r3,#ExitTask
013C78 0A 30 D0 76 
013C7C E3 35 F0 01 		      	sw   	r3,248[r11]
013C80 39 99 0E 00 		      	bsr  	LockSYS
013C84 E7 E5 01 00 		      	push 	r11
013C88 39 B9 FE FF 		      	bsr  	InsertIntoReadyList
013C8C 14 EF 11 00 		      	addui	sp,sp,#8
013C90 B9 9A 0E 00 		      	bsr  	UnlockSYS
013C94 0A 10 00 00 		      	ldi  	r1,#0
                	FMTKc_117:
013C98 57 BF 10 00 		      	pop  	r11
013C9C 82 ED 01 1A 		      	mov  	sp,bp
013CA0 57 BF 11 00 		      	pop  	bp
013CA4 57 CF 11 00 		      	pop  	xlr
013CA8 57 FF 11 00 		      	pop  	lr
013CAC 37 FF 01 00 		      	rtl  	#0
                	FMTKc_116:
013CB0 C6 FD 11 00 		      	lw   	lr,8[bp]
013CB4 E3 FD 21 00 		      	sw   	lr,16[bp]
013CB8 3A FC FF FF 		      	bra  	FMTKc_117
                	endpublic
                	
                	public code FMTKInitialize:
013CBC E7 EF 01 00 		      	push 	lr
013CC0 67 EE 01 00 		      	push 	xlr
013CC4 E7 ED 01 00 		      	push 	bp
013CC8 7C 01 00 00 		      	ldi  	xlr,#FMTKc_118
013CCC 0A C0 31 82 
013CD0 02 BF 01 1A 		      	mov  	bp,sp
013CD4 15 EF 11 00 		      	subui	sp,sp,#8
013CD8 E7 E5 01 00 		      	push 	r11
013CDC 67 E6 01 00 		      	push 	r12
013CE0 FC C3 00 00 		      	ldi  	r11,#tcbs
013CE4 0A B0 A0 C8 
013CE8 FC C2 00 00 		      	ldi  	r12,#jcbs
013CEC 0A C0 40 2B 
013CF0 FC C2 00 00 		      	lw   	r3,FMTK_Inited
013CF4 46 30 10 28 
013CF8 7C 34 12 00 		      	cmp  	r3,r3,#305419896
013CFC 86 31 F0 AC 
013D00 BD 01 FE 01 		      	beq  	r3,FMTKc_119
013D04 0A 10 28 00 		      	     	            ldi   r1,#20
013D08 7C DC FF 00 	            sc    r1,LEDS
013D0C 61 10 00 0C 
                	        
013D10 B9 8A 0E 00 		      	bsr  	UnlockSYS
013D14 39 91 0E 00 		      	bsr  	UnlockIOF
013D18 E3 0D F0 FF 		      	sw   	r0,-8[bp]
                	FMTKc_121:
013D1C C6 3D F0 FF 		      	lw   	r3,-8[bp]
013D20 86 31 66 00 		      	cmp  	r3,r3,#51
013D24 BD 31 94 00 		      	bge  	r3,FMTKc_122
013D28 C6 3D F0 FF 		      	lw   	r3,-8[bp]
013D2C C6 4D F0 FF 		      	lw   	r4,-8[bp]
013D30 17 42 20 0D 		      	mulu 	r4,r4,#1680
013D34 02 42 18 28 		      	addu 	r4,r4,r12
013D38 61 32 1C 0D 		      	sc   	r3,1678[r4]
013D3C C6 3D F0 FF 		      	lw   	r3,-8[bp]
013D40 BD 11 32 00 		      	bne  	r3,FMTKc_124
013D44 C6 3D F0 FF 		      	lw   	r3,-8[bp]
013D48 97 31 20 0D 		      	mulu 	r3,r3,#1680
013D4C 82 31 18 28 		      	addu 	r3,r3,r12
013D50 7C D0 FF 00 		      	ldi  	r4,#4291821568
013D54 0A 40 00 00 
013D58 E3 41 A0 0C 		      	sw   	r4,1616[r3]
013D5C C6 3D F0 FF 		      	lw   	r3,-8[bp]
013D60 97 31 98 01 		      	mulu 	r3,r3,#204
013D64 7C 08 01 00 		      	addu 	r3,r3,#video_bufs
013D68 94 31 E0 55 
013D6C C6 4D F0 FF 		      	lw   	r4,-8[bp]
013D70 17 42 20 0D 		      	mulu 	r4,r4,#1680
013D74 02 42 18 28 		      	addu 	r4,r4,r12
013D78 63 32 B0 0C 		      	sw   	r3,1624[r4]
013D7C C6 3D F0 FF 		      	lw   	r3,-8[bp]
013D80 97 31 20 0D 		      	mulu 	r3,r3,#1680
013D84 82 31 18 28 		      	addu 	r3,r3,r12
013D88 FC 26 00 00 		      	ldi  	r4,#2537472
013D8C 0A 40 00 70 
013D90 E2 41 D0 0C 		      	sh   	r4,1640[r3]
013D94 67 E6 01 00 		      	push 	r12
013D98 39 16 02 00 		      	bsr  	RequestIOFocus
013D9C 14 EF 11 00 		      	addui	sp,sp,#8
013DA0 BA 0B 00 00 		      	bra  	FMTKc_125
                	FMTKc_124:
013DA4 C6 3D F0 FF 		      	lw   	r3,-8[bp]
013DA8 97 31 98 01 		      	mulu 	r3,r3,#204
013DAC 7C 08 01 00 		      	addu 	r3,r3,#video_bufs
013DB0 94 31 E0 55 
013DB4 C6 4D F0 FF 		      	lw   	r4,-8[bp]
013DB8 17 42 20 0D 		      	mulu 	r4,r4,#1680
013DBC 02 42 18 28 		      	addu 	r4,r4,r12
013DC0 63 32 A0 0C 		      	sw   	r3,1616[r4]
013DC4 C6 3D F0 FF 		      	lw   	r3,-8[bp]
013DC8 97 31 98 01 		      	mulu 	r3,r3,#204
013DCC 7C 08 01 00 		      	addu 	r3,r3,#video_bufs
013DD0 94 31 E0 55 
013DD4 C6 4D F0 FF 		      	lw   	r4,-8[bp]
013DD8 17 42 20 0D 		      	mulu 	r4,r4,#1680
013DDC 02 42 18 28 		      	addu 	r4,r4,r12
013DE0 63 32 B0 0C 		      	sw   	r3,1624[r4]
013DE4 C6 3D F0 FF 		      	lw   	r3,-8[bp]
013DE8 97 31 20 0D 		      	mulu 	r3,r3,#1680
013DEC 82 31 18 28 		      	addu 	r3,r3,r12
013DF0 FC 26 00 00 		      	ldi  	r4,#2537472
013DF4 0A 40 00 70 
013DF8 E2 41 D0 0C 		      	sh   	r4,1640[r3]
                	FMTKc_125:
013DFC C6 3D F0 FF 		      	lw   	r3,-8[bp]
013E00 97 31 20 0D 		      	mulu 	r3,r3,#1680
013E04 82 31 18 28 		      	addu 	r3,r3,r12
013E08 0A 40 3E 00 		      	ldi  	r4,#31
013E0C E1 41 C0 0C 		      	sc   	r4,1632[r3]
013E10 C6 3D F0 FF 		      	lw   	r3,-8[bp]
013E14 97 31 20 0D 		      	mulu 	r3,r3,#1680
013E18 82 31 18 28 		      	addu 	r3,r3,r12
013E1C 0A 40 A8 00 		      	ldi  	r4,#84
013E20 E1 41 C4 0C 		      	sc   	r4,1634[r3]
013E24 C6 3D F0 FF 		      	lw   	r3,-8[bp]
013E28 97 31 20 0D 		      	mulu 	r3,r3,#1680
013E2C 82 31 18 28 		      	addu 	r3,r3,r12
013E30 E1 01 C8 0C 		      	sc   	r0,1636[r3]
013E34 C6 3D F0 FF 		      	lw   	r3,-8[bp]
013E38 97 31 20 0D 		      	mulu 	r3,r3,#1680
013E3C 82 31 18 28 		      	addu 	r3,r3,r12
013E40 E1 01 CC 0C 		      	sc   	r0,1638[r3]
                	FMTKc_123:
013E44 E4 1D F0 FF 		      	inc  	-8[bp],#1
013E48 BA DA FF FF 		      	bra  	FMTKc_121
                	FMTKc_122:
013E4C FC 01 00 00 		      	ldi  	r3,#101888
013E50 0A 30 00 1C 
013E54 82 31 16 28 		      	addu 	r3,r3,r11
013E58 E7 E1 01 00 		      	push 	r3
013E5C E7 E5 01 00 		      	push 	r11
013E60 39 55 FE FF 		      	bsr  	SetBound48
013E64 14 EF 21 00 		      	addui	sp,sp,#16
013E68 7C 01 00 00 		      	ldi  	r3,#85680
013E6C 0A 30 60 9D 
013E70 82 31 18 28 		      	addu 	r3,r3,r12
013E74 E7 E1 01 00 		      	push 	r3
013E78 67 E6 01 00 		      	push 	r12
013E7C 39 57 FE FF 		      	bsr  	SetBound49
013E80 14 EF 21 00 		      	addui	sp,sp,#16
013E84 FC F5 00 00 		      	push 	#mailbox
013E88 65 E0 41 45 
013E8C FC F5 00 00 		      	push 	#mailbox
013E90 65 E0 41 45 
013E94 B9 59 FE FF 		      	bsr  	SetBound50
013E98 14 EF 21 00 		      	addui	sp,sp,#16
013E9C 7C 10 00 00 		      	ldi  	r3,#1048576
013EA0 0A 30 00 00 
013EA4 94 31 00 00 		      	addu 	r3,r3,#message
	      	push 	r3
013EA8 E7 E1 01 00 
013EAC 65 E0 01 00 		      	push 	#message
	      	bsr  	SetBound51
013EB0 B9 5B FE FF 
013EB4 14 EF 21 00 		      	addui	sp,sp,#16
013EB8 E3 0D F0 FF 		      	sw   	r0,-8[bp]
                	FMTKc_126:
013EBC C6 3D F0 FF 		      	lw   	r3,-8[bp]
013EC0 86 31 10 00 		      	cmp  	r3,r3,#8
013EC4 BD 31 0E 00 		      	bge  	r3,FMTKc_127
013EC8 C6 3D F0 FF 		      	lw   	r3,-8[bp]
013ECC 82 31 06 70 		      	asli 	r3,r3,#3
013ED0 7C C5 00 00 		      	sw   	r0,readyQ[r3]
013ED4 E3 01 A0 E4 
                	FMTKc_128:
013ED8 E4 1D F0 FF 		      	inc  	-8[bp],#1
013EDC 3A FC FF FF 		      	bra  	FMTKc_126
                	FMTKc_127:
013EE0 E3 0D F0 FF 		      	sw   	r0,-8[bp]
                	FMTKc_129:
013EE4 C6 3D F0 FF 		      	lw   	r3,-8[bp]
013EE8 86 31 00 02 		      	cmp  	r3,r3,#256
013EEC BD 31 A0 00 		      	bge  	r3,FMTKc_130
013EF0 C6 3D F0 FF 		      	lw   	r3,-8[bp]
013EF4 C6 4D F0 FF 		      	lw   	r4,-8[bp]
013EF8 17 42 1C 03 		      	mulu 	r4,r4,#398
013EFC 02 42 16 28 		      	addu 	r4,r4,r11
013F00 61 32 18 03 		      	sc   	r3,396[r4]
013F04 0A 30 1C 03 		      	ldi  	r3,#398
013F08 C6 4D F0 FF 		      	lw   	r4,-8[bp]
013F0C 17 42 1C 03 		      	mulu 	r4,r4,#398
013F10 02 42 16 28 		      	addu 	r4,r4,r11
013F14 82 31 08 28 		      	addu 	r3,r3,r4
013F18 C6 4D F0 FF 		      	lw   	r4,-8[bp]
013F1C 17 42 1C 03 		      	mulu 	r4,r4,#398
013F20 02 42 16 28 		      	addu 	r4,r4,r11
013F24 63 32 70 02 		      	sw   	r3,312[r4]
013F28 C6 3D F0 FF 		      	lw   	r3,-8[bp]
013F2C 97 31 1C 03 		      	mulu 	r3,r3,#398
013F30 82 31 16 28 		      	addu 	r3,r3,r11
013F34 E3 01 80 02 		      	sw   	r0,320[r3]
013F38 C6 3D F0 FF 		      	lw   	r3,-8[bp]
013F3C 97 31 1C 03 		      	mulu 	r3,r3,#398
013F40 82 31 16 28 		      	addu 	r3,r3,r11
013F44 E0 01 12 03 		      	sb   	r0,393[r3]
013F48 C6 3D F0 FF 		      	lw   	r3,-8[bp]
013F4C 97 31 1C 03 		      	mulu 	r3,r3,#398
013F50 82 31 16 28 		      	addu 	r3,r3,r11
013F54 0A 40 0E 00 		      	ldi  	r4,#7
013F58 E0 41 10 03 		      	sb   	r4,392[r3]
013F5C C6 3D F0 FF 		      	lw   	r3,-8[bp]
013F60 97 31 1C 03 		      	mulu 	r3,r3,#398
013F64 82 31 16 28 		      	addu 	r3,r3,r11
013F68 E0 01 14 03 		      	sb   	r0,394[r3]
013F6C C6 3D F0 FF 		      	lw   	r3,-8[bp]
013F70 82 31 16 70 		      	asli 	r3,r3,#11
013F74 FC D5 00 00 		      	addu 	r3,r3,#sys_stacks
013F78 94 31 40 25 
013F7C 94 31 F0 1F 		      	addu 	r3,r3,#4088
013F80 C6 4D F0 FF 		      	lw   	r4,-8[bp]
013F84 17 42 1C 03 		      	mulu 	r4,r4,#398
013F88 02 42 16 28 		      	addu 	r4,r4,r11
013F8C 63 32 B0 02 		      	sw   	r3,344[r4]
013F90 C6 3D F0 FF 		      	lw   	r3,-8[bp]
013F94 82 31 16 70 		      	asli 	r3,r3,#11
013F98 FC E5 00 00 		      	addu 	r3,r3,#bios_stacks
013F9C 94 31 40 25 
013FA0 94 31 F0 1F 		      	addu 	r3,r3,#4088
013FA4 C6 4D F0 FF 		      	lw   	r4,-8[bp]
013FA8 17 42 1C 03 		      	mulu 	r4,r4,#398
013FAC 02 42 16 28 		      	addu 	r4,r4,r11
013FB0 63 32 C0 02 		      	sw   	r3,352[r4]
013FB4 C6 3D F0 FF 		      	lw   	r3,-8[bp]
013FB8 82 31 16 70 		      	asli 	r3,r3,#11
013FBC FC C5 00 00 		      	addu 	r3,r3,#stacks
013FC0 94 31 40 25 
013FC4 94 31 F0 1F 		      	addu 	r3,r3,#4088
013FC8 C6 4D F0 FF 		      	lw   	r4,-8[bp]
013FCC 17 42 1C 03 		      	mulu 	r4,r4,#398
013FD0 02 42 16 28 		      	addu 	r4,r4,r11
013FD4 63 32 D0 02 		      	sw   	r3,360[r4]
013FD8 C6 3D F0 FF 		      	lw   	r3,-8[bp]
013FDC 97 31 1C 03 		      	mulu 	r3,r3,#398
013FE0 82 31 16 28 		      	addu 	r3,r3,r11
013FE4 E3 C1 F0 02 		      	sw   	r12,376[r3]
013FE8 C6 3D F0 FF 		      	lw   	r3,-8[bp]
013FEC 97 31 1C 03 		      	mulu 	r3,r3,#398
013FF0 82 31 16 28 		      	addu 	r3,r3,r11
013FF4 E3 01 E0 02 		      	sw   	r0,368[r3]
013FF8 C6 3D F0 FF 		      	lw   	r3,-8[bp]
013FFC 97 31 1C 03 		      	mulu 	r3,r3,#398
014000 82 31 16 28 		      	addu 	r3,r3,r11
014004 E3 01 00 03 		      	sw   	r0,384[r3]
014008 C6 3D F0 FF 		      	lw   	r3,-8[bp]
01400C BD 11 0C 00 		      	bne  	r3,FMTKc_132
014010 C6 3D F0 FF 		      	lw   	r3,-8[bp]
014014 97 31 1C 03 		      	mulu 	r3,r3,#398
014018 82 31 16 28 		      	addu 	r3,r3,r11
01401C 0A 40 06 00 		      	ldi  	r4,#3
014020 E0 41 10 03 		      	sb   	r4,392[r3]
                	FMTKc_132:
                	FMTKc_131:
014024 E4 1D F0 FF 		      	inc  	-8[bp],#1
014028 BA D7 FF FF 		      	bra  	FMTKc_129
                	FMTKc_130:
01402C FC 01 00 00 		      	sw   	r0,101802[r11]
014030 E3 05 54 1B 
014034 0A 30 1C 03 		      	ldi  	r3,#398
014038 82 31 16 28 		      	addu 	r3,r3,r11
01403C 7C C5 00 00 		      	sw   	r3,freeTCB
014040 63 30 30 E5 
014044 E7 E5 01 00 		      	push 	r11
014048 39 41 FE FF 		      	bsr  	InsertIntoReadyList
01404C 14 EF 11 00 		      	addui	sp,sp,#8
014050 E7 E5 01 00 		      	push 	r11
014054 B9 31 FE FF 		      	bsr  	SetRunningTCB
014058 14 EF 11 00 		      	addui	sp,sp,#8
01405C FC 14 01 00 		      	sw   	r0,TimeoutList
014060 63 00 E0 D5 
014064 7C 08 01 00 		      	sw   	r12,IOFocusNdx
014068 63 C0 40 55 
01406C 0A 30 02 00 		      	ldi  	r3,#1
014070 7C 08 01 00 		      	sw   	r3,IOFocusTbl
014074 63 30 50 55 
014078 7C 01 00 00 		      	push 	#RescheduleIRQ
01407C 65 E0 19 72 
014080 65 E0 05 00 		      	push 	#2
014084 39 0A 08 00 		      	bsr  	set_vector
014088 14 EF 21 00 		      	addui	sp,sp,#16
01408C 7C 01 00 00 		      	push 	#TimerIRQ
014090 65 E0 29 6E 
014094 65 E0 87 03 		      	push 	#451
014098 B9 07 08 00 		      	bsr  	set_vector
01409C 14 EF 21 00 		      	addui	sp,sp,#16
0140A0 67 E6 01 00 		      	push 	r12
0140A4 65 E0 01 00 		      	push 	#0
0140A8 7C 01 00 00 		      	push 	#IdleTask
0140AC 65 E0 79 76 
0140B0 65 E0 01 00 		      	push 	#0
0140B4 65 E0 0F 00 		      	push 	#7
0140B8 B9 6A FF FF 		      	bsr  	StartTask
0140BC 14 EF 51 00 		      	addui	sp,sp,#40
0140C0 67 E6 01 00 		      	push 	r12
0140C4 65 E0 01 00 		      	push 	#0
0140C8 7C 01 00 00 		      	push 	#IdleTask
0140CC 65 E0 79 76 
0140D0 65 E0 03 00 		      	push 	#1
0140D4 65 E0 0F 00 		      	push 	#7
0140D8 B9 66 FF FF 		      	bsr  	StartTask
0140DC 14 EF 51 00 		      	addui	sp,sp,#40
0140E0 7C 34 12 00 		      	ldi  	r3,#305419896
0140E4 0A 30 F0 AC 
0140E8 FC C2 00 00 		      	sw   	r3,FMTK_Inited
0140EC 63 30 10 28 
0140F0 0A 10 64 00 		      	     	            ldi   r1,#50
0140F4 7C DC FF 00 	            sc    r1,LEDS
0140F8 61 10 00 0C 
                	        
                	FMTKc_119:
                	FMTKc_134:
0140FC 57 CF 10 00 		      	pop  	r12
014100 57 BF 10 00 		      	pop  	r11
014104 82 ED 01 1A 		      	mov  	sp,bp
014108 57 BF 11 00 		      	pop  	bp
01410C 57 CF 11 00 		      	pop  	xlr
014110 57 FF 11 00 		      	pop  	lr
014114 37 FF 01 00 		      	rtl  	#0
                	FMTKc_118:
014118 C6 FD 11 00 		      	lw   	lr,8[bp]
01411C E3 FD 21 00 		      	sw   	lr,16[bp]
014120 BA FB FF FF 		      	bra  	FMTKc_134
                	endpublic
                	
                		code
014124 00 00 00 00 		align	1
014128 00 00 00 00 
01412C 00 00 00 00 
                	
                	public code GetScreenLocation:
014130 E7 EF 01 00 		      	push 	lr
014134 67 EE 01 00 		      	push 	xlr
014138 E7 ED 01 00 		      	push 	bp
01413C 7C 01 00 00 		      	ldi  	xlr,#console_135
014140 0A C0 D9 82 
014144 02 BF 01 1A 		      	mov  	bp,sp
014148 39 18 FE FF 		      	bsr  	GetJCBPtr
01414C 82 30 00 1A 		      	mov  	r3,r1
014150 C6 31 A0 0C 		      	lw   	r3,1616[r3]
014154 82 11 00 1A 		      	mov  	r1,r3
                	console_136:
014158 82 ED 01 1A 		      	mov  	sp,bp
01415C 57 BF 11 00 		      	pop  	bp
014160 57 CF 11 00 		      	pop  	xlr
014164 57 FF 11 00 		      	pop  	lr
014168 37 FF 01 00 		      	rtl  	#0
                	console_135:
01416C C6 FD 11 00 		      	lw   	lr,8[bp]
014170 E3 FD 21 00 		      	sw   	lr,16[bp]
014174 BA FC FF FF 		      	bra  	console_136
                	endpublic
                	
                	public code GetCurrAttr:
014178 E7 EF 01 00 		      	push 	lr
01417C 67 EE 01 00 		      	push 	xlr
014180 E7 ED 01 00 		      	push 	bp
014184 7C 01 00 00 		      	ldi  	xlr,#console_137
014188 0A C0 69 83 
01418C 02 BF 01 1A 		      	mov  	bp,sp
014190 39 0F FE FF 		      	bsr  	GetJCBPtr
014194 82 30 00 1A 		      	mov  	r3,r1
014198 C5 31 D0 0C 		      	lhu  	r3,1640[r3]
01419C 82 11 00 1A 		      	mov  	r1,r3
                	console_138:
0141A0 82 ED 01 1A 		      	mov  	sp,bp
0141A4 57 BF 11 00 		      	pop  	bp
0141A8 57 CF 11 00 		      	pop  	xlr
0141AC 57 FF 11 00 		      	pop  	lr
0141B0 37 FF 01 00 		      	rtl  	#0
                	console_137:
0141B4 C6 FD 11 00 		      	lw   	lr,8[bp]
0141B8 E3 FD 21 00 		      	sw   	lr,16[bp]
0141BC BA FC FF FF 		      	bra  	console_138
                	endpublic
                	
                	public code SetCurrAttr:
0141C0 E7 EF 01 00 		      	push 	lr
0141C4 67 EE 01 00 		      	push 	xlr
0141C8 E7 ED 01 00 		      	push 	bp
0141CC 7C 01 00 00 		      	ldi  	xlr,#console_139
0141D0 0A C0 F9 83 
0141D4 02 BF 01 1A 		      	mov  	bp,sp
0141D8 39 06 FE FF 		      	bsr  	GetJCBPtr
0141DC 82 30 00 1A 		      	mov  	r3,r1
0141E0 C5 4D 30 00 		      	lhu  	r4,24[bp]
0141E4 E2 41 D0 0C 		      	sh   	r4,1640[r3]
                	console_140:
0141E8 82 ED 01 1A 		      	mov  	sp,bp
0141EC 57 BF 11 00 		      	pop  	bp
0141F0 57 CF 11 00 		      	pop  	xlr
0141F4 57 FF 11 00 		      	pop  	lr
0141F8 37 FF 01 00 		      	rtl  	#0
                	console_139:
0141FC C6 FD 11 00 		      	lw   	lr,8[bp]
014200 E3 FD 21 00 		      	sw   	lr,16[bp]
014204 BA FC FF FF 		      	bra  	console_140
                	endpublic
                	
                	public code SetVideoReg:
014208 15 EF 21 00 		      	subui	sp,sp,#16
01420C E7 ED 01 00 		      	push 	bp
014210 02 BF 01 1A 		      	mov  	bp,sp
014214 C6 1D 30 00 		      	     	         lw   r1,24[bp]
014218 C6 2D 40 00 	         lw   r2,32[bp]
01421C 82 10 04 70 	         asl  r1,r1,#2
014220 7C DA FF 00 	         sh   r2,$FFDA0000[r1]
014224 E2 20 00 00 
                	     
                	console_142:
014228 82 ED 01 1A 		      	mov  	sp,bp
01422C 57 BF 11 00 		      	pop  	bp
014230 37 FF 21 00 		      	rtl  	#16
                	endpublic
                	
                	public code SetCursorPos:
014234 E7 EF 01 00 		      	push 	lr
014238 67 EE 01 00 		      	push 	xlr
01423C E7 ED 01 00 		      	push 	bp
014240 7C 01 00 00 		      	ldi  	xlr,#console_143
014244 0A C0 19 85 
014248 02 BF 01 1A 		      	mov  	bp,sp
01424C 15 EF 11 00 		      	subui	sp,sp,#8
014250 E7 E5 01 00 		      	push 	r11
014254 B9 F6 FD FF 		      	bsr  	GetJCBPtr
014258 82 30 00 1A 		      	mov  	r3,r1
01425C 82 B1 00 1A 		      	mov  	r11,r3
014260 C6 3D 40 00 		      	lw   	r3,32[bp]
014264 E1 35 CC 0C 		      	sc   	r3,1638[r11]
014268 C6 3D 30 00 		      	lw   	r3,24[bp]
01426C E1 35 C8 0C 		      	sc   	r3,1636[r11]
014270 39 3E 00 00 		      	bsr  	UpdateCursorPos
                	console_144:
014274 57 BF 10 00 		      	pop  	r11
014278 82 ED 01 1A 		      	mov  	sp,bp
01427C 57 BF 11 00 		      	pop  	bp
014280 57 CF 11 00 		      	pop  	xlr
014284 57 FF 11 00 		      	pop  	lr
014288 37 FF 01 00 		      	rtl  	#0
                	console_143:
01428C C6 FD 11 00 		      	lw   	lr,8[bp]
014290 E3 FD 21 00 		      	sw   	lr,16[bp]
014294 3A FC FF FF 		      	bra  	console_144
                	endpublic
                	
                	public code SetCursorCol:
014298 E7 EF 01 00 		      	push 	lr
01429C 67 EE 01 00 		      	push 	xlr
0142A0 E7 ED 01 00 		      	push 	bp
0142A4 7C 01 00 00 		      	ldi  	xlr,#console_145
0142A8 0A C0 D1 85 
0142AC 02 BF 01 1A 		      	mov  	bp,sp
0142B0 15 EF 11 00 		      	subui	sp,sp,#8
0142B4 E7 E5 01 00 		      	push 	r11
0142B8 39 EA FD FF 		      	bsr  	GetJCBPtr
0142BC 82 30 00 1A 		      	mov  	r3,r1
0142C0 82 B1 00 1A 		      	mov  	r11,r3
0142C4 C6 3D 30 00 		      	lw   	r3,24[bp]
0142C8 E1 35 CC 0C 		      	sc   	r3,1638[r11]
0142CC B9 32 00 00 		      	bsr  	UpdateCursorPos
                	console_146:
0142D0 57 BF 10 00 		      	pop  	r11
0142D4 82 ED 01 1A 		      	mov  	sp,bp
0142D8 57 BF 11 00 		      	pop  	bp
0142DC 57 CF 11 00 		      	pop  	xlr
0142E0 57 FF 11 00 		      	pop  	lr
0142E4 37 FF 01 00 		      	rtl  	#0
                	console_145:
0142E8 C6 FD 11 00 		      	lw   	lr,8[bp]
0142EC E3 FD 21 00 		      	sw   	lr,16[bp]
0142F0 3A FC FF FF 		      	bra  	console_146
                	endpublic
                	
                	public code GetCursorPos:
0142F4 E7 EF 01 00 		      	push 	lr
0142F8 67 EE 01 00 		      	push 	xlr
0142FC E7 ED 01 00 		      	push 	bp
014300 7C 01 00 00 		      	ldi  	xlr,#console_147
014304 0A C0 99 86 
014308 02 BF 01 1A 		      	mov  	bp,sp
01430C 15 EF 11 00 		      	subui	sp,sp,#8
014310 E7 E5 01 00 		      	push 	r11
014314 B9 DE FD FF 		      	bsr  	GetJCBPtr
014318 82 30 00 1A 		      	mov  	r3,r1
01431C 82 B1 00 1A 		      	mov  	r11,r3
014320 C3 35 CC 0C 		      	lcu  	r3,1638[r11]
014324 C3 45 C8 0C 		      	lcu  	r4,1636[r11]
014328 02 42 10 70 		      	asli 	r4,r4,#8
01432C 82 31 08 1A 		      	or   	r3,r3,r4
014330 82 11 00 1A 		      	mov  	r1,r3
                	console_148:
014334 57 BF 10 00 		      	pop  	r11
014338 82 ED 01 1A 		      	mov  	sp,bp
01433C 57 BF 11 00 		      	pop  	bp
014340 57 CF 11 00 		      	pop  	xlr
014344 57 FF 11 00 		      	pop  	lr
014348 37 FF 01 00 		      	rtl  	#0
                	console_147:
01434C C6 FD 11 00 		      	lw   	lr,8[bp]
014350 E3 FD 21 00 		      	sw   	lr,16[bp]
014354 3A FC FF FF 		      	bra  	console_148
                	endpublic
                	
                	public code AsciiToScreen:
014358 15 EF 21 00 		      	subui	sp,sp,#16
01435C E7 ED 01 00 		      	push 	bp
014360 02 BF 01 1A 		      	mov  	bp,sp
014364 C3 3D 30 00 		      	lcu  	r3,24[bp]
014368 86 31 B6 00 		      	cmp  	r3,r3,#91
01436C BD 11 0A 00 		      	bne  	r3,console_150
014370 0A 10 36 00 		      	ldi  	r1,#27
                	console_152:
014374 82 ED 01 1A 		      	mov  	sp,bp
014378 57 BF 11 00 		      	pop  	bp
01437C 37 FF 21 00 		      	rtl  	#16
                	console_150:
014380 C3 3D 30 00 		      	lcu  	r3,24[bp]
014384 86 31 BA 00 		      	cmp  	r3,r3,#93
014388 BD 11 06 00 		      	bne  	r3,console_153
01438C 0A 10 3A 00 		      	ldi  	r1,#29
014390 BA FC FF FF 		      	bra  	console_152
                	console_153:
014394 C3 3D 30 00 		      	lcu  	r3,24[bp]
014398 8C 31 FE 01 		      	andi 	r3,r3,#255
01439C E1 3D 30 00 		      	sc   	r3,24[bp]
0143A0 C3 3D 30 00 		      	lcu  	r3,24[bp]
0143A4 8D 31 00 02 		      	ori  	r3,r3,#256
0143A8 E1 3D 30 00 		      	sc   	r3,24[bp]
0143AC C3 3D 30 00 		      	lcu  	r3,24[bp]
0143B0 8C 31 40 00 		      	and  	r3,r3,#32
0143B4 BD 11 08 00 		      	bne  	r3,console_155
0143B8 C3 3D 30 00 		      	lcu  	r3,24[bp]
0143BC 82 11 00 1A 		      	mov  	r1,r3
0143C0 BA F6 FF FF 		      	bra  	console_152
                	console_155:
0143C4 C3 3D 30 00 		      	lcu  	r3,24[bp]
0143C8 8C 31 80 00 		      	and  	r3,r3,#64
0143CC BD 11 08 00 		      	bne  	r3,console_157
0143D0 C3 3D 30 00 		      	lcu  	r3,24[bp]
0143D4 82 11 00 1A 		      	mov  	r1,r3
0143D8 BA F3 FF FF 		      	bra  	console_152
                	console_157:
0143DC C3 3D 30 00 		      	lcu  	r3,24[bp]
0143E0 8C 31 3E 03 		      	and  	r3,r3,#415
0143E4 E1 3D 30 00 		      	sc   	r3,24[bp]
0143E8 C3 3D 30 00 		      	lcu  	r3,24[bp]
0143EC 82 11 00 1A 		      	mov  	r1,r3
0143F0 BA F0 FF FF 		      	bra  	console_152
                	endpublic
                	
                	public code ScreenToAscii:
0143F4 15 EF 21 00 		      	subui	sp,sp,#16
0143F8 E7 ED 01 00 		      	push 	bp
0143FC 02 BF 01 1A 		      	mov  	bp,sp
014400 C3 3D 30 00 		      	lcu  	r3,24[bp]
014404 8C 31 FE 01 		      	andi 	r3,r3,#255
014408 E1 3D 30 00 		      	sc   	r3,24[bp]
01440C C3 3D 30 00 		      	lcu  	r3,24[bp]
014410 86 31 36 00 		      	cmp  	r3,r3,#27
014414 BD 11 0A 00 		      	bne  	r3,console_160
014418 0A 10 B6 00 		      	ldi  	r1,#91
                	console_162:
01441C 82 ED 01 1A 		      	mov  	sp,bp
014420 57 BF 11 00 		      	pop  	bp
014424 37 FF 21 00 		      	rtl  	#16
                	console_160:
014428 C3 3D 30 00 		      	lcu  	r3,24[bp]
01442C 86 31 3A 00 		      	cmp  	r3,r3,#29
014430 BD 11 06 00 		      	bne  	r3,console_163
014434 0A 10 BA 00 		      	ldi  	r1,#93
014438 BA FC FF FF 		      	bra  	console_162
                	console_163:
01443C C3 3D 30 00 		      	lcu  	r3,24[bp]
014440 96 31 36 00 		      	cmpu 	r3,r3,#27
014444 BD 31 08 00 		      	bge  	r3,console_165
014448 C3 3D 30 00 		      	lcu  	r3,24[bp]
01444C 94 31 C0 00 		      	addui	r3,r3,#96
014450 E1 3D 30 00 		      	sc   	r3,24[bp]
                	console_165:
014454 C3 3D 30 00 		      	lcu  	r3,24[bp]
014458 82 11 00 1A 		      	mov  	r1,r3
01445C 3A F8 FF FF 		      	bra  	console_162
                	endpublic
                	
                	public code UpdateCursorPos:
014460 E7 EF 01 00 		      	push 	lr
014464 67 EE 01 00 		      	push 	xlr
014468 E7 ED 01 00 		      	push 	bp
01446C 7C 01 00 00 		      	ldi  	xlr,#console_167
014470 0A C0 A1 89 
014474 02 BF 01 1A 		      	mov  	bp,sp
014478 15 EF 21 00 		      	subui	sp,sp,#16
01447C E7 E5 01 00 		      	push 	r11
014480 39 B1 FD FF 		      	bsr  	GetJCBPtr
014484 82 30 00 1A 		      	mov  	r3,r1
014488 82 B1 00 1A 		      	mov  	r11,r3
01448C C3 35 C8 0C 		      	lcu  	r3,1636[r11]
014490 C3 45 C4 0C 		      	lcu  	r4,1634[r11]
014494 82 31 08 2E 		      	mulu 	r3,r3,r4
014498 C3 45 CC 0C 		      	lcu  	r4,1638[r11]
01449C 82 31 08 28 		      	addu 	r3,r3,r4
0144A0 82 31 00 22 		      	sxc  	r3,r3
0144A4 E3 3D E0 FF 		      	sw   	r3,-16[bp]
0144A8 E6 ED E1 FF 		      	push 	-16[bp]
0144AC 65 E0 17 00 		      	push 	#11
0144B0 39 AB FF FF 		      	bsr  	SetVideoReg
0144B4 14 EF 21 00 		      	addui	sp,sp,#16
                	console_168:
0144B8 57 BF 10 00 		      	pop  	r11
0144BC 82 ED 01 1A 		      	mov  	sp,bp
0144C0 57 BF 11 00 		      	pop  	bp
0144C4 57 CF 11 00 		      	pop  	xlr
0144C8 57 FF 11 00 		      	pop  	lr
0144CC 37 FF 01 00 		      	rtl  	#0
                	console_167:
0144D0 C6 FD 11 00 		      	lw   	lr,8[bp]
0144D4 E3 FD 21 00 		      	sw   	lr,16[bp]
0144D8 3A FC FF FF 		      	bra  	console_168
                	endpublic
                	
                	public code HomeCursor:
0144DC E7 EF 01 00 		      	push 	lr
0144E0 67 EE 01 00 		      	push 	xlr
0144E4 E7 ED 01 00 		      	push 	bp
0144E8 7C 01 00 00 		      	ldi  	xlr,#console_169
0144EC 0A C0 59 8A 
0144F0 02 BF 01 1A 		      	mov  	bp,sp
0144F4 15 EF 11 00 		      	subui	sp,sp,#8
0144F8 E7 E5 01 00 		      	push 	r11
0144FC B9 A1 FD FF 		      	bsr  	GetJCBPtr
014500 82 30 00 1A 		      	mov  	r3,r1
014504 82 B1 00 1A 		      	mov  	r11,r3
014508 E1 05 CC 0C 		      	sc   	r0,1638[r11]
01450C E1 05 C8 0C 		      	sc   	r0,1636[r11]
014510 39 EA FF FF 		      	bsr  	UpdateCursorPos
                	console_170:
014514 57 BF 10 00 		      	pop  	r11
014518 82 ED 01 1A 		      	mov  	sp,bp
01451C 57 BF 11 00 		      	pop  	bp
014520 57 CF 11 00 		      	pop  	xlr
014524 57 FF 11 00 		      	pop  	lr
014528 37 FF 01 00 		      	rtl  	#0
                	console_169:
01452C C6 FD 11 00 		      	lw   	lr,8[bp]
014530 E3 FD 21 00 		      	sw   	lr,16[bp]
014534 3A FC FF FF 		      	bra  	console_170
                	endpublic
                	
                	public code CalcScreenLocation:
014538 E7 EF 01 00 		      	push 	lr
01453C 67 EE 01 00 		      	push 	xlr
014540 E7 ED 01 00 		      	push 	bp
014544 7C 01 00 00 		      	ldi  	xlr,#console_171
014548 0A C0 81 8B 
01454C 02 BF 01 1A 		      	mov  	bp,sp
014550 15 EF 21 00 		      	subui	sp,sp,#16
014554 E7 E5 01 00 		      	push 	r11
014558 39 96 FD FF 		      	bsr  	GetJCBPtr
01455C 82 30 00 1A 		      	mov  	r3,r1
014560 82 B1 00 1A 		      	mov  	r11,r3
014564 C3 35 C8 0C 		      	lcu  	r3,1636[r11]
014568 C3 45 C4 0C 		      	lcu  	r4,1634[r11]
01456C 82 31 08 2E 		      	mulu 	r3,r3,r4
014570 C3 45 CC 0C 		      	lcu  	r4,1638[r11]
014574 82 31 08 28 		      	addu 	r3,r3,r4
014578 82 31 00 22 		      	sxc  	r3,r3
01457C E3 3D E0 FF 		      	sw   	r3,-16[bp]
014580 E6 ED E1 FF 		      	push 	-16[bp]
014584 65 E0 17 00 		      	push 	#11
014588 39 90 FF FF 		      	bsr  	SetVideoReg
01458C 14 EF 21 00 		      	addui	sp,sp,#16
014590 39 74 FF FF 		      	bsr  	GetScreenLocation
014594 82 30 00 1A 		      	mov  	r3,r1
014598 C6 4D E0 FF 		      	lw   	r4,-16[bp]
01459C 02 42 04 70 		      	asli 	r4,r4,#2
0145A0 82 31 08 28 		      	addu 	r3,r3,r4
0145A4 82 11 00 1A 		      	mov  	r1,r3
                	console_172:
0145A8 57 BF 10 00 		      	pop  	r11
0145AC 82 ED 01 1A 		      	mov  	sp,bp
0145B0 57 BF 11 00 		      	pop  	bp
0145B4 57 CF 11 00 		      	pop  	xlr
0145B8 57 FF 11 00 		      	pop  	lr
0145BC 37 FF 01 00 		      	rtl  	#0
                	console_171:
0145C0 C6 FD 11 00 		      	lw   	lr,8[bp]
0145C4 E3 FD 21 00 		      	sw   	lr,16[bp]
0145C8 3A FC FF FF 		      	bra  	console_172
                	endpublic
                	
                	public code ClearScreen:
0145CC E7 EF 01 00 		      	push 	lr
0145D0 67 EE 01 00 		      	push 	xlr
0145D4 E7 ED 01 00 		      	push 	bp
0145D8 7C 01 00 00 		      	ldi  	xlr,#console_173
0145DC 0A C0 19 8D 
0145E0 02 BF 01 1A 		      	mov  	bp,sp
0145E4 15 EF 51 00 		      	subui	sp,sp,#40
0145E8 E7 E5 01 00 		      	push 	r11
0145EC 67 E6 01 00 		      	push 	r12
0145F0 39 83 FD FF 		      	bsr  	GetJCBPtr
0145F4 82 30 00 1A 		      	mov  	r3,r1
0145F8 82 B1 00 1A 		      	mov  	r11,r3
0145FC B9 66 FF FF 		      	bsr  	GetScreenLocation
014600 82 30 00 1A 		      	mov  	r3,r1
014604 82 C1 00 1A 		      	mov  	r12,r3
014608 C3 35 C0 0C 		      	lcu  	r3,1632[r11]
01460C C3 45 C4 0C 		      	lcu  	r4,1634[r11]
014610 82 31 08 0E 		      	mul  	r3,r3,r4
014614 E3 3D D0 FF 		      	sw   	r3,-24[bp]
014618 39 6C FF FF 		      	bsr  	GetCurrAttr
01461C 82 30 00 1A 		      	mov  	r3,r1
014620 E7 E1 01 00 		      	push 	r3
014624 65 E0 41 00 		      	push 	#32
014628 39 A6 FF FF 		      	bsr  	AsciiToScreen
01462C 14 EF 11 00 		      	addui	sp,sp,#8
014630 57 3F 10 00 		      	pop  	r3
014634 82 40 00 1A 		      	mov  	r4,r1
014638 02 42 00 22 		      	sxc  	r4,r4
01463C 82 31 08 1A 		      	or   	r3,r3,r4
014640 E2 3D B8 FF 		      	sh   	r3,-36[bp]
014644 E3 0D E0 FF 		      	sw   	r0,-16[bp]
                	console_174:
014648 C6 3D E0 FF 		      	lw   	r3,-16[bp]
01464C C6 4D D0 FF 		      	lw   	r4,-24[bp]
014650 82 31 08 0C 		      	cmp  	r3,r3,r4
014654 BD 31 0E 00 		      	bge  	r3,console_175
014658 C6 3D E0 FF 		      	lw   	r3,-16[bp]
01465C 82 31 04 70 		      	asli 	r3,r3,#2
014660 C4 4D B8 FF 		      	lh   	r4,-36[bp]
014664 6A 46 06 00 		      	sh   	r4,0[r12+r3]
                	console_176:
014668 E4 1D E0 FF 		      	inc  	-16[bp],#1
01466C BA FB FF FF 		      	bra  	console_174
                	console_175:
                	console_177:
014670 57 CF 10 00 		      	pop  	r12
014674 57 BF 10 00 		      	pop  	r11
014678 82 ED 01 1A 		      	mov  	sp,bp
01467C 57 BF 11 00 		      	pop  	bp
014680 57 CF 11 00 		      	pop  	xlr
014684 57 FF 11 00 		      	pop  	lr
014688 37 FF 01 00 		      	rtl  	#0
                	console_173:
01468C C6 FD 11 00 		      	lw   	lr,8[bp]
014690 E3 FD 21 00 		      	sw   	lr,16[bp]
014694 BA FB FF FF 		      	bra  	console_177
                	endpublic
                	
                	public code BlankLine:
014698 E7 EF 01 00 		      	push 	lr
01469C 67 EE 01 00 		      	push 	xlr
0146A0 E7 ED 01 00 		      	push 	bp
0146A4 7C 01 00 00 		      	ldi  	xlr,#console_178
0146A8 0A C0 C9 8E 
0146AC 02 BF 01 1A 		      	mov  	bp,sp
0146B0 15 EF 51 00 		      	subui	sp,sp,#40
0146B4 E7 E5 01 00 		      	push 	r11
0146B8 39 6A FD FF 		      	bsr  	GetJCBPtr
0146BC 82 30 00 1A 		      	mov  	r3,r1
0146C0 82 B1 00 1A 		      	mov  	r11,r3
0146C4 B9 4D FF FF 		      	bsr  	GetScreenLocation
0146C8 82 30 00 1A 		      	mov  	r3,r1
0146CC E3 3D F0 FF 		      	sw   	r3,-8[bp]
0146D0 C6 3D F0 FF 		      	lw   	r3,-8[bp]
0146D4 C3 45 C4 0C 		      	lcu  	r4,1634[r11]
0146D8 C6 5D 30 00 		      	lw   	r5,24[bp]
0146DC 02 42 0A 0E 		      	mul  	r4,r4,r5
0146E0 02 42 04 70 		      	asli 	r4,r4,#2
0146E4 82 31 08 28 		      	addu 	r3,r3,r4
0146E8 E3 3D F0 FF 		      	sw   	r3,-8[bp]
0146EC B9 51 FF FF 		      	bsr  	GetCurrAttr
0146F0 82 30 00 1A 		      	mov  	r3,r1
0146F4 E7 E1 01 00 		      	push 	r3
0146F8 65 E0 41 00 		      	push 	#32
0146FC B9 8B FF FF 		      	bsr  	AsciiToScreen
014700 14 EF 11 00 		      	addui	sp,sp,#8
014704 57 3F 10 00 		      	pop  	r3
014708 82 40 00 1A 		      	mov  	r4,r1
01470C 02 42 00 22 		      	sxc  	r4,r4
014710 82 31 08 1A 		      	or   	r3,r3,r4
014714 E2 3D B8 FF 		      	sh   	r3,-36[bp]
014718 E3 0D E0 FF 		      	sw   	r0,-16[bp]
                	console_179:
01471C C6 3D E0 FF 		      	lw   	r3,-16[bp]
014720 C3 45 C4 0C 		      	lcu  	r4,1634[r11]
014724 02 42 00 22 		      	sxc  	r4,r4
014728 82 31 08 0C 		      	cmp  	r3,r3,r4
01472C BD 31 10 00 		      	bge  	r3,console_180
014730 C6 3D E0 FF 		      	lw   	r3,-16[bp]
014734 82 31 04 70 		      	asli 	r3,r3,#2
014738 C6 4D F0 FF 		      	lw   	r4,-8[bp]
01473C C4 5D B8 FF 		      	lh   	r5,-36[bp]
014740 6A 52 06 00 		      	sh   	r5,0[r4+r3]
                	console_181:
014744 E4 1D E0 FF 		      	inc  	-16[bp],#1
014748 BA FA FF FF 		      	bra  	console_179
                	console_180:
                	console_182:
01474C 57 BF 10 00 		      	pop  	r11
014750 82 ED 01 1A 		      	mov  	sp,bp
014754 57 BF 11 00 		      	pop  	bp
014758 57 CF 11 00 		      	pop  	xlr
01475C 57 FF 11 00 		      	pop  	lr
014760 37 FF 01 00 		      	rtl  	#0
                	console_178:
014764 C6 FD 11 00 		      	lw   	lr,8[bp]
014768 E3 FD 21 00 		      	sw   	lr,16[bp]
01476C 3A FC FF FF 		      	bra  	console_182
                	endpublic
                	
                	public code ScrollUp:
014770 E7 EF 01 00 		      	push 	lr
014774 67 EE 01 00 		      	push 	xlr
014778 E7 ED 01 00 		      	push 	bp
01477C 7C 01 00 00 		      	ldi  	xlr,#console_183
014780 0A C0 69 90 
014784 02 BF 01 1A 		      	mov  	bp,sp
014788 15 EF 41 00 		      	subui	sp,sp,#32
01478C E7 E5 01 00 		      	push 	r11
014790 67 E6 01 00 		      	push 	r12
014794 B9 4E FD FF 		      	bsr  	GetJCBPtr
014798 82 30 00 1A 		      	mov  	r3,r1
01479C 82 B1 00 1A 		      	mov  	r11,r3
0147A0 39 32 FF FF 		      	bsr  	GetScreenLocation
0147A4 82 30 00 1A 		      	mov  	r3,r1
0147A8 82 C1 00 1A 		      	mov  	r12,r3
0147AC C3 35 C0 0C 		      	lcu  	r3,1632[r11]
0147B0 95 31 02 00 		      	subu 	r3,r3,#1
0147B4 C3 45 C4 0C 		      	lcu  	r4,1634[r11]
0147B8 02 42 00 22 		      	sxc  	r4,r4
0147BC 82 31 08 0E 		      	mul  	r3,r3,r4
0147C0 E3 3D D0 FF 		      	sw   	r3,-24[bp]
0147C4 E3 0D E0 FF 		      	sw   	r0,-16[bp]
                	console_184:
0147C8 C6 3D E0 FF 		      	lw   	r3,-16[bp]
0147CC C6 4D D0 FF 		      	lw   	r4,-24[bp]
0147D0 82 31 08 0C 		      	cmp  	r3,r3,r4
0147D4 BD 31 18 00 		      	bge  	r3,console_185
0147D8 C6 3D E0 FF 		      	lw   	r3,-16[bp]
0147DC C3 45 C4 0C 		      	lcu  	r4,1634[r11]
0147E0 02 42 00 22 		      	sxc  	r4,r4
0147E4 82 31 08 28 		      	addu 	r3,r3,r4
0147E8 82 31 04 70 		      	asli 	r3,r3,#2
0147EC C6 4D E0 FF 		      	lw   	r4,-16[bp]
0147F0 02 42 04 70 		      	asli 	r4,r4,#2
0147F4 4C 56 06 00 		      	lh   	r5,0[r12+r3]
0147F8 6A 56 08 00 		      	sh   	r5,0[r12+r4]
                	console_186:
0147FC E4 1D E0 FF 		      	inc  	-16[bp],#1
014800 3A F9 FF FF 		      	bra  	console_184
                	console_185:
014804 C3 35 C0 0C 		      	lcu  	r3,1632[r11]
014808 95 31 02 00 		      	subu 	r3,r3,#1
01480C E7 E1 01 00 		      	push 	r3
014810 39 D1 FF FF 		      	bsr  	BlankLine
014814 14 EF 11 00 		      	addui	sp,sp,#8
                	console_187:
014818 57 CF 10 00 		      	pop  	r12
01481C 57 BF 10 00 		      	pop  	r11
014820 82 ED 01 1A 		      	mov  	sp,bp
014824 57 BF 11 00 		      	pop  	bp
014828 57 CF 11 00 		      	pop  	xlr
01482C 57 FF 11 00 		      	pop  	lr
014830 37 FF 01 00 		      	rtl  	#0
                	console_183:
014834 C6 FD 11 00 		      	lw   	lr,8[bp]
014838 E3 FD 21 00 		      	sw   	lr,16[bp]
01483C BA FB FF FF 		      	bra  	console_187
                	endpublic
                	
                	public code IncrementCursorPos:
014840 E7 EF 01 00 		      	push 	lr
014844 67 EE 01 00 		      	push 	xlr
014848 E7 ED 01 00 		      	push 	bp
01484C 7C 01 00 00 		      	ldi  	xlr,#console_188
014850 0A C0 C1 91 
014854 02 BF 01 1A 		      	mov  	bp,sp
014858 15 EF 11 00 		      	subui	sp,sp,#8
01485C E7 E5 01 00 		      	push 	r11
014860 39 35 FD FF 		      	bsr  	GetJCBPtr
014864 82 30 00 1A 		      	mov  	r3,r1
014868 82 B1 00 1A 		      	mov  	r11,r3
01486C C3 35 CC 0C 		      	lcu  	r3,1638[r11]
014870 94 31 02 00 		      	addui	r3,r3,#1
014874 E1 35 CC 0C 		      	sc   	r3,1638[r11]
014878 C3 35 CC 0C 		      	lcu  	r3,1638[r11]
01487C C3 45 C4 0C 		      	lcu  	r4,1634[r11]
014880 82 31 08 2C 		      	cmpu 	r3,r3,r4
014884 BD 31 10 00 		      	bge  	r3,console_189
014888 39 7B FF FF 		      	bsr  	UpdateCursorPos
                	console_191:
01488C 57 BF 10 00 		      	pop  	r11
014890 82 ED 01 1A 		      	mov  	sp,bp
014894 57 BF 11 00 		      	pop  	bp
014898 57 CF 11 00 		      	pop  	xlr
01489C 57 FF 11 00 		      	pop  	lr
0148A0 37 FF 01 00 		      	rtl  	#0
                	console_189:
0148A4 E1 05 CC 0C 		      	sc   	r0,1638[r11]
0148A8 C3 35 C8 0C 		      	lcu  	r3,1636[r11]
0148AC 94 31 02 00 		      	addui	r3,r3,#1
0148B0 E1 35 C8 0C 		      	sc   	r3,1636[r11]
0148B4 C3 35 C8 0C 		      	lcu  	r3,1636[r11]
0148B8 C3 45 C0 0C 		      	lcu  	r4,1632[r11]
0148BC 82 31 08 2C 		      	cmpu 	r3,r3,r4
0148C0 BD 31 06 00 		      	bge  	r3,console_192
0148C4 B9 73 FF FF 		      	bsr  	UpdateCursorPos
0148C8 BA F8 FF FF 		      	bra  	console_191
                	console_192:
0148CC C3 35 C8 0C 		      	lcu  	r3,1636[r11]
0148D0 95 31 02 00 		      	subui	r3,r3,#1
0148D4 E1 35 C8 0C 		      	sc   	r3,1636[r11]
0148D8 39 D3 FF FF 		      	bsr  	ScrollUp
0148DC 3A F6 FF FF 		      	bra  	console_191
                	console_188:
0148E0 C6 FD 11 00 		      	lw   	lr,8[bp]
0148E4 E3 FD 21 00 		      	sw   	lr,16[bp]
0148E8 BA F4 FF FF 		      	bra  	console_191
                	endpublic
                	
                	public code DisplayChar:
0148EC E7 EF 01 00 		      	push 	lr
0148F0 67 EE 01 00 		      	push 	xlr
0148F4 E7 ED 01 00 		      	push 	bp
0148F8 7C 01 00 00 		      	ldi  	xlr,#console_194
0148FC 0A C0 11 98 
014900 02 BF 01 1A 		      	mov  	bp,sp
014904 15 EF 31 00 		      	subui	sp,sp,#24
014908 E7 E5 01 00 		      	push 	r11
01490C 67 E6 01 00 		      	push 	r12
014910 39 1F FD FF 		      	bsr  	GetJCBPtr
014914 82 30 00 1A 		      	mov  	r3,r1
014918 82 B1 00 1A 		      	mov  	r11,r3
01491C C3 3D 30 00 		      	lcu  	r3,24[bp]
014920 86 41 1A 00 		      	cmp  	r4,r3,#13
014924 3D 02 28 00 		      	beq  	r4,console_196
014928 86 41 14 00 		      	cmp  	r4,r3,#10
01492C 3D 02 2A 00 		      	beq  	r4,console_197
014930 86 41 22 01 		      	cmp  	r4,r3,#145
014934 3D 02 3C 00 		      	beq  	r4,console_198
014938 86 41 20 01 		      	cmp  	r4,r3,#144
01493C 3D 02 4A 00 		      	beq  	r4,console_199
014940 86 41 26 01 		      	cmp  	r4,r3,#147
014944 3D 02 56 00 		      	beq  	r4,console_200
014948 86 41 24 01 		      	cmp  	r4,r3,#146
01494C 3D 02 62 00 		      	beq  	r4,console_201
014950 86 41 28 01 		      	cmp  	r4,r3,#148
014954 3D 02 70 00 		      	beq  	r4,console_202
014958 86 41 32 01 		      	cmp  	r4,r3,#153
01495C 3D 02 78 00 		      	beq  	r4,console_203
014960 86 41 10 00 		      	cmp  	r4,r3,#8
014964 3D 02 B8 00 		      	beq  	r4,console_204
014968 86 41 12 00 		      	cmp  	r4,r3,#9
01496C 3D 02 04 01 		      	beq  	r4,console_205
014970 3A 47 00 00 		      	bra  	console_206
                	console_196:
014974 E1 05 CC 0C 		      	sc   	r0,1638[r11]
014978 39 5D FF FF 		      	bsr  	UpdateCursorPos
01497C 3A 4E 00 00 		      	bra  	console_195
                	console_197:
014980 C3 35 C8 0C 		      	lcu  	r3,1636[r11]
014984 C3 45 C0 0C 		      	lcu  	r4,1632[r11]
014988 82 31 08 2C 		      	cmpu 	r3,r3,r4
01498C BD 31 0C 00 		      	bge  	r3,console_207
014990 C3 35 C8 0C 		      	lcu  	r3,1636[r11]
014994 94 31 02 00 		      	addui	r3,r3,#1
014998 E1 35 C8 0C 		      	sc   	r3,1636[r11]
01499C B9 58 FF FF 		      	bsr  	UpdateCursorPos
0149A0 3A 01 00 00 		      	bra  	console_208
                	console_207:
0149A4 B9 B9 FF FF 		      	bsr  	ScrollUp
                	console_208:
0149A8 BA 48 00 00 		      	bra  	console_195
                	console_198:
0149AC C3 35 CC 0C 		      	lcu  	r3,1638[r11]
0149B0 C3 45 C4 0C 		      	lcu  	r4,1634[r11]
0149B4 82 31 08 2C 		      	cmpu 	r3,r3,r4
0149B8 BD 31 0A 00 		      	bge  	r3,console_209
0149BC C3 35 CC 0C 		      	lcu  	r3,1638[r11]
0149C0 94 31 02 00 		      	addui	r3,r3,#1
0149C4 E1 35 CC 0C 		      	sc   	r3,1638[r11]
0149C8 39 53 FF FF 		      	bsr  	UpdateCursorPos
                	console_209:
0149CC 3A 44 00 00 		      	bra  	console_195
                	console_199:
0149D0 C3 35 C8 0C 		      	lcu  	r3,1636[r11]
0149D4 96 31 00 00 		      	cmpu 	r3,r3,#0
0149D8 BD 51 0A 00 		      	ble  	r3,console_211
0149DC C3 35 C8 0C 		      	lcu  	r3,1636[r11]
0149E0 95 31 02 00 		      	subui	r3,r3,#1
0149E4 E1 35 C8 0C 		      	sc   	r3,1636[r11]
0149E8 39 4F FF FF 		      	bsr  	UpdateCursorPos
                	console_211:
0149EC 3A 40 00 00 		      	bra  	console_195
                	console_200:
0149F0 C3 35 CC 0C 		      	lcu  	r3,1638[r11]
0149F4 96 31 00 00 		      	cmpu 	r3,r3,#0
0149F8 BD 51 0A 00 		      	ble  	r3,console_213
0149FC C3 35 CC 0C 		      	lcu  	r3,1638[r11]
014A00 95 31 02 00 		      	subui	r3,r3,#1
014A04 E1 35 CC 0C 		      	sc   	r3,1638[r11]
014A08 39 4B FF FF 		      	bsr  	UpdateCursorPos
                	console_213:
014A0C 3A 3C 00 00 		      	bra  	console_195
                	console_201:
014A10 C3 35 C8 0C 		      	lcu  	r3,1636[r11]
014A14 C3 45 C0 0C 		      	lcu  	r4,1632[r11]
014A18 82 31 08 2C 		      	cmpu 	r3,r3,r4
014A1C BD 31 0A 00 		      	bge  	r3,console_215
014A20 C3 35 C8 0C 		      	lcu  	r3,1636[r11]
014A24 94 31 02 00 		      	addui	r3,r3,#1
014A28 E1 35 C8 0C 		      	sc   	r3,1636[r11]
014A2C B9 46 FF FF 		      	bsr  	UpdateCursorPos
                	console_215:
014A30 BA 37 00 00 		      	bra  	console_195
                	console_202:
014A34 C3 35 CC 0C 		      	lcu  	r3,1638[r11]
014A38 BD 11 04 00 		      	bne  	r3,console_217
014A3C E1 05 C8 0C 		      	sc   	r0,1636[r11]
                	console_217:
014A40 E1 05 CC 0C 		      	sc   	r0,1638[r11]
014A44 B9 43 FF FF 		      	bsr  	UpdateCursorPos
014A48 BA 34 00 00 		      	bra  	console_195
                	console_203:
014A4C B9 5D FF FF 		      	bsr  	CalcScreenLocation
014A50 82 30 00 1A 		      	mov  	r3,r1
014A54 82 C1 00 1A 		      	mov  	r12,r3
014A58 C3 35 CC 0C 		      	lcu  	r3,1638[r11]
014A5C 82 31 00 22 		      	sxc  	r3,r3
014A60 E3 3D E0 FF 		      	sw   	r3,-16[bp]
                	console_219:
014A64 C6 3D E0 FF 		      	lw   	r3,-16[bp]
014A68 C3 45 C4 0C 		      	lcu  	r4,1634[r11]
014A6C 15 42 02 00 		      	subu 	r4,r4,#1
014A70 82 31 08 0C 		      	cmp  	r3,r3,r4
014A74 BD 31 14 00 		      	bge  	r3,console_220
014A78 C6 3D E0 FF 		      	lw   	r3,-16[bp]
014A7C 82 31 04 70 		      	asli 	r3,r3,#2
014A80 82 31 18 28 		      	addu 	r3,r3,r12
014A84 C6 4D E0 FF 		      	lw   	r4,-16[bp]
014A88 02 42 04 70 		      	asli 	r4,r4,#2
014A8C C4 51 08 00 		      	lh   	r5,4[r3]
014A90 6A 56 08 00 		      	sh   	r5,0[r12+r4]
                	console_221:
014A94 E4 1D E0 FF 		      	inc  	-16[bp],#1
014A98 BA F9 FF FF 		      	bra  	console_219
                	console_220:
014A9C B9 DB FE FF 		      	bsr  	GetCurrAttr
014AA0 82 30 00 1A 		      	mov  	r3,r1
014AA4 E7 E1 01 00 		      	push 	r3
014AA8 65 E0 41 00 		      	push 	#32
014AAC B9 15 FF FF 		      	bsr  	AsciiToScreen
014AB0 14 EF 11 00 		      	addui	sp,sp,#8
014AB4 57 3F 10 00 		      	pop  	r3
014AB8 82 40 00 1A 		      	mov  	r4,r1
014ABC 02 42 00 22 		      	sxc  	r4,r4
014AC0 82 31 08 1A 		      	or   	r3,r3,r4
014AC4 C6 4D E0 FF 		      	lw   	r4,-16[bp]
014AC8 02 42 04 70 		      	asli 	r4,r4,#2
014ACC 6A 36 08 00 		      	sh   	r3,0[r12+r4]
014AD0 BA 23 00 00 		      	bra  	console_195
                	console_204:
014AD4 C3 35 CC 0C 		      	lcu  	r3,1638[r11]
014AD8 96 31 00 00 		      	cmpu 	r3,r3,#0
014ADC BD 51 4A 00 		      	ble  	r3,console_222
014AE0 C3 35 CC 0C 		      	lcu  	r3,1638[r11]
014AE4 95 31 02 00 		      	subui	r3,r3,#1
014AE8 E1 35 CC 0C 		      	sc   	r3,1638[r11]
014AEC B9 49 FF FF 		      	bsr  	CalcScreenLocation
014AF0 82 30 00 1A 		      	mov  	r3,r1
014AF4 82 C1 00 1A 		      	mov  	r12,r3
014AF8 C3 35 CC 0C 		      	lcu  	r3,1638[r11]
014AFC 82 31 00 22 		      	sxc  	r3,r3
014B00 E3 3D E0 FF 		      	sw   	r3,-16[bp]
                	console_224:
014B04 C6 3D E0 FF 		      	lw   	r3,-16[bp]
014B08 C3 45 C4 0C 		      	lcu  	r4,1634[r11]
014B0C 15 42 02 00 		      	subu 	r4,r4,#1
014B10 82 31 08 0C 		      	cmp  	r3,r3,r4
014B14 BD 31 14 00 		      	bge  	r3,console_225
014B18 C6 3D E0 FF 		      	lw   	r3,-16[bp]
014B1C 82 31 04 70 		      	asli 	r3,r3,#2
014B20 82 31 18 28 		      	addu 	r3,r3,r12
014B24 C6 4D E0 FF 		      	lw   	r4,-16[bp]
014B28 02 42 04 70 		      	asli 	r4,r4,#2
014B2C C4 51 08 00 		      	lh   	r5,4[r3]
014B30 6A 56 08 00 		      	sh   	r5,0[r12+r4]
                	console_226:
014B34 E4 1D E0 FF 		      	inc  	-16[bp],#1
014B38 BA F9 FF FF 		      	bra  	console_224
                	console_225:
014B3C B9 C7 FE FF 		      	bsr  	GetCurrAttr
014B40 82 30 00 1A 		      	mov  	r3,r1
014B44 E7 E1 01 00 		      	push 	r3
014B48 65 E0 41 00 		      	push 	#32
014B4C B9 01 FF FF 		      	bsr  	AsciiToScreen
014B50 14 EF 11 00 		      	addui	sp,sp,#8
014B54 57 3F 10 00 		      	pop  	r3
014B58 82 40 00 1A 		      	mov  	r4,r1
014B5C 02 42 00 22 		      	sxc  	r4,r4
014B60 82 31 08 1A 		      	or   	r3,r3,r4
014B64 C6 4D E0 FF 		      	lw   	r4,-16[bp]
014B68 02 42 04 70 		      	asli 	r4,r4,#2
014B6C 6A 36 08 00 		      	sh   	r3,0[r12+r4]
                	console_222:
014B70 BA 0F 00 00 		      	bra  	console_195
                	console_205:
014B74 65 E0 41 00 		      	push 	#32
014B78 B9 AE FF FF 		      	bsr  	DisplayChar
014B7C 14 EF 11 00 		      	addui	sp,sp,#8
014B80 65 E0 41 00 		      	push 	#32
014B84 39 AD FF FF 		      	bsr  	DisplayChar
014B88 14 EF 11 00 		      	addui	sp,sp,#8
014B8C 65 E0 41 00 		      	push 	#32
014B90 B9 AB FF FF 		      	bsr  	DisplayChar
014B94 14 EF 11 00 		      	addui	sp,sp,#8
014B98 65 E0 41 00 		      	push 	#32
014B9C 39 AA FF FF 		      	bsr  	DisplayChar
014BA0 14 EF 11 00 		      	addui	sp,sp,#8
014BA4 3A 09 00 00 		      	bra  	console_195
                	console_206:
014BA8 39 32 FF FF 		      	bsr  	CalcScreenLocation
014BAC 82 30 00 1A 		      	mov  	r3,r1
014BB0 82 C1 00 1A 		      	mov  	r12,r3
014BB4 B9 B8 FE FF 		      	bsr  	GetCurrAttr
014BB8 82 30 00 1A 		      	mov  	r3,r1
014BBC E7 E1 01 00 		      	push 	r3
014BC0 C3 4D 30 00 		      	lcu  	r4,24[bp]
014BC4 67 E2 01 00 		      	push 	r4
014BC8 39 F2 FE FF 		      	bsr  	AsciiToScreen
014BCC 14 EF 11 00 		      	addui	sp,sp,#8
014BD0 57 3F 10 00 		      	pop  	r3
014BD4 82 40 00 1A 		      	mov  	r4,r1
014BD8 02 42 00 22 		      	sxc  	r4,r4
014BDC 82 31 08 1A 		      	or   	r3,r3,r4
014BE0 62 36 00 00 		      	sh   	r3,[r12]
014BE4 B9 8B FF FF 		      	bsr  	IncrementCursorPos
014BE8 BA 00 00 00 		      	bra  	console_195
                	console_195:
                	console_227:
014BEC 57 CF 10 00 		      	pop  	r12
014BF0 57 BF 10 00 		      	pop  	r11
014BF4 82 ED 01 1A 		      	mov  	sp,bp
014BF8 57 BF 11 00 		      	pop  	bp
014BFC 57 CF 11 00 		      	pop  	xlr
014C00 57 FF 11 00 		      	pop  	lr
014C04 37 FF 01 00 		      	rtl  	#0
                	console_194:
014C08 C6 FD 11 00 		      	lw   	lr,8[bp]
014C0C E3 FD 21 00 		      	sw   	lr,16[bp]
014C10 BA FB FF FF 		      	bra  	console_227
                	endpublic
                	
                	public code CRLF:
014C14 E7 EF 01 00 		      	push 	lr
014C18 67 EE 01 00 		      	push 	xlr
014C1C E7 ED 01 00 		      	push 	bp
014C20 7C 01 00 00 		      	ldi  	xlr,#console_228
014C24 0A C0 B1 98 
014C28 02 BF 01 1A 		      	mov  	bp,sp
014C2C 65 E0 1B 00 		      	push 	#13
014C30 B9 97 FF FF 		      	bsr  	DisplayChar
014C34 14 EF 11 00 		      	addui	sp,sp,#8
014C38 65 E0 15 00 		      	push 	#10
014C3C 39 96 FF FF 		      	bsr  	DisplayChar
014C40 14 EF 11 00 		      	addui	sp,sp,#8
                	console_229:
014C44 82 ED 01 1A 		      	mov  	sp,bp
014C48 57 BF 11 00 		      	pop  	bp
014C4C 57 CF 11 00 		      	pop  	xlr
014C50 57 FF 11 00 		      	pop  	lr
014C54 37 FF 01 00 		      	rtl  	#0
                	console_228:
014C58 C6 FD 11 00 		      	lw   	lr,8[bp]
014C5C E3 FD 21 00 		      	sw   	lr,16[bp]
014C60 BA FC FF FF 		      	bra  	console_229
                	endpublic
                	
                	public code DisplayString:
014C64 E7 EF 01 00 		      	push 	lr
014C68 67 EE 01 00 		      	push 	xlr
014C6C E7 ED 01 00 		      	push 	bp
014C70 7C 01 00 00 		      	ldi  	xlr,#console_230
014C74 0A C0 79 99 
014C78 02 BF 01 1A 		      	mov  	bp,sp
014C7C E7 E5 01 00 		      	push 	r11
014C80 C6 BD 30 00 		      	lw   	r11,24[bp]
                	console_231:
014C84 C3 35 00 00 		      	lcu  	r3,[r11]
014C88 BD 01 0E 00 		      	beq  	r3,console_232
014C8C C3 35 00 00 		      	lcu  	r3,[r11]
014C90 E7 E1 01 00 		      	push 	r3
014C94 39 8B FF FF 		      	bsr  	DisplayChar
014C98 14 EF 11 00 		      	addui	sp,sp,#8
014C9C 94 B5 04 00 		      	addui	r11,r11,#2
014CA0 BA FC FF FF 		      	bra  	console_231
                	console_232:
                	console_233:
014CA4 57 BF 10 00 		      	pop  	r11
014CA8 82 ED 01 1A 		      	mov  	sp,bp
014CAC 57 BF 11 00 		      	pop  	bp
014CB0 57 CF 11 00 		      	pop  	xlr
014CB4 57 FF 11 00 		      	pop  	lr
014CB8 37 FF 01 00 		      	rtl  	#0
                	console_230:
014CBC C6 FD 11 00 		      	lw   	lr,8[bp]
014CC0 E3 FD 21 00 		      	sw   	lr,16[bp]
014CC4 3A FC FF FF 		      	bra  	console_233
                	endpublic
                	
                	public code DisplayStringCRLF:
014CC8 E7 EF 01 00 		      	push 	lr
014CCC 67 EE 01 00 		      	push 	xlr
014CD0 E7 ED 01 00 		      	push 	bp
014CD4 7C 01 00 00 		      	ldi  	xlr,#console_234
014CD8 0A C0 09 9A 
014CDC 02 BF 01 1A 		      	mov  	bp,sp
014CE0 E6 ED 31 00 		      	push 	24[bp]
014CE4 39 F0 FF FF 		      	bsr  	DisplayString
014CE8 14 EF 11 00 		      	addui	sp,sp,#8
014CEC 39 E5 FF FF 		      	bsr  	CRLF
                	console_235:
014CF0 82 ED 01 1A 		      	mov  	sp,bp
014CF4 57 BF 11 00 		      	pop  	bp
014CF8 57 CF 11 00 		      	pop  	xlr
014CFC 57 FF 11 00 		      	pop  	lr
014D00 37 FF 01 00 		      	rtl  	#0
                	console_234:
014D04 C6 FD 11 00 		      	lw   	lr,8[bp]
014D08 E3 FD 21 00 		      	sw   	lr,16[bp]
014D0C BA FC FF FF 		      	bra  	console_235
                	endpublic
                	
                		code
                		align	16                	
                	public code ForceIOFocus:
014D10 E7 EF 01 00 		      	push 	lr
014D14 67 EE 01 00 		      	push 	xlr
014D18 E7 ED 01 00 		      	push 	bp
014D1C 7C 01 00 00 		      	ldi  	xlr,#IOFocusc_74
014D20 0A C0 19 9B 
014D24 02 BF 01 1A 		      	mov  	bp,sp
014D28 E7 E5 01 00 		      	push 	r11
014D2C E6 ED 31 00 		      	push 	24[bp]
014D30 39 23 00 00 		      	bsr  	RequestIOFocus
014D34 14 EF 11 00 		      	addui	sp,sp,#8
014D38 39 89 0C 00 		      	bsr  	LockIOF
014D3C 7C 08 01 00 		      	lw   	r3,IOFocusNdx
014D40 46 30 40 55 
014D44 82 B5 06 0C 		      	cmp  	r11,r11,r3
014D48 BD 05 14 00 		      	beq  	r11,IOFocusc_75
014D4C 39 7D 00 00 		      	bsr  	CopyScreenToVirtualScreen
014D50 C6 35 B0 0C 		      	lw   	r3,1624[r11]
014D54 E3 35 A0 0C 		      	sw   	r3,1616[r11]
014D58 7C 08 01 00 		      	sw   	r11,IOFocusNdx
014D5C 63 B0 40 55 
014D60 7C D0 FF 00 		      	ldi  	r3,#4291821568
014D64 0A 30 00 00 
014D68 E3 35 A0 0C 		      	sw   	r3,1616[r11]
014D6C B9 5F 00 00 		      	bsr  	CopyVirtualScreenToScreen
                	IOFocusc_75:
014D70 B9 85 0C 00 		      	bsr  	UnlockIOF
                	IOFocusc_77:
014D74 57 BF 10 00 		      	pop  	r11
014D78 82 ED 01 1A 		      	mov  	sp,bp
014D7C 57 BF 11 00 		      	pop  	bp
014D80 57 CF 11 00 		      	pop  	xlr
014D84 57 FF 11 00 		      	pop  	lr
014D88 37 FF 01 00 		      	rtl  	#0
                	IOFocusc_74:
014D8C C6 FD 11 00 		      	lw   	lr,8[bp]
014D90 E3 FD 21 00 		      	sw   	lr,16[bp]
014D94 3A FC FF FF 		      	bra  	IOFocusc_77
                	endpublic
                	
                	public code SwitchIOFocus:
014D98 E7 EF 01 00 		      	push 	lr
014D9C 67 EE 01 00 		      	push 	xlr
014DA0 E7 ED 01 00 		      	push 	bp
014DA4 7C 01 00 00 		      	ldi  	xlr,#IOFocusc_78
014DA8 0A C0 79 9C 
014DAC 02 BF 01 1A 		      	mov  	bp,sp
014DB0 15 EF 21 00 		      	subui	sp,sp,#16
014DB4 E7 E5 01 00 		      	push 	r11
014DB8 67 E6 01 00 		      	push 	r12
014DBC 7C 08 01 00 		      	ldi  	r12,#IOFocusNdx
014DC0 0A C0 40 55 
014DC4 B9 77 0C 00 		      	bsr  	LockIOF
014DC8 46 B6 00 00 		      	lw   	r11,[r12]
014DCC BD 05 28 00 		      	beq  	r11,IOFocusc_79
014DD0 46 36 00 00 		      	lw   	r3,[r12]
014DD4 C6 41 00 00 		      	lw   	r4,[r3]
014DD8 E3 4D E0 FF 		      	sw   	r4,-16[bp]
014DDC C6 3D E0 FF 		      	lw   	r3,-16[bp]
014DE0 46 46 00 00 		      	lw   	r4,[r12]
014DE4 82 31 08 0C 		      	cmp  	r3,r3,r4
014DE8 BD 01 1A 00 		      	beq  	r3,IOFocusc_81
014DEC C6 3D E0 FF 		      	lw   	r3,-16[bp]
014DF0 BD 01 16 00 		      	beq  	r3,IOFocusc_83
014DF4 39 68 00 00 		      	bsr  	CopyScreenToVirtualScreen
014DF8 C6 35 B0 0C 		      	lw   	r3,1624[r11]
014DFC E3 35 A0 0C 		      	sw   	r3,1616[r11]
014E00 C6 3D E0 FF 		      	lw   	r3,-16[bp]
014E04 63 36 00 00 		      	sw   	r3,[r12]
014E08 C6 3D E0 FF 		      	lw   	r3,-16[bp]
014E0C 7C D0 FF 00 		      	ldi  	r4,#4291821568
014E10 0A 40 00 00 
014E14 E3 41 A0 0C 		      	sw   	r4,1616[r3]
014E18 39 4A 00 00 		      	bsr  	CopyVirtualScreenToScreen
                	IOFocusc_83:
                	IOFocusc_81:
                	IOFocusc_79:
014E1C 39 70 0C 00 		      	bsr  	UnlockIOF
                	IOFocusc_85:
014E20 57 CF 10 00 		      	pop  	r12
014E24 57 BF 10 00 		      	pop  	r11
014E28 82 ED 01 1A 		      	mov  	sp,bp
014E2C 57 BF 11 00 		      	pop  	bp
014E30 57 CF 11 00 		      	pop  	xlr
014E34 57 FF 11 00 		      	pop  	lr
014E38 37 FF 01 00 		      	rtl  	#0
                	IOFocusc_78:
014E3C C6 FD 11 00 		      	lw   	lr,8[bp]
014E40 E3 FD 21 00 		      	sw   	lr,16[bp]
014E44 BA FB FF FF 		      	bra  	IOFocusc_85
                	endpublic
                	
                	public code RequestIOFocus:
014E48 E7 EF 01 00 		      	push 	lr
014E4C 67 EE 01 00 		      	push 	xlr
014E50 E7 ED 01 00 		      	push 	bp
014E54 7C 01 00 00 		      	ldi  	xlr,#IOFocusc_86
014E58 0A C0 49 9E 
014E5C 02 BF 01 1A 		      	mov  	bp,sp
014E60 15 EF 21 00 		      	subui	sp,sp,#16
014E64 E7 E5 01 00 		      	push 	r11
014E68 67 E6 01 00 		      	push 	r12
014E6C C6 BD 30 00 		      	lw   	r11,24[bp]
014E70 7C 08 01 00 		      	ldi  	r12,#IOFocusNdx
014E74 0A C0 40 55 
014E78 C2 35 1C 0D 		      	lc   	r3,1678[r11]
014E7C E3 3D F0 FF 		      	sw   	r3,-8[bp]
014E80 39 60 0C 00 		      	bsr  	LockIOF
014E84 7C 08 01 00 		      	lw   	r3,IOFocusTbl
014E88 46 30 50 55 
014E8C C6 4D F0 FF 		      	lw   	r4,-8[bp]
014E90 82 31 08 68 		      	asr  	r3,r3,r4
014E94 8C 31 02 00 		      	and  	r3,r3,#1
014E98 E3 3D E0 FF 		      	sw   	r3,-16[bp]
014E9C C6 3D E0 FF 		      	lw   	r3,-16[bp]
014EA0 BD 11 32 00 		      	bne  	r3,IOFocusc_87
014EA4 46 36 00 00 		      	lw   	r3,[r12]
014EA8 BD 11 0A 00 		      	bne  	r3,IOFocusc_89
014EAC 63 B6 00 00 		      	sw   	r11,[r12]
014EB0 E3 B5 00 00 		      	sw   	r11,[r11]
014EB4 E3 B5 10 00 		      	sw   	r11,8[r11]
014EB8 BA 05 00 00 		      	bra  	IOFocusc_90
                	IOFocusc_89:
014EBC 46 36 00 00 		      	lw   	r3,[r12]
014EC0 C6 41 10 00 		      	lw   	r4,8[r3]
014EC4 E3 45 10 00 		      	sw   	r4,8[r11]
014EC8 46 36 00 00 		      	lw   	r3,[r12]
014ECC E3 35 00 00 		      	sw   	r3,[r11]
014ED0 46 36 00 00 		      	lw   	r3,[r12]
014ED4 C6 31 10 00 		      	lw   	r3,8[r3]
014ED8 E3 B1 00 00 		      	sw   	r11,[r3]
014EDC 46 36 00 00 		      	lw   	r3,[r12]
014EE0 E3 B1 10 00 		      	sw   	r11,8[r3]
                	IOFocusc_90:
014EE4 0A 30 02 00 		      	ldi  	r3,#1
014EE8 C6 4D F0 FF 		      	lw   	r4,-8[bp]
014EEC 82 31 08 60 		      	asl  	r3,r3,r4
014EF0 7C 08 01 00 		      	lw   	r4,IOFocusTbl
014EF4 46 40 50 55 
014EF8 02 42 06 1A 		      	or   	r4,r4,r3
014EFC 7C 08 01 00 		      	sw   	r4,IOFocusTbl
014F00 63 40 50 55 
                	IOFocusc_87:
014F04 39 53 0C 00 		      	bsr  	UnlockIOF
                	IOFocusc_91:
014F08 57 CF 10 00 		      	pop  	r12
014F0C 57 BF 10 00 		      	pop  	r11
014F10 82 ED 01 1A 		      	mov  	sp,bp
014F14 57 BF 11 00 		      	pop  	bp
014F18 57 CF 11 00 		      	pop  	xlr
014F1C 57 FF 11 00 		      	pop  	lr
014F20 37 FF 01 00 		      	rtl  	#0
                	IOFocusc_86:
014F24 C6 FD 11 00 		      	lw   	lr,8[bp]
014F28 E3 FD 21 00 		      	sw   	lr,16[bp]
014F2C BA FB FF FF 		      	bra  	IOFocusc_91
                	endpublic
                	
                	public code ReleaseIOFocus:
014F30 E7 EF 01 00 		      	push 	lr
014F34 67 EE 01 00 		      	push 	xlr
014F38 E7 ED 01 00 		      	push 	bp
014F3C 7C 01 00 00 		      	ldi  	xlr,#IOFocusc_92
014F40 0A C0 E1 9E 
014F44 02 BF 01 1A 		      	mov  	bp,sp
014F48 39 58 FC FF 		      	bsr  	GetJCBPtr
014F4C 82 30 00 1A 		      	mov  	r3,r1
014F50 E7 E1 01 00 		      	push 	r3
014F54 39 05 00 00 		      	bsr  	ForceReleaseIOFocus
014F58 14 EF 11 00 		      	addui	sp,sp,#8
                	IOFocusc_93:
014F5C 82 ED 01 1A 		      	mov  	sp,bp
014F60 57 BF 11 00 		      	pop  	bp
014F64 57 CF 11 00 		      	pop  	xlr
014F68 57 FF 11 00 		      	pop  	lr
014F6C 37 FF 01 00 		      	rtl  	#0
                	IOFocusc_92:
014F70 C6 FD 11 00 		      	lw   	lr,8[bp]
014F74 E3 FD 21 00 		      	sw   	lr,16[bp]
014F78 BA FC FF FF 		      	bra  	IOFocusc_93
                	endpublic
                	
                	public code ForceReleaseIOFocus:
014F7C E7 EF 01 00 		      	push 	lr
014F80 67 EE 01 00 		      	push 	xlr
014F84 E7 ED 01 00 		      	push 	bp
014F88 7C 01 00 00 		      	ldi  	xlr,#IOFocusc_94
014F8C 0A C0 B9 A0 
014F90 02 BF 01 1A 		      	mov  	bp,sp
014F94 15 EF 11 00 		      	subui	sp,sp,#8
014F98 E7 E5 01 00 		      	push 	r11
014F9C C6 BD 30 00 		      	lw   	r11,24[bp]
014FA0 39 3C 0C 00 		      	bsr  	LockIOF
014FA4 7C 08 01 00 		      	lw   	r3,IOFocusTbl
014FA8 46 30 50 55 
014FAC 0A 40 02 00 		      	ldi  	r4,#1
014FB0 C2 55 1C 0D 		      	lc   	r5,1678[r11]
014FB4 02 42 0A 60 		      	asl  	r4,r4,r5
014FB8 82 31 08 18 		      	and  	r3,r3,r4
014FBC BD 01 42 00 		      	beq  	r3,IOFocusc_95
014FC0 0A 30 02 00 		      	ldi  	r3,#1
014FC4 C2 45 1C 0D 		      	lc   	r4,1678[r11]
014FC8 82 31 08 60 		      	asl  	r3,r3,r4
014FCC 8E 31 FE FF 		      	com  	r3,r3
014FD0 7C 08 01 00 		      	lw   	r4,IOFocusTbl
014FD4 46 40 50 55 
014FD8 02 42 06 18 		      	and  	r4,r4,r3
014FDC 7C 08 01 00 		      	sw   	r4,IOFocusTbl
014FE0 63 40 50 55 
014FE4 7C 08 01 00 		      	lw   	r3,IOFocusNdx
014FE8 46 30 40 55 
014FEC 82 B5 06 0C 		      	cmp  	r11,r11,r3
014FF0 BD 15 04 00 		      	bne  	r11,IOFocusc_97
014FF4 B9 B4 FF FF 		      	bsr  	SwitchIOFocus
                	IOFocusc_97:
014FF8 C6 35 00 00 		      	lw   	r3,[r11]
014FFC E3 3D F0 FF 		      	sw   	r3,-8[bp]
015000 C6 3D F0 FF 		      	lw   	r3,-8[bp]
015004 BD 01 1E 00 		      	beq  	r3,IOFocusc_99
015008 C6 3D F0 FF 		      	lw   	r3,-8[bp]
01500C 82 31 16 0C 		      	cmp  	r3,r3,r11
015010 BD 01 10 00 		      	beq  	r3,IOFocusc_101
015014 C6 3D F0 FF 		      	lw   	r3,-8[bp]
015018 C6 45 10 00 		      	lw   	r4,8[r11]
01501C E3 41 10 00 		      	sw   	r4,8[r3]
015020 C6 35 10 00 		      	lw   	r3,8[r11]
015024 C6 4D F0 FF 		      	lw   	r4,-8[bp]
015028 E3 41 00 00 		      	sw   	r4,[r3]
01502C BA 01 00 00 		      	bra  	IOFocusc_102
                	IOFocusc_101:
015030 7C 08 01 00 		      	sw   	r0,IOFocusNdx
015034 63 00 40 55 
                	IOFocusc_102:
015038 E3 05 00 00 		      	sw   	r0,[r11]
01503C E3 05 10 00 		      	sw   	r0,8[r11]
                	IOFocusc_99:
                	IOFocusc_95:
015040 B9 2B 0C 00 		      	bsr  	UnlockIOF
                	IOFocusc_103:
015044 57 BF 10 00 		      	pop  	r11
015048 82 ED 01 1A 		      	mov  	sp,bp
01504C 57 BF 11 00 		      	pop  	bp
015050 57 CF 11 00 		      	pop  	xlr
015054 57 FF 11 00 		      	pop  	lr
015058 37 FF 01 00 		      	rtl  	#0
                	IOFocusc_94:
01505C C6 FD 11 00 		      	lw   	lr,8[bp]
015060 E3 FD 21 00 		      	sw   	lr,16[bp]
015064 3A FC FF FF 		      	bra  	IOFocusc_103
                	endpublic
                	
                	public code CopyVirtualScreenToScreen:
015068 E7 EF 01 00 		      	push 	lr
01506C 67 EE 01 00 		      	push 	xlr
015070 E7 ED 01 00 		      	push 	bp
015074 7C 01 00 00 		      	ldi  	xlr,#IOFocusc_104
015078 0A C0 51 A2 
01507C 02 BF 01 1A 		      	mov  	bp,sp
015080 15 EF 51 00 		      	subui	sp,sp,#40
015084 E7 E5 01 00 		      	push 	r11
015088 67 E6 01 00 		      	push 	r12
01508C E7 E6 01 00 		      	push 	r13
015090 7C 08 01 00 		      	lw   	r11,IOFocusNdx
015094 46 B0 40 55 
015098 C6 D5 A0 0C 		      	lw   	r13,1616[r11]
01509C C6 C5 B0 0C 		      	lw   	r12,1624[r11]
0150A0 C3 35 C0 0C 		      	lcu  	r3,1632[r11]
0150A4 C3 45 C4 0C 		      	lcu  	r4,1634[r11]
0150A8 82 31 08 2E 		      	mulu 	r3,r3,r4
0150AC 82 31 00 22 		      	sxc  	r3,r3
0150B0 E3 3D C0 FF 		      	sw   	r3,-32[bp]
                	IOFocusc_105:
0150B4 C6 3D C0 FF 		      	lw   	r3,-32[bp]
0150B8 BD 41 12 00 		      	blt  	r3,IOFocusc_106
0150BC C6 3D C0 FF 		      	lw   	r3,-32[bp]
0150C0 82 31 04 70 		      	asli 	r3,r3,#2
0150C4 C6 4D C0 FF 		      	lw   	r4,-32[bp]
0150C8 02 42 04 70 		      	asli 	r4,r4,#2
0150CC 4C 56 06 00 		      	lh   	r5,0[r12+r3]
0150D0 EA 56 08 00 		      	sh   	r5,0[r13+r4]
                	IOFocusc_107:
0150D4 E4 FD C1 FF 		      	dec  	-32[bp],#1
0150D8 BA FB FF FF 		      	bra  	IOFocusc_105
                	IOFocusc_106:
0150DC C3 35 C8 0C 		      	lcu  	r3,1636[r11]
0150E0 C3 45 C4 0C 		      	lcu  	r4,1634[r11]
0150E4 82 31 08 2E 		      	mulu 	r3,r3,r4
0150E8 C3 45 CC 0C 		      	lcu  	r4,1638[r11]
0150EC 82 31 08 28 		      	addu 	r3,r3,r4
0150F0 82 31 00 22 		      	sxc  	r3,r3
0150F4 E3 3D B0 FF 		      	sw   	r3,-40[bp]
0150F8 E6 ED B1 FF 		      	push 	-40[bp]
0150FC 65 E0 17 00 		      	push 	#11
015100 39 21 FE FF 		      	bsr  	SetVideoReg
015104 14 EF 21 00 		      	addui	sp,sp,#16
                	IOFocusc_108:
015108 57 DF 10 00 		      	pop  	r13
01510C 57 CF 10 00 		      	pop  	r12
015110 57 BF 10 00 		      	pop  	r11
015114 82 ED 01 1A 		      	mov  	sp,bp
015118 57 BF 11 00 		      	pop  	bp
01511C 57 CF 11 00 		      	pop  	xlr
015120 57 FF 11 00 		      	pop  	lr
015124 37 FF 01 00 		      	rtl  	#0
                	IOFocusc_104:
015128 C6 FD 11 00 		      	lw   	lr,8[bp]
01512C E3 FD 21 00 		      	sw   	lr,16[bp]
015130 3A FB FF FF 		      	bra  	IOFocusc_108
                	endpublic
                	
                	public code CopyScreenToVirtualScreen:
015134 15 EF 21 00 		      	subui	sp,sp,#16
015138 E7 ED 01 00 		      	push 	bp
01513C 02 BF 01 1A 		      	mov  	bp,sp
015140 15 EF 41 00 		      	subui	sp,sp,#32
015144 E7 E5 01 00 		      	push 	r11
015148 67 E6 01 00 		      	push 	r12
01514C E7 E6 01 00 		      	push 	r13
015150 7C 08 01 00 		      	lw   	r11,IOFocusNdx
015154 46 B0 40 55 
015158 C6 D5 A0 0C 		      	lw   	r13,1616[r11]
01515C C6 C5 B0 0C 		      	lw   	r12,1624[r11]
015160 C3 35 C0 0C 		      	lcu  	r3,1632[r11]
015164 C3 45 C4 0C 		      	lcu  	r4,1634[r11]
015168 82 31 08 2E 		      	mulu 	r3,r3,r4
01516C 82 31 00 22 		      	sxc  	r3,r3
015170 E3 3D C0 FF 		      	sw   	r3,-32[bp]
                	IOFocusc_110:
015174 C6 3D C0 FF 		      	lw   	r3,-32[bp]
015178 BD 41 12 00 		      	blt  	r3,IOFocusc_111
01517C C6 3D C0 FF 		      	lw   	r3,-32[bp]
015180 82 31 04 70 		      	asli 	r3,r3,#2
015184 C6 4D C0 FF 		      	lw   	r4,-32[bp]
015188 02 42 04 70 		      	asli 	r4,r4,#2
01518C CC 56 06 00 		      	lh   	r5,0[r13+r3]
015190 6A 56 08 00 		      	sh   	r5,0[r12+r4]
                	IOFocusc_112:
015194 E4 FD C1 FF 		      	dec  	-32[bp],#1
015198 BA FB FF FF 		      	bra  	IOFocusc_110
                	IOFocusc_111:
                	IOFocusc_113:
01519C 57 DF 10 00 		      	pop  	r13
0151A0 57 CF 10 00 		      	pop  	r12
0151A4 57 BF 10 00 		      	pop  	r11
0151A8 82 ED 01 1A 		      	mov  	sp,bp
0151AC 57 BF 11 00 		      	pop  	bp
0151B0 37 FF 21 00 		      	rtl  	#16
                	endpublic
                	
                		code
0151B4 00 00 00 00 		align	1
0151B8 00 00 00 00 
0151BC 00 00 00 00 
                	
                	public code putch:
0151C0 15 EF 21 00 		      	subui	sp,sp,#16
0151C4 E7 ED 01 00 		      	push 	bp
0151C8 02 BF 01 1A 		      	mov  	bp,sp
0151CC 67 E3 01 00 		      	     	        push    r6
0151D0 C6 1D 30 00 			lw		r1,24[bp]
0151D4 0A 60 1C 00 			ldi     r6,#14    ; Teletype output function
0151D8 38 0F 34 03 	        sys     #410      ; Video BIOS call
0151DC 57 6F 10 00 	        pop     r6
                		
                	stdio_969:
0151E0 82 ED 01 1A 		      	mov  	sp,bp
0151E4 57 BF 11 00 		      	pop  	bp
0151E8 37 FF 31 00 		      	rtl  	#24
                	endpublic
                	
                	public code putnum:
0151EC E7 EF 01 00 		      	push 	lr
0151F0 67 EE 01 00 		      	push 	xlr
0151F4 E7 ED 01 00 		      	push 	bp
0151F8 7C 01 00 00 		      	ldi  	xlr,#stdio_971
0151FC 0A C0 F1 A6 
015200 02 BF 01 1A 		      	mov  	bp,sp
015204 15 EF 51 03 		      	subui	sp,sp,#424
015208 E7 E5 01 00 		      	push 	r11
01520C C7 3D BC FC 		      	lea  	r3,-418[bp]
015210 82 B1 00 1A 		      	mov  	r11,r3
015214 C6 3D 40 00 		      	lw   	r3,32[bp]
015218 BD 41 08 00 		      	blt  	r3,stdio_974
01521C C6 3D 40 00 		      	lw   	r3,32[bp]
015220 86 31 90 01 		      	cmp  	r3,r3,#200
015224 BD 51 04 00 		      	ble  	r3,stdio_972
                	stdio_974:
015228 E3 0D 40 00 		      	sw   	r0,32[bp]
                	stdio_972:
01522C C6 3D 30 00 		      	lw   	r3,24[bp]
015230 BD 31 06 00 		      	bge  	r3,stdio_975
015234 0A 30 5A 00 		      	ldi  	r3,#45
015238 BA 01 00 00 		      	bra  	stdio_976
                	stdio_975:
01523C 0A 40 56 00 		      	ldi  	r4,#43
015240 02 32 00 1A 		      	mov  	r3,r4
                	stdio_976:
015244 E1 3D DC FF 		      	sc   	r3,-18[bp]
015248 C6 3D 30 00 		      	lw   	r3,24[bp]
01524C BD 31 08 00 		      	bge  	r3,stdio_977
015250 C6 3D 30 00 		      	lw   	r3,24[bp]
015254 02 30 06 2A 		      	neg  	r3,r3
015258 E3 3D 30 00 		      	sw   	r3,24[bp]
                	stdio_977:
01525C E3 0D F0 FF 		      	sw   	r0,-8[bp]
                	stdio_979:
015260 C6 3D F0 FF 		      	lw   	r3,-8[bp]
015264 8C 31 06 00 		      	and  	r3,r3,#3
015268 86 31 06 00 		      	cmp  	r3,r3,#3
01526C BD 11 12 00 		      	bne  	r3,stdio_981
015270 C3 3D 50 00 		      	lcu  	r3,40[bp]
015274 82 31 00 22 		      	sxc  	r3,r3
015278 BD 01 0C 00 		      	beq  	r3,stdio_981
01527C C6 3D F0 FF 		      	lw   	r3,-8[bp]
015280 82 31 02 70 		      	asli 	r3,r3,#1
015284 C3 4D 50 00 		      	lcu  	r4,40[bp]
015288 E9 45 06 00 		      	sc   	r4,0[r11+r3]
01528C E4 1D F0 FF 		      	inc  	-8[bp],#1
                	stdio_981:
015290 C6 3D 30 00 		      	lw   	r3,24[bp]
015294 89 31 14 00 		      	mod  	r3,r3,#10
015298 E3 3D E0 FF 		      	sw   	r3,-16[bp]
01529C C6 3D E0 FF 		      	lw   	r3,-16[bp]
0152A0 86 31 12 00 		      	cmp  	r3,r3,#9
0152A4 BD 21 06 00 		      	bgt  	r3,stdio_985
0152A8 C6 3D E0 FF 		      	lw   	r3,-16[bp]
0152AC BD 31 0A 00 		      	bge  	r3,stdio_983
                	stdio_985:
0152B0 FC 01 00 00 		      	push 	#stdio_970
0152B4 65 E0 81 63 
0152B8 B9 74 00 00 		      	bsr  	printf
0152BC 14 EF 11 00 		      	addui	sp,sp,#8
                	stdio_983:
0152C0 C6 3D E0 FF 		      	lw   	r3,-16[bp]
0152C4 94 31 60 00 		      	addu 	r3,r3,#48
0152C8 C6 4D F0 FF 		      	lw   	r4,-8[bp]
0152CC 02 42 02 70 		      	asli 	r4,r4,#1
0152D0 E9 35 08 00 		      	sc   	r3,0[r11+r4]
0152D4 C6 3D 30 00 		      	lw   	r3,24[bp]
0152D8 88 31 14 00 		      	divs 	r3,r3,#10
0152DC E3 3D 30 00 		      	sw   	r3,24[bp]
0152E0 E4 1D F0 FF 		      	inc  	-8[bp],#1
0152E4 C6 3D 30 00 		      	lw   	r3,24[bp]
0152E8 BD 01 08 00 		      	beq  	r3,stdio_986
0152EC C6 3D F0 FF 		      	lw   	r3,-8[bp]
0152F0 86 31 24 00 		      	cmp  	r3,r3,#18
0152F4 BD 51 B6 FF 		      	ble  	r3,stdio_979
                	stdio_986:
                	stdio_980:
0152F8 C3 3D DC FF 		      	lcu  	r3,-18[bp]
0152FC 86 31 5A 00 		      	cmp  	r3,r3,#45
015300 BD 11 0C 00 		      	bne  	r3,stdio_987
015304 C6 3D F0 FF 		      	lw   	r3,-8[bp]
015308 82 31 02 70 		      	asli 	r3,r3,#1
01530C C3 4D DC FF 		      	lcu  	r4,-18[bp]
015310 E9 45 06 00 		      	sc   	r4,0[r11+r3]
015314 E4 1D F0 FF 		      	inc  	-8[bp],#1
                	stdio_987:
                	stdio_989:
015318 C6 3D F0 FF 		      	lw   	r3,-8[bp]
01531C C6 4D 40 00 		      	lw   	r4,32[bp]
015320 82 31 08 0C 		      	cmp  	r3,r3,r4
015324 BD 31 0C 00 		      	bge  	r3,stdio_990
015328 C3 3D 60 00 		      	lcu  	r3,48[bp]
01532C E7 E1 01 00 		      	push 	r3
015330 39 D2 FF FF 		      	bsr  	putch
                	stdio_991:
015334 E4 FD 41 00 		      	dec  	32[bp],#1
015338 3A FC FF FF 		      	bra  	stdio_989
                	stdio_990:
                	stdio_992:
01533C C6 3D F0 FF 		      	lw   	r3,-8[bp]
015340 BD 51 10 00 		      	ble  	r3,stdio_993
015344 E4 FD F1 FF 		      	dec  	-8[bp],#1
015348 C6 3D F0 FF 		      	lw   	r3,-8[bp]
01534C 82 31 02 70 		      	asli 	r3,r3,#1
015350 CB 35 06 00 		      	lcu  	r3,0[r11+r3]
015354 E7 E1 01 00 		      	push 	r3
015358 39 CD FF FF 		      	bsr  	putch
01535C 3A FC FF FF 		      	bra  	stdio_992
                	stdio_993:
                	stdio_994:
015360 57 BF 10 00 		      	pop  	r11
015364 82 ED 01 1A 		      	mov  	sp,bp
015368 57 BF 11 00 		      	pop  	bp
01536C 57 CF 11 00 		      	pop  	xlr
015370 57 FF 11 00 		      	pop  	lr
015374 37 FF 41 00 		      	rtl  	#32
                	stdio_971:
015378 C6 FD 11 00 		      	lw   	lr,8[bp]
01537C E3 FD 21 00 		      	sw   	lr,16[bp]
015380 3A FC FF FF 		      	bra  	stdio_994
                	endpublic
                	
                	public code puthexnum:
015384 E7 EF 01 00 		      	push 	lr
015388 67 EE 01 00 		      	push 	xlr
01538C E7 ED 01 00 		      	push 	bp
015390 7C 01 00 00 		      	ldi  	xlr,#stdio_995
015394 0A C0 39 AA 
015398 02 BF 01 1A 		      	mov  	bp,sp
01539C 15 EF 51 03 		      	subui	sp,sp,#424
0153A0 E7 E5 01 00 		      	push 	r11
0153A4 C7 3D BC FC 		      	lea  	r3,-418[bp]
0153A8 82 B1 00 1A 		      	mov  	r11,r3
0153AC C6 3D 40 00 		      	lw   	r3,32[bp]
0153B0 BD 41 08 00 		      	blt  	r3,stdio_998
0153B4 C6 3D 40 00 		      	lw   	r3,32[bp]
0153B8 86 31 90 01 		      	cmp  	r3,r3,#200
0153BC BD 51 04 00 		      	ble  	r3,stdio_996
                	stdio_998:
0153C0 E3 0D 40 00 		      	sw   	r0,32[bp]
                	stdio_996:
0153C4 E3 0D F0 FF 		      	sw   	r0,-8[bp]
0153C8 C6 3D 30 00 		      	lw   	r3,24[bp]
0153CC BD 31 06 00 		      	bge  	r3,stdio_999
0153D0 0A 30 5A 00 		      	ldi  	r3,#45
0153D4 BA 01 00 00 		      	bra  	stdio_1000
                	stdio_999:
0153D8 0A 40 56 00 		      	ldi  	r4,#43
0153DC 02 32 00 1A 		      	mov  	r3,r4
                	stdio_1000:
0153E0 E1 3D DC FF 		      	sc   	r3,-18[bp]
0153E4 C6 3D 30 00 		      	lw   	r3,24[bp]
0153E8 BD 31 08 00 		      	bge  	r3,stdio_1001
0153EC C6 3D 30 00 		      	lw   	r3,24[bp]
0153F0 02 30 06 2A 		      	neg  	r3,r3
0153F4 E3 3D 30 00 		      	sw   	r3,24[bp]
                	stdio_1001:
                	stdio_1003:
0153F8 C6 3D 30 00 		      	lw   	r3,24[bp]
0153FC 8C 31 1E 00 		      	and  	r3,r3,#15
015400 E3 3D E0 FF 		      	sw   	r3,-16[bp]
015404 C6 3D E0 FF 		      	lw   	r3,-16[bp]
015408 86 31 14 00 		      	cmp  	r3,r3,#10
01540C BD 31 0E 00 		      	bge  	r3,stdio_1005
015410 C6 3D E0 FF 		      	lw   	r3,-16[bp]
015414 94 31 60 00 		      	addu 	r3,r3,#48
015418 C6 4D F0 FF 		      	lw   	r4,-8[bp]
01541C 02 42 02 70 		      	asli 	r4,r4,#1
015420 E9 35 08 00 		      	sc   	r3,0[r11+r4]
015424 3A 07 00 00 		      	bra  	stdio_1006
                	stdio_1005:
015428 C6 3D 50 00 		      	lw   	r3,40[bp]
01542C BD 01 0E 00 		      	beq  	r3,stdio_1007
015430 C6 3D E0 FF 		      	lw   	r3,-16[bp]
015434 95 31 92 FF 		      	subu 	r3,r3,#-55
015438 C6 4D F0 FF 		      	lw   	r4,-8[bp]
01543C 02 42 02 70 		      	asli 	r4,r4,#1
015440 E9 35 08 00 		      	sc   	r3,0[r11+r4]
015444 3A 03 00 00 		      	bra  	stdio_1008
                	stdio_1007:
015448 C6 3D E0 FF 		      	lw   	r3,-16[bp]
01544C 95 31 52 FF 		      	subu 	r3,r3,#-87
015450 C6 4D F0 FF 		      	lw   	r4,-8[bp]
015454 02 42 02 70 		      	asli 	r4,r4,#1
015458 E9 35 08 00 		      	sc   	r3,0[r11+r4]
                	stdio_1008:
                	stdio_1006:
01545C C6 3D 30 00 		      	lw   	r3,24[bp]
015460 82 31 08 78 		      	asri 	r3,r3,#4
015464 E3 3D 30 00 		      	sw   	r3,24[bp]
015468 E4 1D F0 FF 		      	inc  	-8[bp],#1
01546C C6 3D 30 00 		      	lw   	r3,24[bp]
015470 BD 01 08 00 		      	beq  	r3,stdio_1009
015474 C6 3D F0 FF 		      	lw   	r3,-8[bp]
015478 86 31 24 00 		      	cmp  	r3,r3,#18
01547C BD 41 BE FF 		      	blt  	r3,stdio_1003
                	stdio_1009:
                	stdio_1004:
015480 C3 3D DC FF 		      	lcu  	r3,-18[bp]
015484 86 31 5A 00 		      	cmp  	r3,r3,#45
015488 BD 11 0C 00 		      	bne  	r3,stdio_1010
01548C C6 3D F0 FF 		      	lw   	r3,-8[bp]
015490 82 31 02 70 		      	asli 	r3,r3,#1
015494 C3 4D DC FF 		      	lcu  	r4,-18[bp]
015498 E9 45 06 00 		      	sc   	r4,0[r11+r3]
01549C E4 1D F0 FF 		      	inc  	-8[bp],#1
                	stdio_1010:
                	stdio_1012:
0154A0 C6 3D F0 FF 		      	lw   	r3,-8[bp]
0154A4 C6 4D 40 00 		      	lw   	r4,32[bp]
0154A8 82 31 08 0C 		      	cmp  	r3,r3,r4
0154AC BD 31 1A 00 		      	bge  	r3,stdio_1013
0154B0 C3 3D DC FF 		      	lcu  	r3,-18[bp]
0154B4 86 31 5A 00 		      	cmp  	r3,r3,#45
0154B8 BD 11 06 00 		      	bne  	r3,stdio_1014
0154BC 0A 30 40 00 		      	ldi  	r3,#32
0154C0 3A 02 00 00 		      	bra  	stdio_1015
                	stdio_1014:
0154C4 C3 4D 60 00 		      	lcu  	r4,48[bp]
0154C8 02 42 00 22 		      	sxc  	r4,r4
0154CC 02 32 00 1A 		      	mov  	r3,r4
                	stdio_1015:
0154D0 E7 E1 01 00 		      	push 	r3
0154D4 B9 9D FF FF 		      	bsr  	putch
0154D8 E4 FD 41 00 		      	dec  	32[bp],#1
0154DC BA F8 FF FF 		      	bra  	stdio_1012
                	stdio_1013:
                	stdio_1016:
0154E0 C6 3D F0 FF 		      	lw   	r3,-8[bp]
0154E4 BD 51 10 00 		      	ble  	r3,stdio_1017
0154E8 E4 FD F1 FF 		      	dec  	-8[bp],#1
0154EC C6 3D F0 FF 		      	lw   	r3,-8[bp]
0154F0 82 31 02 70 		      	asli 	r3,r3,#1
0154F4 CB 35 06 00 		      	lcu  	r3,0[r11+r3]
0154F8 E7 E1 01 00 		      	push 	r3
0154FC B9 98 FF FF 		      	bsr  	putch
015500 3A FC FF FF 		      	bra  	stdio_1016
                	stdio_1017:
                	stdio_1018:
015504 57 BF 10 00 		      	pop  	r11
015508 82 ED 01 1A 		      	mov  	sp,bp
01550C 57 BF 11 00 		      	pop  	bp
015510 57 CF 11 00 		      	pop  	xlr
015514 57 FF 11 00 		      	pop  	lr
015518 37 FF 41 00 		      	rtl  	#32
                	stdio_995:
01551C C6 FD 11 00 		      	lw   	lr,8[bp]
015520 E3 FD 21 00 		      	sw   	lr,16[bp]
015524 3A FC FF FF 		      	bra  	stdio_1018
                	endpublic
                	
                	public code putstr:
015528 E7 EF 01 00 		      	push 	lr
01552C 67 EE 01 00 		      	push 	xlr
015530 E7 ED 01 00 		      	push 	bp
015534 7C 01 00 00 		      	ldi  	xlr,#stdio_1019
015538 0A C0 49 AB 
01553C 02 BF 01 1A 		      	mov  	bp,sp
015540 15 EF 11 00 		      	subui	sp,sp,#8
015544 E7 E5 01 00 		      	push 	r11
015548 C6 BD 30 00 		      	lw   	r11,24[bp]
01554C E3 BD F0 FF 		      	sw   	r11,-8[bp]
                	stdio_1020:
015550 C3 35 00 00 		      	lcu  	r3,[r11]
015554 BD 01 12 00 		      	beq  	r3,stdio_1021
015558 C6 3D 40 00 		      	lw   	r3,32[bp]
01555C BD 51 0E 00 		      	ble  	r3,stdio_1021
015560 C3 35 00 00 		      	lcu  	r3,[r11]
015564 E7 E1 01 00 		      	push 	r3
015568 39 8B FF FF 		      	bsr  	putch
                	stdio_1022:
01556C 94 B5 04 00 		      	addui	r11,r11,#2
015570 E4 FD 41 00 		      	dec  	32[bp],#1
015574 BA FB FF FF 		      	bra  	stdio_1020
                	stdio_1021:
015578 C6 3D F0 FF 		      	lw   	r3,-8[bp]
01557C 82 31 02 70 		      	asli 	r3,r3,#1
015580 82 B5 06 2A 		      	subu 	r11,r11,r3
015584 82 B5 02 72 		      	lsri 	r11,r11,#1
015588 82 15 00 1A 		      	mov  	r1,r11
                	stdio_1023:
01558C 57 BF 10 00 		      	pop  	r11
015590 82 ED 01 1A 		      	mov  	sp,bp
015594 57 BF 11 00 		      	pop  	bp
015598 57 CF 11 00 		      	pop  	xlr
01559C 57 FF 11 00 		      	pop  	lr
0155A0 37 FF 21 00 		      	rtl  	#16
                	stdio_1019:
0155A4 C6 FD 11 00 		      	lw   	lr,8[bp]
0155A8 E3 FD 21 00 		      	sw   	lr,16[bp]
0155AC 3A FC FF FF 		      	bra  	stdio_1023
                	endpublic
                	
                	public code putstr2:
0155B0 15 EF 21 00 		      	subui	sp,sp,#16
0155B4 E7 ED 01 00 		      	push 	bp
0155B8 02 BF 01 1A 		      	mov  	bp,sp
0155BC 67 E3 01 00 		      	     	        push    r6
0155C0 C6 1D 30 00 	        lw      r1,24[bp]
0155C4 0A 60 36 00 	        ldi     r6,#$1B   ; Video BIOS DisplayString16 function
0155C8 38 0F 34 03 	        sys     #410
0155CC 57 6F 10 00 	        pop     r6
                	    
                	stdio_1025:
0155D0 82 ED 01 1A 		      	mov  	sp,bp
0155D4 57 BF 11 00 		      	pop  	bp
0155D8 37 FF 31 00 		      	rtl  	#24
                	endpublic
                	
                	public code getcharNoWait:
0155DC E7 EF 01 00 		      	     	        push    lr
0155E0 B9 CF F8 FF 	        bsr     KeybdGetCharNoWait
0155E4 57 FF 11 00 	        pop     lr
0155E8 37 FF 01 00 	        rtl
        push    r6
0155EC 67 E3 01 00 
                	        ld      r6,#3    ; KeybdGetCharNoWait
0155F0 38 0F 14 00 	        sys     #10
0155F4 57 6F 10 00 	        pop     r6
0155F8 37 FF 01 00 	        rtl
	
                	endpublic
                	
                	public code getchar:
0155FC E7 EF 01 00 		      	push 	lr
015600 67 EE 01 00 		      	push 	xlr
015604 E7 ED 01 00 		      	push 	bp
015608 7C 01 00 00 		      	ldi  	xlr,#stdio_1028
01560C 0A C0 A1 AC 
015610 02 BF 01 1A 		      	mov  	bp,sp
015614 15 EF 11 00 		      	subui	sp,sp,#8
                	stdio_1029:
015618 B9 F8 FF FF 		      	bsr  	getcharNoWait
01561C 82 30 00 1A 		      	mov  	r3,r1
015620 E3 3D F0 FF 		      	sw   	r3,-8[bp]
015624 C6 3D F0 FF 		      	lw   	r3,-8[bp]
015628 86 31 FE FF 		      	cmp  	r3,r3,#-1
01562C BD 01 F6 FF 		      	beq  	r3,stdio_1029
                	stdio_1030:
015630 C6 3D F0 FF 		      	lw   	r3,-8[bp]
015634 8C 31 FE 01 		      	and  	r3,r3,#255
015638 82 11 00 1A 		      	mov  	r1,r3
                	stdio_1031:
01563C 82 ED 01 1A 		      	mov  	sp,bp
015640 57 BF 11 00 		      	pop  	bp
015644 57 CF 11 00 		      	pop  	xlr
015648 57 FF 11 00 		      	pop  	lr
01564C 37 FF 01 00 		      	rtl  	#0
                	stdio_1028:
015650 C6 FD 11 00 		      	lw   	lr,8[bp]
015654 E3 FD 21 00 		      	sw   	lr,16[bp]
015658 BA FC FF FF 		      	bra  	stdio_1031
                	endpublic
                	
                	public code printf:
01565C E7 EF 01 00 		      	push 	lr
015660 67 EE 01 00 		      	push 	xlr
015664 E7 ED 01 00 		      	push 	bp
015668 7C 01 00 00 		      	ldi  	xlr,#stdio_1033
01566C 0A C0 49 B2 
015670 02 BF 01 1A 		      	mov  	bp,sp
015674 15 EF 51 00 		      	subui	sp,sp,#40
015678 E7 E5 01 00 		      	push 	r11
01567C 67 E6 01 00 		      	push 	r12
015680 C7 3D 30 00 		      	lea  	r3,24[bp]
015684 82 B1 00 1A 		      	mov  	r11,r3
015688 82 C5 00 1A 		      	mov  	r12,r11
                	stdio_1034:
01568C C6 35 00 00 		      	lw   	r3,[r11]
015690 C3 31 00 00 		      	lcu  	r3,[r3]
015694 BD 01 3A 01 		      	beq  	r3,stdio_1035
015698 0A 30 40 00 		      	ldi  	r3,#32
01569C E1 3D BC FF 		      	sc   	r3,-34[bp]
0156A0 C6 35 00 00 		      	lw   	r3,[r11]
0156A4 C3 31 00 00 		      	lcu  	r3,[r3]
0156A8 86 31 4A 00 		      	cmp  	r3,r3,#37
0156AC BD 11 22 01 		      	bne  	r3,stdio_1037
0156B0 E3 0D E0 FF 		      	sw   	r0,-16[bp]
0156B4 FC 00 00 00 		      	ldi  	r3,#65535
0156B8 0A 30 FE FF 
0156BC E3 3D D0 FF 		      	sw   	r3,-24[bp]
0156C0 E4 25 00 00 		      	inc  	[r11],#2
                	stdio_1032:
0156C4 C6 35 00 00 		      	lw   	r3,[r11]
0156C8 C3 31 00 00 		      	lcu  	r3,[r3]
0156CC 86 41 4A 00 		      	cmp  	r4,r3,#37
0156D0 3D 02 44 00 		      	beq  	r4,stdio_1040
0156D4 86 41 C6 00 		      	cmp  	r4,r3,#99
0156D8 3D 02 46 00 		      	beq  	r4,stdio_1041
0156DC 86 41 C8 00 		      	cmp  	r4,r3,#100
0156E0 3D 02 4A 00 		      	beq  	r4,stdio_1042
0156E4 86 41 F0 00 		      	cmp  	r4,r3,#120
0156E8 3D 02 56 00 		      	beq  	r4,stdio_1043
0156EC 86 41 B0 00 		      	cmp  	r4,r3,#88
0156F0 3D 02 62 00 		      	beq  	r4,stdio_1044
0156F4 86 41 E6 00 		      	cmp  	r4,r3,#115
0156F8 3D 02 6E 00 		      	beq  	r4,stdio_1045
0156FC 86 41 60 00 		      	cmp  	r4,r3,#48
015700 3D 02 78 00 		      	beq  	r4,stdio_1046
015704 86 41 72 00 		      	cmp  	r4,r3,#57
015708 3D 02 78 00 		      	beq  	r4,stdio_1047
01570C 86 41 70 00 		      	cmp  	r4,r3,#56
015710 3D 02 74 00 		      	beq  	r4,stdio_1047
015714 86 41 6E 00 		      	cmp  	r4,r3,#55
015718 3D 02 70 00 		      	beq  	r4,stdio_1047
01571C 86 41 6C 00 		      	cmp  	r4,r3,#54
015720 3D 02 6C 00 		      	beq  	r4,stdio_1047
015724 86 41 6A 00 		      	cmp  	r4,r3,#53
015728 3D 02 68 00 		      	beq  	r4,stdio_1047
01572C 86 41 68 00 		      	cmp  	r4,r3,#52
015730 3D 02 64 00 		      	beq  	r4,stdio_1047
015734 86 41 66 00 		      	cmp  	r4,r3,#51
015738 3D 02 60 00 		      	beq  	r4,stdio_1047
01573C 86 41 64 00 		      	cmp  	r4,r3,#50
015740 3D 02 5C 00 		      	beq  	r4,stdio_1047
015744 86 41 62 00 		      	cmp  	r4,r3,#49
015748 3D 02 58 00 		      	beq  	r4,stdio_1047
01574C 86 41 5C 00 		      	cmp  	r4,r3,#46
015750 3D 02 8C 00 		      	beq  	r4,stdio_1048
015754 3A 33 00 00 		      	bra  	stdio_1039
                	stdio_1040:
015758 65 E0 4B 00 		      	push 	#37
01575C B9 4C FF FF 		      	bsr  	putch
015760 BA 31 00 00 		      	bra  	stdio_1039
                	stdio_1041:
015764 14 C6 10 00 		      	addui	r12,r12,#8
015768 66 E6 01 00 		      	push 	[r12]
01576C B9 4A FF FF 		      	bsr  	putch
015770 BA 2F 00 00 		      	bra  	stdio_1039
                	stdio_1042:
015774 14 C6 10 00 		      	addui	r12,r12,#8
015778 C3 3D BC FF 		      	lcu  	r3,-34[bp]
01577C E7 E1 01 00 		      	push 	r3
015780 65 E0 01 00 		      	push 	#0
015784 E6 ED E1 FF 		      	push 	-16[bp]
015788 66 E6 01 00 		      	push 	[r12]
01578C 39 4C FF FF 		      	bsr  	putnum
015790 BA 2B 00 00 		      	bra  	stdio_1039
                	stdio_1043:
015794 14 C6 10 00 		      	addui	r12,r12,#8
015798 C3 3D BC FF 		      	lcu  	r3,-34[bp]
01579C E7 E1 01 00 		      	push 	r3
0157A0 65 E0 01 00 		      	push 	#0
0157A4 E6 ED E1 FF 		      	push 	-16[bp]
0157A8 66 E6 01 00 		      	push 	[r12]
0157AC 39 7B FF FF 		      	bsr  	puthexnum
0157B0 BA 27 00 00 		      	bra  	stdio_1039
                	stdio_1044:
0157B4 14 C6 10 00 		      	addui	r12,r12,#8
0157B8 C3 3D BC FF 		      	lcu  	r3,-34[bp]
0157BC E7 E1 01 00 		      	push 	r3
0157C0 65 E0 03 00 		      	push 	#1
0157C4 E6 ED E1 FF 		      	push 	-16[bp]
0157C8 66 E6 01 00 		      	push 	[r12]
0157CC 39 77 FF FF 		      	bsr  	puthexnum
0157D0 BA 23 00 00 		      	bra  	stdio_1039
                	stdio_1045:
0157D4 14 C6 10 00 		      	addui	r12,r12,#8
0157D8 E6 ED D1 FF 		      	push 	-24[bp]
0157DC 66 E6 01 00 		      	push 	[r12]
0157E0 39 A9 FF FF 		      	bsr  	putstr
0157E4 82 30 00 1A 		      	mov  	r3,r1
0157E8 E3 3D C0 FF 		      	sw   	r3,-32[bp]
0157EC 3A 20 00 00 		      	bra  	stdio_1039
                	stdio_1046:
0157F0 0A 30 60 00 		      	ldi  	r3,#48
0157F4 E1 3D BC FF 		      	sc   	r3,-34[bp]
                	stdio_1047:
0157F8 C6 35 00 00 		      	lw   	r3,[r11]
0157FC C3 31 00 00 		      	lcu  	r3,[r3]
015800 95 31 60 00 		      	subu 	r3,r3,#48
015804 E3 3D E0 FF 		      	sw   	r3,-16[bp]
015808 E4 25 00 00 		      	inc  	[r11],#2
                	stdio_1049:
01580C C6 35 00 00 		      	lw   	r3,[r11]
015810 C3 31 00 00 		      	lcu  	r3,[r3]
015814 E7 E1 01 00 		      	push 	r3
015818 B9 32 00 00 		      	bsr  	isdigit
01581C 14 EF 11 00 		      	addui	sp,sp,#8
015820 82 30 00 1A 		      	mov  	r3,r1
015824 BD 01 18 00 		      	beq  	r3,stdio_1050
015828 C6 3D E0 FF 		      	lw   	r3,-16[bp]
01582C 87 31 14 00 		      	muli 	r3,r3,#10
015830 E3 3D E0 FF 		      	sw   	r3,-16[bp]
015834 C6 35 00 00 		      	lw   	r3,[r11]
015838 C3 31 00 00 		      	lcu  	r3,[r3]
01583C 95 31 60 00 		      	subu 	r3,r3,#48
015840 C6 4D E0 FF 		      	lw   	r4,-16[bp]
015844 02 42 06 28 		      	addu 	r4,r4,r3
015848 E3 4D E0 FF 		      	sw   	r4,-16[bp]
01584C E4 25 00 00 		      	inc  	[r11],#2
015850 BA F7 FF FF 		      	bra  	stdio_1049
                	stdio_1050:
015854 C6 35 00 00 		      	lw   	r3,[r11]
015858 C3 31 00 00 		      	lcu  	r3,[r3]
01585C 86 31 5C 00 		      	cmp  	r3,r3,#46
015860 BD 01 04 00 		      	beq  	r3,stdio_1051
015864 3A CC FF FF 		      	bra  	stdio_1032
                	stdio_1051:
                	stdio_1048:
015868 E4 25 00 00 		      	inc  	[r11],#2
01586C C6 35 00 00 		      	lw   	r3,[r11]
015870 C3 31 00 00 		      	lcu  	r3,[r3]
015874 E7 E1 01 00 		      	push 	r3
015878 B9 26 00 00 		      	bsr  	isdigit
01587C 14 EF 11 00 		      	addui	sp,sp,#8
015880 82 30 00 1A 		      	mov  	r3,r1
015884 BD 11 04 00 		      	bne  	r3,stdio_1053
015888 BA C7 FF FF 		      	bra  	stdio_1032
                	stdio_1053:
01588C C6 35 00 00 		      	lw   	r3,[r11]
015890 C3 31 00 00 		      	lcu  	r3,[r3]
015894 95 31 60 00 		      	subu 	r3,r3,#48
015898 E3 3D D0 FF 		      	sw   	r3,-24[bp]
01589C E4 25 00 00 		      	inc  	[r11],#2
                	stdio_1055:
0158A0 C6 35 00 00 		      	lw   	r3,[r11]
0158A4 C3 31 00 00 		      	lcu  	r3,[r3]
0158A8 E7 E1 01 00 		      	push 	r3
0158AC 39 20 00 00 		      	bsr  	isdigit
0158B0 14 EF 11 00 		      	addui	sp,sp,#8
0158B4 82 30 00 1A 		      	mov  	r3,r1
0158B8 BD 01 18 00 		      	beq  	r3,stdio_1056
0158BC C6 3D D0 FF 		      	lw   	r3,-24[bp]
0158C0 87 31 14 00 		      	muli 	r3,r3,#10
0158C4 E3 3D D0 FF 		      	sw   	r3,-24[bp]
0158C8 C6 35 00 00 		      	lw   	r3,[r11]
0158CC C3 31 00 00 		      	lcu  	r3,[r3]
0158D0 95 31 60 00 		      	subu 	r3,r3,#48
0158D4 C6 4D D0 FF 		      	lw   	r4,-24[bp]
0158D8 02 42 06 28 		      	addu 	r4,r4,r3
0158DC E3 4D D0 FF 		      	sw   	r4,-24[bp]
0158E0 E4 25 00 00 		      	inc  	[r11],#2
0158E4 BA F7 FF FF 		      	bra  	stdio_1055
                	stdio_1056:
0158E8 BA BB FF FF 		      	bra  	stdio_1032
                	stdio_1039:
0158EC BA 02 00 00 		      	bra  	stdio_1038
                	stdio_1037:
0158F0 C6 35 00 00 		      	lw   	r3,[r11]
0158F4 C3 31 00 00 		      	lcu  	r3,[r3]
0158F8 E7 E1 01 00 		      	push 	r3
0158FC B9 18 FF FF 		      	bsr  	putch
                	stdio_1038:
                	stdio_1036:
015900 E4 25 00 00 		      	inc  	[r11],#2
015904 3A B1 FF FF 		      	bra  	stdio_1034
                	stdio_1035:
                	stdio_1057:
015908 57 CF 10 00 		      	pop  	r12
01590C 57 BF 10 00 		      	pop  	r11
015910 82 ED 01 1A 		      	mov  	sp,bp
015914 57 BF 11 00 		      	pop  	bp
015918 57 CF 11 00 		      	pop  	xlr
01591C 57 FF 11 00 		      	pop  	lr
015920 37 FF 01 00 		      	rtl  	#0
                	stdio_1033:
015924 C6 FD 11 00 		      	lw   	lr,8[bp]
015928 E3 FD 21 00 		      	sw   	lr,16[bp]
01592C BA FB FF FF 		      	bra  	stdio_1057
                	endpublic
                	
                		code
                		align	16                	
                	public code isxdigit:
015930 15 EF 21 00 		      	subui	sp,sp,#16
015934 E7 ED 01 00 		      	push 	bp
015938 02 BF 01 1A 		      	mov  	bp,sp
01593C C3 3D 30 00 		      	lcu  	r3,24[bp]
015940 96 31 82 00 		      	cmpu 	r3,r3,#65
015944 BD 41 10 00 		      	blt  	r3,ctype_1
015948 C3 3D 30 00 		      	lcu  	r3,24[bp]
01594C 96 31 8C 00 		      	cmpu 	r3,r3,#70
015950 BD 21 0A 00 		      	bgt  	r3,ctype_1
015954 0A 10 02 00 		      	ldi  	r1,#1
                	ctype_3:
015958 82 ED 01 1A 		      	mov  	sp,bp
01595C 57 BF 11 00 		      	pop  	bp
015960 37 FF 21 00 		      	rtl  	#16
                	ctype_1:
015964 C3 3D 30 00 		      	lcu  	r3,24[bp]
015968 96 31 C2 00 		      	cmpu 	r3,r3,#97
01596C BD 41 0C 00 		      	blt  	r3,ctype_4
015970 C3 3D 30 00 		      	lcu  	r3,24[bp]
015974 96 31 CC 00 		      	cmpu 	r3,r3,#102
015978 BD 21 06 00 		      	bgt  	r3,ctype_4
01597C 0A 10 02 00 		      	ldi  	r1,#1
015980 3A FB FF FF 		      	bra  	ctype_3
                	ctype_4:
015984 C3 3D 30 00 		      	lcu  	r3,24[bp]
015988 96 31 60 00 		      	cmpu 	r3,r3,#48
01598C BD 41 0C 00 		      	blt  	r3,ctype_6
015990 C3 3D 30 00 		      	lcu  	r3,24[bp]
015994 96 31 72 00 		      	cmpu 	r3,r3,#57
015998 BD 21 06 00 		      	bgt  	r3,ctype_6
01599C 0A 10 02 00 		      	ldi  	r1,#1
0159A0 3A F7 FF FF 		      	bra  	ctype_3
                	ctype_6:
0159A4 0A 10 00 00 		      	ldi  	r1,#0
0159A8 3A F6 FF FF 		      	bra  	ctype_3
                	endpublic
                	
                	public code isdigit:
0159AC 15 EF 21 00 		      	subui	sp,sp,#16
0159B0 E7 ED 01 00 		      	push 	bp
0159B4 02 BF 01 1A 		      	mov  	bp,sp
0159B8 C3 3D 30 00 		      	lcu  	r3,24[bp]
0159BC 96 31 60 00 		      	cmpu 	r3,r3,#48
0159C0 BD 41 10 00 		      	blt  	r3,ctype_9
0159C4 C3 3D 30 00 		      	lcu  	r3,24[bp]
0159C8 96 31 72 00 		      	cmpu 	r3,r3,#57
0159CC BD 21 0A 00 		      	bgt  	r3,ctype_9
0159D0 0A 10 02 00 		      	ldi  	r1,#1
                	ctype_11:
0159D4 82 ED 01 1A 		      	mov  	sp,bp
0159D8 57 BF 11 00 		      	pop  	bp
0159DC 37 FF 21 00 		      	rtl  	#16
                	ctype_9:
0159E0 0A 10 00 00 		      	ldi  	r1,#0
0159E4 3A FE FF FF 		      	bra  	ctype_11
                	endpublic
                	
                	public code isalpha:
0159E8 15 EF 21 00 		      	subui	sp,sp,#16
0159EC E7 ED 01 00 		      	push 	bp
0159F0 02 BF 01 1A 		      	mov  	bp,sp
0159F4 C3 3D 30 00 		      	lcu  	r3,24[bp]
0159F8 96 31 C2 00 		      	cmpu 	r3,r3,#97
0159FC BD 41 10 00 		      	blt  	r3,ctype_13
015A00 C3 3D 30 00 		      	lcu  	r3,24[bp]
015A04 96 31 F4 00 		      	cmpu 	r3,r3,#122
015A08 BD 21 0A 00 		      	bgt  	r3,ctype_13
015A0C 0A 10 02 00 		      	ldi  	r1,#1
                	ctype_15:
015A10 82 ED 01 1A 		      	mov  	sp,bp
015A14 57 BF 11 00 		      	pop  	bp
015A18 37 FF 21 00 		      	rtl  	#16
                	ctype_13:
015A1C C3 3D 30 00 		      	lcu  	r3,24[bp]
015A20 96 31 82 00 		      	cmpu 	r3,r3,#65
015A24 BD 41 0C 00 		      	blt  	r3,ctype_16
015A28 C3 3D 30 00 		      	lcu  	r3,24[bp]
015A2C 96 31 B4 00 		      	cmpu 	r3,r3,#90
015A30 BD 21 06 00 		      	bgt  	r3,ctype_16
015A34 0A 10 02 00 		      	ldi  	r1,#1
015A38 3A FB FF FF 		      	bra  	ctype_15
                	ctype_16:
015A3C 0A 10 00 00 		      	ldi  	r1,#0
015A40 3A FA FF FF 		      	bra  	ctype_15
                	endpublic
                	
                	public code isalnum:
015A44 15 EF 21 00 		      	subui	sp,sp,#16
015A48 E7 ED 01 00 		      	push 	bp
015A4C 02 BF 01 1A 		      	mov  	bp,sp
015A50 C3 3D 30 00 		      	lcu  	r3,24[bp]
015A54 96 31 60 00 		      	cmpu 	r3,r3,#48
015A58 BD 41 10 00 		      	blt  	r3,ctype_19
015A5C C3 3D 30 00 		      	lcu  	r3,24[bp]
015A60 96 31 72 00 		      	cmpu 	r3,r3,#57
015A64 BD 21 0A 00 		      	bgt  	r3,ctype_19
015A68 0A 10 02 00 		      	ldi  	r1,#1
                	ctype_21:
015A6C 82 ED 01 1A 		      	mov  	sp,bp
015A70 57 BF 11 00 		      	pop  	bp
015A74 37 FF 21 00 		      	rtl  	#16
                	ctype_19:
015A78 C3 3D 30 00 		      	lcu  	r3,24[bp]
015A7C 96 31 C2 00 		      	cmpu 	r3,r3,#97
015A80 BD 41 0C 00 		      	blt  	r3,ctype_22
015A84 C3 3D 30 00 		      	lcu  	r3,24[bp]
015A88 96 31 F4 00 		      	cmpu 	r3,r3,#122
015A8C BD 21 06 00 		      	bgt  	r3,ctype_22
015A90 0A 10 02 00 		      	ldi  	r1,#1
015A94 3A FB FF FF 		      	bra  	ctype_21
                	ctype_22:
015A98 C3 3D 30 00 		      	lcu  	r3,24[bp]
015A9C 96 31 82 00 		      	cmpu 	r3,r3,#65
015AA0 BD 41 0C 00 		      	blt  	r3,ctype_24
015AA4 C3 3D 30 00 		      	lcu  	r3,24[bp]
015AA8 96 31 B4 00 		      	cmpu 	r3,r3,#90
015AAC BD 21 06 00 		      	bgt  	r3,ctype_24
015AB0 0A 10 02 00 		      	ldi  	r1,#1
015AB4 3A F7 FF FF 		      	bra  	ctype_21
                	ctype_24:
015AB8 0A 10 00 00 		      	ldi  	r1,#0
015ABC 3A F6 FF FF 		      	bra  	ctype_21
                	endpublic
                	
                	public code isspace:
015AC0 15 EF 21 00 		      	subui	sp,sp,#16
015AC4 E7 ED 01 00 		      	push 	bp
015AC8 02 BF 01 1A 		      	mov  	bp,sp
015ACC C3 3D 30 00 		      	lcu  	r3,24[bp]
015AD0 86 31 40 00 		      	cmp  	r3,r3,#32
015AD4 BD 11 0A 00 		      	bne  	r3,ctype_27
015AD8 0A 10 02 00 		      	ldi  	r1,#1
                	ctype_29:
015ADC 82 ED 01 1A 		      	mov  	sp,bp
015AE0 57 BF 11 00 		      	pop  	bp
015AE4 37 FF 21 00 		      	rtl  	#16
                	ctype_27:
015AE8 C3 3D 30 00 		      	lcu  	r3,24[bp]
015AEC 86 31 12 00 		      	cmp  	r3,r3,#9
015AF0 BD 11 06 00 		      	bne  	r3,ctype_30
015AF4 0A 10 02 00 		      	ldi  	r1,#1
015AF8 BA FC FF FF 		      	bra  	ctype_29
                	ctype_30:
015AFC C3 3D 30 00 		      	lcu  	r3,24[bp]
015B00 86 31 14 00 		      	cmp  	r3,r3,#10
015B04 BD 11 06 00 		      	bne  	r3,ctype_32
015B08 0A 10 02 00 		      	ldi  	r1,#1
015B0C 3A FA FF FF 		      	bra  	ctype_29
                	ctype_32:
015B10 C3 3D 30 00 		      	lcu  	r3,24[bp]
015B14 86 31 1A 00 		      	cmp  	r3,r3,#13
015B18 BD 11 06 00 		      	bne  	r3,ctype_34
015B1C 0A 10 02 00 		      	ldi  	r1,#1
015B20 BA F7 FF FF 		      	bra  	ctype_29
                	ctype_34:
015B24 C3 3D 30 00 		      	lcu  	r3,24[bp]
015B28 86 31 18 00 		      	cmp  	r3,r3,#12
015B2C BD 11 06 00 		      	bne  	r3,ctype_36
015B30 0A 10 02 00 		      	ldi  	r1,#1
015B34 3A F5 FF FF 		      	bra  	ctype_29
                	ctype_36:
015B38 0A 10 00 00 		      	ldi  	r1,#0
015B3C 3A F4 FF FF 		      	bra  	ctype_29
                	endpublic
                	
                	public code tolower:
015B40 15 EF 21 00 		      	subui	sp,sp,#16
015B44 E7 ED 01 00 		      	push 	bp
015B48 02 BF 01 1A 		      	mov  	bp,sp
015B4C C3 3D 30 00 		      	lcu  	r3,24[bp]
015B50 96 31 82 00 		      	cmpu 	r3,r3,#65
015B54 BD 41 0E 00 		      	blt  	r3,ctype_39
015B58 C3 3D 30 00 		      	lcu  	r3,24[bp]
015B5C 96 31 B4 00 		      	cmpu 	r3,r3,#90
015B60 BD 21 08 00 		      	bgt  	r3,ctype_39
015B64 C3 3D 30 00 		      	lcu  	r3,24[bp]
015B68 94 31 40 00 		      	addu 	r3,r3,#32
015B6C E1 3D 30 00 		      	sc   	r3,24[bp]
                	ctype_39:
015B70 C3 3D 30 00 		      	lcu  	r3,24[bp]
015B74 82 11 00 1A 		      	mov  	r1,r3
                	ctype_41:
015B78 82 ED 01 1A 		      	mov  	sp,bp
015B7C 57 BF 11 00 		      	pop  	bp
015B80 37 FF 21 00 		      	rtl  	#16
                	endpublic
                	
                	public code toupper:
015B84 15 EF 21 00 		      	subui	sp,sp,#16
015B88 E7 ED 01 00 		      	push 	bp
015B8C 02 BF 01 1A 		      	mov  	bp,sp
015B90 C3 3D 30 00 		      	lcu  	r3,24[bp]
015B94 96 31 C2 00 		      	cmpu 	r3,r3,#97
015B98 BD 41 0E 00 		      	blt  	r3,ctype_43
015B9C C3 3D 30 00 		      	lcu  	r3,24[bp]
015BA0 96 31 C2 00 		      	cmpu 	r3,r3,#97
015BA4 BD 21 08 00 		      	bgt  	r3,ctype_43
015BA8 C3 3D 30 00 		      	lcu  	r3,24[bp]
015BAC 94 31 C0 FF 		      	addu 	r3,r3,#-32
015BB0 E1 3D 30 00 		      	sc   	r3,24[bp]
                	ctype_43:
015BB4 C3 3D 30 00 		      	lcu  	r3,24[bp]
015BB8 82 11 00 1A 		      	mov  	r1,r3
                	ctype_45:
015BBC 82 ED 01 1A 		      	mov  	sp,bp
015BC0 57 BF 11 00 		      	pop  	bp
015BC4 37 FF 21 00 		      	rtl  	#16
                	endpublic
                	
                	public code isupper:
015BC8 15 EF 21 00 		      	subui	sp,sp,#16
015BCC E7 ED 01 00 		      	push 	bp
015BD0 02 BF 01 1A 		      	mov  	bp,sp
015BD4 C3 3D 30 00 		      	lcu  	r3,24[bp]
015BD8 96 31 82 00 		      	cmpu 	r3,r3,#65
015BDC BD 41 0C 00 		      	blt  	r3,ctype_47
015BE0 C3 3D 30 00 		      	lcu  	r3,24[bp]
015BE4 96 31 B4 00 		      	cmpu 	r3,r3,#90
015BE8 BD 21 06 00 		      	bgt  	r3,ctype_47
015BEC 0A 30 02 00 		      	ldi  	r3,#1
015BF0 3A 01 00 00 		      	bra  	ctype_48
                	ctype_47:
015BF4 0A 30 00 00 		      	ldi  	r3,#0
                	ctype_48:
015BF8 82 11 00 1A 		      	mov  	r1,r3
                	ctype_49:
015BFC 82 ED 01 1A 		      	mov  	sp,bp
015C00 57 BF 11 00 		      	pop  	bp
015C04 37 FF 21 00 		      	rtl  	#16
                	endpublic
                	
                	public code islower:
015C08 15 EF 21 00 		      	subui	sp,sp,#16
015C0C E7 ED 01 00 		      	push 	bp
015C10 02 BF 01 1A 		      	mov  	bp,sp
015C14 C3 3D 30 00 		      	lcu  	r3,24[bp]
015C18 96 31 C2 00 		      	cmpu 	r3,r3,#97
015C1C BD 41 0C 00 		      	blt  	r3,ctype_51
015C20 C3 3D 30 00 		      	lcu  	r3,24[bp]
015C24 96 31 F4 00 		      	cmpu 	r3,r3,#122
015C28 BD 21 06 00 		      	bgt  	r3,ctype_51
015C2C 0A 30 02 00 		      	ldi  	r3,#1
015C30 3A 01 00 00 		      	bra  	ctype_52
                	ctype_51:
015C34 0A 30 00 00 		      	ldi  	r3,#0
                	ctype_52:
015C38 82 11 00 1A 		      	mov  	r1,r3
                	ctype_53:
015C3C 82 ED 01 1A 		      	mov  	sp,bp
015C40 57 BF 11 00 		      	pop  	bp
015C44 37 FF 21 00 		      	rtl  	#16
                	endpublic
                	
                	public code ispunct:
015C48 15 EF 21 00 		      	subui	sp,sp,#16
015C4C E7 ED 01 00 		      	push 	bp
015C50 02 BF 01 1A 		      	mov  	bp,sp
015C54 C3 3D 30 00 		      	lcu  	r3,24[bp]
015C58 86 41 BC 00 		      	cmp  	r4,r3,#94
015C5C 3D 02 60 00 		      	beq  	r4,ctype_56
015C60 86 41 74 00 		      	cmp  	r4,r3,#58
015C64 3D 02 5C 00 		      	beq  	r4,ctype_56
015C68 86 41 5E 00 		      	cmp  	r4,r3,#47
015C6C 3D 02 58 00 		      	beq  	r4,ctype_56
015C70 86 41 5C 00 		      	cmp  	r4,r3,#46
015C74 3D 02 54 00 		      	beq  	r4,ctype_56
015C78 86 41 5A 00 		      	cmp  	r4,r3,#45
015C7C 3D 02 50 00 		      	beq  	r4,ctype_56
015C80 86 41 58 00 		      	cmp  	r4,r3,#44
015C84 3D 02 4C 00 		      	beq  	r4,ctype_56
015C88 86 41 56 00 		      	cmp  	r4,r3,#43
015C8C 3D 02 48 00 		      	beq  	r4,ctype_56
015C90 86 41 54 00 		      	cmp  	r4,r3,#42
015C94 3D 02 44 00 		      	beq  	r4,ctype_56
015C98 86 41 BA 00 		      	cmp  	r4,r3,#93
015C9C 3D 02 40 00 		      	beq  	r4,ctype_56
015CA0 86 41 B8 00 		      	cmp  	r4,r3,#92
015CA4 3D 02 3C 00 		      	beq  	r4,ctype_56
015CA8 86 41 B6 00 		      	cmp  	r4,r3,#91
015CAC 3D 02 38 00 		      	beq  	r4,ctype_56
015CB0 86 41 7E 00 		      	cmp  	r4,r3,#63
015CB4 3D 02 34 00 		      	beq  	r4,ctype_56
015CB8 86 41 7C 00 		      	cmp  	r4,r3,#62
015CBC 3D 02 30 00 		      	beq  	r4,ctype_56
015CC0 86 41 7A 00 		      	cmp  	r4,r3,#61
015CC4 3D 02 2C 00 		      	beq  	r4,ctype_56
015CC8 86 41 78 00 		      	cmp  	r4,r3,#60
015CCC 3D 02 28 00 		      	beq  	r4,ctype_56
015CD0 86 41 76 00 		      	cmp  	r4,r3,#59
015CD4 3D 02 24 00 		      	beq  	r4,ctype_56
015CD8 86 41 52 00 		      	cmp  	r4,r3,#41
015CDC 3D 02 20 00 		      	beq  	r4,ctype_56
015CE0 86 41 50 00 		      	cmp  	r4,r3,#40
015CE4 3D 02 1C 00 		      	beq  	r4,ctype_56
015CE8 86 41 4E 00 		      	cmp  	r4,r3,#39
015CEC 3D 02 18 00 		      	beq  	r4,ctype_56
015CF0 86 41 4C 00 		      	cmp  	r4,r3,#38
015CF4 3D 02 14 00 		      	beq  	r4,ctype_56
015CF8 86 41 4A 00 		      	cmp  	r4,r3,#37
015CFC 3D 02 10 00 		      	beq  	r4,ctype_56
015D00 86 41 46 00 		      	cmp  	r4,r3,#35
015D04 3D 02 0C 00 		      	beq  	r4,ctype_56
015D08 86 41 44 00 		      	cmp  	r4,r3,#34
015D0C 3D 02 08 00 		      	beq  	r4,ctype_56
015D10 86 41 42 00 		      	cmp  	r4,r3,#33
015D14 3D 02 04 00 		      	beq  	r4,ctype_56
015D18 BA 02 00 00 		      	bra  	ctype_57
                	ctype_56:
015D1C 0A 10 02 00 		      	ldi  	r1,#1
                	ctype_58:
015D20 82 ED 01 1A 		      	mov  	sp,bp
015D24 57 BF 11 00 		      	pop  	bp
015D28 37 FF 21 00 		      	rtl  	#16
                	ctype_57:
015D2C 0A 10 00 00 		      	ldi  	r1,#0
015D30 3A FE FF FF 		      	bra  	ctype_58
                	ctype_55:
015D34 BA FD FF FF 		      	bra  	ctype_58
                	endpublic
                	
                	public code isgraph:
015D38 E7 EF 01 00 		      	push 	lr
015D3C 67 EE 01 00 		      	push 	xlr
015D40 E7 ED 01 00 		      	push 	bp
015D44 7C 01 00 00 		      	ldi  	xlr,#ctype_59
015D48 0A C0 49 BB 
015D4C 02 BF 01 1A 		      	mov  	bp,sp
015D50 C3 3D 30 00 		      	lcu  	r3,24[bp]
015D54 E7 E1 01 00 		      	push 	r3
015D58 39 DE FF FF 		      	bsr  	ispunct
015D5C 14 EF 11 00 		      	addui	sp,sp,#8
015D60 82 30 00 1A 		      	mov  	r3,r1
015D64 BD 11 0E 00 		      	bne  	r3,ctype_62
015D68 C3 3D 30 00 		      	lcu  	r3,24[bp]
015D6C E7 E1 01 00 		      	push 	r3
015D70 B9 9A FF FF 		      	bsr  	isalnum
015D74 14 EF 11 00 		      	addui	sp,sp,#8
015D78 82 30 00 1A 		      	mov  	r3,r1
015D7C BD 01 06 00 		      	beq  	r3,ctype_60
                	ctype_62:
015D80 0A 30 02 00 		      	ldi  	r3,#1
015D84 3A 01 00 00 		      	bra  	ctype_61
                	ctype_60:
015D88 0A 30 00 00 		      	ldi  	r3,#0
                	ctype_61:
015D8C 82 11 00 1A 		      	mov  	r1,r3
                	ctype_63:
015D90 82 ED 01 1A 		      	mov  	sp,bp
015D94 57 BF 11 00 		      	pop  	bp
015D98 57 CF 11 00 		      	pop  	xlr
015D9C 57 FF 11 00 		      	pop  	lr
015DA0 37 FF 01 00 		      	rtl  	#0
                	ctype_59:
015DA4 C6 FD 11 00 		      	lw   	lr,8[bp]
015DA8 E3 FD 21 00 		      	sw   	lr,16[bp]
015DAC BA FC FF FF 		      	bra  	ctype_63
                	endpublic
                	
                	public code isprint:
015DB0 E7 EF 01 00 		      	push 	lr
015DB4 67 EE 01 00 		      	push 	xlr
015DB8 E7 ED 01 00 		      	push 	bp
015DBC 7C 01 00 00 		      	ldi  	xlr,#ctype_64
015DC0 0A C0 21 BC 
015DC4 02 BF 01 1A 		      	mov  	bp,sp
015DC8 C3 3D 30 00 		      	lcu  	r3,24[bp]
015DCC E7 E1 01 00 		      	push 	r3
015DD0 39 ED FF FF 		      	bsr  	isgraph
015DD4 14 EF 11 00 		      	addui	sp,sp,#8
015DD8 82 30 00 1A 		      	mov  	r3,r1
015DDC BD 11 08 00 		      	bne  	r3,ctype_67
015DE0 C3 3D 30 00 		      	lcu  	r3,24[bp]
015DE4 86 31 40 00 		      	cmp  	r3,r3,#32
015DE8 BD 11 06 00 		      	bne  	r3,ctype_65
                	ctype_67:
015DEC 0A 30 02 00 		      	ldi  	r3,#1
015DF0 3A 01 00 00 		      	bra  	ctype_66
                	ctype_65:
015DF4 0A 30 00 00 		      	ldi  	r3,#0
                	ctype_66:
015DF8 82 11 00 1A 		      	mov  	r1,r3
                	ctype_68:
015DFC 82 ED 01 1A 		      	mov  	sp,bp
015E00 57 BF 11 00 		      	pop  	bp
015E04 57 CF 11 00 		      	pop  	xlr
015E08 57 FF 11 00 		      	pop  	lr
015E0C 37 FF 01 00 		      	rtl  	#0
                	ctype_64:
015E10 C6 FD 11 00 		      	lw   	lr,8[bp]
015E14 E3 FD 21 00 		      	sw   	lr,16[bp]
015E18 BA FC FF FF 		      	bra  	ctype_68
                	endpublic
                	
                	public code iscntrl:
015E1C 15 EF 21 00 		      	subui	sp,sp,#16
015E20 E7 ED 01 00 		      	push 	bp
015E24 02 BF 01 1A 		      	mov  	bp,sp
015E28 C3 3D 30 00 		      	lcu  	r3,24[bp]
015E2C 86 41 0E 00 		      	cmp  	r4,r3,#7
015E30 3D 02 18 00 		      	beq  	r4,ctype_71
015E34 86 41 10 00 		      	cmp  	r4,r3,#8
015E38 3D 02 14 00 		      	beq  	r4,ctype_71
015E3C 86 41 14 00 		      	cmp  	r4,r3,#10
015E40 3D 02 10 00 		      	beq  	r4,ctype_71
015E44 86 41 1A 00 		      	cmp  	r4,r3,#13
015E48 3D 02 0C 00 		      	beq  	r4,ctype_71
015E4C 86 41 18 00 		      	cmp  	r4,r3,#12
015E50 3D 02 08 00 		      	beq  	r4,ctype_71
015E54 86 41 12 00 		      	cmp  	r4,r3,#9
015E58 3D 02 04 00 		      	beq  	r4,ctype_71
015E5C BA 02 00 00 		      	bra  	ctype_72
                	ctype_71:
015E60 0A 10 02 00 		      	ldi  	r1,#1
                	ctype_73:
015E64 82 ED 01 1A 		      	mov  	sp,bp
015E68 57 BF 11 00 		      	pop  	bp
015E6C 37 FF 21 00 		      	rtl  	#16
                	ctype_72:
015E70 0A 10 00 00 		      	ldi  	r1,#0
015E74 3A FE FF FF 		      	bra  	ctype_73
                	ctype_70:
015E78 BA FD FF FF 		      	bra  	ctype_73
                	endpublic
                	
                		code
015E7C 00 00 00 00 		align	1
                	
                	public code SetNormAttr:
015E80 15 EF 21 00 		      	subui	sp,sp,#16
015E84 E7 ED 01 00 		      	push 	bp
015E88 02 BF 01 1A 		      	mov  	bp,sp
015E8C 67 E3 01 00 		      	     	         push  r6
015E90 C6 1D 30 00 	         lw    r1,24[bp]
015E94 0A 60 44 00 	         ldi   r6,#$22
015E98 38 0F 34 03 	         sys   #410
015E9C 57 6F 10 00 	         pop   r6
                	     
                	disassem_601:
015EA0 82 ED 01 1A 		      	mov  	sp,bp
015EA4 57 BF 11 00 		      	pop  	bp
015EA8 37 FF 21 00 		      	rtl  	#16
                	endpublic
                	
                	public code GetNormAttr:
015EAC 15 EF 21 00 		      	subui	sp,sp,#16
015EB0 E7 ED 01 00 		      	push 	bp
015EB4 02 BF 01 1A 		      	mov  	bp,sp
015EB8 67 E3 01 00 		      	     	         push  r6
015EBC 0A 60 46 00 	         ldi   r6,#$23
015EC0 38 0F 34 03 	         sys   #410
015EC4 57 6F 10 00 	         pop   r6
                	     
                	disassem_603:
015EC8 82 ED 01 1A 		      	mov  	sp,bp
015ECC 57 BF 11 00 		      	pop  	bp
015ED0 37 FF 21 00 		      	rtl  	#16
                	endpublic
                	
                	public code reverse_video:
015ED4 E7 EF 01 00 		      	push 	lr
015ED8 67 EE 01 00 		      	push 	xlr
015EDC E7 ED 01 00 		      	push 	bp
015EE0 7C 01 00 00 		      	ldi  	xlr,#disassem_604
015EE4 0A C0 B1 BE 
015EE8 02 BF 01 1A 		      	mov  	bp,sp
015EEC 15 EF 11 00 		      	subui	sp,sp,#8
015EF0 B9 F7 FF FF 		      	bsr  	GetNormAttr
015EF4 82 30 00 1A 		      	mov  	r3,r1
015EF8 FC FF FF 00 		      	andi 	r3,r3,#4294967295
015EFC 8C 31 FE FF 
015F00 E2 3D F8 FF 		      	sh   	r3,-4[bp]
015F04 C5 3D F8 FF 		      	lhu  	r3,-4[bp]
015F08 FC FF FF 00 		      	andi 	r3,r3,#4294967295
015F0C 8C 31 FE FF 
015F10 82 31 14 78 		      	asri 	r3,r3,#10
015F14 82 31 26 70 		      	asli 	r3,r3,#19
015F18 C5 4D F8 FF 		      	lhu  	r4,-4[bp]
015F1C FC FF FF 00 		      	andi 	r4,r4,#4294967295
015F20 0C 42 FE FF 
015F24 02 42 26 78 		      	asri 	r4,r4,#19
015F28 02 42 14 70 		      	asli 	r4,r4,#10
015F2C 82 31 08 1A 		      	or   	r3,r3,r4
015F30 E2 3D F8 FF 		      	sh   	r3,-4[bp]
015F34 C5 3D F8 FF 		      	lhu  	r3,-4[bp]
015F38 E7 E1 01 00 		      	push 	r3
015F3C B9 E8 FF FF 		      	bsr  	SetNormAttr
015F40 14 EF 11 00 		      	addui	sp,sp,#8
                	disassem_605:
015F44 82 ED 01 1A 		      	mov  	sp,bp
015F48 57 BF 11 00 		      	pop  	bp
015F4C 57 CF 11 00 		      	pop  	xlr
015F50 57 FF 11 00 		      	pop  	lr
015F54 37 FF 01 00 		      	rtl  	#0
                	disassem_604:
015F58 C6 FD 11 00 		      	lw   	lr,8[bp]
015F5C E3 FD 21 00 		      	sw   	lr,16[bp]
015F60 BA FC FF FF 		      	bra  	disassem_605
                	endpublic
                	
                	public code DumpInsnBytes:
015F64 E7 EF 01 00 		      	push 	lr
015F68 67 EE 01 00 		      	push 	xlr
015F6C E7 ED 01 00 		      	push 	bp
015F70 7C 01 00 00 		      	ldi  	xlr,#disassem_607
015F74 0A C0 C1 BF 
015F78 02 BF 01 1A 		      	mov  	bp,sp
015F7C C6 3D 40 00 		      	lw   	r3,32[bp]
015F80 82 31 30 78 		      	asri 	r3,r3,#24
015F84 8C 31 FE 01 		      	and  	r3,r3,#255
015F88 E7 E1 01 00 		      	push 	r3
015F8C C6 3D 40 00 		      	lw   	r3,32[bp]
015F90 82 31 20 78 		      	asri 	r3,r3,#16
015F94 8C 31 FE 01 		      	and  	r3,r3,#255
015F98 E7 E1 01 00 		      	push 	r3
015F9C C6 3D 40 00 		      	lw   	r3,32[bp]
015FA0 82 31 10 78 		      	asri 	r3,r3,#8
015FA4 8C 31 FE 01 		      	and  	r3,r3,#255
015FA8 E7 E1 01 00 		      	push 	r3
015FAC C6 3D 40 00 		      	lw   	r3,32[bp]
015FB0 8C 31 FE 01 		      	and  	r3,r3,#255
015FB4 E7 E1 01 00 		      	push 	r3
015FB8 E6 ED 31 00 		      	push 	24[bp]
015FBC FC 01 00 00 		      	push 	#disassem_606
015FC0 65 E0 61 71 
015FC4 39 D3 FE FF 		      	bsr  	printf
015FC8 14 EF 61 00 		      	addui	sp,sp,#48
                	disassem_608:
015FCC 82 ED 01 1A 		      	mov  	sp,bp
015FD0 57 BF 11 00 		      	pop  	bp
015FD4 57 CF 11 00 		      	pop  	xlr
015FD8 57 FF 11 00 		      	pop  	lr
015FDC 37 FF 01 00 		      	rtl  	#0
                	disassem_607:
015FE0 C6 FD 11 00 		      	lw   	lr,8[bp]
015FE4 E3 FD 21 00 		      	sw   	lr,16[bp]
015FE8 BA FC FF FF 		      	bra  	disassem_608
                	endpublic
                	
                	DispRst:
015FEC E7 EF 01 00 		      	push 	lr
015FF0 67 EE 01 00 		      	push 	xlr
015FF4 E7 ED 01 00 		      	push 	bp
015FF8 7C 01 00 00 		      	ldi  	xlr,#disassem_611
015FFC 0A C0 71 C0 
016000 02 BF 01 1A 		      	mov  	bp,sp
016004 C6 3D 30 00 		      	lw   	r3,24[bp]
016008 82 31 18 78 		      	asri 	r3,r3,#12
01600C 8C 31 3E 00 		      	and  	r3,r3,#31
016010 E7 E1 01 00 		      	push 	r3
016014 FC 01 00 00 		      	push 	#disassem_610
016018 65 E0 51 71 
01601C 39 C8 FE FF 		      	bsr  	printf
016020 14 EF 21 00 		      	addui	sp,sp,#16
                	disassem_612:
016024 82 ED 01 1A 		      	mov  	sp,bp
016028 57 BF 11 00 		      	pop  	bp
01602C 57 CF 11 00 		      	pop  	xlr
016030 57 FF 11 00 		      	pop  	lr
016034 37 FF 01 00 		      	rtl  	#0
                	disassem_611:
016038 C6 FD 11 00 		      	lw   	lr,8[bp]
01603C E3 FD 21 00 		      	sw   	lr,16[bp]
016040 BA FC FF FF 		      	bra  	disassem_612
                	DispRstc:
016044 E7 EF 01 00 		      	push 	lr
016048 67 EE 01 00 		      	push 	xlr
01604C E7 ED 01 00 		      	push 	bp
016050 7C 01 00 00 		      	ldi  	xlr,#disassem_615
016054 0A C0 21 C1 
016058 02 BF 01 1A 		      	mov  	bp,sp
01605C C6 3D 30 00 		      	lw   	r3,24[bp]
016060 82 31 18 78 		      	asri 	r3,r3,#12
016064 8C 31 3E 00 		      	and  	r3,r3,#31
016068 E7 E1 01 00 		      	push 	r3
01606C FC 01 00 00 		      	push 	#disassem_614
016070 65 E0 3D 71 
016074 39 BD FE FF 		      	bsr  	printf
016078 14 EF 21 00 		      	addui	sp,sp,#16
                	disassem_616:
01607C 82 ED 01 1A 		      	mov  	sp,bp
016080 57 BF 11 00 		      	pop  	bp
016084 57 CF 11 00 		      	pop  	xlr
016088 57 FF 11 00 		      	pop  	lr
01608C 37 FF 01 00 		      	rtl  	#0
                	disassem_615:
016090 C6 FD 11 00 		      	lw   	lr,8[bp]
016094 E3 FD 21 00 		      	sw   	lr,16[bp]
016098 BA FC FF FF 		      	bra  	disassem_616
                	DispRac:
01609C E7 EF 01 00 		      	push 	lr
0160A0 67 EE 01 00 		      	push 	xlr
0160A4 E7 ED 01 00 		      	push 	bp
0160A8 7C 01 00 00 		      	ldi  	xlr,#disassem_619
0160AC 0A C0 D1 C1 
0160B0 02 BF 01 1A 		      	mov  	bp,sp
0160B4 C6 3D 30 00 		      	lw   	r3,24[bp]
0160B8 82 31 0E 78 		      	asri 	r3,r3,#7
0160BC 8C 31 3E 00 		      	and  	r3,r3,#31
0160C0 E7 E1 01 00 		      	push 	r3
0160C4 FC 01 00 00 		      	push 	#disassem_618
0160C8 65 E0 29 71 
0160CC 39 B2 FE FF 		      	bsr  	printf
0160D0 14 EF 21 00 		      	addui	sp,sp,#16
                	disassem_620:
0160D4 82 ED 01 1A 		      	mov  	sp,bp
0160D8 57 BF 11 00 		      	pop  	bp
0160DC 57 CF 11 00 		      	pop  	xlr
0160E0 57 FF 11 00 		      	pop  	lr
0160E4 37 FF 01 00 		      	rtl  	#0
                	disassem_619:
0160E8 C6 FD 11 00 		      	lw   	lr,8[bp]
0160EC E3 FD 21 00 		      	sw   	lr,16[bp]
0160F0 BA FC FF FF 		      	bra  	disassem_620
                	DispRa:
0160F4 E7 EF 01 00 		      	push 	lr
0160F8 67 EE 01 00 		      	push 	xlr
0160FC E7 ED 01 00 		      	push 	bp
016100 7C 01 00 00 		      	ldi  	xlr,#disassem_623
016104 0A C0 81 C2 
016108 02 BF 01 1A 		      	mov  	bp,sp
01610C C6 3D 30 00 		      	lw   	r3,24[bp]
016110 82 31 0E 78 		      	asri 	r3,r3,#7
016114 8C 31 3E 00 		      	and  	r3,r3,#31
016118 E7 E1 01 00 		      	push 	r3
01611C FC 01 00 00 		      	push 	#disassem_622
016120 65 E0 19 71 
016124 39 A7 FE FF 		      	bsr  	printf
016128 14 EF 21 00 		      	addui	sp,sp,#16
                	disassem_624:
01612C 82 ED 01 1A 		      	mov  	sp,bp
016130 57 BF 11 00 		      	pop  	bp
016134 57 CF 11 00 		      	pop  	xlr
016138 57 FF 11 00 		      	pop  	lr
01613C 37 FF 01 00 		      	rtl  	#0
                	disassem_623:
016140 C6 FD 11 00 		      	lw   	lr,8[bp]
016144 E3 FD 21 00 		      	sw   	lr,16[bp]
016148 BA FC FF FF 		      	bra  	disassem_624
                	DispRb:
01614C E7 EF 01 00 		      	push 	lr
016150 67 EE 01 00 		      	push 	xlr
016154 E7 ED 01 00 		      	push 	bp
016158 7C 01 00 00 		      	ldi  	xlr,#disassem_627
01615C 0A C0 31 C3 
016160 02 BF 01 1A 		      	mov  	bp,sp
016164 C6 3D 30 00 		      	lw   	r3,24[bp]
016168 82 31 22 78 		      	asri 	r3,r3,#17
01616C 8C 31 3E 00 		      	and  	r3,r3,#31
016170 E7 E1 01 00 		      	push 	r3
016174 FC 01 00 00 		      	push 	#disassem_626
016178 65 E0 09 71 
01617C 39 9C FE FF 		      	bsr  	printf
016180 14 EF 21 00 		      	addui	sp,sp,#16
                	disassem_628:
016184 82 ED 01 1A 		      	mov  	sp,bp
016188 57 BF 11 00 		      	pop  	bp
01618C 57 CF 11 00 		      	pop  	xlr
016190 57 FF 11 00 		      	pop  	lr
016194 37 FF 01 00 		      	rtl  	#0
                	disassem_627:
016198 C6 FD 11 00 		      	lw   	lr,8[bp]
01619C E3 FD 21 00 		      	sw   	lr,16[bp]
0161A0 BA FC FF FF 		      	bra  	disassem_628
                	DispSpr:
0161A4 E7 EF 01 00 		      	push 	lr
0161A8 67 EE 01 00 		      	push 	xlr
0161AC E7 ED 01 00 		      	push 	bp
0161B0 7C 01 00 00 		      	ldi  	xlr,#disassem_645
0161B4 0A C0 11 C7 
0161B8 02 BF 01 1A 		      	mov  	bp,sp
0161BC 15 EF 11 00 		      	subui	sp,sp,#8
0161C0 C6 3D 30 00 		      	lw   	r3,24[bp]
0161C4 82 31 22 78 		      	asri 	r3,r3,#17
0161C8 8C 31 FE 01 		      	and  	r3,r3,#255
0161CC E3 3D F0 FF 		      	sw   	r3,-8[bp]
0161D0 C6 3D F0 FF 		      	lw   	r3,-8[bp]
0161D4 86 41 00 00 		      	cmp  	r4,r3,#0
0161D8 3D 02 38 00 		      	beq  	r4,disassem_647
0161DC 86 41 06 00 		      	cmp  	r4,r3,#3
0161E0 3D 02 3E 00 		      	beq  	r4,disassem_648
0161E4 86 41 08 00 		      	cmp  	r4,r3,#4
0161E8 3D 02 44 00 		      	beq  	r4,disassem_649
0161EC 86 41 0C 00 		      	cmp  	r4,r3,#6
0161F0 3D 02 4A 00 		      	beq  	r4,disassem_650
0161F4 86 41 0E 00 		      	cmp  	r4,r3,#7
0161F8 3D 02 50 00 		      	beq  	r4,disassem_651
0161FC 86 41 10 00 		      	cmp  	r4,r3,#8
016200 3D 02 56 00 		      	beq  	r4,disassem_652
016204 86 41 12 00 		      	cmp  	r4,r3,#9
016208 3D 02 5C 00 		      	beq  	r4,disassem_653
01620C 86 41 14 00 		      	cmp  	r4,r3,#10
016210 3D 02 62 00 		      	beq  	r4,disassem_654
016214 86 41 64 00 		      	cmp  	r4,r3,#50
016218 3D 02 68 00 		      	beq  	r4,disassem_655
01621C 86 41 66 00 		      	cmp  	r4,r3,#51
016220 3D 02 6E 00 		      	beq  	r4,disassem_656
016224 86 41 68 00 		      	cmp  	r4,r3,#52
016228 3D 02 74 00 		      	beq  	r4,disassem_657
01622C 86 41 6A 00 		      	cmp  	r4,r3,#53
016230 3D 02 7A 00 		      	beq  	r4,disassem_658
016234 86 41 6C 00 		      	cmp  	r4,r3,#54
016238 3D 02 80 00 		      	beq  	r4,disassem_659
01623C 86 41 6E 00 		      	cmp  	r4,r3,#55
016240 3D 02 86 00 		      	beq  	r4,disassem_660
016244 BA 23 00 00 		      	bra  	disassem_661
                	disassem_647:
016248 FC 01 00 00 		      	push 	#disassem_630
01624C 65 E0 F9 70 
016250 B9 81 FE FF 		      	bsr  	printf
016254 14 EF 11 00 		      	addui	sp,sp,#8
016258 BA 23 00 00 		      	bra  	disassem_646
                	disassem_648:
01625C FC 01 00 00 		      	push 	#disassem_631
016260 65 E0 E9 70 
016264 39 7F FE FF 		      	bsr  	printf
016268 14 EF 11 00 		      	addui	sp,sp,#8
01626C 3A 21 00 00 		      	bra  	disassem_646
                	disassem_649:
016270 FC 01 00 00 		      	push 	#disassem_632
016274 65 E0 D5 70 
016278 B9 7C FE FF 		      	bsr  	printf
01627C 14 EF 11 00 		      	addui	sp,sp,#8
016280 BA 1E 00 00 		      	bra  	disassem_646
                	disassem_650:
016284 FC 01 00 00 		      	push 	#disassem_633
016288 65 E0 C5 70 
01628C 39 7A FE FF 		      	bsr  	printf
016290 14 EF 11 00 		      	addui	sp,sp,#8
016294 3A 1C 00 00 		      	bra  	disassem_646
                	disassem_651:
016298 FC 01 00 00 		      	push 	#disassem_634
01629C 65 E0 B5 70 
0162A0 B9 77 FE FF 		      	bsr  	printf
0162A4 14 EF 11 00 		      	addui	sp,sp,#8
0162A8 BA 19 00 00 		      	bra  	disassem_646
                	disassem_652:
0162AC FC 01 00 00 		      	push 	#disassem_635
0162B0 65 E0 A5 70 
0162B4 39 75 FE FF 		      	bsr  	printf
0162B8 14 EF 11 00 		      	addui	sp,sp,#8
0162BC 3A 17 00 00 		      	bra  	disassem_646
                	disassem_653:
0162C0 FC 01 00 00 		      	push 	#disassem_636
0162C4 65 E0 95 70 
0162C8 B9 72 FE FF 		      	bsr  	printf
0162CC 14 EF 11 00 		      	addui	sp,sp,#8
0162D0 BA 14 00 00 		      	bra  	disassem_646
                	disassem_654:
0162D4 FC 01 00 00 		      	push 	#disassem_637
0162D8 65 E0 85 70 
0162DC 39 70 FE FF 		      	bsr  	printf
0162E0 14 EF 11 00 		      	addui	sp,sp,#8
0162E4 3A 12 00 00 		      	bra  	disassem_646
                	disassem_655:
0162E8 FC 01 00 00 		      	push 	#disassem_638
0162EC 65 E0 6D 70 
0162F0 B9 6D FE FF 		      	bsr  	printf
0162F4 14 EF 11 00 		      	addui	sp,sp,#8
0162F8 BA 0F 00 00 		      	bra  	disassem_646
                	disassem_656:
0162FC FC 01 00 00 		      	push 	#disassem_639
016300 65 E0 55 70 
016304 39 6B FE FF 		      	bsr  	printf
016308 14 EF 11 00 		      	addui	sp,sp,#8
01630C 3A 0D 00 00 		      	bra  	disassem_646
                	disassem_657:
016310 FC 01 00 00 		      	push 	#disassem_640
016314 65 E0 3D 70 
016318 B9 68 FE FF 		      	bsr  	printf
01631C 14 EF 11 00 		      	addui	sp,sp,#8
016320 BA 0A 00 00 		      	bra  	disassem_646
                	disassem_658:
016324 FC 01 00 00 		      	push 	#disassem_641
016328 65 E0 25 70 
01632C 39 66 FE FF 		      	bsr  	printf
016330 14 EF 11 00 		      	addui	sp,sp,#8
016334 3A 08 00 00 		      	bra  	disassem_646
                	disassem_659:
016338 FC 01 00 00 		      	push 	#disassem_642
01633C 65 E0 09 70 
016340 B9 63 FE FF 		      	bsr  	printf
016344 14 EF 11 00 		      	addui	sp,sp,#8
016348 BA 05 00 00 		      	bra  	disassem_646
                	disassem_660:
01634C FC 01 00 00 		      	push 	#disassem_643
016350 65 E0 ED 6F 
016354 39 61 FE FF 		      	bsr  	printf
016358 14 EF 11 00 		      	addui	sp,sp,#8
01635C 3A 03 00 00 		      	bra  	disassem_646
                	disassem_661:
016360 E6 ED F1 FF 		      	push 	-8[bp]
016364 FC 01 00 00 		      	push 	#disassem_644
016368 65 E0 D5 6F 
01636C 39 5E FE FF 		      	bsr  	printf
016370 14 EF 21 00 		      	addui	sp,sp,#16
                	disassem_646:
                	disassem_662:
016374 82 ED 01 1A 		      	mov  	sp,bp
016378 57 BF 11 00 		      	pop  	bp
01637C 57 CF 11 00 		      	pop  	xlr
016380 57 FF 11 00 		      	pop  	lr
016384 37 FF 01 00 		      	rtl  	#0
                	disassem_645:
016388 C6 FD 11 00 		      	lw   	lr,8[bp]
01638C E3 FD 21 00 		      	sw   	lr,16[bp]
016390 BA FC FF FF 		      	bra  	disassem_662
                	DispMemAddress:
016394 E7 EF 01 00 		      	push 	lr
016398 67 EE 01 00 		      	push 	xlr
01639C E7 ED 01 00 		      	push 	bp
0163A0 7C 01 00 00 		      	ldi  	xlr,#disassem_668
0163A4 0A C0 D1 C8 
0163A8 02 BF 01 1A 		      	mov  	bp,sp
0163AC 15 EF 11 00 		      	subui	sp,sp,#8
0163B0 C6 3D 50 00 		      	lw   	r3,40[bp]
0163B4 E2 3D F8 FF 		      	sh   	r3,-4[bp]
0163B8 C6 3D 30 00 		      	lw   	r3,24[bp]
0163BC BD 01 18 00 		      	beq  	r3,disassem_669
0163C0 C6 3D 40 00 		      	lw   	r3,32[bp]
0163C4 82 31 1E 70 		      	asli 	r3,r3,#15
0163C8 C6 4D 50 00 		      	lw   	r4,40[bp]
0163CC 02 42 22 78 		      	asri 	r4,r4,#17
0163D0 82 31 08 1A 		      	or   	r3,r3,r4
0163D4 E7 E1 01 00 		      	push 	r3
0163D8 FC 01 00 00 		      	push 	#disassem_664
0163DC 65 E0 C5 6F 
0163E0 B9 4F FE FF 		      	bsr  	printf
0163E4 14 EF 21 00 		      	addui	sp,sp,#16
0163E8 3A 05 00 00 		      	bra  	disassem_670
                	disassem_669:
0163EC C4 3D F8 FF 		      	lh   	r3,-4[bp]
0163F0 82 31 00 24 		      	sxh  	r3,r3
0163F4 82 31 00 24 		      	sxh  	r3,r3
0163F8 82 31 22 78 		      	asri 	r3,r3,#17
0163FC E7 E1 01 00 		      	push 	r3
016400 FC 01 00 00 		      	push 	#disassem_665
016404 65 E0 B5 6F 
016408 B9 4A FE FF 		      	bsr  	printf
01640C 14 EF 21 00 		      	addui	sp,sp,#16
                	disassem_670:
016410 C6 3D 50 00 		      	lw   	r3,40[bp]
016414 82 31 0E 78 		      	asri 	r3,r3,#7
016418 8C 31 3E 00 		      	and  	r3,r3,#31
01641C BD 01 14 00 		      	beq  	r3,disassem_671
016420 C6 3D 50 00 		      	lw   	r3,40[bp]
016424 82 31 0E 78 		      	asri 	r3,r3,#7
016428 8C 31 3E 00 		      	and  	r3,r3,#31
01642C E7 E1 01 00 		      	push 	r3
016430 FC 01 00 00 		      	push 	#disassem_666
016434 65 E0 95 6F 
016438 B9 44 FE FF 		      	bsr  	printf
01643C 14 EF 21 00 		      	addui	sp,sp,#16
016440 BA 02 00 00 		      	bra  	disassem_672
                	disassem_671:
016444 FC 01 00 00 		      	push 	#disassem_667
016448 65 E0 89 6F 
01644C 39 42 FE FF 		      	bsr  	printf
016450 14 EF 11 00 		      	addui	sp,sp,#8
                	disassem_672:
                	disassem_673:
016454 82 ED 01 1A 		      	mov  	sp,bp
016458 57 BF 11 00 		      	pop  	bp
01645C 57 CF 11 00 		      	pop  	xlr
016460 57 FF 11 00 		      	pop  	lr
016464 37 FF 01 00 		      	rtl  	#0
                	disassem_668:
016468 C6 FD 11 00 		      	lw   	lr,8[bp]
01646C E3 FD 21 00 		      	sw   	lr,16[bp]
016470 BA FC FF FF 		      	bra  	disassem_673
                	DispInc:
016474 E7 EF 01 00 		      	push 	lr
016478 67 EE 01 00 		      	push 	xlr
01647C E7 ED 01 00 		      	push 	bp
016480 7C 01 00 00 		      	ldi  	xlr,#disassem_682
016484 0A C0 69 CB 
016488 02 BF 01 1A 		      	mov  	bp,sp
01648C 15 EF 31 00 		      	subui	sp,sp,#24
016490 C6 3D 50 00 		      	lw   	r3,40[bp]
016494 E2 3D F8 FF 		      	sh   	r3,-4[bp]
016498 C6 3D 50 00 		      	lw   	r3,40[bp]
01649C 82 31 0E 78 		      	asri 	r3,r3,#7
0164A0 8C 31 3E 00 		      	and  	r3,r3,#31
0164A4 E3 3D E0 FF 		      	sw   	r3,-16[bp]
0164A8 C6 3D 50 00 		      	lw   	r3,40[bp]
0164AC 82 31 18 78 		      	asri 	r3,r3,#12
0164B0 8C 31 3E 00 		      	and  	r3,r3,#31
0164B4 E3 3D D0 FF 		      	sw   	r3,-24[bp]
0164B8 C6 3D D0 FF 		      	lw   	r3,-24[bp]
0164BC 8C 31 20 00 		      	and  	r3,r3,#16
0164C0 86 31 20 00 		      	cmp  	r3,r3,#16
0164C4 BD 11 18 00 		      	bne  	r3,disassem_683
0164C8 C6 3D D0 FF 		      	lw   	r3,-24[bp]
0164CC 8D 31 E0 FF 		      	ori  	r3,r3,#-16
0164D0 E3 3D D0 FF 		      	sw   	r3,-24[bp]
0164D4 C6 3D D0 FF 		      	lw   	r3,-24[bp]
0164D8 02 30 06 2A 		      	neg  	r3,r3
0164DC E3 3D D0 FF 		      	sw   	r3,-24[bp]
0164E0 FC 01 00 00 		      	push 	#disassem_675
0164E4 65 E0 6D 6F 
0164E8 B9 2E FE FF 		      	bsr  	printf
0164EC 14 EF 11 00 		      	addui	sp,sp,#8
0164F0 BA 02 00 00 		      	bra  	disassem_684
                	disassem_683:
0164F4 FC 01 00 00 		      	push 	#disassem_676
0164F8 65 E0 51 6F 
0164FC 39 2C FE FF 		      	bsr  	printf
016500 14 EF 11 00 		      	addui	sp,sp,#8
                	disassem_684:
016504 C6 3D 30 00 		      	lw   	r3,24[bp]
016508 BD 01 18 00 		      	beq  	r3,disassem_685
01650C C6 3D 40 00 		      	lw   	r3,32[bp]
016510 82 31 1E 70 		      	asli 	r3,r3,#15
016514 C6 4D 50 00 		      	lw   	r4,40[bp]
016518 02 42 22 78 		      	asri 	r4,r4,#17
01651C 82 31 08 1A 		      	or   	r3,r3,r4
016520 E7 E1 01 00 		      	push 	r3
016524 FC 01 00 00 		      	push 	#disassem_677
016528 65 E0 41 6F 
01652C 39 26 FE FF 		      	bsr  	printf
016530 14 EF 21 00 		      	addui	sp,sp,#16
016534 3A 05 00 00 		      	bra  	disassem_686
                	disassem_685:
016538 C4 3D F8 FF 		      	lh   	r3,-4[bp]
01653C 82 31 00 24 		      	sxh  	r3,r3
016540 82 31 00 24 		      	sxh  	r3,r3
016544 82 31 22 78 		      	asri 	r3,r3,#17
016548 E7 E1 01 00 		      	push 	r3
01654C FC 01 00 00 		      	push 	#disassem_678
016550 65 E0 31 6F 
016554 39 21 FE FF 		      	bsr  	printf
016558 14 EF 21 00 		      	addui	sp,sp,#16
                	disassem_686:
01655C C6 3D E0 FF 		      	lw   	r3,-16[bp]
016560 BD 11 0C 00 		      	bne  	r3,disassem_687
016564 FC 01 00 00 		      	push 	#disassem_679
016568 65 E0 29 6F 
01656C 39 1E FE FF 		      	bsr  	printf
016570 14 EF 11 00 		      	addui	sp,sp,#8
016574 3A 03 00 00 		      	bra  	disassem_688
                	disassem_687:
016578 E6 ED E1 FF 		      	push 	-16[bp]
01657C FC 01 00 00 		      	push 	#disassem_680
016580 65 E0 0D 6F 
016584 39 1B FE FF 		      	bsr  	printf
016588 14 EF 21 00 		      	addui	sp,sp,#16
                	disassem_688:
01658C E6 ED D1 FF 		      	push 	-24[bp]
016590 FC 01 00 00 		      	push 	#disassem_681
016594 65 E0 F5 6E 
016598 B9 18 FE FF 		      	bsr  	printf
01659C 14 EF 21 00 		      	addui	sp,sp,#16
                	disassem_689:
0165A0 82 ED 01 1A 		      	mov  	sp,bp
0165A4 57 BF 11 00 		      	pop  	bp
0165A8 57 CF 11 00 		      	pop  	xlr
0165AC 57 FF 11 00 		      	pop  	lr
0165B0 37 FF 01 00 		      	rtl  	#0
                	disassem_682:
0165B4 C6 FD 11 00 		      	lw   	lr,8[bp]
0165B8 E3 FD 21 00 		      	sw   	lr,16[bp]
0165BC BA FC FF FF 		      	bra  	disassem_689
                	PrintSc:
0165C0 E7 EF 01 00 		      	push 	lr
0165C4 67 EE 01 00 		      	push 	xlr
0165C8 E7 ED 01 00 		      	push 	bp
0165CC 7C 01 00 00 		      	ldi  	xlr,#disassem_693
0165D0 0A C0 41 CC 
0165D4 02 BF 01 1A 		      	mov  	bp,sp
0165D8 C6 3D 30 00 		      	lw   	r3,24[bp]
0165DC 86 31 02 00 		      	cmp  	r3,r3,#1
0165E0 BD 51 0E 00 		      	ble  	r3,disassem_694
0165E4 E6 ED 31 00 		      	push 	24[bp]
0165E8 FC 01 00 00 		      	push 	#disassem_691
0165EC 65 E0 D9 6E 
0165F0 B9 0D FE FF 		      	bsr  	printf
0165F4 14 EF 21 00 		      	addui	sp,sp,#16
0165F8 BA 02 00 00 		      	bra  	disassem_695
                	disassem_694:
0165FC FC 01 00 00 		      	push 	#disassem_692
016600 65 E0 C9 6E 
016604 39 0B FE FF 		      	bsr  	printf
016608 14 EF 11 00 		      	addui	sp,sp,#8
                	disassem_695:
                	disassem_696:
01660C 82 ED 01 1A 		      	mov  	sp,bp
016610 57 BF 11 00 		      	pop  	bp
016614 57 CF 11 00 		      	pop  	xlr
016618 57 FF 11 00 		      	pop  	lr
01661C 37 FF 01 00 		      	rtl  	#0
                	disassem_693:
016620 C6 FD 11 00 		      	lw   	lr,8[bp]
016624 E3 FD 21 00 		      	sw   	lr,16[bp]
016628 BA FC FF FF 		      	bra  	disassem_696
                	DispBrk:
01662C E7 EF 01 00 		      	push 	lr
016630 67 EE 01 00 		      	push 	xlr
016634 E7 ED 01 00 		      	push 	bp
016638 7C 01 00 00 		      	ldi  	xlr,#disassem_702
01663C 0A C0 09 CE 
016640 02 BF 01 1A 		      	mov  	bp,sp
016644 15 EF 21 00 		      	subui	sp,sp,#16
016648 C5 3D 30 00 		      	lhu  	r3,24[bp]
01664C FC FF FF 00 		      	andi 	r3,r3,#4294967295
016650 8C 31 FE FF 
016654 82 31 3C 78 		      	asri 	r3,r3,#30
016658 8C 31 06 00 		      	and  	r3,r3,#3
01665C E3 3D F0 FF 		      	sw   	r3,-8[bp]
016660 C5 3D 30 00 		      	lhu  	r3,24[bp]
016664 FC FF FF 00 		      	andi 	r3,r3,#4294967295
016668 8C 31 FE FF 
01666C 82 31 22 78 		      	asri 	r3,r3,#17
016670 8C 31 FE 03 		      	and  	r3,r3,#511
016674 E3 3D E0 FF 		      	sw   	r3,-16[bp]
016678 C6 3D F0 FF 		      	lw   	r3,-8[bp]
01667C 86 41 00 00 		      	cmp  	r4,r3,#0
016680 3D 02 10 00 		      	beq  	r4,disassem_704
016684 86 41 02 00 		      	cmp  	r4,r3,#1
016688 3D 02 16 00 		      	beq  	r4,disassem_705
01668C 86 41 04 00 		      	cmp  	r4,r3,#2
016690 3D 02 1C 00 		      	beq  	r4,disassem_706
016694 86 41 06 00 		      	cmp  	r4,r3,#3
016698 3D 02 22 00 		      	beq  	r4,disassem_707
01669C BA 0A 00 00 		      	bra  	disassem_703
                	disassem_704:
0166A0 E6 ED E1 FF 		      	push 	-16[bp]
0166A4 FC 01 00 00 		      	push 	#disassem_698
0166A8 65 E0 99 6E 
0166AC 39 F6 FD FF 		      	bsr  	printf
0166B0 14 EF 21 00 		      	addui	sp,sp,#16
                	disassem_705:
0166B4 E6 ED E1 FF 		      	push 	-16[bp]
0166B8 FC 01 00 00 		      	push 	#disassem_699
0166BC 65 E0 69 6E 
0166C0 B9 F3 FD FF 		      	bsr  	printf
0166C4 14 EF 21 00 		      	addui	sp,sp,#16
                	disassem_706:
0166C8 E6 ED E1 FF 		      	push 	-16[bp]
0166CC FC 01 00 00 		      	push 	#disassem_700
0166D0 65 E0 39 6E 
0166D4 39 F1 FD FF 		      	bsr  	printf
0166D8 14 EF 21 00 		      	addui	sp,sp,#16
                	disassem_707:
0166DC E6 ED E1 FF 		      	push 	-16[bp]
0166E0 FC 01 00 00 		      	push 	#disassem_701
0166E4 65 E0 09 6E 
0166E8 B9 EE FD FF 		      	bsr  	printf
0166EC 14 EF 21 00 		      	addui	sp,sp,#16
                	disassem_703:
                	disassem_708:
0166F0 82 ED 01 1A 		      	mov  	sp,bp
0166F4 57 BF 11 00 		      	pop  	bp
0166F8 57 CF 11 00 		      	pop  	xlr
0166FC 57 FF 11 00 		      	pop  	lr
016700 37 FF 01 00 		      	rtl  	#0
                	disassem_702:
016704 C6 FD 11 00 		      	lw   	lr,8[bp]
016708 E3 FD 21 00 		      	sw   	lr,16[bp]
01670C BA FC FF FF 		      	bra  	disassem_708
                	DispIndexedAddr:
016710 E7 EF 01 00 		      	push 	lr
016714 67 EE 01 00 		      	push 	xlr
016718 E7 ED 01 00 		      	push 	bp
01671C 7C 01 00 00 		      	ldi  	xlr,#disassem_715
016720 0A C0 01 D1 
016724 02 BF 01 1A 		      	mov  	bp,sp
016728 15 EF 51 00 		      	subui	sp,sp,#40
01672C C5 3D 50 00 		      	lhu  	r3,40[bp]
016730 FC FF FF 00 		      	andi 	r3,r3,#4294967295
016734 8C 31 FE FF 
016738 82 31 30 78 		      	asri 	r3,r3,#24
01673C E3 3D F0 FF 		      	sw   	r3,-8[bp]
016740 C5 3D 50 00 		      	lhu  	r3,40[bp]
016744 FC FF FF 00 		      	andi 	r3,r3,#4294967295
016748 8C 31 FE FF 
01674C 82 31 0E 78 		      	asri 	r3,r3,#7
016750 8C 31 3E 00 		      	and  	r3,r3,#31
016754 E3 3D E0 FF 		      	sw   	r3,-16[bp]
016758 C5 3D 50 00 		      	lhu  	r3,40[bp]
01675C FC FF FF 00 		      	andi 	r3,r3,#4294967295
016760 8C 31 FE FF 
016764 82 31 18 78 		      	asri 	r3,r3,#12
016768 8C 31 3E 00 		      	and  	r3,r3,#31
01676C E3 3D C0 FF 		      	sw   	r3,-32[bp]
016770 C5 3D 50 00 		      	lhu  	r3,40[bp]
016774 FC FF FF 00 		      	andi 	r3,r3,#4294967295
016778 8C 31 FE FF 
01677C 82 31 22 78 		      	asri 	r3,r3,#17
016780 8C 31 3E 00 		      	and  	r3,r3,#31
016784 E3 3D D0 FF 		      	sw   	r3,-24[bp]
016788 C5 3D 50 00 		      	lhu  	r3,40[bp]
01678C FC FF FF 00 		      	andi 	r3,r3,#4294967295
016790 8C 31 FE FF 
016794 82 31 2C 78 		      	asri 	r3,r3,#22
016798 8C 31 06 00 		      	and  	r3,r3,#3
01679C E3 3D B0 FF 		      	sw   	r3,-40[bp]
0167A0 0A 30 02 00 		      	ldi  	r3,#1
0167A4 C6 4D B0 FF 		      	lw   	r4,-40[bp]
0167A8 82 31 08 60 		      	asl  	r3,r3,r4
0167AC E3 3D B0 FF 		      	sw   	r3,-40[bp]
0167B0 C5 3D 50 00 		      	lhu  	r3,40[bp]
0167B4 E7 E1 01 00 		      	push 	r3
0167B8 E6 ED 31 00 		      	push 	24[bp]
0167BC 39 F5 FE FF 		      	bsr  	DumpInsnBytes
0167C0 14 EF 21 00 		      	addui	sp,sp,#16
0167C4 E6 ED C1 FF 		      	push 	-32[bp]
0167C8 E6 ED 41 00 		      	push 	32[bp]
0167CC FC 01 00 00 		      	push 	#disassem_710
0167D0 65 E0 E9 6D 
0167D4 39 D1 FD FF 		      	bsr  	printf
0167D8 14 EF 31 00 		      	addui	sp,sp,#24
0167DC C6 3D F0 FF 		      	lw   	r3,-8[bp]
0167E0 BD 01 0C 00 		      	beq  	r3,disassem_716
0167E4 E6 ED F1 FF 		      	push 	-8[bp]
0167E8 FC 01 00 00 		      	push 	#disassem_711
0167EC 65 E0 D9 6D 
0167F0 B9 CD FD FF 		      	bsr  	printf
0167F4 14 EF 21 00 		      	addui	sp,sp,#16
                	disassem_716:
0167F8 C6 3D E0 FF 		      	lw   	r3,-16[bp]
0167FC BD 01 16 00 		      	beq  	r3,disassem_718
016800 C6 3D D0 FF 		      	lw   	r3,-24[bp]
016804 BD 01 12 00 		      	beq  	r3,disassem_718
016808 FC 01 00 00 		      	push 	#disassem_712
01680C 65 E0 B5 6D 
016810 B9 C9 FD FF 		      	bsr  	printf
016814 14 EF 11 00 		      	addui	sp,sp,#8
016818 E6 ED B1 FF 		      	push 	-40[bp]
01681C B9 B4 FF FF 		      	bsr  	PrintSc
016820 14 EF 11 00 		      	addui	sp,sp,#8
016824 3A 09 00 00 		      	bra  	disassem_719
                	disassem_718:
016828 C6 3D E0 FF 		      	lw   	r3,-16[bp]
01682C BD 11 14 00 		      	bne  	r3,disassem_720
016830 E6 ED D1 FF 		      	push 	-24[bp]
016834 FC 01 00 00 		      	push 	#disassem_713
016838 65 E0 A1 6D 
01683C 39 C4 FD FF 		      	bsr  	printf
016840 14 EF 21 00 		      	addui	sp,sp,#16
016844 E6 ED B1 FF 		      	push 	-40[bp]
016848 39 AF FF FF 		      	bsr  	PrintSc
01684C 14 EF 11 00 		      	addui	sp,sp,#8
016850 BA 03 00 00 		      	bra  	disassem_721
                	disassem_720:
016854 C6 3D D0 FF 		      	lw   	r3,-24[bp]
016858 BD 11 0A 00 		      	bne  	r3,disassem_722
01685C FC 01 00 00 		      	push 	#disassem_714
016860 65 E0 81 6D 
016864 39 BF FD FF 		      	bsr  	printf
016868 14 EF 11 00 		      	addui	sp,sp,#8
                	disassem_722:
                	disassem_721:
                	disassem_719:
                	disassem_724:
01686C 82 ED 01 1A 		      	mov  	sp,bp
016870 57 BF 11 00 		      	pop  	bp
016874 57 CF 11 00 		      	pop  	xlr
016878 57 FF 11 00 		      	pop  	lr
01687C 37 FF 01 00 		      	rtl  	#0
                	disassem_715:
016880 C6 FD 11 00 		      	lw   	lr,8[bp]
016884 E3 FD 21 00 		      	sw   	lr,16[bp]
016888 BA FC FF FF 		      	bra  	disassem_724
                	DispLS:
01688C E7 EF 01 00 		      	push 	lr
016890 67 EE 01 00 		      	push 	xlr
016894 E7 ED 01 00 		      	push 	bp
016898 7C 01 00 00 		      	ldi  	xlr,#disassem_727
01689C 0A C0 F9 D1 
0168A0 02 BF 01 1A 		      	mov  	bp,sp
0168A4 E6 ED 71 00 		      	push 	56[bp]
0168A8 E6 ED 31 00 		      	push 	24[bp]
0168AC 39 D7 FE FF 		      	bsr  	DumpInsnBytes
0168B0 14 EF 21 00 		      	addui	sp,sp,#16
0168B4 E6 ED 41 00 		      	push 	32[bp]
0168B8 FC 01 00 00 		      	push 	#disassem_726
0168BC 65 E0 71 6D 
0168C0 B9 B3 FD FF 		      	bsr  	printf
0168C4 14 EF 21 00 		      	addui	sp,sp,#16
0168C8 E6 ED 71 00 		      	push 	56[bp]
0168CC 39 EF FE FF 		      	bsr  	DispRstc
0168D0 14 EF 11 00 		      	addui	sp,sp,#8
0168D4 E6 ED 71 00 		      	push 	56[bp]
0168D8 E6 ED 61 00 		      	push 	48[bp]
0168DC E6 ED 51 00 		      	push 	40[bp]
0168E0 B9 56 FF FF 		      	bsr  	DispMemAddress
0168E4 14 EF 31 00 		      	addui	sp,sp,#24
                	disassem_728:
0168E8 82 ED 01 1A 		      	mov  	sp,bp
0168EC 57 BF 11 00 		      	pop  	bp
0168F0 57 CF 11 00 		      	pop  	xlr
0168F4 57 FF 11 00 		      	pop  	lr
0168F8 37 FF 01 00 		      	rtl  	#0
                	disassem_727:
0168FC C6 FD 11 00 		      	lw   	lr,8[bp]
016900 E3 FD 21 00 		      	sw   	lr,16[bp]
016904 BA FC FF FF 		      	bra  	disassem_728
                	DispRI:
016908 E7 EF 01 00 		      	push 	lr
01690C 67 EE 01 00 		      	push 	xlr
016910 E7 ED 01 00 		      	push 	bp
016914 7C 01 00 00 		      	ldi  	xlr,#disassem_733
016918 0A C0 A9 D3 
01691C 02 BF 01 1A 		      	mov  	bp,sp
016920 15 EF 11 00 		      	subui	sp,sp,#8
016924 C6 3D 70 00 		      	lw   	r3,56[bp]
016928 E2 3D F8 FF 		      	sh   	r3,-4[bp]
01692C E6 ED 71 00 		      	push 	56[bp]
016930 E6 ED 31 00 		      	push 	24[bp]
016934 39 C6 FE FF 		      	bsr  	DumpInsnBytes
016938 14 EF 21 00 		      	addui	sp,sp,#16
01693C E6 ED 41 00 		      	push 	32[bp]
016940 FC 01 00 00 		      	push 	#disassem_730
016944 65 E0 61 6D 
016948 B9 A2 FD FF 		      	bsr  	printf
01694C 14 EF 21 00 		      	addui	sp,sp,#16
016950 E6 ED 71 00 		      	push 	56[bp]
016954 39 DE FE FF 		      	bsr  	DispRstc
016958 14 EF 11 00 		      	addui	sp,sp,#8
01695C E6 ED 71 00 		      	push 	56[bp]
016960 B9 E7 FE FF 		      	bsr  	DispRac
016964 14 EF 11 00 		      	addui	sp,sp,#8
016968 C6 3D 50 00 		      	lw   	r3,40[bp]
01696C BD 01 18 00 		      	beq  	r3,disassem_734
016970 C6 3D 60 00 		      	lw   	r3,48[bp]
016974 82 31 1E 70 		      	asli 	r3,r3,#15
016978 C6 4D 70 00 		      	lw   	r4,56[bp]
01697C 02 42 22 78 		      	asri 	r4,r4,#17
016980 82 31 08 1A 		      	or   	r3,r3,r4
016984 E7 E1 01 00 		      	push 	r3
016988 FC 01 00 00 		      	push 	#disassem_731
01698C 65 E0 45 6D 
016990 B9 99 FD FF 		      	bsr  	printf
016994 14 EF 21 00 		      	addui	sp,sp,#16
016998 3A 05 00 00 		      	bra  	disassem_735
                	disassem_734:
01699C C4 3D F8 FF 		      	lh   	r3,-4[bp]
0169A0 82 31 00 24 		      	sxh  	r3,r3
0169A4 82 31 00 24 		      	sxh  	r3,r3
0169A8 82 31 22 78 		      	asri 	r3,r3,#17
0169AC E7 E1 01 00 		      	push 	r3
0169B0 FC 01 00 00 		      	push 	#disassem_732
0169B4 65 E0 29 6D 
0169B8 B9 94 FD FF 		      	bsr  	printf
0169BC 14 EF 21 00 		      	addui	sp,sp,#16
                	disassem_735:
                	disassem_736:
0169C0 82 ED 01 1A 		      	mov  	sp,bp
0169C4 57 BF 11 00 		      	pop  	bp
0169C8 57 CF 11 00 		      	pop  	xlr
0169CC 57 FF 11 00 		      	pop  	lr
0169D0 37 FF 01 00 		      	rtl  	#0
                	disassem_733:
0169D4 C6 FD 11 00 		      	lw   	lr,8[bp]
0169D8 E3 FD 21 00 		      	sw   	lr,16[bp]
0169DC BA FC FF FF 		      	bra  	disassem_736
                	public code DispBcc:
0169E0 E7 EF 01 00 		      	push 	lr
0169E4 67 EE 01 00 		      	push 	xlr
0169E8 E7 ED 01 00 		      	push 	bp
0169EC 7C 01 00 00 		      	ldi  	xlr,#disassem_739
0169F0 0A C0 31 D5 
0169F4 02 BF 01 1A 		      	mov  	bp,sp
0169F8 15 EF 21 00 		      	subui	sp,sp,#16
0169FC C6 3D 50 00 		      	lw   	r3,40[bp]
016A00 82 31 22 78 		      	asri 	r3,r3,#17
016A04 7C 00 00 00 		      	and  	r3,r3,#32767
016A08 8C 31 FE FF 
016A0C 82 31 04 70 		      	asli 	r3,r3,#2
016A10 E3 3D E0 FF 		      	sw   	r3,-16[bp]
016A14 C6 3D 50 00 		      	lw   	r3,40[bp]
016A18 7C 00 80 00 		      	and  	r3,r3,#2147483648
016A1C 8C 31 00 00 
016A20 BD 01 0A 00 		      	beq  	r3,disassem_740
016A24 C6 3D E0 FF 		      	lw   	r3,-16[bp]
016A28 7C FF FF FF 		      	ori  	r3,r3,#-65536
016A2C 8D 31 00 00 
016A30 E3 3D E0 FF 		      	sw   	r3,-16[bp]
                	disassem_740:
016A34 E6 ED 51 00 		      	push 	40[bp]
016A38 E6 ED 31 00 		      	push 	24[bp]
016A3C 39 A5 FE FF 		      	bsr  	DumpInsnBytes
016A40 14 EF 21 00 		      	addui	sp,sp,#16
016A44 E6 ED 41 00 		      	push 	32[bp]
016A48 FC 01 00 00 		      	push 	#disassem_737
016A4C 65 E0 19 6D 
016A50 B9 81 FD FF 		      	bsr  	printf
016A54 14 EF 21 00 		      	addui	sp,sp,#16
016A58 E6 ED 51 00 		      	push 	40[bp]
016A5C 39 C8 FE FF 		      	bsr  	DispRac
016A60 14 EF 11 00 		      	addui	sp,sp,#8
016A64 C6 3D 30 00 		      	lw   	r3,24[bp]
016A68 C6 4D E0 FF 		      	lw   	r4,-16[bp]
016A6C 82 31 08 28 		      	addu 	r3,r3,r4
016A70 E7 E1 01 00 		      	push 	r3
016A74 FC 01 00 00 		      	push 	#disassem_738
016A78 65 E0 FD 6C 
016A7C 39 7C FD FF 		      	bsr  	printf
016A80 14 EF 21 00 		      	addui	sp,sp,#16
                	disassem_742:
016A84 82 ED 01 1A 		      	mov  	sp,bp
016A88 57 BF 11 00 		      	pop  	bp
016A8C 57 CF 11 00 		      	pop  	xlr
016A90 57 FF 11 00 		      	pop  	lr
016A94 37 FF 01 00 		      	rtl  	#0
                	disassem_739:
016A98 C6 FD 11 00 		      	lw   	lr,8[bp]
016A9C E3 FD 21 00 		      	sw   	lr,16[bp]
016AA0 BA FC FF FF 		      	bra  	disassem_742
                	endpublic
                	
                	public code DispRR:
016AA4 E7 EF 01 00 		      	push 	lr
016AA8 67 EE 01 00 		      	push 	xlr
016AAC E7 ED 01 00 		      	push 	bp
016AB0 7C 01 00 00 		      	ldi  	xlr,#disassem_747
016AB4 0A C0 81 D7 
016AB8 02 BF 01 1A 		      	mov  	bp,sp
016ABC 15 EF 21 00 		      	subui	sp,sp,#16
016AC0 C5 3D 50 00 		      	lhu  	r3,40[bp]
016AC4 FC FF FF 00 		      	andi 	r3,r3,#4294967295
016AC8 8C 31 FE FF 
016ACC 82 31 32 78 		      	asri 	r3,r3,#25
016AD0 E3 3D F0 FF 		      	sw   	r3,-8[bp]
016AD4 C5 3D 50 00 		      	lhu  	r3,40[bp]
016AD8 FC FF FF 00 		      	andi 	r3,r3,#4294967295
016ADC 8C 31 FE FF 
016AE0 82 31 22 78 		      	asri 	r3,r3,#17
016AE4 8C 31 3E 00 		      	and  	r3,r3,#31
016AE8 E3 3D E0 FF 		      	sw   	r3,-16[bp]
016AEC C5 3D 50 00 		      	lhu  	r3,40[bp]
016AF0 E7 E1 01 00 		      	push 	r3
016AF4 E6 ED 31 00 		      	push 	24[bp]
016AF8 B9 8D FE FF 		      	bsr  	DumpInsnBytes
016AFC 14 EF 21 00 		      	addui	sp,sp,#16
016B00 C6 3D F0 FF 		      	lw   	r3,-8[bp]
016B04 86 31 1A 00 		      	cmp  	r3,r3,#13
016B08 BD 11 30 00 		      	bne  	r3,disassem_748
016B0C C6 3D E0 FF 		      	lw   	r3,-16[bp]
016B10 BD 11 2C 00 		      	bne  	r3,disassem_748
016B14 FC 01 00 00 		      	push 	#disassem_743
016B18 65 E0 E1 6C 
016B1C 39 68 FD FF 		      	bsr  	printf
016B20 14 EF 11 00 		      	addui	sp,sp,#8
016B24 C5 3D 50 00 		      	lhu  	r3,40[bp]
016B28 E7 E1 01 00 		      	push 	r3
016B2C 39 A3 FE FF 		      	bsr  	DispRstc
016B30 14 EF 11 00 		      	addui	sp,sp,#8
016B34 C5 3D 50 00 		      	lhu  	r3,40[bp]
016B38 E7 E1 01 00 		      	push 	r3
016B3C 39 B7 FE FF 		      	bsr  	DispRa
016B40 14 EF 11 00 		      	addui	sp,sp,#8
016B44 FC 01 00 00 		      	push 	#disassem_744
016B48 65 E0 D5 6C 
016B4C 39 62 FD FF 		      	bsr  	printf
016B50 14 EF 11 00 		      	addui	sp,sp,#8
                	disassem_750:
016B54 82 ED 01 1A 		      	mov  	sp,bp
016B58 57 BF 11 00 		      	pop  	bp
016B5C 57 CF 11 00 		      	pop  	xlr
016B60 57 FF 11 00 		      	pop  	lr
016B64 37 FF 01 00 		      	rtl  	#0
                	disassem_748:
016B68 E6 ED 41 00 		      	push 	32[bp]
016B6C FC 01 00 00 		      	push 	#disassem_745
016B70 65 E0 C5 6C 
016B74 39 5D FD FF 		      	bsr  	printf
016B78 14 EF 21 00 		      	addui	sp,sp,#16
016B7C C5 3D 50 00 		      	lhu  	r3,40[bp]
016B80 E7 E1 01 00 		      	push 	r3
016B84 39 98 FE FF 		      	bsr  	DispRstc
016B88 14 EF 11 00 		      	addui	sp,sp,#8
016B8C C5 3D 50 00 		      	lhu  	r3,40[bp]
016B90 E7 E1 01 00 		      	push 	r3
016B94 39 A1 FE FF 		      	bsr  	DispRac
016B98 14 EF 11 00 		      	addui	sp,sp,#8
016B9C C5 3D 50 00 		      	lhu  	r3,40[bp]
016BA0 E7 E1 01 00 		      	push 	r3
016BA4 39 B5 FE FF 		      	bsr  	DispRb
016BA8 14 EF 11 00 		      	addui	sp,sp,#8
016BAC FC 01 00 00 		      	push 	#disassem_746
016BB0 65 E0 B9 6C 
016BB4 39 55 FD FF 		      	bsr  	printf
016BB8 14 EF 11 00 		      	addui	sp,sp,#8
016BBC 3A F3 FF FF 		      	bra  	disassem_750
                	disassem_747:
016BC0 C6 FD 11 00 		      	lw   	lr,8[bp]
016BC4 E3 FD 21 00 		      	sw   	lr,16[bp]
016BC8 BA F1 FF FF 		      	bra  	disassem_750
                	endpublic
                	
                	public code DispJALI:
016BCC E7 EF 01 00 		      	push 	lr
016BD0 67 EE 01 00 		      	push 	xlr
016BD4 E7 ED 01 00 		      	push 	bp
016BD8 7C 01 00 00 		      	ldi  	xlr,#disassem_759
016BDC 0A C0 A1 DA 
016BE0 02 BF 01 1A 		      	mov  	bp,sp
016BE4 15 EF 31 00 		      	subui	sp,sp,#24
016BE8 C4 3D 40 00 		      	lh   	r3,32[bp]
016BEC E2 3D D8 FF 		      	sh   	r3,-20[bp]
016BF0 C5 3D 40 00 		      	lhu  	r3,32[bp]
016BF4 FC FF FF 00 		      	andi 	r3,r3,#4294967295
016BF8 8C 31 FE FF 
016BFC 82 31 18 78 		      	asri 	r3,r3,#12
016C00 8C 31 3E 00 		      	and  	r3,r3,#31
016C04 E3 3D F0 FF 		      	sw   	r3,-8[bp]
016C08 C5 3D 40 00 		      	lhu  	r3,32[bp]
016C0C FC FF FF 00 		      	andi 	r3,r3,#4294967295
016C10 8C 31 FE FF 
016C14 82 31 0E 78 		      	asri 	r3,r3,#7
016C18 8C 31 3E 00 		      	and  	r3,r3,#31
016C1C E3 3D E0 FF 		      	sw   	r3,-16[bp]
016C20 C5 3D 40 00 		      	lhu  	r3,32[bp]
016C24 E7 E1 01 00 		      	push 	r3
016C28 E6 ED 31 00 		      	push 	24[bp]
016C2C 39 67 FE FF 		      	bsr  	DumpInsnBytes
016C30 14 EF 21 00 		      	addui	sp,sp,#16
016C34 C6 3D F0 FF 		      	lw   	r3,-8[bp]
016C38 BD 01 2C 00 		      	beq  	r3,disassem_760
016C3C C6 3D F0 FF 		      	lw   	r3,-8[bp]
016C40 86 31 3E 00 		      	cmp  	r3,r3,#31
016C44 BD 01 1C 00 		      	beq  	r3,disassem_762
016C48 FC 01 00 00 		      	push 	#disassem_751
016C4C 65 E0 9D 6C 
016C50 B9 41 FD FF 		      	bsr  	printf
016C54 14 EF 11 00 		      	addui	sp,sp,#8
016C58 C5 3D 40 00 		      	lhu  	r3,32[bp]
016C5C E7 E1 01 00 		      	push 	r3
016C60 B9 7C FE FF 		      	bsr  	DispRstc
016C64 14 EF 11 00 		      	addui	sp,sp,#8
016C68 FC 01 00 00 		      	push 	#disassem_752
016C6C 65 E0 95 6C 
016C70 B9 3D FD FF 		      	bsr  	printf
016C74 14 EF 11 00 		      	addui	sp,sp,#8
016C78 BA 02 00 00 		      	bra  	disassem_763
                	disassem_762:
016C7C FC 01 00 00 		      	push 	#disassem_753
016C80 65 E0 75 6C 
016C84 39 3B FD FF 		      	bsr  	printf
016C88 14 EF 11 00 		      	addui	sp,sp,#8
                	disassem_763:
016C8C BA 02 00 00 		      	bra  	disassem_761
                	disassem_760:
016C90 FC 01 00 00 		      	push 	#disassem_754
016C94 65 E0 55 6C 
016C98 B9 38 FD FF 		      	bsr  	printf
016C9C 14 EF 11 00 		      	addui	sp,sp,#8
                	disassem_761:
016CA0 C6 3D 50 00 		      	lw   	r3,40[bp]
016CA4 BD 01 1C 00 		      	beq  	r3,disassem_764
016CA8 C6 3D 60 00 		      	lw   	r3,48[bp]
016CAC 82 31 1E 70 		      	asli 	r3,r3,#15
016CB0 C5 4D 40 00 		      	lhu  	r4,32[bp]
016CB4 FC FF FF 00 		      	andi 	r4,r4,#4294967295
016CB8 0C 42 FE FF 
016CBC 02 42 22 78 		      	asri 	r4,r4,#17
016CC0 82 31 08 1A 		      	or   	r3,r3,r4
016CC4 E7 E1 01 00 		      	push 	r3
016CC8 FC 01 00 00 		      	push 	#disassem_755
016CCC 65 E0 45 6C 
016CD0 B9 31 FD FF 		      	bsr  	printf
016CD4 14 EF 21 00 		      	addui	sp,sp,#16
016CD8 3A 07 00 00 		      	bra  	disassem_765
                	disassem_764:
016CDC C4 3D D8 FF 		      	lh   	r3,-20[bp]
016CE0 82 31 00 24 		      	sxh  	r3,r3
016CE4 82 31 22 78 		      	asri 	r3,r3,#17
016CE8 BD 01 14 00 		      	beq  	r3,disassem_766
016CEC C4 3D D8 FF 		      	lh   	r3,-20[bp]
016CF0 82 31 00 24 		      	sxh  	r3,r3
016CF4 82 31 00 24 		      	sxh  	r3,r3
016CF8 82 31 22 78 		      	asri 	r3,r3,#17
016CFC E7 E1 01 00 		      	push 	r3
016D00 FC 01 00 00 		      	push 	#disassem_756
016D04 65 E0 35 6C 
016D08 B9 2A FD FF 		      	bsr  	printf
016D0C 14 EF 21 00 		      	addui	sp,sp,#16
                	disassem_766:
                	disassem_765:
016D10 C6 3D E0 FF 		      	lw   	r3,-16[bp]
016D14 BD 01 0C 00 		      	beq  	r3,disassem_768
016D18 E6 ED E1 FF 		      	push 	-16[bp]
016D1C FC 01 00 00 		      	push 	#disassem_757
016D20 65 E0 1D 6C 
016D24 39 27 FD FF 		      	bsr  	printf
016D28 14 EF 21 00 		      	addui	sp,sp,#16
                	disassem_768:
016D2C FC 01 00 00 		      	push 	#disassem_758
016D30 65 E0 0D 6C 
016D34 39 25 FD FF 		      	bsr  	printf
016D38 14 EF 11 00 		      	addui	sp,sp,#8
                	disassem_770:
016D3C 82 ED 01 1A 		      	mov  	sp,bp
016D40 57 BF 11 00 		      	pop  	bp
016D44 57 CF 11 00 		      	pop  	xlr
016D48 57 FF 11 00 		      	pop  	lr
016D4C 37 FF 01 00 		      	rtl  	#0
                	disassem_759:
016D50 C6 FD 11 00 		      	lw   	lr,8[bp]
016D54 E3 FD 21 00 		      	sw   	lr,16[bp]
016D58 BA FC FF FF 		      	bra  	disassem_770
                	endpublic
                	
                	public code disassem:
016D5C E7 EF 01 00 		      	push 	lr
016D60 67 EE 01 00 		      	push 	xlr
016D64 E7 ED 01 00 		      	push 	bp
016D68 7C 01 00 00 		      	ldi  	xlr,#disassem_856
016D6C 0A C0 21 FE 
016D70 02 BF 01 1A 		      	mov  	bp,sp
016D74 15 EF C1 00 		      	subui	sp,sp,#96
016D78 E7 E5 01 00 		      	push 	r11
016D7C 67 E6 01 00 		      	push 	r12
016D80 C6 BD 30 00 		      	lw   	r11,24[bp]
016D84 0A C0 00 00 		      	ldi  	r12,#0
016D88 E3 0D B0 FF 		      	sw   	r0,-40[bp]
016D8C E3 0D A0 FF 		      	sw   	r0,-48[bp]
016D90 0A 30 02 00 		      	ldi  	r3,#1
016D94 E3 3D 50 FF 		      	sw   	r3,-88[bp]
016D98 E3 0D 40 FF 		      	sw   	r0,-96[bp]
                	disassem_857:
016D9C C6 35 00 00 		      	lw   	r3,[r11]
016DA0 C6 4D 40 00 		      	lw   	r4,32[bp]
016DA4 82 31 08 0C 		      	cmp  	r3,r3,r4
016DA8 BD 11 08 00 		      	bne  	r3,disassem_859
016DAC 39 25 FE FF 		      	bsr  	reverse_video
016DB0 0A 30 02 00 		      	ldi  	r3,#1
016DB4 E3 3D 40 FF 		      	sw   	r3,-96[bp]
                	disassem_859:
016DB8 C6 35 00 00 		      	lw   	r3,[r11]
016DBC 82 31 04 78 		      	asri 	r3,r3,#2
016DC0 E3 3D 70 FF 		      	sw   	r3,-72[bp]
016DC4 C6 3D 70 FF 		      	lw   	r3,-72[bp]
016DC8 82 31 04 70 		      	asli 	r3,r3,#2
016DCC 4D 46 06 00 		      	lhu  	r4,0[r12+r3]
016DD0 E2 4D E8 FF 		      	sh   	r4,-12[bp]
016DD4 C4 3D E8 FF 		      	lh   	r3,-12[bp]
016DD8 E2 3D 68 FF 		      	sh   	r3,-76[bp]
016DDC C5 3D E8 FF 		      	lhu  	r3,-12[bp]
016DE0 8C 31 FE 00 		      	and  	r3,r3,#127
016DE4 E3 3D D0 FF 		      	sw   	r3,-24[bp]
016DE8 C5 3D E8 FF 		      	lhu  	r3,-12[bp]
016DEC FC FF FF 00 		      	andi 	r3,r3,#4294967295
016DF0 8C 31 FE FF 
016DF4 82 31 32 78 		      	asri 	r3,r3,#25
016DF8 8C 31 FE 00 		      	and  	r3,r3,#127
016DFC E3 3D C0 FF 		      	sw   	r3,-32[bp]
016E00 C6 3D D0 FF 		      	lw   	r3,-24[bp]
016E04 86 41 F8 00 		      	cmp  	r4,r3,#124
016E08 3D 02 D4 00 		      	beq  	r4,disassem_862
016E0C 86 41 04 00 		      	cmp  	r4,r3,#2
016E10 3D 02 1A 01 		      	beq  	r4,disassem_863
016E14 86 41 08 00 		      	cmp  	r4,r3,#4
016E18 3D 02 3E 03 		      	beq  	r4,disassem_864
016E1C 86 41 28 00 		      	cmp  	r4,r3,#20
016E20 3D 02 4E 03 		      	beq  	r4,disassem_865
016E24 86 41 0A 00 		      	cmp  	r4,r3,#5
016E28 3D 02 5E 03 		      	beq  	r4,disassem_866
016E2C 86 41 2A 00 		      	cmp  	r4,r3,#21
016E30 3D 02 6E 03 		      	beq  	r4,disassem_867
016E34 86 41 0C 00 		      	cmp  	r4,r3,#6
016E38 3D 02 7E 03 		      	beq  	r4,disassem_868
016E3C 86 41 2C 00 		      	cmp  	r4,r3,#22
016E40 3D 02 8E 03 		      	beq  	r4,disassem_869
016E44 86 41 0E 00 		      	cmp  	r4,r3,#7
016E48 3D 02 9E 03 		      	beq  	r4,disassem_870
016E4C 86 41 2E 00 		      	cmp  	r4,r3,#23
016E50 3D 02 AE 03 		      	beq  	r4,disassem_871
016E54 86 41 10 00 		      	cmp  	r4,r3,#8
016E58 3D 02 BE 03 		      	beq  	r4,disassem_872
016E5C 86 41 30 00 		      	cmp  	r4,r3,#24
016E60 3D 02 CE 03 		      	beq  	r4,disassem_873
016E64 86 41 18 00 		      	cmp  	r4,r3,#12
016E68 3D 02 DE 03 		      	beq  	r4,disassem_874
016E6C 86 41 1A 00 		      	cmp  	r4,r3,#13
016E70 3D 02 EE 03 		      	beq  	r4,disassem_875
016E74 86 41 1C 00 		      	cmp  	r4,r3,#14
016E78 3D 02 FE 03 		      	beq  	r4,disassem_876
016E7C 86 41 7A 00 		      	cmp  	r4,r3,#61
016E80 3D 02 0E 04 		      	beq  	r4,disassem_877
016E84 86 41 7C 00 		      	cmp  	r4,r3,#62
016E88 3D 02 A8 04 		      	beq  	r4,disassem_878
016E8C 86 41 70 00 		      	cmp  	r4,r3,#56
016E90 3D 02 B4 04 		      	beq  	r4,disassem_879
016E94 86 41 72 00 		      	cmp  	r4,r3,#57
016E98 3D 02 BA 04 		      	beq  	r4,disassem_880
016E9C 86 41 74 00 		      	cmp  	r4,r3,#58
016EA0 3D 02 F0 04 		      	beq  	r4,disassem_881
016EA4 86 41 6E 00 		      	cmp  	r4,r3,#55
016EA8 3D 02 26 05 		      	beq  	r4,disassem_882
016EAC 86 41 76 00 		      	cmp  	r4,r3,#59
016EB0 3D 02 42 05 		      	beq  	r4,disassem_883
016EB4 86 41 80 00 		      	cmp  	r4,r3,#64
016EB8 3D 02 5E 05 		      	beq  	r4,disassem_884
016EBC 86 41 82 00 		      	cmp  	r4,r3,#65
016EC0 3D 02 6E 05 		      	beq  	r4,disassem_885
016EC4 86 41 84 00 		      	cmp  	r4,r3,#66
016EC8 3D 02 7E 05 		      	beq  	r4,disassem_886
016ECC 86 41 86 00 		      	cmp  	r4,r3,#67
016ED0 3D 02 8E 05 		      	beq  	r4,disassem_887
016ED4 86 41 88 00 		      	cmp  	r4,r3,#68
016ED8 3D 02 9E 05 		      	beq  	r4,disassem_888
016EDC 86 41 8A 00 		      	cmp  	r4,r3,#69
016EE0 3D 02 AE 05 		      	beq  	r4,disassem_889
016EE4 86 41 8C 00 		      	cmp  	r4,r3,#70
016EE8 3D 02 BE 05 		      	beq  	r4,disassem_890
016EEC 86 41 8E 00 		      	cmp  	r4,r3,#71
016EF0 3D 02 CE 05 		      	beq  	r4,disassem_891
016EF4 86 41 90 00 		      	cmp  	r4,r3,#72
016EF8 3D 02 DE 05 		      	beq  	r4,disassem_892
016EFC 86 41 92 00 		      	cmp  	r4,r3,#73
016F00 3D 02 EA 05 		      	beq  	r4,disassem_893
016F04 86 41 94 00 		      	cmp  	r4,r3,#74
016F08 3D 02 F6 05 		      	beq  	r4,disassem_894
016F0C 86 41 96 00 		      	cmp  	r4,r3,#75
016F10 3D 02 02 06 		      	beq  	r4,disassem_895
016F14 86 41 98 00 		      	cmp  	r4,r3,#76
016F18 3D 02 0E 06 		      	beq  	r4,disassem_896
016F1C 86 41 9A 00 		      	cmp  	r4,r3,#77
016F20 3D 02 1A 06 		      	beq  	r4,disassem_897
016F24 86 41 9C 00 		      	cmp  	r4,r3,#78
016F28 3D 02 26 06 		      	beq  	r4,disassem_898
016F2C 86 41 9E 00 		      	cmp  	r4,r3,#79
016F30 3D 02 32 06 		      	beq  	r4,disassem_899
016F34 86 41 C8 00 		      	cmp  	r4,r3,#100
016F38 3D 02 3E 06 		      	beq  	r4,disassem_900
016F3C 86 41 C0 00 		      	cmp  	r4,r3,#96
016F40 3D 02 52 06 		      	beq  	r4,disassem_901
016F44 86 41 C2 00 		      	cmp  	r4,r3,#97
016F48 3D 02 62 06 		      	beq  	r4,disassem_902
016F4C 86 41 C4 00 		      	cmp  	r4,r3,#98
016F50 3D 02 72 06 		      	beq  	r4,disassem_903
016F54 86 41 C6 00 		      	cmp  	r4,r3,#99
016F58 3D 02 82 06 		      	beq  	r4,disassem_904
016F5C 86 41 D0 00 		      	cmp  	r4,r3,#104
016F60 3D 02 92 06 		      	beq  	r4,disassem_905
016F64 86 41 D2 00 		      	cmp  	r4,r3,#105
016F68 3D 02 9E 06 		      	beq  	r4,disassem_906
016F6C 86 41 D4 00 		      	cmp  	r4,r3,#106
016F70 3D 02 AA 06 		      	beq  	r4,disassem_907
016F74 86 41 D6 00 		      	cmp  	r4,r3,#107
016F78 3D 02 B6 06 		      	beq  	r4,disassem_908
016F7C 86 41 B8 00 		      	cmp  	r4,r3,#92
016F80 3D 02 C2 06 		      	beq  	r4,disassem_909
016F84 86 41 DC 00 		      	cmp  	r4,r3,#110
016F88 3D 02 D2 06 		      	beq  	r4,disassem_910
016F8C 86 41 CE 00 		      	cmp  	r4,r3,#103
016F90 3D 02 E2 06 		      	beq  	r4,disassem_911
016F94 86 41 AE 00 		      	cmp  	r4,r3,#87
016F98 3D 02 02 07 		      	beq  	r4,disassem_912
016F9C 86 41 7E 00 		      	cmp  	r4,r3,#63
016FA0 3D 02 22 07 		      	beq  	r4,disassem_913
016FA4 86 41 14 00 		      	cmp  	r4,r3,#10
016FA8 3D 02 32 07 		      	beq  	r4,disassem_914
016FAC 3A DF 01 00 		      	bra  	disassem_915
                	disassem_862:
016FB0 0A 30 02 00 		      	ldi  	r3,#1
016FB4 E3 3D B0 FF 		      	sw   	r3,-40[bp]
016FB8 C6 3D 50 FF 		      	lw   	r3,-88[bp]
016FBC BD 01 1E 00 		      	beq  	r3,disassem_916
016FC0 C4 3D 68 FF 		      	lh   	r3,-76[bp]
016FC4 82 31 00 24 		      	sxh  	r3,r3
016FC8 82 31 00 24 		      	sxh  	r3,r3
016FCC 82 31 0E 78 		      	asri 	r3,r3,#7
016FD0 E3 3D A0 FF 		      	sw   	r3,-48[bp]
016FD4 C6 3D A0 FF 		      	lw   	r3,-48[bp]
016FD8 7C 00 01 00 		      	and  	r3,r3,#16777216
016FDC 8C 31 00 00 
016FE0 BD 01 0A 00 		      	beq  	r3,disassem_918
016FE4 C6 3D A0 FF 		      	lw   	r3,-48[bp]
016FE8 7C 00 FF FF 		      	ori  	r3,r3,#-16777216
016FEC 8D 31 00 00 
016FF0 E3 3D A0 FF 		      	sw   	r3,-48[bp]
                	disassem_918:
016FF4 BA 04 00 00 		      	bra  	disassem_917
                	disassem_916:
016FF8 C6 3D A0 FF 		      	lw   	r3,-48[bp]
016FFC 82 31 32 70 		      	asli 	r3,r3,#25
017000 C5 4D E8 FF 		      	lhu  	r4,-12[bp]
017004 FC FF FF 00 		      	andi 	r4,r4,#4294967295
017008 0C 42 FE FF 
01700C 02 42 0E 78 		      	asri 	r4,r4,#7
017010 82 31 08 1A 		      	or   	r3,r3,r4
017014 E3 3D A0 FF 		      	sw   	r3,-48[bp]
                	disassem_917:
017018 C5 3D E8 FF 		      	lhu  	r3,-12[bp]
01701C E7 E1 01 00 		      	push 	r3
017020 E6 E5 01 00 		      	push 	[r11]
017024 39 E8 FD FF 		      	bsr  	DumpInsnBytes
017028 14 EF 21 00 		      	addui	sp,sp,#16
01702C FC 01 00 00 		      	push 	#disassem_771
017030 65 E0 F5 6B 
017034 39 C5 FC FF 		      	bsr  	printf
017038 14 EF 11 00 		      	addui	sp,sp,#8
01703C E3 0D 50 FF 		      	sw   	r0,-88[bp]
017040 BA D1 01 00 		      	bra  	disassem_861
                	disassem_863:
017044 C6 3D C0 FF 		      	lw   	r3,-32[bp]
017048 86 41 6E 00 		      	cmp  	r4,r3,#55
01704C 3D 02 40 00 		      	beq  	r4,disassem_921
017050 86 41 08 00 		      	cmp  	r4,r3,#4
017054 3D 02 EE 00 		      	beq  	r4,disassem_922
017058 86 41 28 00 		      	cmp  	r4,r3,#20
01705C 3D 02 FA 00 		      	beq  	r4,disassem_923
017060 86 41 0A 00 		      	cmp  	r4,r3,#5
017064 3D 02 06 01 		      	beq  	r4,disassem_924
017068 86 41 2A 00 		      	cmp  	r4,r3,#21
01706C 3D 02 12 01 		      	beq  	r4,disassem_925
017070 86 41 0C 00 		      	cmp  	r4,r3,#6
017074 3D 02 1E 01 		      	beq  	r4,disassem_926
017078 86 41 2C 00 		      	cmp  	r4,r3,#22
01707C 3D 02 2A 01 		      	beq  	r4,disassem_927
017080 86 41 0E 00 		      	cmp  	r4,r3,#7
017084 3D 02 36 01 		      	beq  	r4,disassem_928
017088 86 41 2E 00 		      	cmp  	r4,r3,#23
01708C 3D 02 42 01 		      	beq  	r4,disassem_929
017090 86 41 10 00 		      	cmp  	r4,r3,#8
017094 3D 02 4E 01 		      	beq  	r4,disassem_930
017098 86 41 30 00 		      	cmp  	r4,r3,#24
01709C 3D 02 5A 01 		      	beq  	r4,disassem_931
0170A0 86 41 18 00 		      	cmp  	r4,r3,#12
0170A4 3D 02 66 01 		      	beq  	r4,disassem_932
0170A8 86 41 1A 00 		      	cmp  	r4,r3,#13
0170AC 3D 02 72 01 		      	beq  	r4,disassem_933
0170B0 86 41 1C 00 		      	cmp  	r4,r3,#14
0170B4 3D 02 7E 01 		      	beq  	r4,disassem_934
0170B8 86 41 3E 00 		      	cmp  	r4,r3,#31
0170BC 3D 02 8A 01 		      	beq  	r4,disassem_935
0170C0 86 41 3C 00 		      	cmp  	r4,r3,#30
0170C4 3D 02 B2 01 		      	beq  	r4,disassem_936
0170C8 3A 79 00 00 		      	bra  	disassem_920
                	disassem_921:
0170CC C5 3D E8 FF 		      	lhu  	r3,-12[bp]
0170D0 FC FF FF 00 		      	andi 	r3,r3,#4294967295
0170D4 8C 31 FE FF 
0170D8 82 31 22 78 		      	asri 	r3,r3,#17
0170DC 8C 31 3E 00 		      	and  	r3,r3,#31
0170E0 86 41 00 00 		      	cmp  	r4,r3,#0
0170E4 3D 02 18 00 		      	beq  	r4,disassem_938
0170E8 86 41 02 00 		      	cmp  	r4,r3,#1
0170EC 3D 02 28 00 		      	beq  	r4,disassem_939
0170F0 86 41 06 00 		      	cmp  	r4,r3,#3
0170F4 3D 02 38 00 		      	beq  	r4,disassem_940
0170F8 86 41 3A 00 		      	cmp  	r4,r3,#29
0170FC 3D 02 48 00 		      	beq  	r4,disassem_941
017100 86 41 3C 00 		      	cmp  	r4,r3,#30
017104 3D 02 58 00 		      	beq  	r4,disassem_942
017108 86 41 3E 00 		      	cmp  	r4,r3,#31
01710C 3D 02 68 00 		      	beq  	r4,disassem_943
017110 BA 1E 00 00 		      	bra  	disassem_944
                	disassem_938:
017114 C5 3D E8 FF 		      	lhu  	r3,-12[bp]
017118 E7 E1 01 00 		      	push 	r3
01711C E6 E5 01 00 		      	push 	[r11]
017120 B9 C8 FD FF 		      	bsr  	DumpInsnBytes
017124 14 EF 21 00 		      	addui	sp,sp,#16
017128 FC 01 00 00 		      	push 	#disassem_772
01712C 65 E0 DD 6B 
017130 B9 A5 FC FF 		      	bsr  	printf
017134 14 EF 11 00 		      	addui	sp,sp,#8
017138 BA 1E 00 00 		      	bra  	disassem_937
                	disassem_939:
01713C C5 3D E8 FF 		      	lhu  	r3,-12[bp]
017140 E7 E1 01 00 		      	push 	r3
017144 E6 E5 01 00 		      	push 	[r11]
017148 B9 C3 FD FF 		      	bsr  	DumpInsnBytes
01714C 14 EF 21 00 		      	addui	sp,sp,#16
017150 FC 01 00 00 		      	push 	#disassem_773
017154 65 E0 C5 6B 
017158 B9 A0 FC FF 		      	bsr  	printf
01715C 14 EF 11 00 		      	addui	sp,sp,#8
017160 BA 19 00 00 		      	bra  	disassem_937
                	disassem_940:
017164 C5 3D E8 FF 		      	lhu  	r3,-12[bp]
017168 E7 E1 01 00 		      	push 	r3
01716C E6 E5 01 00 		      	push 	[r11]
017170 B9 BE FD FF 		      	bsr  	DumpInsnBytes
017174 14 EF 21 00 		      	addui	sp,sp,#16
017178 FC 01 00 00 		      	push 	#disassem_774
01717C 65 E0 AD 6B 
017180 B9 9B FC FF 		      	bsr  	printf
017184 14 EF 11 00 		      	addui	sp,sp,#8
017188 BA 14 00 00 		      	bra  	disassem_937
                	disassem_941:
01718C C5 3D E8 FF 		      	lhu  	r3,-12[bp]
017190 E7 E1 01 00 		      	push 	r3
017194 E6 E5 01 00 		      	push 	[r11]
017198 B9 B9 FD FF 		      	bsr  	DumpInsnBytes
01719C 14 EF 21 00 		      	addui	sp,sp,#16
0171A0 FC 01 00 00 		      	push 	#disassem_775
0171A4 65 E0 95 6B 
0171A8 B9 96 FC FF 		      	bsr  	printf
0171AC 14 EF 11 00 		      	addui	sp,sp,#8
0171B0 BA 0F 00 00 		      	bra  	disassem_937
                	disassem_942:
0171B4 C5 3D E8 FF 		      	lhu  	r3,-12[bp]
0171B8 E7 E1 01 00 		      	push 	r3
0171BC E6 E5 01 00 		      	push 	[r11]
0171C0 B9 B4 FD FF 		      	bsr  	DumpInsnBytes
0171C4 14 EF 21 00 		      	addui	sp,sp,#16
0171C8 FC 01 00 00 		      	push 	#disassem_776
0171CC 65 E0 7D 6B 
0171D0 B9 91 FC FF 		      	bsr  	printf
0171D4 14 EF 11 00 		      	addui	sp,sp,#8
0171D8 BA 0A 00 00 		      	bra  	disassem_937
                	disassem_943:
0171DC C5 3D E8 FF 		      	lhu  	r3,-12[bp]
0171E0 E7 E1 01 00 		      	push 	r3
0171E4 E6 E5 01 00 		      	push 	[r11]
0171E8 B9 AF FD FF 		      	bsr  	DumpInsnBytes
0171EC 14 EF 21 00 		      	addui	sp,sp,#16
0171F0 FC 01 00 00 		      	push 	#disassem_777
0171F4 65 E0 65 6B 
0171F8 B9 8C FC FF 		      	bsr  	printf
0171FC 14 EF 11 00 		      	addui	sp,sp,#8
017200 BA 05 00 00 		      	bra  	disassem_937
                	disassem_944:
017204 C5 3D E8 FF 		      	lhu  	r3,-12[bp]
017208 E7 E1 01 00 		      	push 	r3
01720C E6 E5 01 00 		      	push 	[r11]
017210 B9 AA FD FF 		      	bsr  	DumpInsnBytes
017214 14 EF 21 00 		      	addui	sp,sp,#16
017218 FC 01 00 00 		      	push 	#disassem_778
01721C 65 E0 4D 6B 
017220 B9 87 FC FF 		      	bsr  	printf
017224 14 EF 11 00 		      	addui	sp,sp,#8
017228 BA 00 00 00 		      	bra  	disassem_937
                	disassem_937:
01722C BA 4C 00 00 		      	bra  	disassem_920
                	disassem_922:
017230 C5 3D E8 FF 		      	lhu  	r3,-12[bp]
017234 E7 E1 01 00 		      	push 	r3
017238 FC 01 00 00 		      	push 	#disassem_779
01723C 65 E0 35 6B 
017240 E6 E5 01 00 		      	push 	[r11]
017244 39 0C FF FF 		      	bsr  	DispRR
017248 14 EF 31 00 		      	addui	sp,sp,#24
01724C BA 48 00 00 		      	bra  	disassem_920
                	disassem_923:
017250 C5 3D E8 FF 		      	lhu  	r3,-12[bp]
017254 E7 E1 01 00 		      	push 	r3
017258 FC 01 00 00 		      	push 	#disassem_780
01725C 65 E0 1D 6B 
017260 E6 E5 01 00 		      	push 	[r11]
017264 39 08 FF FF 		      	bsr  	DispRR
017268 14 EF 31 00 		      	addui	sp,sp,#24
01726C BA 44 00 00 		      	bra  	disassem_920
                	disassem_924:
017270 C5 3D E8 FF 		      	lhu  	r3,-12[bp]
017274 E7 E1 01 00 		      	push 	r3
017278 FC 01 00 00 		      	push 	#disassem_781
01727C 65 E0 05 6B 
017280 E6 E5 01 00 		      	push 	[r11]
017284 39 04 FF FF 		      	bsr  	DispRR
017288 14 EF 31 00 		      	addui	sp,sp,#24
01728C BA 40 00 00 		      	bra  	disassem_920
                	disassem_925:
017290 C5 3D E8 FF 		      	lhu  	r3,-12[bp]
017294 E7 E1 01 00 		      	push 	r3
017298 FC 01 00 00 		      	push 	#disassem_782
01729C 65 E0 ED 6A 
0172A0 E6 E5 01 00 		      	push 	[r11]
0172A4 39 00 FF FF 		      	bsr  	DispRR
0172A8 14 EF 31 00 		      	addui	sp,sp,#24
0172AC BA 3C 00 00 		      	bra  	disassem_920
                	disassem_926:
0172B0 C5 3D E8 FF 		      	lhu  	r3,-12[bp]
0172B4 E7 E1 01 00 		      	push 	r3
0172B8 FC 01 00 00 		      	push 	#disassem_783
0172BC 65 E0 D5 6A 
0172C0 E6 E5 01 00 		      	push 	[r11]
0172C4 39 FC FE FF 		      	bsr  	DispRR
0172C8 14 EF 31 00 		      	addui	sp,sp,#24
0172CC BA 38 00 00 		      	bra  	disassem_920
                	disassem_927:
0172D0 C5 3D E8 FF 		      	lhu  	r3,-12[bp]
0172D4 E7 E1 01 00 		      	push 	r3
0172D8 FC 01 00 00 		      	push 	#disassem_784
0172DC 65 E0 BD 6A 
0172E0 E6 E5 01 00 		      	push 	[r11]
0172E4 39 F8 FE FF 		      	bsr  	DispRR
0172E8 14 EF 31 00 		      	addui	sp,sp,#24
0172EC BA 34 00 00 		      	bra  	disassem_920
                	disassem_928:
0172F0 C5 3D E8 FF 		      	lhu  	r3,-12[bp]
0172F4 E7 E1 01 00 		      	push 	r3
0172F8 FC 01 00 00 		      	push 	#disassem_785
0172FC 65 E0 A5 6A 
017300 E6 E5 01 00 		      	push 	[r11]
017304 39 F4 FE FF 		      	bsr  	DispRR
017308 14 EF 31 00 		      	addui	sp,sp,#24
01730C BA 30 00 00 		      	bra  	disassem_920
                	disassem_929:
017310 C5 3D E8 FF 		      	lhu  	r3,-12[bp]
017314 E7 E1 01 00 		      	push 	r3
017318 FC 01 00 00 		      	push 	#disassem_786
01731C 65 E0 8D 6A 
017320 E6 E5 01 00 		      	push 	[r11]
017324 39 F0 FE FF 		      	bsr  	DispRR
017328 14 EF 31 00 		      	addui	sp,sp,#24
01732C BA 2C 00 00 		      	bra  	disassem_920
                	disassem_930:
017330 C5 3D E8 FF 		      	lhu  	r3,-12[bp]
017334 E7 E1 01 00 		      	push 	r3
017338 FC 01 00 00 		      	push 	#disassem_787
01733C 65 E0 75 6A 
017340 E6 E5 01 00 		      	push 	[r11]
017344 39 EC FE FF 		      	bsr  	DispRR
017348 14 EF 31 00 		      	addui	sp,sp,#24
01734C BA 28 00 00 		      	bra  	disassem_920
                	disassem_931:
017350 C5 3D E8 FF 		      	lhu  	r3,-12[bp]
017354 E7 E1 01 00 		      	push 	r3
017358 FC 01 00 00 		      	push 	#disassem_788
01735C 65 E0 5D 6A 
017360 E6 E5 01 00 		      	push 	[r11]
017364 39 E8 FE FF 		      	bsr  	DispRR
017368 14 EF 31 00 		      	addui	sp,sp,#24
01736C BA 24 00 00 		      	bra  	disassem_920
                	disassem_932:
017370 C5 3D E8 FF 		      	lhu  	r3,-12[bp]
017374 E7 E1 01 00 		      	push 	r3
017378 FC 01 00 00 		      	push 	#disassem_789
01737C 65 E0 45 6A 
017380 E6 E5 01 00 		      	push 	[r11]
017384 39 E4 FE FF 		      	bsr  	DispRR
017388 14 EF 31 00 		      	addui	sp,sp,#24
01738C BA 20 00 00 		      	bra  	disassem_920
                	disassem_933:
017390 C5 3D E8 FF 		      	lhu  	r3,-12[bp]
017394 E7 E1 01 00 		      	push 	r3
017398 FC 01 00 00 		      	push 	#disassem_790
01739C 65 E0 2D 6A 
0173A0 E6 E5 01 00 		      	push 	[r11]
0173A4 39 E0 FE FF 		      	bsr  	DispRR
0173A8 14 EF 31 00 		      	addui	sp,sp,#24
0173AC BA 1C 00 00 		      	bra  	disassem_920
                	disassem_934:
0173B0 C5 3D E8 FF 		      	lhu  	r3,-12[bp]
0173B4 E7 E1 01 00 		      	push 	r3
0173B8 FC 01 00 00 		      	push 	#disassem_791
0173BC 65 E0 15 6A 
0173C0 E6 E5 01 00 		      	push 	[r11]
0173C4 39 DC FE FF 		      	bsr  	DispRR
0173C8 14 EF 31 00 		      	addui	sp,sp,#24
0173CC BA 18 00 00 		      	bra  	disassem_920
                	disassem_935:
0173D0 C5 3D E8 FF 		      	lhu  	r3,-12[bp]
0173D4 E7 E1 01 00 		      	push 	r3
0173D8 E6 E5 01 00 		      	push 	[r11]
0173DC 39 71 FD FF 		      	bsr  	DumpInsnBytes
0173E0 14 EF 21 00 		      	addui	sp,sp,#16
0173E4 FC 01 00 00 		      	push 	#disassem_792
0173E8 65 E0 F9 69 
0173EC 39 4E FC FF 		      	bsr  	printf
0173F0 14 EF 11 00 		      	addui	sp,sp,#8
0173F4 C5 3D E8 FF 		      	lhu  	r3,-12[bp]
0173F8 E7 E1 01 00 		      	push 	r3
0173FC 39 89 FD FF 		      	bsr  	DispRstc
017400 14 EF 11 00 		      	addui	sp,sp,#8
017404 C5 3D E8 FF 		      	lhu  	r3,-12[bp]
017408 E7 E1 01 00 		      	push 	r3
01740C 39 B3 FD FF 		      	bsr  	DispSpr
017410 14 EF 11 00 		      	addui	sp,sp,#8
017414 FC 01 00 00 		      	push 	#disassem_793
017418 65 E0 ED 69 
01741C 39 48 FC FF 		      	bsr  	printf
017420 14 EF 11 00 		      	addui	sp,sp,#8
017424 BA 0D 00 00 		      	bra  	disassem_920
                	disassem_936:
017428 C5 3D E8 FF 		      	lhu  	r3,-12[bp]
01742C E7 E1 01 00 		      	push 	r3
017430 E6 E5 01 00 		      	push 	[r11]
017434 39 66 FD FF 		      	bsr  	DumpInsnBytes
017438 14 EF 21 00 		      	addui	sp,sp,#16
01743C FC 01 00 00 		      	push 	#disassem_794
017440 65 E0 D1 69 
017444 39 43 FC FF 		      	bsr  	printf
017448 14 EF 11 00 		      	addui	sp,sp,#8
01744C C5 3D E8 FF 		      	lhu  	r3,-12[bp]
017450 E7 E1 01 00 		      	push 	r3
017454 39 AA FD FF 		      	bsr  	DispSpr
017458 14 EF 11 00 		      	addui	sp,sp,#8
01745C FC 01 00 00 		      	push 	#disassem_795
017460 65 E0 C9 69 
017464 39 3F FC FF 		      	bsr  	printf
017468 14 EF 11 00 		      	addui	sp,sp,#8
01746C C5 3D E8 FF 		      	lhu  	r3,-12[bp]
017470 E7 E1 01 00 		      	push 	r3
017474 39 90 FD FF 		      	bsr  	DispRa
017478 14 EF 11 00 		      	addui	sp,sp,#8
01747C FC 01 00 00 		      	push 	#disassem_796
017480 65 E0 BD 69 
017484 39 3B FC FF 		      	bsr  	printf
017488 14 EF 11 00 		      	addui	sp,sp,#8
01748C BA 00 00 00 		      	bra  	disassem_920
                	disassem_920:
017490 BA 47 01 00 		      	bra  	disassem_861
                	disassem_864:
017494 C5 3D E8 FF 		      	lhu  	r3,-12[bp]
017498 E7 E1 01 00 		      	push 	r3
01749C E6 ED A1 FF 		      	push 	-48[bp]
0174A0 E6 ED B1 FF 		      	push 	-40[bp]
0174A4 FC 01 00 00 		      	push 	#disassem_797
0174A8 65 E0 A5 69 
0174AC E6 E5 01 00 		      	push 	[r11]
0174B0 39 8B FE FF 		      	bsr  	DispRI
0174B4 14 EF 51 00 		      	addui	sp,sp,#40
0174B8 BA 42 01 00 		      	bra  	disassem_861
                	disassem_865:
0174BC C5 3D E8 FF 		      	lhu  	r3,-12[bp]
0174C0 E7 E1 01 00 		      	push 	r3
0174C4 E6 ED A1 FF 		      	push 	-48[bp]
0174C8 E6 ED B1 FF 		      	push 	-40[bp]
0174CC FC 01 00 00 		      	push 	#disassem_798
0174D0 65 E0 8D 69 
0174D4 E6 E5 01 00 		      	push 	[r11]
0174D8 39 86 FE FF 		      	bsr  	DispRI
0174DC 14 EF 51 00 		      	addui	sp,sp,#40
0174E0 BA 3D 01 00 		      	bra  	disassem_861
                	disassem_866:
0174E4 C5 3D E8 FF 		      	lhu  	r3,-12[bp]
0174E8 E7 E1 01 00 		      	push 	r3
0174EC E6 ED A1 FF 		      	push 	-48[bp]
0174F0 E6 ED B1 FF 		      	push 	-40[bp]
0174F4 FC 01 00 00 		      	push 	#disassem_799
0174F8 65 E0 75 69 
0174FC E6 E5 01 00 		      	push 	[r11]
017500 39 81 FE FF 		      	bsr  	DispRI
017504 14 EF 51 00 		      	addui	sp,sp,#40
017508 BA 38 01 00 		      	bra  	disassem_861
                	disassem_867:
01750C C5 3D E8 FF 		      	lhu  	r3,-12[bp]
017510 E7 E1 01 00 		      	push 	r3
017514 E6 ED A1 FF 		      	push 	-48[bp]
017518 E6 ED B1 FF 		      	push 	-40[bp]
01751C FC 01 00 00 		      	push 	#disassem_800
017520 65 E0 5D 69 
017524 E6 E5 01 00 		      	push 	[r11]
017528 39 7C FE FF 		      	bsr  	DispRI
01752C 14 EF 51 00 		      	addui	sp,sp,#40
017530 BA 33 01 00 		      	bra  	disassem_861
                	disassem_868:
017534 C5 3D E8 FF 		      	lhu  	r3,-12[bp]
017538 E7 E1 01 00 		      	push 	r3
01753C E6 ED A1 FF 		      	push 	-48[bp]
017540 E6 ED B1 FF 		      	push 	-40[bp]
017544 FC 01 00 00 		      	push 	#disassem_801
017548 65 E0 45 69 
01754C E6 E5 01 00 		      	push 	[r11]
017550 39 77 FE FF 		      	bsr  	DispRI
017554 14 EF 51 00 		      	addui	sp,sp,#40
017558 BA 2E 01 00 		      	bra  	disassem_861
                	disassem_869:
01755C C5 3D E8 FF 		      	lhu  	r3,-12[bp]
017560 E7 E1 01 00 		      	push 	r3
017564 E6 ED A1 FF 		      	push 	-48[bp]
017568 E6 ED B1 FF 		      	push 	-40[bp]
01756C FC 01 00 00 		      	push 	#disassem_802
017570 65 E0 2D 69 
017574 E6 E5 01 00 		      	push 	[r11]
017578 39 72 FE FF 		      	bsr  	DispRI
01757C 14 EF 51 00 		      	addui	sp,sp,#40
017580 BA 29 01 00 		      	bra  	disassem_861
                	disassem_870:
017584 C5 3D E8 FF 		      	lhu  	r3,-12[bp]
017588 E7 E1 01 00 		      	push 	r3
01758C E6 ED A1 FF 		      	push 	-48[bp]
017590 E6 ED B1 FF 		      	push 	-40[bp]
017594 FC 01 00 00 		      	push 	#disassem_803
017598 65 E0 15 69 
01759C E6 E5 01 00 		      	push 	[r11]
0175A0 39 6D FE FF 		      	bsr  	DispRI
0175A4 14 EF 51 00 		      	addui	sp,sp,#40
0175A8 BA 24 01 00 		      	bra  	disassem_861
                	disassem_871:
0175AC C5 3D E8 FF 		      	lhu  	r3,-12[bp]
0175B0 E7 E1 01 00 		      	push 	r3
0175B4 E6 ED A1 FF 		      	push 	-48[bp]
0175B8 E6 ED B1 FF 		      	push 	-40[bp]
0175BC FC 01 00 00 		      	push 	#disassem_804
0175C0 65 E0 FD 68 
0175C4 E6 E5 01 00 		      	push 	[r11]
0175C8 39 68 FE FF 		      	bsr  	DispRI
0175CC 14 EF 51 00 		      	addui	sp,sp,#40
0175D0 BA 1F 01 00 		      	bra  	disassem_861
                	disassem_872:
0175D4 C5 3D E8 FF 		      	lhu  	r3,-12[bp]
0175D8 E7 E1 01 00 		      	push 	r3
0175DC E6 ED A1 FF 		      	push 	-48[bp]
0175E0 E6 ED B1 FF 		      	push 	-40[bp]
0175E4 FC 01 00 00 		      	push 	#disassem_805
0175E8 65 E0 E5 68 
0175EC E6 E5 01 00 		      	push 	[r11]
0175F0 39 63 FE FF 		      	bsr  	DispRI
0175F4 14 EF 51 00 		      	addui	sp,sp,#40
0175F8 BA 1A 01 00 		      	bra  	disassem_861
                	disassem_873:
0175FC C5 3D E8 FF 		      	lhu  	r3,-12[bp]
017600 E7 E1 01 00 		      	push 	r3
017604 E6 ED A1 FF 		      	push 	-48[bp]
017608 E6 ED B1 FF 		      	push 	-40[bp]
01760C FC 01 00 00 		      	push 	#disassem_806
017610 65 E0 CD 68 
017614 E6 E5 01 00 		      	push 	[r11]
017618 39 5E FE FF 		      	bsr  	DispRI
01761C 14 EF 51 00 		      	addui	sp,sp,#40
017620 BA 15 01 00 		      	bra  	disassem_861
                	disassem_874:
017624 C5 3D E8 FF 		      	lhu  	r3,-12[bp]
017628 E7 E1 01 00 		      	push 	r3
01762C E6 ED A1 FF 		      	push 	-48[bp]
017630 E6 ED B1 FF 		      	push 	-40[bp]
017634 FC 01 00 00 		      	push 	#disassem_807
017638 65 E0 B5 68 
01763C E6 E5 01 00 		      	push 	[r11]
017640 39 59 FE FF 		      	bsr  	DispRI
017644 14 EF 51 00 		      	addui	sp,sp,#40
017648 BA 10 01 00 		      	bra  	disassem_861
                	disassem_875:
01764C C5 3D E8 FF 		      	lhu  	r3,-12[bp]
017650 E7 E1 01 00 		      	push 	r3
017654 E6 ED A1 FF 		      	push 	-48[bp]
017658 E6 ED B1 FF 		      	push 	-40[bp]
01765C FC 01 00 00 		      	push 	#disassem_808
017660 65 E0 9D 68 
017664 E6 E5 01 00 		      	push 	[r11]
017668 39 54 FE FF 		      	bsr  	DispRI
01766C 14 EF 51 00 		      	addui	sp,sp,#40
017670 BA 0B 01 00 		      	bra  	disassem_861
                	disassem_876:
017674 C5 3D E8 FF 		      	lhu  	r3,-12[bp]
017678 E7 E1 01 00 		      	push 	r3
01767C E6 ED A1 FF 		      	push 	-48[bp]
017680 E6 ED B1 FF 		      	push 	-40[bp]
017684 FC 01 00 00 		      	push 	#disassem_809
017688 65 E0 85 68 
01768C E6 E5 01 00 		      	push 	[r11]
017690 39 4F FE FF 		      	bsr  	DispRI
017694 14 EF 51 00 		      	addui	sp,sp,#40
017698 BA 06 01 00 		      	bra  	disassem_861
                	disassem_877:
01769C C5 3D E8 FF 		      	lhu  	r3,-12[bp]
0176A0 FC FF FF 00 		      	andi 	r3,r3,#4294967295
0176A4 8C 31 FE FF 
0176A8 82 31 18 78 		      	asri 	r3,r3,#12
0176AC 8C 31 0E 00 		      	and  	r3,r3,#7
0176B0 86 41 00 00 		      	cmp  	r4,r3,#0
0176B4 3D 02 20 00 		      	beq  	r4,disassem_946
0176B8 86 41 02 00 		      	cmp  	r4,r3,#1
0176BC 3D 02 2C 00 		      	beq  	r4,disassem_947
0176C0 86 41 08 00 		      	cmp  	r4,r3,#4
0176C4 3D 02 38 00 		      	beq  	r4,disassem_948
0176C8 86 41 0A 00 		      	cmp  	r4,r3,#5
0176CC 3D 02 44 00 		      	beq  	r4,disassem_949
0176D0 86 41 04 00 		      	cmp  	r4,r3,#2
0176D4 3D 02 50 00 		      	beq  	r4,disassem_950
0176D8 86 41 06 00 		      	cmp  	r4,r3,#3
0176DC 3D 02 5C 00 		      	beq  	r4,disassem_951
0176E0 86 41 0C 00 		      	cmp  	r4,r3,#6
0176E4 3D 02 68 00 		      	beq  	r4,disassem_952
0176E8 86 41 0E 00 		      	cmp  	r4,r3,#7
0176EC 3D 02 64 00 		      	beq  	r4,disassem_952
0176F0 BA 1C 00 00 		      	bra  	disassem_945
                	disassem_946:
0176F4 C5 3D E8 FF 		      	lhu  	r3,-12[bp]
0176F8 E7 E1 01 00 		      	push 	r3
0176FC FC 01 00 00 		      	push 	#disassem_810
017700 65 E0 6D 68 
017704 E6 E5 01 00 		      	push 	[r11]
017708 39 5B FE FF 		      	bsr  	DispBcc
01770C 14 EF 31 00 		      	addui	sp,sp,#24
017710 BA 18 00 00 		      	bra  	disassem_945
                	disassem_947:
017714 C5 3D E8 FF 		      	lhu  	r3,-12[bp]
017718 E7 E1 01 00 		      	push 	r3
01771C FC 01 00 00 		      	push 	#disassem_811
017720 65 E0 55 68 
017724 E6 E5 01 00 		      	push 	[r11]
017728 39 57 FE FF 		      	bsr  	DispBcc
01772C 14 EF 31 00 		      	addui	sp,sp,#24
017730 BA 14 00 00 		      	bra  	disassem_945
                	disassem_948:
017734 C5 3D E8 FF 		      	lhu  	r3,-12[bp]
017738 E7 E1 01 00 		      	push 	r3
01773C FC 01 00 00 		      	push 	#disassem_812
017740 65 E0 3D 68 
017744 E6 E5 01 00 		      	push 	[r11]
017748 39 53 FE FF 		      	bsr  	DispBcc
01774C 14 EF 31 00 		      	addui	sp,sp,#24
017750 BA 10 00 00 		      	bra  	disassem_945
                	disassem_949:
017754 C5 3D E8 FF 		      	lhu  	r3,-12[bp]
017758 E7 E1 01 00 		      	push 	r3
01775C FC 01 00 00 		      	push 	#disassem_813
017760 65 E0 25 68 
017764 E6 E5 01 00 		      	push 	[r11]
017768 39 4F FE FF 		      	bsr  	DispBcc
01776C 14 EF 31 00 		      	addui	sp,sp,#24
017770 BA 0C 00 00 		      	bra  	disassem_945
                	disassem_950:
017774 C5 3D E8 FF 		      	lhu  	r3,-12[bp]
017778 E7 E1 01 00 		      	push 	r3
01777C FC 01 00 00 		      	push 	#disassem_814
017780 65 E0 0D 68 
017784 E6 E5 01 00 		      	push 	[r11]
017788 39 4B FE FF 		      	bsr  	DispBcc
01778C 14 EF 31 00 		      	addui	sp,sp,#24
017790 BA 08 00 00 		      	bra  	disassem_945
                	disassem_951:
017794 C5 3D E8 FF 		      	lhu  	r3,-12[bp]
017798 E7 E1 01 00 		      	push 	r3
01779C FC 01 00 00 		      	push 	#disassem_815
0177A0 65 E0 F5 67 
0177A4 E6 E5 01 00 		      	push 	[r11]
0177A8 39 47 FE FF 		      	bsr  	DispBcc
0177AC 14 EF 31 00 		      	addui	sp,sp,#24
0177B0 BA 04 00 00 		      	bra  	disassem_945
                	disassem_952:
0177B4 C5 3D E8 FF 		      	lhu  	r3,-12[bp]
0177B8 E7 E1 01 00 		      	push 	r3
0177BC FC 01 00 00 		      	push 	#disassem_816
0177C0 65 E0 DD 67 
0177C4 E6 E5 01 00 		      	push 	[r11]
0177C8 39 43 FE FF 		      	bsr  	DispBcc
0177CC 14 EF 31 00 		      	addui	sp,sp,#24
0177D0 BA 00 00 00 		      	bra  	disassem_945
                	disassem_945:
0177D4 3A DF 00 00 		      	bra  	disassem_861
                	disassem_878:
0177D8 E6 ED A1 FF 		      	push 	-48[bp]
0177DC E6 ED B1 FF 		      	push 	-40[bp]
0177E0 C5 3D E8 FF 		      	lhu  	r3,-12[bp]
0177E4 E7 E1 01 00 		      	push 	r3
0177E8 E6 E5 01 00 		      	push 	[r11]
0177EC 39 7C FE FF 		      	bsr  	DispJALI
0177F0 14 EF 41 00 		      	addui	sp,sp,#32
0177F4 3A DB 00 00 		      	bra  	disassem_861
                	disassem_879:
0177F8 C5 3D E8 FF 		      	lhu  	r3,-12[bp]
0177FC E7 E1 01 00 		      	push 	r3
017800 B9 C5 FD FF 		      	bsr  	DispBrk
017804 14 EF 11 00 		      	addui	sp,sp,#8
017808 BA D8 00 00 		      	bra  	disassem_861
                	disassem_880:
01780C C5 3D E8 FF 		      	lhu  	r3,-12[bp]
017810 E7 E1 01 00 		      	push 	r3
017814 E6 E5 01 00 		      	push 	[r11]
017818 B9 E9 FC FF 		      	bsr  	DumpInsnBytes
01781C 14 EF 21 00 		      	addui	sp,sp,#16
017820 C5 3D E8 FF 		      	lhu  	r3,-12[bp]
017824 FC FF FF 00 		      	andi 	r3,r3,#4294967295
017828 8C 31 FE FF 
01782C 82 31 0E 78 		      	asri 	r3,r3,#7
017830 E3 3D 80 FF 		      	sw   	r3,-64[bp]
017834 C5 3D E8 FF 		      	lhu  	r3,-12[bp]
017838 7C 00 80 00 		      	and  	r3,r3,#2147483648
01783C 8C 31 00 00 
017840 BD 01 0A 00 		      	beq  	r3,disassem_953
017844 C6 3D 80 FF 		      	lw   	r3,-64[bp]
017848 7C 00 FF FF 		      	ori  	r3,r3,#-16777216
01784C 8D 31 00 00 
017850 E3 3D 80 FF 		      	sw   	r3,-64[bp]
                	disassem_953:
017854 C6 35 00 00 		      	lw   	r3,[r11]
017858 C6 4D 80 FF 		      	lw   	r4,-64[bp]
01785C 02 42 04 70 		      	asli 	r4,r4,#2
017860 82 31 08 28 		      	addu 	r3,r3,r4
017864 E3 3D 90 FF 		      	sw   	r3,-56[bp]
017868 E6 ED 91 FF 		      	push 	-56[bp]
01786C FC 01 00 00 		      	push 	#disassem_817
017870 65 E0 AD 67 
017874 39 BD FB FF 		      	bsr  	printf
017878 14 EF 21 00 		      	addui	sp,sp,#16
01787C 3A CA 00 00 		      	bra  	disassem_861
                	disassem_881:
017880 C5 3D E8 FF 		      	lhu  	r3,-12[bp]
017884 E7 E1 01 00 		      	push 	r3
017888 E6 E5 01 00 		      	push 	[r11]
01788C 39 DB FC FF 		      	bsr  	DumpInsnBytes
017890 14 EF 21 00 		      	addui	sp,sp,#16
017894 C5 3D E8 FF 		      	lhu  	r3,-12[bp]
017898 FC FF FF 00 		      	andi 	r3,r3,#4294967295
01789C 8C 31 FE FF 
0178A0 82 31 0E 78 		      	asri 	r3,r3,#7
0178A4 E3 3D 80 FF 		      	sw   	r3,-64[bp]
0178A8 C5 3D E8 FF 		      	lhu  	r3,-12[bp]
0178AC 7C 00 80 00 		      	and  	r3,r3,#2147483648
0178B0 8C 31 00 00 
0178B4 BD 01 0A 00 		      	beq  	r3,disassem_955
0178B8 C6 3D 80 FF 		      	lw   	r3,-64[bp]
0178BC 7C 00 FF FF 		      	ori  	r3,r3,#-16777216
0178C0 8D 31 00 00 
0178C4 E3 3D 80 FF 		      	sw   	r3,-64[bp]
                	disassem_955:
0178C8 C6 35 00 00 		      	lw   	r3,[r11]
0178CC C6 4D 80 FF 		      	lw   	r4,-64[bp]
0178D0 02 42 04 70 		      	asli 	r4,r4,#2
0178D4 82 31 08 28 		      	addu 	r3,r3,r4
0178D8 E3 3D 90 FF 		      	sw   	r3,-56[bp]
0178DC E6 ED 91 FF 		      	push 	-56[bp]
0178E0 FC 01 00 00 		      	push 	#disassem_818
0178E4 65 E0 7D 67 
0178E8 B9 AE FB FF 		      	bsr  	printf
0178EC 14 EF 21 00 		      	addui	sp,sp,#16
0178F0 BA BB 00 00 		      	bra  	disassem_861
                	disassem_882:
0178F4 C5 3D E8 FF 		      	lhu  	r3,-12[bp]
0178F8 E7 E1 01 00 		      	push 	r3
0178FC E6 E5 01 00 		      	push 	[r11]
017900 B9 CC FC FF 		      	bsr  	DumpInsnBytes
017904 14 EF 21 00 		      	addui	sp,sp,#16
017908 C5 3D E8 FF 		      	lhu  	r3,-12[bp]
01790C FC FF FF 00 		      	andi 	r3,r3,#4294967295
017910 8C 31 FE FF 
017914 82 31 22 78 		      	asri 	r3,r3,#17
017918 E3 3D 90 FF 		      	sw   	r3,-56[bp]
01791C E6 ED 91 FF 		      	push 	-56[bp]
017920 FC 01 00 00 		      	push 	#disassem_819
017924 65 E0 4D 67 
017928 B9 A6 FB FF 		      	bsr  	printf
01792C 14 EF 21 00 		      	addui	sp,sp,#16
017930 BA B3 00 00 		      	bra  	disassem_861
                	disassem_883:
017934 C5 3D E8 FF 		      	lhu  	r3,-12[bp]
017938 E7 E1 01 00 		      	push 	r3
01793C E6 E5 01 00 		      	push 	[r11]
017940 B9 C4 FC FF 		      	bsr  	DumpInsnBytes
017944 14 EF 21 00 		      	addui	sp,sp,#16
017948 C5 3D E8 FF 		      	lhu  	r3,-12[bp]
01794C FC FF FF 00 		      	andi 	r3,r3,#4294967295
017950 8C 31 FE FF 
017954 82 31 22 78 		      	asri 	r3,r3,#17
017958 E3 3D 90 FF 		      	sw   	r3,-56[bp]
01795C E6 ED 91 FF 		      	push 	-56[bp]
017960 FC 01 00 00 		      	push 	#disassem_820
017964 65 E0 1D 67 
017968 B9 9E FB FF 		      	bsr  	printf
01796C 14 EF 21 00 		      	addui	sp,sp,#16
017970 BA AB 00 00 		      	bra  	disassem_861
                	disassem_884:
017974 C5 3D E8 FF 		      	lhu  	r3,-12[bp]
017978 E7 E1 01 00 		      	push 	r3
01797C E6 ED A1 FF 		      	push 	-48[bp]
017980 E6 ED B1 FF 		      	push 	-40[bp]
017984 FC 01 00 00 		      	push 	#disassem_821
017988 65 E0 05 67 
01798C E6 E5 01 00 		      	push 	[r11]
017990 B9 DF FD FF 		      	bsr  	DispLS
017994 14 EF 51 00 		      	addui	sp,sp,#40
017998 BA A6 00 00 		      	bra  	disassem_861
                	disassem_885:
01799C C5 3D E8 FF 		      	lhu  	r3,-12[bp]
0179A0 E7 E1 01 00 		      	push 	r3
0179A4 E6 ED A1 FF 		      	push 	-48[bp]
0179A8 E6 ED B1 FF 		      	push 	-40[bp]
0179AC FC 01 00 00 		      	push 	#disassem_822
0179B0 65 E0 ED 66 
0179B4 E6 E5 01 00 		      	push 	[r11]
0179B8 B9 DA FD FF 		      	bsr  	DispLS
0179BC 14 EF 51 00 		      	addui	sp,sp,#40
0179C0 BA A1 00 00 		      	bra  	disassem_861
                	disassem_886:
0179C4 C5 3D E8 FF 		      	lhu  	r3,-12[bp]
0179C8 E7 E1 01 00 		      	push 	r3
0179CC E6 ED A1 FF 		      	push 	-48[bp]
0179D0 E6 ED B1 FF 		      	push 	-40[bp]
0179D4 FC 01 00 00 		      	push 	#disassem_823
0179D8 65 E0 D5 66 
0179DC E6 E5 01 00 		      	push 	[r11]
0179E0 B9 D5 FD FF 		      	bsr  	DispLS
0179E4 14 EF 51 00 		      	addui	sp,sp,#40
0179E8 BA 9C 00 00 		      	bra  	disassem_861
                	disassem_887:
0179EC C5 3D E8 FF 		      	lhu  	r3,-12[bp]
0179F0 E7 E1 01 00 		      	push 	r3
0179F4 E6 ED A1 FF 		      	push 	-48[bp]
0179F8 E6 ED B1 FF 		      	push 	-40[bp]
0179FC FC 01 00 00 		      	push 	#disassem_824
017A00 65 E0 BD 66 
017A04 E6 E5 01 00 		      	push 	[r11]
017A08 B9 D0 FD FF 		      	bsr  	DispLS
017A0C 14 EF 51 00 		      	addui	sp,sp,#40
017A10 BA 97 00 00 		      	bra  	disassem_861
                	disassem_888:
017A14 C5 3D E8 FF 		      	lhu  	r3,-12[bp]
017A18 E7 E1 01 00 		      	push 	r3
017A1C E6 ED A1 FF 		      	push 	-48[bp]
017A20 E6 ED B1 FF 		      	push 	-40[bp]
017A24 FC 01 00 00 		      	push 	#disassem_825
017A28 65 E0 A5 66 
017A2C E6 E5 01 00 		      	push 	[r11]
017A30 B9 CB FD FF 		      	bsr  	DispLS
017A34 14 EF 51 00 		      	addui	sp,sp,#40
017A38 BA 92 00 00 		      	bra  	disassem_861
                	disassem_889:
017A3C C5 3D E8 FF 		      	lhu  	r3,-12[bp]
017A40 E7 E1 01 00 		      	push 	r3
017A44 E6 ED A1 FF 		      	push 	-48[bp]
017A48 E6 ED B1 FF 		      	push 	-40[bp]
017A4C FC 01 00 00 		      	push 	#disassem_826
017A50 65 E0 8D 66 
017A54 E6 E5 01 00 		      	push 	[r11]
017A58 B9 C6 FD FF 		      	bsr  	DispLS
017A5C 14 EF 51 00 		      	addui	sp,sp,#40
017A60 BA 8D 00 00 		      	bra  	disassem_861
                	disassem_890:
017A64 C5 3D E8 FF 		      	lhu  	r3,-12[bp]
017A68 E7 E1 01 00 		      	push 	r3
017A6C E6 ED A1 FF 		      	push 	-48[bp]
017A70 E6 ED B1 FF 		      	push 	-40[bp]
017A74 FC 01 00 00 		      	push 	#disassem_827
017A78 65 E0 75 66 
017A7C E6 E5 01 00 		      	push 	[r11]
017A80 B9 C1 FD FF 		      	bsr  	DispLS
017A84 14 EF 51 00 		      	addui	sp,sp,#40
017A88 BA 88 00 00 		      	bra  	disassem_861
                	disassem_891:
017A8C C5 3D E8 FF 		      	lhu  	r3,-12[bp]
017A90 E7 E1 01 00 		      	push 	r3
017A94 E6 ED A1 FF 		      	push 	-48[bp]
017A98 E6 ED B1 FF 		      	push 	-40[bp]
017A9C FC 01 00 00 		      	push 	#disassem_828
017AA0 65 E0 5D 66 
017AA4 E6 E5 01 00 		      	push 	[r11]
017AA8 B9 BC FD FF 		      	bsr  	DispLS
017AAC 14 EF 51 00 		      	addui	sp,sp,#40
017AB0 BA 83 00 00 		      	bra  	disassem_861
                	disassem_892:
017AB4 C5 3D E8 FF 		      	lhu  	r3,-12[bp]
017AB8 E7 E1 01 00 		      	push 	r3
017ABC FC 01 00 00 		      	push 	#disassem_829
017AC0 65 E0 45 66 
017AC4 E6 E5 01 00 		      	push 	[r11]
017AC8 39 89 FD FF 		      	bsr  	DispIndexedAddr
017ACC 14 EF 31 00 		      	addui	sp,sp,#24
017AD0 BA 7F 00 00 		      	bra  	disassem_861
                	disassem_893:
017AD4 C5 3D E8 FF 		      	lhu  	r3,-12[bp]
017AD8 E7 E1 01 00 		      	push 	r3
017ADC FC 01 00 00 		      	push 	#disassem_830
017AE0 65 E0 2D 66 
017AE4 E6 E5 01 00 		      	push 	[r11]
017AE8 39 85 FD FF 		      	bsr  	DispIndexedAddr
017AEC 14 EF 31 00 		      	addui	sp,sp,#24
017AF0 BA 7B 00 00 		      	bra  	disassem_861
                	disassem_894:
017AF4 C5 3D E8 FF 		      	lhu  	r3,-12[bp]
017AF8 E7 E1 01 00 		      	push 	r3
017AFC FC 01 00 00 		      	push 	#disassem_831
017B00 65 E0 15 66 
017B04 E6 E5 01 00 		      	push 	[r11]
017B08 39 81 FD FF 		      	bsr  	DispIndexedAddr
017B0C 14 EF 31 00 		      	addui	sp,sp,#24
017B10 BA 77 00 00 		      	bra  	disassem_861
                	disassem_895:
017B14 C5 3D E8 FF 		      	lhu  	r3,-12[bp]
017B18 E7 E1 01 00 		      	push 	r3
017B1C FC 01 00 00 		      	push 	#disassem_832
017B20 65 E0 FD 65 
017B24 E6 E5 01 00 		      	push 	[r11]
017B28 39 7D FD FF 		      	bsr  	DispIndexedAddr
017B2C 14 EF 31 00 		      	addui	sp,sp,#24
017B30 BA 73 00 00 		      	bra  	disassem_861
                	disassem_896:
017B34 C5 3D E8 FF 		      	lhu  	r3,-12[bp]
017B38 E7 E1 01 00 		      	push 	r3
017B3C FC 01 00 00 		      	push 	#disassem_833
017B40 65 E0 E5 65 
017B44 E6 E5 01 00 		      	push 	[r11]
017B48 39 79 FD FF 		      	bsr  	DispIndexedAddr
017B4C 14 EF 31 00 		      	addui	sp,sp,#24
017B50 BA 6F 00 00 		      	bra  	disassem_861
                	disassem_897:
017B54 C5 3D E8 FF 		      	lhu  	r3,-12[bp]
017B58 E7 E1 01 00 		      	push 	r3
017B5C FC 01 00 00 		      	push 	#disassem_834
017B60 65 E0 CD 65 
017B64 E6 E5 01 00 		      	push 	[r11]
017B68 39 75 FD FF 		      	bsr  	DispIndexedAddr
017B6C 14 EF 31 00 		      	addui	sp,sp,#24
017B70 BA 6B 00 00 		      	bra  	disassem_861
                	disassem_898:
017B74 C5 3D E8 FF 		      	lhu  	r3,-12[bp]
017B78 E7 E1 01 00 		      	push 	r3
017B7C FC 01 00 00 		      	push 	#disassem_835
017B80 65 E0 B5 65 
017B84 E6 E5 01 00 		      	push 	[r11]
017B88 39 71 FD FF 		      	bsr  	DispIndexedAddr
017B8C 14 EF 31 00 		      	addui	sp,sp,#24
017B90 BA 67 00 00 		      	bra  	disassem_861
                	disassem_899:
017B94 C5 3D E8 FF 		      	lhu  	r3,-12[bp]
017B98 E7 E1 01 00 		      	push 	r3
017B9C FC 01 00 00 		      	push 	#disassem_836
017BA0 65 E0 9D 65 
017BA4 E6 E5 01 00 		      	push 	[r11]
017BA8 39 6D FD FF 		      	bsr  	DispIndexedAddr
017BAC 14 EF 31 00 		      	addui	sp,sp,#24
017BB0 BA 63 00 00 		      	bra  	disassem_861
                	disassem_900:
017BB4 C5 3D E8 FF 		      	lhu  	r3,-12[bp]
017BB8 E7 E1 01 00 		      	push 	r3
017BBC E6 E5 01 00 		      	push 	[r11]
017BC0 B9 74 FC FF 		      	bsr  	DumpInsnBytes
017BC4 14 EF 21 00 		      	addui	sp,sp,#16
017BC8 C5 3D E8 FF 		      	lhu  	r3,-12[bp]
017BCC E7 E1 01 00 		      	push 	r3
017BD0 E6 ED A1 FF 		      	push 	-48[bp]
017BD4 E6 ED B1 FF 		      	push 	-40[bp]
017BD8 B9 13 FD FF 		      	bsr  	DispInc
017BDC 14 EF 31 00 		      	addui	sp,sp,#24
017BE0 BA 5D 00 00 		      	bra  	disassem_861
                	disassem_901:
017BE4 C5 3D E8 FF 		      	lhu  	r3,-12[bp]
017BE8 E7 E1 01 00 		      	push 	r3
017BEC E6 ED A1 FF 		      	push 	-48[bp]
017BF0 E6 ED B1 FF 		      	push 	-40[bp]
017BF4 FC 01 00 00 		      	push 	#disassem_837
017BF8 65 E0 85 65 
017BFC E6 E5 01 00 		      	push 	[r11]
017C00 B9 91 FD FF 		      	bsr  	DispLS
017C04 14 EF 51 00 		      	addui	sp,sp,#40
017C08 BA 58 00 00 		      	bra  	disassem_861
                	disassem_902:
017C0C C5 3D E8 FF 		      	lhu  	r3,-12[bp]
017C10 E7 E1 01 00 		      	push 	r3
017C14 E6 ED A1 FF 		      	push 	-48[bp]
017C18 E6 ED B1 FF 		      	push 	-40[bp]
017C1C FC 01 00 00 		      	push 	#disassem_838
017C20 65 E0 6D 65 
017C24 E6 E5 01 00 		      	push 	[r11]
017C28 B9 8C FD FF 		      	bsr  	DispLS
017C2C 14 EF 51 00 		      	addui	sp,sp,#40
017C30 BA 53 00 00 		      	bra  	disassem_861
                	disassem_903:
017C34 C5 3D E8 FF 		      	lhu  	r3,-12[bp]
017C38 E7 E1 01 00 		      	push 	r3
017C3C E6 ED A1 FF 		      	push 	-48[bp]
017C40 E6 ED B1 FF 		      	push 	-40[bp]
017C44 FC 01 00 00 		      	push 	#disassem_839
017C48 65 E0 55 65 
017C4C E6 E5 01 00 		      	push 	[r11]
017C50 B9 87 FD FF 		      	bsr  	DispLS
017C54 14 EF 51 00 		      	addui	sp,sp,#40
017C58 BA 4E 00 00 		      	bra  	disassem_861
                	disassem_904:
017C5C C5 3D E8 FF 		      	lhu  	r3,-12[bp]
017C60 E7 E1 01 00 		      	push 	r3
017C64 E6 ED A1 FF 		      	push 	-48[bp]
017C68 E6 ED B1 FF 		      	push 	-40[bp]
017C6C FC 01 00 00 		      	push 	#disassem_840
017C70 65 E0 3D 65 
017C74 E6 E5 01 00 		      	push 	[r11]
017C78 B9 82 FD FF 		      	bsr  	DispLS
017C7C 14 EF 51 00 		      	addui	sp,sp,#40
017C80 BA 49 00 00 		      	bra  	disassem_861
                	disassem_905:
017C84 C5 3D E8 FF 		      	lhu  	r3,-12[bp]
017C88 E7 E1 01 00 		      	push 	r3
017C8C FC 01 00 00 		      	push 	#disassem_841
017C90 65 E0 25 65 
017C94 E6 E5 01 00 		      	push 	[r11]
017C98 39 4F FD FF 		      	bsr  	DispIndexedAddr
017C9C 14 EF 31 00 		      	addui	sp,sp,#24
017CA0 BA 45 00 00 		      	bra  	disassem_861
                	disassem_906:
017CA4 C5 3D E8 FF 		      	lhu  	r3,-12[bp]
017CA8 E7 E1 01 00 		      	push 	r3
017CAC FC 01 00 00 		      	push 	#disassem_842
017CB0 65 E0 0D 65 
017CB4 E6 E5 01 00 		      	push 	[r11]
017CB8 39 4B FD FF 		      	bsr  	DispIndexedAddr
017CBC 14 EF 31 00 		      	addui	sp,sp,#24
017CC0 BA 41 00 00 		      	bra  	disassem_861
                	disassem_907:
017CC4 C5 3D E8 FF 		      	lhu  	r3,-12[bp]
017CC8 E7 E1 01 00 		      	push 	r3
017CCC FC 01 00 00 		      	push 	#disassem_843
017CD0 65 E0 F5 64 
017CD4 E6 E5 01 00 		      	push 	[r11]
017CD8 39 47 FD FF 		      	bsr  	DispIndexedAddr
017CDC 14 EF 31 00 		      	addui	sp,sp,#24
017CE0 BA 3D 00 00 		      	bra  	disassem_861
                	disassem_908:
017CE4 C5 3D E8 FF 		      	lhu  	r3,-12[bp]
017CE8 E7 E1 01 00 		      	push 	r3
017CEC FC 01 00 00 		      	push 	#disassem_844
017CF0 65 E0 DD 64 
017CF4 E6 E5 01 00 		      	push 	[r11]
017CF8 39 43 FD FF 		      	bsr  	DispIndexedAddr
017CFC 14 EF 31 00 		      	addui	sp,sp,#24
017D00 BA 39 00 00 		      	bra  	disassem_861
                	disassem_909:
017D04 C5 3D E8 FF 		      	lhu  	r3,-12[bp]
017D08 E7 E1 01 00 		      	push 	r3
017D0C E6 ED A1 FF 		      	push 	-48[bp]
017D10 E6 ED B1 FF 		      	push 	-40[bp]
017D14 FC 01 00 00 		      	push 	#disassem_845
017D18 65 E0 C5 64 
017D1C E6 E5 01 00 		      	push 	[r11]
017D20 B9 6D FD FF 		      	bsr  	DispLS
017D24 14 EF 51 00 		      	addui	sp,sp,#40
017D28 BA 34 00 00 		      	bra  	disassem_861
                	disassem_910:
017D2C C5 3D E8 FF 		      	lhu  	r3,-12[bp]
017D30 E7 E1 01 00 		      	push 	r3
017D34 E6 ED A1 FF 		      	push 	-48[bp]
017D38 E6 ED B1 FF 		      	push 	-40[bp]
017D3C FC 01 00 00 		      	push 	#disassem_846
017D40 65 E0 AD 64 
017D44 E6 E5 01 00 		      	push 	[r11]
017D48 B9 68 FD FF 		      	bsr  	DispLS
017D4C 14 EF 51 00 		      	addui	sp,sp,#40
017D50 BA 2F 00 00 		      	bra  	disassem_861
                	disassem_911:
017D54 C5 3D E8 FF 		      	lhu  	r3,-12[bp]
017D58 E7 E1 01 00 		      	push 	r3
017D5C E6 E5 01 00 		      	push 	[r11]
017D60 B9 40 FC FF 		      	bsr  	DumpInsnBytes
017D64 14 EF 21 00 		      	addui	sp,sp,#16
017D68 FC 01 00 00 		      	push 	#disassem_847
017D6C 65 E0 91 64 
017D70 B9 1D FB FF 		      	bsr  	printf
017D74 14 EF 11 00 		      	addui	sp,sp,#8
017D78 C5 3D E8 FF 		      	lhu  	r3,-12[bp]
017D7C E7 E1 01 00 		      	push 	r3
017D80 B9 6E FC FF 		      	bsr  	DispRa
017D84 14 EF 11 00 		      	addui	sp,sp,#8
017D88 FC 01 00 00 		      	push 	#disassem_848
017D8C 65 E0 85 64 
017D90 B9 19 FB FF 		      	bsr  	printf
017D94 14 EF 11 00 		      	addui	sp,sp,#8
017D98 BA 26 00 00 		      	bra  	disassem_861
                	disassem_912:
017D9C C5 3D E8 FF 		      	lhu  	r3,-12[bp]
017DA0 E7 E1 01 00 		      	push 	r3
017DA4 E6 E5 01 00 		      	push 	[r11]
017DA8 B9 37 FC FF 		      	bsr  	DumpInsnBytes
017DAC 14 EF 21 00 		      	addui	sp,sp,#16
017DB0 FC 01 00 00 		      	push 	#disassem_849
017DB4 65 E0 69 64 
017DB8 B9 14 FB FF 		      	bsr  	printf
017DBC 14 EF 11 00 		      	addui	sp,sp,#8
017DC0 C5 3D E8 FF 		      	lhu  	r3,-12[bp]
017DC4 E7 E1 01 00 		      	push 	r3
017DC8 B9 44 FC FF 		      	bsr  	DispRst
017DCC 14 EF 11 00 		      	addui	sp,sp,#8
017DD0 FC 01 00 00 		      	push 	#disassem_850
017DD4 65 E0 5D 64 
017DD8 B9 10 FB FF 		      	bsr  	printf
017DDC 14 EF 11 00 		      	addui	sp,sp,#8
017DE0 BA 1D 00 00 		      	bra  	disassem_861
                	disassem_913:
017DE4 C5 3D E8 FF 		      	lhu  	r3,-12[bp]
017DE8 E7 E1 01 00 		      	push 	r3
017DEC E6 E5 01 00 		      	push 	[r11]
017DF0 B9 2E FC FF 		      	bsr  	DumpInsnBytes
017DF4 14 EF 21 00 		      	addui	sp,sp,#16
017DF8 FC 01 00 00 		      	push 	#disassem_851
017DFC 65 E0 45 64 
017E00 B9 0B FB FF 		      	bsr  	printf
017E04 14 EF 11 00 		      	addui	sp,sp,#8
017E08 BA 18 00 00 		      	bra  	disassem_861
                	disassem_914:
017E0C C5 3D E8 FF 		      	lhu  	r3,-12[bp]
017E10 E7 E1 01 00 		      	push 	r3
017E14 E6 E5 01 00 		      	push 	[r11]
017E18 B9 29 FC FF 		      	bsr  	DumpInsnBytes
017E1C 14 EF 21 00 		      	addui	sp,sp,#16
017E20 FC 01 00 00 		      	push 	#disassem_852
017E24 65 E0 29 64 
017E28 B9 06 FB FF 		      	bsr  	printf
017E2C 14 EF 11 00 		      	addui	sp,sp,#8
017E30 C5 3D E8 FF 		      	lhu  	r3,-12[bp]
017E34 E7 E1 01 00 		      	push 	r3
017E38 B9 41 FC FF 		      	bsr  	DispRstc
017E3C 14 EF 11 00 		      	addui	sp,sp,#8
017E40 C6 3D B0 FF 		      	lw   	r3,-40[bp]
017E44 BD 01 1C 00 		      	beq  	r3,disassem_957
017E48 C6 3D A0 FF 		      	lw   	r3,-48[bp]
017E4C 82 31 1E 70 		      	asli 	r3,r3,#15
017E50 C5 4D E8 FF 		      	lhu  	r4,-12[bp]
017E54 FC FF FF 00 		      	andi 	r4,r4,#4294967295
017E58 0C 42 FE FF 
017E5C 02 42 22 78 		      	asri 	r4,r4,#17
017E60 82 31 08 1A 		      	or   	r3,r3,r4
017E64 E7 E1 01 00 		      	push 	r3
017E68 FC 01 00 00 		      	push 	#disassem_853
017E6C 65 E0 0D 64 
017E70 B9 FD FA FF 		      	bsr  	printf
017E74 14 EF 21 00 		      	addui	sp,sp,#16
017E78 3A 05 00 00 		      	bra  	disassem_958
                	disassem_957:
017E7C C4 3D 68 FF 		      	lh   	r3,-76[bp]
017E80 82 31 00 24 		      	sxh  	r3,r3
017E84 82 31 00 24 		      	sxh  	r3,r3
017E88 82 31 22 78 		      	asri 	r3,r3,#17
017E8C E7 E1 01 00 		      	push 	r3
017E90 FC 01 00 00 		      	push 	#disassem_854
017E94 65 E0 F1 63 
017E98 B9 F8 FA FF 		      	bsr  	printf
017E9C 14 EF 21 00 		      	addui	sp,sp,#16
                	disassem_958:
017EA0 BA 05 00 00 		      	bra  	disassem_861
                	disassem_915:
017EA4 C5 3D E8 FF 		      	lhu  	r3,-12[bp]
017EA8 E7 E1 01 00 		      	push 	r3
017EAC E6 E5 01 00 		      	push 	[r11]
017EB0 B9 16 FC FF 		      	bsr  	DumpInsnBytes
017EB4 14 EF 21 00 		      	addui	sp,sp,#16
017EB8 FC 01 00 00 		      	push 	#disassem_855
017EBC 65 E0 D1 63 
017EC0 B9 F3 FA FF 		      	bsr  	printf
017EC4 14 EF 11 00 		      	addui	sp,sp,#8
017EC8 BA 00 00 00 		      	bra  	disassem_861
                	disassem_861:
017ECC C6 35 00 00 		      	lw   	r3,[r11]
017ED0 94 31 08 00 		      	addu 	r3,r3,#4
017ED4 E3 35 00 00 		      	sw   	r3,[r11]
017ED8 C6 3D 40 FF 		      	lw   	r3,-96[bp]
017EDC BD 01 06 00 		      	beq  	r3,disassem_959
017EE0 B9 FE FB FF 		      	bsr  	reverse_video
017EE4 E3 0D 40 FF 		      	sw   	r0,-96[bp]
                	disassem_959:
017EE8 C6 3D D0 FF 		      	lw   	r3,-24[bp]
017EEC 86 31 F8 00 		      	cmp  	r3,r3,#124
017EF0 BD 01 56 F7 		      	beq  	r3,disassem_857
                	disassem_858:
                	disassem_961:
017EF4 57 CF 10 00 		      	pop  	r12
017EF8 57 BF 10 00 		      	pop  	r11
017EFC 82 ED 01 1A 		      	mov  	sp,bp
017F00 57 BF 11 00 		      	pop  	bp
017F04 57 CF 11 00 		      	pop  	xlr
017F08 57 FF 11 00 		      	pop  	lr
017F0C 37 FF 01 00 		      	rtl  	#0
                	disassem_856:
017F10 C6 FD 11 00 		      	lw   	lr,8[bp]
017F14 E3 FD 21 00 		      	sw   	lr,16[bp]
017F18 BA FB FF FF 		      	bra  	disassem_961
                	endpublic
                	
                	public code disassem20:
017F1C E7 EF 01 00 		      	push 	lr
017F20 67 EE 01 00 		      	push 	xlr
017F24 E7 ED 01 00 		      	push 	bp
017F28 7C 01 00 00 		      	ldi  	xlr,#disassem_963
017F2C 0A C0 09 FF 
017F30 02 BF 01 1A 		      	mov  	bp,sp
017F34 15 EF 21 00 		      	subui	sp,sp,#16
017F38 FC 01 00 00 		      	push 	#disassem_962
017F3C 65 E0 A1 63 
017F40 B9 E3 FA FF 		      	bsr  	printf
017F44 14 EF 11 00 		      	addui	sp,sp,#8
017F48 E3 0D F0 FF 		      	sw   	r0,-8[bp]
                	disassem_964:
017F4C C6 3D F0 FF 		      	lw   	r3,-8[bp]
017F50 86 31 20 00 		      	cmp  	r3,r3,#16
017F54 BD 31 0E 00 		      	bge  	r3,disassem_965
017F58 E6 ED 41 00 		      	push 	32[bp]
017F5C E5 ED 31 00 		      	pea  	24[bp]
017F60 B9 BF FD FF 		      	bsr  	disassem
017F64 14 EF 21 00 		      	addui	sp,sp,#16
                	disassem_966:
017F68 E4 1D F0 FF 		      	inc  	-8[bp],#1
017F6C 3A FC FF FF 		      	bra  	disassem_964
                	disassem_965:
                	disassem_967:
017F70 82 ED 01 1A 		      	mov  	sp,bp
017F74 57 BF 11 00 		      	pop  	bp
017F78 57 CF 11 00 		      	pop  	xlr
017F7C 57 FF 11 00 		      	pop  	lr
017F80 37 FF 01 00 		      	rtl  	#0
                	disassem_963:
017F84 C6 FD 11 00 		      	lw   	lr,8[bp]
017F88 E3 FD 21 00 		      	sw   	lr,16[bp]
017F8C BA FC FF FF 		      	bra  	disassem_967
                	endpublic
                	
                		code
                		align	16                	
                	dbg_DisplayHelp:
017F90 E7 EF 01 00 		      	push 	lr
017F94 67 EE 01 00 		      	push 	xlr
017F98 E7 ED 01 00 		      	push 	bp
017F9C FC 01 00 00 		      	ldi  	xlr,#debugger_252
017FA0 0A C0 59 01 
017FA4 02 BF 01 1A 		      	mov  	bp,sp
017FA8 FC 01 00 00 		      	push 	#debugger_237
017FAC 65 E0 81 83 
017FB0 B9 D5 FA FF 		      	bsr  	printf
017FB4 14 EF 11 00 		      	addui	sp,sp,#8
017FB8 FC 01 00 00 		      	push 	#debugger_238
017FBC 65 E0 59 83 
017FC0 B9 D3 FA FF 		      	bsr  	printf
017FC4 14 EF 11 00 		      	addui	sp,sp,#8
017FC8 FC 01 00 00 		      	push 	#debugger_239
017FCC 65 E0 7D 82 
017FD0 B9 D1 FA FF 		      	bsr  	printf
017FD4 14 EF 11 00 		      	addui	sp,sp,#8
017FD8 FC 01 00 00 		      	push 	#debugger_240
017FDC 65 E0 2D 82 
017FE0 B9 CF FA FF 		      	bsr  	printf
017FE4 14 EF 11 00 		      	addui	sp,sp,#8
017FE8 FC 01 00 00 		      	push 	#debugger_241
017FEC 65 E0 69 81 
017FF0 B9 CD FA FF 		      	bsr  	printf
017FF4 14 EF 11 00 		      	addui	sp,sp,#8
017FF8 FC 01 00 00 		      	push 	#debugger_242
017FFC 65 E0 89 80 
018000 B9 CB FA FF 		      	bsr  	printf
018004 14 EF 11 00 		      	addui	sp,sp,#8
018008 FC 01 00 00 		      	push 	#debugger_243
01800C 65 E0 A9 7F 
018010 B9 C9 FA FF 		      	bsr  	printf
018014 14 EF 11 00 		      	addui	sp,sp,#8
018018 FC 01 00 00 		      	push 	#debugger_244
01801C 65 E0 D5 7E 
018020 B9 C7 FA FF 		      	bsr  	printf
018024 14 EF 11 00 		      	addui	sp,sp,#8
018028 FC 01 00 00 		      	push 	#debugger_245
01802C 65 E0 FD 7D 
018030 B9 C5 FA FF 		      	bsr  	printf
018034 14 EF 11 00 		      	addui	sp,sp,#8
018038 FC 01 00 00 		      	push 	#debugger_246
01803C 65 E0 59 7D 
018040 B9 C3 FA FF 		      	bsr  	printf
018044 14 EF 11 00 		      	addui	sp,sp,#8
018048 FC 01 00 00 		      	push 	#debugger_247
01804C 65 E0 79 7C 
018050 B9 C1 FA FF 		      	bsr  	printf
018054 14 EF 11 00 		      	addui	sp,sp,#8
018058 FC 01 00 00 		      	push 	#debugger_248
01805C 65 E0 9D 7B 
018060 B9 BF FA FF 		      	bsr  	printf
018064 14 EF 11 00 		      	addui	sp,sp,#8
018068 FC 01 00 00 		      	push 	#debugger_249
01806C 65 E0 ED 7A 
018070 B9 BD FA FF 		      	bsr  	printf
018074 14 EF 11 00 		      	addui	sp,sp,#8
018078 FC 01 00 00 		      	push 	#debugger_250
01807C 65 E0 9D 7A 
018080 B9 BB FA FF 		      	bsr  	printf
018084 14 EF 11 00 		      	addui	sp,sp,#8
018088 FC 01 00 00 		      	push 	#debugger_251
01808C 65 E0 81 7A 
018090 B9 B9 FA FF 		      	bsr  	printf
018094 14 EF 11 00 		      	addui	sp,sp,#8
                	debugger_253:
018098 82 ED 01 1A 		      	mov  	sp,bp
01809C 57 BF 11 00 		      	pop  	bp
0180A0 57 CF 11 00 		      	pop  	xlr
0180A4 57 FF 11 00 		      	pop  	lr
0180A8 37 FF 01 00 		      	rtl  	#0
                	debugger_252:
0180AC C6 FD 11 00 		      	lw   	lr,8[bp]
0180B0 E3 FD 21 00 		      	sw   	lr,16[bp]
0180B4 BA FC FF FF 		      	bra  	debugger_253
                	public code GetVBR:
0180B8 15 EF 21 00 		      	subui	sp,sp,#16
0180BC E7 ED 01 00 		      	push 	bp
0180C0 02 BF 01 1A 		      	mov  	bp,sp
0180C4 02 10 14 3E 		      	     	        mfspr r1,vbr
                	    
                	debugger_255:
0180C8 82 ED 01 1A 		      	mov  	sp,bp
0180CC 57 BF 11 00 		      	pop  	bp
0180D0 37 FF 21 00 		      	rtl  	#16
                	endpublic
                	
                	public code set_vector:
0180D4 E7 EF 01 00 		      	push 	lr
0180D8 67 EE 01 00 		      	push 	xlr
0180DC E7 ED 01 00 		      	push 	bp
0180E0 FC 01 00 00 		      	ldi  	xlr,#debugger_256
0180E4 0A C0 91 02 
0180E8 02 BF 01 1A 		      	mov  	bp,sp
0180EC C6 3D 30 00 		      	lw   	r3,24[bp]
0180F0 96 31 FE 03 		      	cmpu 	r3,r3,#511
0180F4 BD 51 0C 00 		      	ble  	r3,debugger_257
                	debugger_259:
0180F8 82 ED 01 1A 		      	mov  	sp,bp
0180FC 57 BF 11 00 		      	pop  	bp
018100 57 CF 11 00 		      	pop  	xlr
018104 57 FF 11 00 		      	pop  	lr
018108 37 FF 01 00 		      	rtl  	#0
                	debugger_257:
01810C C6 3D 40 00 		      	lw   	r3,32[bp]
018110 BD 01 08 00 		      	beq  	r3,debugger_262
018114 C6 3D 40 00 		      	lw   	r3,32[bp]
018118 8C 31 06 00 		      	and  	r3,r3,#3
01811C BD 01 04 00 		      	beq  	r3,debugger_260
                	debugger_262:
018120 3A FB FF FF 		      	bra  	debugger_259
                	debugger_260:
018124 C6 3D 30 00 		      	lw   	r3,24[bp]
018128 82 31 06 70 		      	asli 	r3,r3,#3
01812C E7 E1 01 00 		      	push 	r3
018130 39 F1 FF FF 		      	bsr  	GetVBR
018134 57 3F 10 00 		      	pop  	r3
018138 82 40 00 1A 		      	mov  	r4,r1
01813C C6 5D 40 00 		      	lw   	r5,32[bp]
018140 6B 52 06 00 		      	sw   	r5,0[r4+r3]
018144 BA F6 FF FF 		      	bra  	debugger_259
                	debugger_256:
018148 C6 FD 11 00 		      	lw   	lr,8[bp]
01814C E3 FD 21 00 		      	sw   	lr,16[bp]
018150 3A F5 FF FF 		      	bra  	debugger_259
                	endpublic
                	
                	public code dbg_GetCursorRow:
018154 15 EF 21 00 		      	subui	sp,sp,#16
018158 E7 ED 01 00 		      	push 	bp
01815C 02 BF 01 1A 		      	mov  	bp,sp
018160 0A 60 06 00 		      	     	        ldi    r6,#3   ; Get cursor position
018164 38 0F 34 03 	        sys    #410
018168 82 10 10 72 	        lsr    r1,r1,#8
                	    
                	debugger_264:
01816C 82 ED 01 1A 		      	mov  	sp,bp
018170 57 BF 11 00 		      	pop  	bp
018174 37 FF 21 00 		      	rtl  	#16
                	endpublic
                	
                	public code dbg_GetCursorCol:
018178 15 EF 21 00 		      	subui	sp,sp,#16
01817C E7 ED 01 00 		      	push 	bp
018180 02 BF 01 1A 		      	mov  	bp,sp
018184 0A 60 06 00 		      	     	        ldi    r6,#3
018188 38 0F 34 03 	        sys    #410
01818C 8C 10 FE 01 	        and    r1,r1,#$FF
                	    
                	debugger_266:
018190 82 ED 01 1A 		      	mov  	sp,bp
018194 57 BF 11 00 		      	pop  	bp
018198 37 FF 21 00 		      	rtl  	#16
                	endpublic
                	
                	public code dbg_HomeCursor:
01819C 15 EF 21 00 		      	subui	sp,sp,#16
0181A0 E7 ED 01 00 		      	push 	bp
0181A4 02 BF 01 1A 		      	mov  	bp,sp
0181A8 0A 60 04 00 		      	     	         ldi   r6,#2
0181AC 0A 10 00 00 	         ldi   r1,#0
0181B0 0A 20 00 00 	         ldi   r2,#0
0181B4 38 0F 34 03 	         sys   #410
                	     
                	debugger_268:
0181B8 82 ED 01 1A 		      	mov  	sp,bp
0181BC 57 BF 11 00 		      	pop  	bp
0181C0 37 FF 21 00 		      	rtl  	#16
                	endpublic
                	
                	public code dbg_GetDBAD:
0181C4 15 EF 21 00 		      	subui	sp,sp,#16
0181C8 E7 ED 01 00 		      	push 	bp
0181CC 02 BF 01 1A 		      	mov  	bp,sp
0181D0 C6 3D 30 00 		      	lw   	r3,24[bp]
0181D4 86 41 00 00 		      	cmp  	r4,r3,#0
0181D8 3D 02 10 00 		      	beq  	r4,debugger_271
0181DC 86 41 02 00 		      	cmp  	r4,r3,#1
0181E0 3D 02 10 00 		      	beq  	r4,debugger_272
0181E4 86 41 04 00 		      	cmp  	r4,r3,#2
0181E8 3D 02 10 00 		      	beq  	r4,debugger_273
0181EC 86 41 06 00 		      	cmp  	r4,r3,#3
0181F0 3D 02 10 00 		      	beq  	r4,debugger_274
0181F4 3A 06 00 00 		      	bra  	debugger_270
                	debugger_271:
0181F8 02 10 64 3E 		      	     	mfspr  r1,dbad0  
0181FC 3A 05 00 00 		      	bra  	debugger_270
                	debugger_272:
018200 02 10 66 3E 		      	     	mfspr  r1,dbad1  
018204 3A 04 00 00 		      	bra  	debugger_270
                	debugger_273:
018208 02 10 68 3E 		      	     	mfspr  r1,dbad2  
01820C 3A 03 00 00 		      	bra  	debugger_270
                	debugger_274:
018210 02 10 6A 3E 		      	     	mfspr  r1,dbad3  
018214 3A 02 00 00 		      	bra  	debugger_270
                	debugger_275:
018218 82 ED 01 1A 		      	mov  	sp,bp
01821C 57 BF 11 00 		      	pop  	bp
018220 37 FF 21 00 		      	rtl  	#16
                	debugger_270:
018224 BA FE FF FF 		      	bra  	debugger_275
                	endpublic
                	
                	public code dbg_SetDBAD:
018228 15 EF 21 00 		      	subui	sp,sp,#16
01822C E7 ED 01 00 		      	push 	bp
018230 02 BF 01 1A 		      	mov  	bp,sp
018234 C6 3D 30 00 		      	lw   	r3,24[bp]
018238 86 41 00 00 		      	cmp  	r4,r3,#0
01823C 3D 02 10 00 		      	beq  	r4,debugger_278
018240 86 41 02 00 		      	cmp  	r4,r3,#1
018244 3D 02 12 00 		      	beq  	r4,debugger_279
018248 86 41 04 00 		      	cmp  	r4,r3,#2
01824C 3D 02 14 00 		      	beq  	r4,debugger_280
018250 86 41 06 00 		      	cmp  	r4,r3,#3
018254 3D 02 16 00 		      	beq  	r4,debugger_281
018258 BA 06 00 00 		      	bra  	debugger_277
                	debugger_278:
01825C C6 1D 40 00 		      	     	          lw    r1,32[bp]
018260 82 00 64 3C 	          mtspr dbad0,r1
                	          
018264 3A 05 00 00 		      	bra  	debugger_277
                	debugger_279:
018268 C6 1D 40 00 		      	     	          lw    r1,32[bp]
01826C 82 00 66 3C 	          mtspr dbad1,r1
                	          
018270 BA 03 00 00 		      	bra  	debugger_277
                	debugger_280:
018274 C6 1D 40 00 		      	     	          lw    r1,32[bp]
018278 82 00 68 3C 	          mtspr dbad2,r1
                	          
01827C 3A 02 00 00 		      	bra  	debugger_277
                	debugger_281:
018280 C6 1D 40 00 		      	     	          lw    r1,32[bp]
018284 82 00 6A 3C 	          mtspr dbad3,r1
                	          
018288 BA 00 00 00 		      	bra  	debugger_277
                	debugger_277:
                	debugger_282:
01828C 82 ED 01 1A 		      	mov  	sp,bp
018290 57 BF 11 00 		      	pop  	bp
018294 37 FF 21 00 		      	rtl  	#16
                	endpublic
                	
                	public code dbg_arm:
018298 15 EF 21 00 		      	subui	sp,sp,#16
01829C E7 ED 01 00 		      	push 	bp
0182A0 02 BF 01 1A 		      	mov  	bp,sp
0182A4 C6 1D 30 00 		      	     	         lw    r1,24[bp]
0182A8 82 00 6C 3C 	         mtspr dbctrl,r1
                	     
                	debugger_284:
0182AC 82 ED 01 1A 		      	mov  	sp,bp
0182B0 57 BF 11 00 		      	pop  	bp
0182B4 37 FF 21 00 		      	rtl  	#16
                	endpublic
                	
                	public code CvtScreenToAscii:
0182B8 15 EF 21 00 		      	subui	sp,sp,#16
0182BC E7 ED 01 00 		      	push 	bp
0182C0 02 BF 01 1A 		      	mov  	bp,sp
0182C4 C6 1D 30 00 		      	     	         lw    r1,24[bp]
0182C8 0A 60 42 00 	         ldi   r6,#$21         ; screen to ascii
0182CC 38 0F 34 03 	         sys   #410
                	     
                	debugger_286:
0182D0 82 ED 01 1A 		      	mov  	sp,bp
0182D4 57 BF 11 00 		      	pop  	bp
0182D8 37 FF 21 00 		      	rtl  	#16
                	endpublic
                	
                	public code dbg_getchar:
0182DC 15 EF 21 00 		      	subui	sp,sp,#16
0182E0 E7 ED 01 00 		      	push 	bp
0182E4 02 BF 01 1A 		      	mov  	bp,sp
0182E8 15 EF 11 00 		      	subui	sp,sp,#8
0182EC E7 E5 01 00 		      	push 	r11
0182F0 FC 14 01 00 		      	ldi  	r11,#linendx
0182F4 0A B0 F0 D5 
0182F8 0A 30 FE FF 		      	ldi  	r3,#-1
0182FC E1 3D FC FF 		      	sc   	r3,-2[bp]
018300 C6 35 00 00 		      	lw   	r3,[r11]
018304 86 31 A8 00 		      	cmp  	r3,r3,#84
018308 BD 31 0E 00 		      	bge  	r3,debugger_288
01830C C6 35 00 00 		      	lw   	r3,[r11]
018310 82 31 02 70 		      	asli 	r3,r3,#1
018314 FC 14 01 00 		      	lcu  	r4,linebuf[r3]
018318 C3 41 00 D6 
01831C E1 4D FC FF 		      	sc   	r4,-2[bp]
018320 E4 15 00 00 		      	inc  	[r11],#1
                	debugger_288:
018324 C3 3D FC FF 		      	lcu  	r3,-2[bp]
018328 82 11 00 1A 		      	mov  	r1,r3
                	debugger_290:
01832C 57 BF 10 00 		      	pop  	r11
018330 82 ED 01 1A 		      	mov  	sp,bp
018334 57 BF 11 00 		      	pop  	bp
018338 37 FF 21 00 		      	rtl  	#16
                	endpublic
                	
                	public code ignore_blanks:
01833C 15 EF 21 00 		      	subui	sp,sp,#16
018340 E7 ED 01 00 		      	push 	bp
018344 02 BF 01 1A 		      	mov  	bp,sp
018348 15 EF 11 00 		      	subui	sp,sp,#8
                	debugger_292:
01834C FC 14 01 00 		      	lw   	r3,linendx
018350 46 30 F0 D5 
018354 82 31 02 70 		      	asli 	r3,r3,#1
018358 FC 14 01 00 		      	lcu  	r4,linebuf[r3]
01835C C3 41 00 D6 
018360 E1 4D FC FF 		      	sc   	r4,-2[bp]
018364 FC 14 01 00 		      	inc  	linendx,#1
018368 64 10 F0 D5 
01836C C3 3D FC FF 		      	lcu  	r3,-2[bp]
018370 86 31 40 00 		      	cmp  	r3,r3,#32
018374 BD 01 EC FF 		      	beq  	r3,debugger_292
                	debugger_293:
                	debugger_294:
018378 82 ED 01 1A 		      	mov  	sp,bp
01837C 57 BF 11 00 		      	pop  	bp
018380 37 FF 21 00 		      	rtl  	#16
                	endpublic
                	
                	public code dbg_ungetch:
018384 15 EF 21 00 		      	subui	sp,sp,#16
018388 E7 ED 01 00 		      	push 	bp
01838C 02 BF 01 1A 		      	mov  	bp,sp
018390 FC 14 01 00 		      	lw   	r3,linendx
018394 46 30 F0 D5 
018398 BD 51 06 00 		      	ble  	r3,debugger_296
01839C FC 14 01 00 		      	dec  	linendx,#1
0183A0 64 F0 F1 D5 
                	debugger_296:
                	debugger_298:
0183A4 82 ED 01 1A 		      	mov  	sp,bp
0183A8 57 BF 11 00 		      	pop  	bp
0183AC 37 FF 21 00 		      	rtl  	#16
                	endpublic
                	
                	public code dbg_nextNonSpace:
0183B0 E7 EF 01 00 		      	push 	lr
0183B4 67 EE 01 00 		      	push 	xlr
0183B8 E7 ED 01 00 		      	push 	bp
0183BC FC 01 00 00 		      	ldi  	xlr,#debugger_299
0183C0 0A C0 59 08 
0183C4 02 BF 01 1A 		      	mov  	bp,sp
0183C8 15 EF 11 00 		      	subui	sp,sp,#8
                	debugger_300:
0183CC FC 14 01 00 		      	lw   	r3,linendx
0183D0 46 30 F0 D5 
0183D4 86 31 A8 00 		      	cmp  	r3,r3,#84
0183D8 BD 31 26 00 		      	bge  	r3,debugger_301
0183DC 39 E0 FF FF 		      	bsr  	dbg_getchar
0183E0 82 30 00 1A 		      	mov  	r3,r1
0183E4 82 31 00 22 		      	sxc  	r3,r3
0183E8 E1 3D FC FF 		      	sc   	r3,-2[bp]
0183EC C3 3D FC FF 		      	lcu  	r3,-2[bp]
0183F0 86 31 40 00 		      	cmp  	r3,r3,#32
0183F4 BD 11 08 00 		      	bne  	r3,debugger_304
0183F8 C3 3D FC FF 		      	lcu  	r3,-2[bp]
0183FC 86 31 FE FF 		      	cmp  	r3,r3,#-1
018400 BD 11 10 00 		      	bne  	r3,debugger_302
                	debugger_304:
018404 C3 3D FC FF 		      	lcu  	r3,-2[bp]
018408 82 11 00 1A 		      	mov  	r1,r3
                	debugger_305:
01840C 82 ED 01 1A 		      	mov  	sp,bp
018410 57 BF 11 00 		      	pop  	bp
018414 57 CF 11 00 		      	pop  	xlr
018418 57 FF 11 00 		      	pop  	lr
01841C 37 FF 01 00 		      	rtl  	#0
                	debugger_302:
018420 BA F5 FF FF 		      	bra  	debugger_300
                	debugger_301:
018424 0A 10 FE FF 		      	ldi  	r1,#-1
018428 BA FC FF FF 		      	bra  	debugger_305
                	debugger_299:
01842C C6 FD 11 00 		      	lw   	lr,8[bp]
018430 E3 FD 21 00 		      	sw   	lr,16[bp]
018434 3A FB FF FF 		      	bra  	debugger_305
                	endpublic
                	
                	public code dbg_nextSpace:
018438 E7 EF 01 00 		      	push 	lr
01843C 67 EE 01 00 		      	push 	xlr
018440 E7 ED 01 00 		      	push 	bp
018444 FC 01 00 00 		      	ldi  	xlr,#debugger_306
018448 0A C0 39 09 
01844C 02 BF 01 1A 		      	mov  	bp,sp
018450 15 EF 11 00 		      	subui	sp,sp,#8
                	debugger_307:
018454 39 D1 FF FF 		      	bsr  	dbg_getchar
018458 82 30 00 1A 		      	mov  	r3,r1
01845C 82 31 00 22 		      	sxc  	r3,r3
018460 E1 3D FC FF 		      	sc   	r3,-2[bp]
018464 C3 3D FC FF 		      	lcu  	r3,-2[bp]
018468 86 31 FE FF 		      	cmp  	r3,r3,#-1
01846C BD 11 04 00 		      	bne  	r3,debugger_309
018470 3A 02 00 00 		      	bra  	debugger_308
                	debugger_309:
018474 C3 3D FC FF 		      	lcu  	r3,-2[bp]
018478 86 31 40 00 		      	cmp  	r3,r3,#32
01847C BD 11 EC FF 		      	bne  	r3,debugger_307
                	debugger_308:
018480 C3 3D FC FF 		      	lcu  	r3,-2[bp]
018484 82 11 00 1A 		      	mov  	r1,r3
                	debugger_311:
018488 82 ED 01 1A 		      	mov  	sp,bp
01848C 57 BF 11 00 		      	pop  	bp
018490 57 CF 11 00 		      	pop  	xlr
018494 57 FF 11 00 		      	pop  	lr
018498 37 FF 01 00 		      	rtl  	#0
                	debugger_306:
01849C C6 FD 11 00 		      	lw   	lr,8[bp]
0184A0 E3 FD 21 00 		      	sw   	lr,16[bp]
0184A4 BA FC FF FF 		      	bra  	debugger_311
                	endpublic
                	
                	public code dbg_getHexNumber:
0184A8 E7 EF 01 00 		      	push 	lr
0184AC 67 EE 01 00 		      	push 	xlr
0184B0 E7 ED 01 00 		      	push 	bp
0184B4 FC 01 00 00 		      	ldi  	xlr,#debugger_312
0184B8 0A C0 91 0B 
0184BC 02 BF 01 1A 		      	mov  	bp,sp
0184C0 15 EF 31 00 		      	subui	sp,sp,#24
0184C4 E3 0D E0 FF 		      	sw   	r0,-16[bp]
0184C8 E3 0D D0 FF 		      	sw   	r0,-24[bp]
0184CC B9 DC FF FF 		      	bsr  	dbg_nextNonSpace
0184D0 FC 14 01 00 		      	dec  	linendx,#1
0184D4 64 F0 F1 D5 
                	debugger_313:
0184D8 0A 30 02 00 		      	ldi  	r3,#1
0184DC BD 01 74 00 		      	beq  	r3,debugger_314
0184E0 B9 BF FF FF 		      	bsr  	dbg_getchar
0184E4 82 30 00 1A 		      	mov  	r3,r1
0184E8 82 31 00 22 		      	sxc  	r3,r3
0184EC E1 3D FC FF 		      	sc   	r3,-2[bp]
0184F0 C3 3D FC FF 		      	lcu  	r3,-2[bp]
0184F4 96 31 60 00 		      	cmpu 	r3,r3,#48
0184F8 BD 41 16 00 		      	blt  	r3,debugger_315
0184FC C3 3D FC FF 		      	lcu  	r3,-2[bp]
018500 96 31 72 00 		      	cmpu 	r3,r3,#57
018504 BD 21 10 00 		      	bgt  	r3,debugger_315
018508 C6 3D E0 FF 		      	lw   	r3,-16[bp]
01850C 82 31 08 70 		      	asli 	r3,r3,#4
018510 C3 4D FC FF 		      	lcu  	r4,-2[bp]
018514 15 42 60 00 		      	subu 	r4,r4,#48
018518 82 31 08 1A 		      	or   	r3,r3,r4
01851C E3 3D E0 FF 		      	sw   	r3,-16[bp]
018520 BA 12 00 00 		      	bra  	debugger_316
                	debugger_315:
018524 C3 3D FC FF 		      	lcu  	r3,-2[bp]
018528 96 31 82 00 		      	cmpu 	r3,r3,#65
01852C BD 41 16 00 		      	blt  	r3,debugger_317
018530 C3 3D FC FF 		      	lcu  	r3,-2[bp]
018534 96 31 8C 00 		      	cmpu 	r3,r3,#70
018538 BD 21 10 00 		      	bgt  	r3,debugger_317
01853C C6 3D E0 FF 		      	lw   	r3,-16[bp]
018540 82 31 08 70 		      	asli 	r3,r3,#4
018544 C3 4D FC FF 		      	lcu  	r4,-2[bp]
018548 14 42 92 FF 		      	addu 	r4,r4,#-55
01854C 82 31 08 1A 		      	or   	r3,r3,r4
018550 E3 3D E0 FF 		      	sw   	r3,-16[bp]
018554 3A 0C 00 00 		      	bra  	debugger_318
                	debugger_317:
018558 C3 3D FC FF 		      	lcu  	r3,-2[bp]
01855C 96 31 C2 00 		      	cmpu 	r3,r3,#97
018560 BD 41 16 00 		      	blt  	r3,debugger_319
018564 C3 3D FC FF 		      	lcu  	r3,-2[bp]
018568 96 31 CC 00 		      	cmpu 	r3,r3,#102
01856C BD 21 10 00 		      	bgt  	r3,debugger_319
018570 C6 3D E0 FF 		      	lw   	r3,-16[bp]
018574 82 31 08 70 		      	asli 	r3,r3,#4
018578 C3 4D FC FF 		      	lcu  	r4,-2[bp]
01857C 14 42 52 FF 		      	addu 	r4,r4,#-87
018580 82 31 08 1A 		      	or   	r3,r3,r4
018584 E3 3D E0 FF 		      	sw   	r3,-16[bp]
018588 BA 05 00 00 		      	bra  	debugger_320
                	debugger_319:
01858C C6 3D 30 00 		      	lw   	r3,24[bp]
018590 C6 4D E0 FF 		      	lw   	r4,-16[bp]
018594 E3 41 00 00 		      	sw   	r4,[r3]
018598 C6 3D D0 FF 		      	lw   	r3,-24[bp]
01859C 82 11 00 1A 		      	mov  	r1,r3
                	debugger_321:
0185A0 82 ED 01 1A 		      	mov  	sp,bp
0185A4 57 BF 11 00 		      	pop  	bp
0185A8 57 CF 11 00 		      	pop  	xlr
0185AC 57 FF 11 00 		      	pop  	lr
0185B0 37 FF 01 00 		      	rtl  	#0
                	debugger_320:
                	debugger_318:
                	debugger_316:
0185B4 C6 3D D0 FF 		      	lw   	r3,-24[bp]
0185B8 94 31 02 00 		      	addu 	r3,r3,#1
0185BC E3 3D D0 FF 		      	sw   	r3,-24[bp]
0185C0 3A E3 FF FF 		      	bra  	debugger_313
                	debugger_314:
0185C4 BA FB FF FF 		      	bra  	debugger_321
                	debugger_312:
0185C8 C6 FD 11 00 		      	lw   	lr,8[bp]
0185CC E3 FD 21 00 		      	sw   	lr,16[bp]
0185D0 3A FA FF FF 		      	bra  	debugger_321
                	endpublic
                	
                	public code dbg_ReadSetIB:
0185D4 E7 EF 01 00 		      	push 	lr
0185D8 67 EE 01 00 		      	push 	xlr
0185DC E7 ED 01 00 		      	push 	bp
0185E0 FC 01 00 00 		      	ldi  	xlr,#debugger_324
0185E4 0A C0 19 0F 
0185E8 02 BF 01 1A 		      	mov  	bp,sp
0185EC 15 EF 21 00 		      	subui	sp,sp,#16
0185F0 E7 E5 01 00 		      	push 	r11
0185F4 FC 14 01 00 		      	ldi  	r11,#dbg_dbctrl
0185F8 0A B0 90 F7 
0185FC C6 3D 30 00 		      	lw   	r3,24[bp]
018600 96 31 06 00 		      	cmpu 	r3,r3,#3
018604 BD 51 0E 00 		      	ble  	r3,debugger_325
                	debugger_327:
018608 57 BF 10 00 		      	pop  	r11
01860C 82 ED 01 1A 		      	mov  	sp,bp
018610 57 BF 11 00 		      	pop  	bp
018614 57 CF 11 00 		      	pop  	xlr
018618 57 FF 11 00 		      	pop  	lr
01861C 37 FF 01 00 		      	rtl  	#0
                	debugger_325:
018620 39 B2 FF FF 		      	bsr  	dbg_nextNonSpace
018624 82 30 00 1A 		      	mov  	r3,r1
018628 82 31 00 22 		      	sxc  	r3,r3
01862C E1 3D FC FF 		      	sc   	r3,-2[bp]
018630 C3 3D FC FF 		      	lcu  	r3,-2[bp]
018634 86 31 7A 00 		      	cmp  	r3,r3,#61
018638 BD 11 5E 00 		      	bne  	r3,debugger_328
01863C E5 ED E1 FF 		      	pea  	-16[bp]
018640 39 38 CF FF 		      	bsr  	dbg_GetHexNumber
018644 14 EF 11 00 		      	addui	sp,sp,#8
018648 82 30 00 1A 		      	mov  	r3,r1
01864C BD 51 2A 00 		      	ble  	r3,debugger_330
018650 E6 ED E1 FF 		      	push 	-16[bp]
018654 E6 ED 31 00 		      	push 	24[bp]
018658 39 7A FF FF 		      	bsr  	dbg_SetDBAD
01865C 14 EF 21 00 		      	addui	sp,sp,#16
018660 0A 30 02 00 		      	ldi  	r3,#1
018664 C6 4D 30 00 		      	lw   	r4,24[bp]
018668 82 31 08 60 		      	asl  	r3,r3,r4
01866C C6 45 00 00 		      	lw   	r4,[r11]
018670 02 42 06 1A 		      	or   	r4,r4,r3
018674 E3 45 00 00 		      	sw   	r4,[r11]
018678 7C 03 00 00 		      	ldi  	r3,#196608
01867C 0A 30 00 00 
018680 C6 4D 30 00 		      	lw   	r4,24[bp]
018684 02 42 02 70 		      	asli 	r4,r4,#1
018688 82 31 08 60 		      	asl  	r3,r3,r4
01868C 8E 31 FE FF 		      	com  	r3,r3
018690 C6 45 00 00 		      	lw   	r4,[r11]
018694 02 42 06 18 		      	and  	r4,r4,r3
018698 E3 45 00 00 		      	sw   	r4,[r11]
01869C BA 0A 00 00 		      	bra  	debugger_331
                	debugger_330:
0186A0 65 E0 01 00 		      	push 	#0
0186A4 E6 ED 31 00 		      	push 	24[bp]
0186A8 39 70 FF FF 		      	bsr  	dbg_SetDBAD
0186AC 14 EF 21 00 		      	addui	sp,sp,#16
0186B0 0A 30 02 00 		      	ldi  	r3,#1
0186B4 C6 4D 30 00 		      	lw   	r4,24[bp]
0186B8 82 31 08 60 		      	asl  	r3,r3,r4
0186BC 8E 31 FE FF 		      	com  	r3,r3
0186C0 C6 45 00 00 		      	lw   	r4,[r11]
0186C4 02 42 06 18 		      	and  	r4,r4,r3
0186C8 E3 45 00 00 		      	sw   	r4,[r11]
0186CC 7C 03 00 00 		      	ldi  	r3,#196608
0186D0 0A 30 00 00 
0186D4 C6 4D 30 00 		      	lw   	r4,24[bp]
0186D8 02 42 02 70 		      	asli 	r4,r4,#1
0186DC 82 31 08 60 		      	asl  	r3,r3,r4
0186E0 8E 31 FE FF 		      	com  	r3,r3
0186E4 C6 45 00 00 		      	lw   	r4,[r11]
0186E8 02 42 06 18 		      	and  	r4,r4,r3
0186EC E3 45 00 00 		      	sw   	r4,[r11]
                	debugger_331:
0186F0 3A 13 00 00 		      	bra  	debugger_329
                	debugger_328:
0186F4 C3 3D FC FF 		      	lcu  	r3,-2[bp]
0186F8 86 31 7E 00 		      	cmp  	r3,r3,#63
0186FC BD 11 46 00 		      	bne  	r3,debugger_332
018700 C6 35 00 00 		      	lw   	r3,[r11]
018704 7C 03 00 00 		      	ldi  	r4,#196608
018708 0A 40 00 00 
01870C C6 5D 30 00 		      	lw   	r5,24[bp]
018710 82 52 02 70 		      	asli 	r5,r5,#1
018714 02 42 0A 60 		      	asl  	r4,r4,r5
018718 82 31 08 18 		      	and  	r3,r3,r4
01871C BD 11 2C 00 		      	bne  	r3,debugger_334
018720 C6 35 00 00 		      	lw   	r3,[r11]
018724 0A 40 02 00 		      	ldi  	r4,#1
018728 C6 5D 30 00 		      	lw   	r5,24[bp]
01872C 02 42 0A 60 		      	asl  	r4,r4,r5
018730 0A 50 02 00 		      	ldi  	r5,#1
018734 C6 6D 30 00 		      	lw   	r6,24[bp]
018738 82 52 0C 60 		      	asl  	r5,r5,r6
01873C 02 42 0A 40 		      	seq  	r4,r4,r5
018740 82 31 08 18 		      	and  	r3,r3,r4
018744 BD 01 18 00 		      	beq  	r3,debugger_334
018748 E6 ED 31 00 		      	push 	24[bp]
01874C 39 4F FF FF 		      	bsr  	dbg_GetDBAD
018750 14 EF 11 00 		      	addui	sp,sp,#8
018754 82 30 00 1A 		      	mov  	r3,r1
018758 E7 E1 01 00 		      	push 	r3
01875C E6 ED 31 00 		      	push 	24[bp]
018760 FC 01 00 00 		      	push 	#debugger_322
018764 65 E0 3D 7A 
018768 B9 DE F9 FF 		      	bsr  	printf
01876C 14 EF 31 00 		      	addui	sp,sp,#24
018770 3A 03 00 00 		      	bra  	debugger_335
                	debugger_334:
018774 E6 ED 31 00 		      	push 	24[bp]
018778 FC 01 00 00 		      	push 	#debugger_323
01877C 65 E0 ED 79 
018780 B9 DB F9 FF 		      	bsr  	printf
018784 14 EF 21 00 		      	addui	sp,sp,#16
                	debugger_335:
                	debugger_332:
                	debugger_329:
018788 3A D0 FF FF 		      	bra  	debugger_327
                	debugger_324:
01878C C6 FD 11 00 		      	lw   	lr,8[bp]
018790 E3 FD 21 00 		      	sw   	lr,16[bp]
018794 BA CE FF FF 		      	bra  	debugger_327
                	endpublic
                	
                	public code dbg_ReadSetDB:
018798 E7 EF 01 00 		      	push 	lr
01879C 67 EE 01 00 		      	push 	xlr
0187A0 E7 ED 01 00 		      	push 	bp
0187A4 FC 01 00 00 		      	ldi  	xlr,#debugger_340
0187A8 0A C0 11 13 
0187AC 02 BF 01 1A 		      	mov  	bp,sp
0187B0 15 EF 21 00 		      	subui	sp,sp,#16
0187B4 E7 E5 01 00 		      	push 	r11
0187B8 FC 14 01 00 		      	ldi  	r11,#dbg_dbctrl
0187BC 0A B0 90 F7 
0187C0 C6 3D 30 00 		      	lw   	r3,24[bp]
0187C4 96 31 06 00 		      	cmpu 	r3,r3,#3
0187C8 BD 51 0E 00 		      	ble  	r3,debugger_341
                	debugger_343:
0187CC 57 BF 10 00 		      	pop  	r11
0187D0 82 ED 01 1A 		      	mov  	sp,bp
0187D4 57 BF 11 00 		      	pop  	bp
0187D8 57 CF 11 00 		      	pop  	xlr
0187DC 57 FF 11 00 		      	pop  	lr
0187E0 37 FF 01 00 		      	rtl  	#0
                	debugger_341:
0187E4 B9 79 FF FF 		      	bsr  	dbg_nextNonSpace
0187E8 82 30 00 1A 		      	mov  	r3,r1
0187EC 82 31 00 22 		      	sxc  	r3,r3
0187F0 E1 3D FC FF 		      	sc   	r3,-2[bp]
0187F4 C3 3D FC FF 		      	lcu  	r3,-2[bp]
0187F8 86 31 7A 00 		      	cmp  	r3,r3,#61
0187FC BD 11 6E 00 		      	bne  	r3,debugger_344
018800 E5 ED E1 FF 		      	pea  	-16[bp]
018804 B9 FF CE FF 		      	bsr  	dbg_GetHexNumber
018808 14 EF 11 00 		      	addui	sp,sp,#8
01880C 82 30 00 1A 		      	mov  	r3,r1
018810 BD 51 3A 00 		      	ble  	r3,debugger_346
018814 E6 ED E1 FF 		      	push 	-16[bp]
018818 E6 ED 31 00 		      	push 	24[bp]
01881C B9 41 FF FF 		      	bsr  	dbg_SetDBAD
018820 14 EF 21 00 		      	addui	sp,sp,#16
018824 0A 30 02 00 		      	ldi  	r3,#1
018828 C6 4D 30 00 		      	lw   	r4,24[bp]
01882C 82 31 08 60 		      	asl  	r3,r3,r4
018830 C6 45 00 00 		      	lw   	r4,[r11]
018834 02 42 06 1A 		      	or   	r4,r4,r3
018838 E3 45 00 00 		      	sw   	r4,[r11]
01883C 7C 03 00 00 		      	ldi  	r3,#196608
018840 0A 30 00 00 
018844 C6 4D 30 00 		      	lw   	r4,24[bp]
018848 02 42 02 70 		      	asli 	r4,r4,#1
01884C 82 31 08 60 		      	asl  	r3,r3,r4
018850 8E 31 FE FF 		      	com  	r3,r3
018854 C6 45 00 00 		      	lw   	r4,[r11]
018858 02 42 06 18 		      	and  	r4,r4,r3
01885C E3 45 00 00 		      	sw   	r4,[r11]
018860 7C 03 00 00 		      	ldi  	r3,#196608
018864 0A 30 00 00 
018868 C6 4D 30 00 		      	lw   	r4,24[bp]
01886C 02 42 02 70 		      	asli 	r4,r4,#1
018870 82 31 08 60 		      	asl  	r3,r3,r4
018874 C6 45 00 00 		      	lw   	r4,[r11]
018878 02 42 06 1A 		      	or   	r4,r4,r3
01887C E3 45 00 00 		      	sw   	r4,[r11]
018880 BA 0A 00 00 		      	bra  	debugger_347
                	debugger_346:
018884 65 E0 01 00 		      	push 	#0
018888 E6 ED 31 00 		      	push 	24[bp]
01888C B9 33 FF FF 		      	bsr  	dbg_SetDBAD
018890 14 EF 21 00 		      	addui	sp,sp,#16
018894 0A 30 02 00 		      	ldi  	r3,#1
018898 C6 4D 30 00 		      	lw   	r4,24[bp]
01889C 82 31 08 60 		      	asl  	r3,r3,r4
0188A0 8E 31 FE FF 		      	com  	r3,r3
0188A4 C6 45 00 00 		      	lw   	r4,[r11]
0188A8 02 42 06 18 		      	and  	r4,r4,r3
0188AC E3 45 00 00 		      	sw   	r4,[r11]
0188B0 7C 03 00 00 		      	ldi  	r3,#196608
0188B4 0A 30 00 00 
0188B8 C6 4D 30 00 		      	lw   	r4,24[bp]
0188BC 02 42 02 70 		      	asli 	r4,r4,#1
0188C0 82 31 08 60 		      	asl  	r3,r3,r4
0188C4 8E 31 FE FF 		      	com  	r3,r3
0188C8 C6 45 00 00 		      	lw   	r4,[r11]
0188CC 02 42 06 18 		      	and  	r4,r4,r3
0188D0 E3 45 00 00 		      	sw   	r4,[r11]
                	debugger_347:
0188D4 3A 16 00 00 		      	bra  	debugger_345
                	debugger_344:
0188D8 C3 3D FC FF 		      	lcu  	r3,-2[bp]
0188DC 86 31 7E 00 		      	cmp  	r3,r3,#63
0188E0 BD 11 52 00 		      	bne  	r3,debugger_348
0188E4 C6 35 00 00 		      	lw   	r3,[r11]
0188E8 7C 03 00 00 		      	ldi  	r4,#196608
0188EC 0A 40 00 00 
0188F0 C6 5D 30 00 		      	lw   	r5,24[bp]
0188F4 82 52 02 70 		      	asli 	r5,r5,#1
0188F8 02 42 0A 60 		      	asl  	r4,r4,r5
0188FC 82 31 08 18 		      	and  	r3,r3,r4
018900 7C 03 00 00 		      	ldi  	r4,#196608
018904 0A 40 00 00 
018908 C6 5D 30 00 		      	lw   	r5,24[bp]
01890C 82 52 02 70 		      	asli 	r5,r5,#1
018910 02 42 0A 60 		      	asl  	r4,r4,r5
018914 82 31 08 0C 		      	cmp  	r3,r3,r4
018918 BD 11 2C 00 		      	bne  	r3,debugger_350
01891C C6 35 00 00 		      	lw   	r3,[r11]
018920 0A 40 02 00 		      	ldi  	r4,#1
018924 C6 5D 30 00 		      	lw   	r5,24[bp]
018928 02 42 0A 60 		      	asl  	r4,r4,r5
01892C 0A 50 02 00 		      	ldi  	r5,#1
018930 C6 6D 30 00 		      	lw   	r6,24[bp]
018934 82 52 0C 60 		      	asl  	r5,r5,r6
018938 02 42 0A 40 		      	seq  	r4,r4,r5
01893C 82 31 08 18 		      	and  	r3,r3,r4
018940 BD 01 18 00 		      	beq  	r3,debugger_350
018944 E6 ED 31 00 		      	push 	24[bp]
018948 B9 0F FF FF 		      	bsr  	dbg_GetDBAD
01894C 14 EF 11 00 		      	addui	sp,sp,#8
018950 82 30 00 1A 		      	mov  	r3,r1
018954 E7 E1 01 00 		      	push 	r3
018958 E6 ED 31 00 		      	push 	24[bp]
01895C FC 01 00 00 		      	push 	#debugger_338
018960 65 E0 A9 79 
018964 39 9F F9 FF 		      	bsr  	printf
018968 14 EF 31 00 		      	addui	sp,sp,#24
01896C 3A 03 00 00 		      	bra  	debugger_351
                	debugger_350:
018970 E6 ED 31 00 		      	push 	24[bp]
018974 FC 01 00 00 		      	push 	#debugger_339
018978 65 E0 59 79 
01897C 39 9C F9 FF 		      	bsr  	printf
018980 14 EF 21 00 		      	addui	sp,sp,#16
                	debugger_351:
                	debugger_348:
                	debugger_345:
018984 3A C9 FF FF 		      	bra  	debugger_343
                	debugger_340:
018988 C6 FD 11 00 		      	lw   	lr,8[bp]
01898C E3 FD 21 00 		      	sw   	lr,16[bp]
018990 BA C7 FF FF 		      	bra  	debugger_343
                	endpublic
                	
                	public code dbg_ReadSetDSB:
018994 E7 EF 01 00 		      	push 	lr
018998 67 EE 01 00 		      	push 	xlr
01899C E7 ED 01 00 		      	push 	bp
0189A0 FC 01 00 00 		      	ldi  	xlr,#debugger_356
0189A4 0A C0 09 17 
0189A8 02 BF 01 1A 		      	mov  	bp,sp
0189AC 15 EF 21 00 		      	subui	sp,sp,#16
0189B0 E7 E5 01 00 		      	push 	r11
0189B4 FC 14 01 00 		      	ldi  	r11,#dbg_dbctrl
0189B8 0A B0 90 F7 
0189BC C6 3D 30 00 		      	lw   	r3,24[bp]
0189C0 96 31 06 00 		      	cmpu 	r3,r3,#3
0189C4 BD 51 0E 00 		      	ble  	r3,debugger_357
                	debugger_359:
0189C8 57 BF 10 00 		      	pop  	r11
0189CC 82 ED 01 1A 		      	mov  	sp,bp
0189D0 57 BF 11 00 		      	pop  	bp
0189D4 57 CF 11 00 		      	pop  	xlr
0189D8 57 FF 11 00 		      	pop  	lr
0189DC 37 FF 01 00 		      	rtl  	#0
                	debugger_357:
0189E0 39 3A FF FF 		      	bsr  	dbg_nextNonSpace
0189E4 82 30 00 1A 		      	mov  	r3,r1
0189E8 82 31 00 22 		      	sxc  	r3,r3
0189EC E1 3D FC FF 		      	sc   	r3,-2[bp]
0189F0 C3 3D FC FF 		      	lcu  	r3,-2[bp]
0189F4 86 31 7A 00 		      	cmp  	r3,r3,#61
0189F8 BD 11 6E 00 		      	bne  	r3,debugger_360
0189FC E5 ED E1 FF 		      	pea  	-16[bp]
018A00 39 C0 CE FF 		      	bsr  	dbg_GetHexNumber
018A04 14 EF 11 00 		      	addui	sp,sp,#8
018A08 82 30 00 1A 		      	mov  	r3,r1
018A0C BD 51 3A 00 		      	ble  	r3,debugger_362
018A10 E6 ED E1 FF 		      	push 	-16[bp]
018A14 E6 ED 31 00 		      	push 	24[bp]
018A18 39 02 FF FF 		      	bsr  	dbg_SetDBAD
018A1C 14 EF 21 00 		      	addui	sp,sp,#16
018A20 0A 30 02 00 		      	ldi  	r3,#1
018A24 C6 4D 30 00 		      	lw   	r4,24[bp]
018A28 82 31 08 60 		      	asl  	r3,r3,r4
018A2C C6 45 00 00 		      	lw   	r4,[r11]
018A30 02 42 06 1A 		      	or   	r4,r4,r3
018A34 E3 45 00 00 		      	sw   	r4,[r11]
018A38 7C 03 00 00 		      	ldi  	r3,#196608
018A3C 0A 30 00 00 
018A40 C6 4D 30 00 		      	lw   	r4,24[bp]
018A44 02 42 02 70 		      	asli 	r4,r4,#1
018A48 82 31 08 60 		      	asl  	r3,r3,r4
018A4C 8E 31 FE FF 		      	com  	r3,r3
018A50 C6 45 00 00 		      	lw   	r4,[r11]
018A54 02 42 06 18 		      	and  	r4,r4,r3
018A58 E3 45 00 00 		      	sw   	r4,[r11]
018A5C 7C 01 00 00 		      	ldi  	r3,#65536
018A60 0A 30 00 00 
018A64 C6 4D 30 00 		      	lw   	r4,24[bp]
018A68 02 42 02 70 		      	asli 	r4,r4,#1
018A6C 82 31 08 60 		      	asl  	r3,r3,r4
018A70 C6 45 00 00 		      	lw   	r4,[r11]
018A74 02 42 06 1A 		      	or   	r4,r4,r3
018A78 E3 45 00 00 		      	sw   	r4,[r11]
018A7C BA 0A 00 00 		      	bra  	debugger_363
                	debugger_362:
018A80 65 E0 01 00 		      	push 	#0
018A84 E6 ED 31 00 		      	push 	24[bp]
018A88 39 F4 FE FF 		      	bsr  	dbg_SetDBAD
018A8C 14 EF 21 00 		      	addui	sp,sp,#16
018A90 0A 30 02 00 		      	ldi  	r3,#1
018A94 C6 4D 30 00 		      	lw   	r4,24[bp]
018A98 82 31 08 60 		      	asl  	r3,r3,r4
018A9C 8E 31 FE FF 		      	com  	r3,r3
018AA0 C6 45 00 00 		      	lw   	r4,[r11]
018AA4 02 42 06 18 		      	and  	r4,r4,r3
018AA8 E3 45 00 00 		      	sw   	r4,[r11]
018AAC 7C 03 00 00 		      	ldi  	r3,#196608
018AB0 0A 30 00 00 
018AB4 C6 4D 30 00 		      	lw   	r4,24[bp]
018AB8 02 42 02 70 		      	asli 	r4,r4,#1
018ABC 82 31 08 60 		      	asl  	r3,r3,r4
018AC0 8E 31 FE FF 		      	com  	r3,r3
018AC4 C6 45 00 00 		      	lw   	r4,[r11]
018AC8 02 42 06 18 		      	and  	r4,r4,r3
018ACC E3 45 00 00 		      	sw   	r4,[r11]
                	debugger_363:
018AD0 3A 16 00 00 		      	bra  	debugger_361
                	debugger_360:
018AD4 C3 3D FC FF 		      	lcu  	r3,-2[bp]
018AD8 86 31 7E 00 		      	cmp  	r3,r3,#63
018ADC BD 11 52 00 		      	bne  	r3,debugger_364
018AE0 C6 35 00 00 		      	lw   	r3,[r11]
018AE4 7C 03 00 00 		      	ldi  	r4,#196608
018AE8 0A 40 00 00 
018AEC C6 5D 30 00 		      	lw   	r5,24[bp]
018AF0 82 52 02 70 		      	asli 	r5,r5,#1
018AF4 02 42 0A 60 		      	asl  	r4,r4,r5
018AF8 82 31 08 18 		      	and  	r3,r3,r4
018AFC 7C 01 00 00 		      	ldi  	r4,#65536
018B00 0A 40 00 00 
018B04 C6 5D 30 00 		      	lw   	r5,24[bp]
018B08 82 52 02 70 		      	asli 	r5,r5,#1
018B0C 02 42 0A 60 		      	asl  	r4,r4,r5
018B10 82 31 08 0C 		      	cmp  	r3,r3,r4
018B14 BD 11 2C 00 		      	bne  	r3,debugger_366
018B18 C6 35 00 00 		      	lw   	r3,[r11]
018B1C 0A 40 02 00 		      	ldi  	r4,#1
018B20 C6 5D 30 00 		      	lw   	r5,24[bp]
018B24 02 42 0A 60 		      	asl  	r4,r4,r5
018B28 0A 50 02 00 		      	ldi  	r5,#1
018B2C C6 6D 30 00 		      	lw   	r6,24[bp]
018B30 82 52 0C 60 		      	asl  	r5,r5,r6
018B34 02 42 0A 40 		      	seq  	r4,r4,r5
018B38 82 31 08 18 		      	and  	r3,r3,r4
018B3C BD 01 18 00 		      	beq  	r3,debugger_366
018B40 E6 ED 31 00 		      	push 	24[bp]
018B44 39 D0 FE FF 		      	bsr  	dbg_GetDBAD
018B48 14 EF 11 00 		      	addui	sp,sp,#8
018B4C 82 30 00 1A 		      	mov  	r3,r1
018B50 E7 E1 01 00 		      	push 	r3
018B54 E6 ED 31 00 		      	push 	24[bp]
018B58 FC 01 00 00 		      	push 	#debugger_354
018B5C 65 E0 11 79 
018B60 B9 5F F9 FF 		      	bsr  	printf
018B64 14 EF 31 00 		      	addui	sp,sp,#24
018B68 3A 03 00 00 		      	bra  	debugger_367
                	debugger_366:
018B6C E6 ED 31 00 		      	push 	24[bp]
018B70 FC 01 00 00 		      	push 	#debugger_355
018B74 65 E0 BD 78 
018B78 B9 5C F9 FF 		      	bsr  	printf
018B7C 14 EF 21 00 		      	addui	sp,sp,#16
                	debugger_367:
                	debugger_364:
                	debugger_361:
018B80 3A C9 FF FF 		      	bra  	debugger_359
                	debugger_356:
018B84 C6 FD 11 00 		      	lw   	lr,8[bp]
018B88 E3 FD 21 00 		      	sw   	lr,16[bp]
018B8C BA C7 FF FF 		      	bra  	debugger_359
                	endpublic
                	
                	DispRegs:
018B90 E7 EF 01 00 		      	push 	lr
018B94 67 EE 01 00 		      	push 	xlr
018B98 E7 ED 01 00 		      	push 	bp
018B9C FC 01 00 00 		      	ldi  	xlr,#debugger_379
018BA0 0A C0 91 19 
018BA4 02 BF 01 1A 		      	mov  	bp,sp
018BA8 E7 E5 01 00 		      	push 	r11
018BAC FC 14 01 00 		      	ldi  	r11,#regs
018BB0 0A B0 A0 F7 
018BB4 E6 E5 41 00 		      	push 	32[r11]
018BB8 E6 E5 31 00 		      	push 	24[r11]
018BBC E6 E5 21 00 		      	push 	16[r11]
018BC0 E6 E5 11 00 		      	push 	8[r11]
018BC4 FC 01 00 00 		      	push 	#debugger_371
018BC8 65 E0 4D 78 
018BCC 39 52 F9 FF 		      	bsr  	printf
018BD0 14 EF 51 00 		      	addui	sp,sp,#40
018BD4 E6 E5 81 00 		      	push 	64[r11]
018BD8 E6 E5 71 00 		      	push 	56[r11]
018BDC E6 E5 61 00 		      	push 	48[r11]
018BE0 E6 E5 51 00 		      	push 	40[r11]
018BE4 FC 01 00 00 		      	push 	#debugger_372
018BE8 65 E0 E5 77 
018BEC 39 4E F9 FF 		      	bsr  	printf
018BF0 14 EF 51 00 		      	addui	sp,sp,#40
018BF4 E6 E5 C1 00 		      	push 	96[r11]
018BF8 E6 E5 B1 00 		      	push 	88[r11]
018BFC E6 E5 A1 00 		      	push 	80[r11]
018C00 E6 E5 91 00 		      	push 	72[r11]
018C04 FC 01 00 00 		      	push 	#debugger_373
018C08 65 E0 71 77 
018C0C 39 4A F9 FF 		      	bsr  	printf
018C10 14 EF 51 00 		      	addui	sp,sp,#40
018C14 E6 E5 01 01 		      	push 	128[r11]
018C18 E6 E5 F1 00 		      	push 	120[r11]
018C1C E6 E5 E1 00 		      	push 	112[r11]
018C20 E6 E5 D1 00 		      	push 	104[r11]
018C24 FC 01 00 00 		      	push 	#debugger_374
018C28 65 E0 F9 76 
018C2C 39 46 F9 FF 		      	bsr  	printf
018C30 14 EF 51 00 		      	addui	sp,sp,#40
018C34 E6 E5 41 01 		      	push 	160[r11]
018C38 E6 E5 31 01 		      	push 	152[r11]
018C3C E6 E5 21 01 		      	push 	144[r11]
018C40 E6 E5 11 01 		      	push 	136[r11]
018C44 FC 01 00 00 		      	push 	#debugger_375
018C48 65 E0 81 76 
018C4C 39 42 F9 FF 		      	bsr  	printf
018C50 14 EF 51 00 		      	addui	sp,sp,#40
018C54 E6 E5 81 01 		      	push 	192[r11]
018C58 E6 E5 71 01 		      	push 	184[r11]
018C5C E6 E5 61 01 		      	push 	176[r11]
018C60 E6 E5 51 01 		      	push 	168[r11]
018C64 FC 01 00 00 		      	push 	#debugger_376
018C68 65 E0 0D 76 
018C6C 39 3E F9 FF 		      	bsr  	printf
018C70 14 EF 51 00 		      	addui	sp,sp,#40
018C74 E6 E5 C1 01 		      	push 	224[r11]
018C78 E6 E5 B1 01 		      	push 	216[r11]
018C7C E6 E5 A1 01 		      	push 	208[r11]
018C80 E6 E5 91 01 		      	push 	200[r11]
018C84 FC 01 00 00 		      	push 	#debugger_377
018C88 65 E0 95 75 
018C8C 39 3A F9 FF 		      	bsr  	printf
018C90 14 EF 51 00 		      	addui	sp,sp,#40
018C94 E6 E5 F1 01 		      	push 	248[r11]
018C98 E6 E5 E1 01 		      	push 	240[r11]
018C9C E6 E5 D1 01 		      	push 	232[r11]
018CA0 FC 01 00 00 		      	push 	#debugger_378
018CA4 65 E0 41 75 
018CA8 B9 36 F9 FF 		      	bsr  	printf
018CAC 14 EF 41 00 		      	addui	sp,sp,#32
                	debugger_380:
018CB0 57 BF 10 00 		      	pop  	r11
018CB4 82 ED 01 1A 		      	mov  	sp,bp
018CB8 57 BF 11 00 		      	pop  	bp
018CBC 57 CF 11 00 		      	pop  	xlr
018CC0 57 FF 11 00 		      	pop  	lr
018CC4 37 FF 01 00 		      	rtl  	#0
                	debugger_379:
018CC8 C6 FD 11 00 		      	lw   	lr,8[bp]
018CCC E3 FD 21 00 		      	sw   	lr,16[bp]
018CD0 3A FC FF FF 		      	bra  	debugger_380
                	DispReg:
018CD4 E7 EF 01 00 		      	push 	lr
018CD8 67 EE 01 00 		      	push 	xlr
018CDC E7 ED 01 00 		      	push 	bp
018CE0 FC 01 00 00 		      	ldi  	xlr,#debugger_383
018CE4 0A C0 49 1A 
018CE8 02 BF 01 1A 		      	mov  	bp,sp
018CEC C6 3D 30 00 		      	lw   	r3,24[bp]
018CF0 82 31 06 70 		      	asli 	r3,r3,#3
018CF4 FC 14 01 00 		      	push 	regs[r3]
018CF8 E6 E1 A1 F7 
018CFC E6 ED 31 00 		      	push 	24[bp]
018D00 FC 01 00 00 		      	push 	#debugger_382
018D04 65 E0 1D 75 
018D08 B9 2A F9 FF 		      	bsr  	printf
018D0C 14 EF 31 00 		      	addui	sp,sp,#24
                	debugger_384:
018D10 82 ED 01 1A 		      	mov  	sp,bp
018D14 57 BF 11 00 		      	pop  	bp
018D18 57 CF 11 00 		      	pop  	xlr
018D1C 57 FF 11 00 		      	pop  	lr
018D20 37 FF 01 00 		      	rtl  	#0
                	debugger_383:
018D24 C6 FD 11 00 		      	lw   	lr,8[bp]
018D28 E3 FD 21 00 		      	sw   	lr,16[bp]
018D2C BA FC FF FF 		      	bra  	debugger_384
                	public code dbg_prompt:
018D30 E7 EF 01 00 		      	push 	lr
018D34 67 EE 01 00 		      	push 	xlr
018D38 E7 ED 01 00 		      	push 	bp
018D3C FC 01 00 00 		      	ldi  	xlr,#debugger_386
018D40 0A C0 D9 1A 
018D44 02 BF 01 1A 		      	mov  	bp,sp
018D48 FC 01 00 00 		      	push 	#debugger_385
018D4C 65 E0 01 75 
018D50 B9 21 F9 FF 		      	bsr  	printf
018D54 14 EF 11 00 		      	addui	sp,sp,#8
                	debugger_387:
018D58 82 ED 01 1A 		      	mov  	sp,bp
018D5C 57 BF 11 00 		      	pop  	bp
018D60 57 CF 11 00 		      	pop  	xlr
018D64 57 FF 11 00 		      	pop  	lr
018D68 37 FF 01 00 		      	rtl  	#0
                	debugger_386:
018D6C C6 FD 11 00 		      	lw   	lr,8[bp]
018D70 E3 FD 21 00 		      	sw   	lr,16[bp]
018D74 BA FC FF FF 		      	bra  	debugger_387
                	endpublic
                	
                	public code dbg_getDecNumber:
018D78 E7 EF 01 00 		      	push 	lr
018D7C 67 EE 01 00 		      	push 	xlr
018D80 E7 ED 01 00 		      	push 	bp
018D84 FC 01 00 00 		      	ldi  	xlr,#debugger_388
018D88 0A C0 51 1C 
018D8C 02 BF 01 1A 		      	mov  	bp,sp
018D90 15 EF 31 00 		      	subui	sp,sp,#24
018D94 E7 E5 01 00 		      	push 	r11
018D98 C6 BD 30 00 		      	lw   	r11,24[bp]
018D9C BD 15 10 00 		      	bne  	r11,debugger_389
018DA0 0A 10 00 00 		      	ldi  	r1,#0
                	debugger_391:
018DA4 57 BF 10 00 		      	pop  	r11
018DA8 82 ED 01 1A 		      	mov  	sp,bp
018DAC 57 BF 11 00 		      	pop  	bp
018DB0 57 CF 11 00 		      	pop  	xlr
018DB4 57 FF 11 00 		      	pop  	lr
018DB8 37 FF 01 00 		      	rtl  	#0
                	debugger_389:
018DBC E3 0D F0 FF 		      	sw   	r0,-8[bp]
018DC0 E3 0D D0 FF 		      	sw   	r0,-24[bp]
                	debugger_392:
018DC4 39 A3 FE FF 		      	bsr  	dbg_getchar
018DC8 82 30 00 1A 		      	mov  	r3,r1
018DCC 82 31 00 22 		      	sxc  	r3,r3
018DD0 E1 3D EC FF 		      	sc   	r3,-10[bp]
018DD4 E7 E1 01 00 		      	push 	r3
018DD8 B9 7A F9 FF 		      	bsr  	isdigit
018DDC 14 EF 11 00 		      	addui	sp,sp,#8
018DE0 82 30 00 1A 		      	mov  	r3,r1
018DE4 BD 01 14 00 		      	beq  	r3,debugger_393
018DE8 0A 30 A0 FF 		      	ldi  	r3,#-48
018DEC C6 4D F0 FF 		      	lw   	r4,-8[bp]
018DF0 07 42 14 00 		      	mul  	r4,r4,#10
018DF4 C3 5D EC FF 		      	lcu  	r5,-10[bp]
018DF8 02 42 0A 28 		      	addu 	r4,r4,r5
018DFC 82 31 08 28 		      	addu 	r3,r3,r4
018E00 E3 3D F0 FF 		      	sw   	r3,-8[bp]
018E04 E4 1D D0 FF 		      	inc  	-24[bp],#1
018E08 BA F7 FF FF 		      	bra  	debugger_392
                	debugger_393:
018E0C FC 14 01 00 		      	dec  	linendx,#1
018E10 64 F0 F1 D5 
018E14 C6 3D F0 FF 		      	lw   	r3,-8[bp]
018E18 E3 35 00 00 		      	sw   	r3,[r11]
018E1C C6 3D D0 FF 		      	lw   	r3,-24[bp]
018E20 82 11 00 1A 		      	mov  	r1,r3
018E24 3A F0 FF FF 		      	bra  	debugger_391
                	debugger_388:
018E28 C6 FD 11 00 		      	lw   	lr,8[bp]
018E2C E3 FD 21 00 		      	sw   	lr,16[bp]
018E30 BA EE FF FF 		      	bra  	debugger_391
                	endpublic
                	
                	public code dbg_processReg:
018E34 E7 EF 01 00 		      	push 	lr
018E38 67 EE 01 00 		      	push 	xlr
018E3C E7 ED 01 00 		      	push 	bp
018E40 FC 01 00 00 		      	ldi  	xlr,#debugger_394
018E44 0A C0 59 1E 
018E48 02 BF 01 1A 		      	mov  	bp,sp
018E4C 15 EF 41 00 		      	subui	sp,sp,#32
018E50 B9 91 FE FF 		      	bsr  	dbg_getchar
018E54 82 30 00 1A 		      	mov  	r3,r1
018E58 82 31 00 22 		      	sxc  	r3,r3
018E5C E1 3D FC FF 		      	sc   	r3,-2[bp]
018E60 C3 3D FC FF 		      	lcu  	r3,-2[bp]
018E64 86 41 7E 00 		      	cmp  	r4,r3,#63
018E68 3D 02 04 00 		      	beq  	r4,debugger_396
018E6C BA 01 00 00 		      	bra  	debugger_397
                	debugger_396:
018E70 39 A4 FF FF 		      	bsr  	DispRegs
018E74 BA 16 00 00 		      	bra  	debugger_395
                	debugger_397:
018E78 C3 3D FC FF 		      	lcu  	r3,-2[bp]
018E7C E7 E1 01 00 		      	push 	r3
018E80 B9 65 F9 FF 		      	bsr  	isdigit
018E84 14 EF 11 00 		      	addui	sp,sp,#8
018E88 82 30 00 1A 		      	mov  	r3,r1
018E8C BD 01 4C 00 		      	beq  	r3,debugger_398
018E90 FC 14 01 00 		      	dec  	linendx,#1
018E94 64 F0 F1 D5 
018E98 39 DC FF FF 		      	bsr  	dbg_getDecNumber
018E9C 82 30 00 1A 		      	mov  	r3,r1
018EA0 E3 3D E0 FF 		      	sw   	r3,-16[bp]
018EA4 B9 A1 FE FF 		      	bsr  	dbg_nextNonSpace
018EA8 82 30 00 1A 		      	mov  	r3,r1
018EAC 82 31 00 22 		      	sxc  	r3,r3
018EB0 E1 3D FC FF 		      	sc   	r3,-2[bp]
018EB4 C3 3D FC FF 		      	lcu  	r3,-2[bp]
018EB8 86 41 7E 00 		      	cmp  	r4,r3,#63
018EBC 3D 02 08 00 		      	beq  	r4,debugger_401
018EC0 86 41 7A 00 		      	cmp  	r4,r3,#61
018EC4 3D 02 14 00 		      	beq  	r4,debugger_402
018EC8 3A 0B 00 00 		      	bra  	debugger_403
                	debugger_401:
018ECC E6 ED E1 FF 		      	push 	-16[bp]
018ED0 B9 C0 FF FF 		      	bsr  	DispReg
018ED4 14 EF 11 00 		      	addui	sp,sp,#8
                	debugger_404:
018ED8 82 ED 01 1A 		      	mov  	sp,bp
018EDC 57 BF 11 00 		      	pop  	bp
018EE0 57 CF 11 00 		      	pop  	xlr
018EE4 57 FF 11 00 		      	pop  	lr
018EE8 37 FF 01 00 		      	rtl  	#0
                	debugger_402:
018EEC E5 ED D1 FF 		      	pea  	-24[bp]
018EF0 39 B7 FE FF 		      	bsr  	dbg_getHexNumber
018EF4 14 EF 11 00 		      	addui	sp,sp,#8
018EF8 82 30 00 1A 		      	mov  	r3,r1
018EFC E3 3D C0 FF 		      	sw   	r3,-32[bp]
018F00 C6 3D C0 FF 		      	lw   	r3,-32[bp]
018F04 BD 51 0C 00 		      	ble  	r3,debugger_405
018F08 C6 3D E0 FF 		      	lw   	r3,-16[bp]
018F0C 82 31 06 70 		      	asli 	r3,r3,#3
018F10 C6 4D D0 FF 		      	lw   	r4,-24[bp]
018F14 FC 14 01 00 		      	sw   	r4,regs[r3]
018F18 E3 41 A0 F7 
                	debugger_405:
018F1C BA F7 FF FF 		      	bra  	debugger_404
                	debugger_403:
018F20 3A F7 FF FF 		      	bra  	debugger_404
                	debugger_400:
                	debugger_398:
018F24 BA F6 FF FF 		      	bra  	debugger_404
                	debugger_395:
018F28 3A F6 FF FF 		      	bra  	debugger_404
                	debugger_394:
018F2C C6 FD 11 00 		      	lw   	lr,8[bp]
018F30 E3 FD 21 00 		      	sw   	lr,16[bp]
018F34 BA F4 FF FF 		      	bra  	debugger_404
                	endpublic
                	
                	public code dbg_parse_begin:
018F38 E7 EF 01 00 		      	push 	lr
018F3C 67 EE 01 00 		      	push 	xlr
018F40 E7 ED 01 00 		      	push 	bp
018F44 FC 01 00 00 		      	ldi  	xlr,#debugger_407
018F48 0A C0 89 1F 
018F4C 02 BF 01 1A 		      	mov  	bp,sp
018F50 E7 E5 01 00 		      	push 	r11
018F54 FC 14 01 00 		      	ldi  	r11,#linebuf
018F58 0A B0 00 D6 
018F5C FC 14 01 00 		      	sw   	r0,linendx
018F60 63 00 F0 D5 
018F64 C3 35 00 00 		      	lcu  	r3,[r11]
018F68 86 31 88 00 		      	cmp  	r3,r3,#68
018F6C BD 11 1A 00 		      	bne  	r3,debugger_408
018F70 C3 35 04 00 		      	lcu  	r3,2[r11]
018F74 86 31 84 00 		      	cmp  	r3,r3,#66
018F78 BD 11 14 00 		      	bne  	r3,debugger_408
018F7C C3 35 08 00 		      	lcu  	r3,4[r11]
018F80 86 31 8E 00 		      	cmp  	r3,r3,#71
018F84 BD 11 0E 00 		      	bne  	r3,debugger_408
018F88 C3 35 0C 00 		      	lcu  	r3,6[r11]
018F8C 86 31 7C 00 		      	cmp  	r3,r3,#62
018F90 BD 11 08 00 		      	bne  	r3,debugger_408
018F94 0A 30 08 00 		      	ldi  	r3,#4
018F98 FC 14 01 00 		      	sw   	r3,linendx
018F9C 63 30 F0 D5 
                	debugger_408:
018FA0 39 06 00 00 		      	bsr  	dbg_parse_line
018FA4 82 30 00 1A 		      	mov  	r3,r1
018FA8 82 11 00 1A 		      	mov  	r1,r3
                	debugger_410:
018FAC 57 BF 10 00 		      	pop  	r11
018FB0 82 ED 01 1A 		      	mov  	sp,bp
018FB4 57 BF 11 00 		      	pop  	bp
018FB8 57 CF 11 00 		      	pop  	xlr
018FBC 57 FF 11 00 		      	pop  	lr
018FC0 37 FF 01 00 		      	rtl  	#0
                	debugger_407:
018FC4 C6 FD 11 00 		      	lw   	lr,8[bp]
018FC8 E3 FD 21 00 		      	sw   	lr,16[bp]
018FCC 3A FC FF FF 		      	bra  	debugger_410
                	endpublic
                	
                	public code dbg_parse_line:
018FD0 E7 EF 01 00 		      	push 	lr
018FD4 67 EE 01 00 		      	push 	xlr
018FD8 E7 ED 01 00 		      	push 	bp
018FDC FC 01 00 00 		      	ldi  	xlr,#debugger_435
018FE0 0A C0 B1 39 
018FE4 02 BF 01 1A 		      	mov  	bp,sp
018FE8 15 EF 71 00 		      	subui	sp,sp,#56
018FEC E7 E5 01 00 		      	push 	r11
018FF0 67 E6 01 00 		      	push 	r12
018FF4 E7 E6 01 00 		      	push 	r13
018FF8 67 E7 01 00 		      	push 	r14
018FFC E7 E7 01 00 		      	push 	r15
019000 67 E8 01 00 		      	push 	r16
019004 E7 E8 01 00 		      	push 	r17
019008 FC 14 01 00 		      	ldi  	r11,#muol
01900C 0A B0 10 FA 
019010 FC 14 01 00 		      	ldi  	r12,#cursz
019014 0A C0 E0 F9 
019018 FC 14 01 00 		      	ldi  	r13,#curaddr
01901C 0A D0 D0 F9 
019020 FC 14 01 00 		      	ldi  	r14,#curfmt
019024 0A E0 F0 F9 
019028 FC 14 01 00 		      	ldi  	r15,#currep
01902C 0A F0 00 FA 
019030 C7 3D E0 FF 		      	lea  	r3,-16[bp]
019034 82 01 01 1A 		      	mov  	r16,r3
019038 FC 14 01 00 		      	ldi  	r17,#dbg_dbctrl
01903C 0A 10 91 F7 
                	debugger_436:
019040 FC 14 01 00 		      	lw   	r3,linendx
019044 46 30 F0 D5 
019048 86 31 A8 00 		      	cmp  	r3,r3,#84
01904C BD 31 42 06 		      	bge  	r3,debugger_437
019050 B9 51 FE FF 		      	bsr  	dbg_getchar
019054 82 30 00 1A 		      	mov  	r3,r1
019058 82 31 00 22 		      	sxc  	r3,r3
01905C E1 3D FC FF 		      	sc   	r3,-2[bp]
019060 C3 3D FC FF 		      	lcu  	r3,-2[bp]
019064 86 41 FE FF 		      	cmp  	r4,r3,#-1
019068 3D 02 28 00 		      	beq  	r4,debugger_439
01906C 86 41 40 00 		      	cmp  	r4,r3,#32
019070 3D 02 3C 00 		      	beq  	r4,debugger_440
019074 86 41 7E 00 		      	cmp  	r4,r3,#63
019078 3D 02 3A 00 		      	beq  	r4,debugger_441
01907C 86 41 E2 00 		      	cmp  	r4,r3,#113
019080 3D 02 3A 00 		      	beq  	r4,debugger_442
019084 86 41 C2 00 		      	cmp  	r4,r3,#97
019088 3D 02 3A 00 		      	beq  	r4,debugger_443
01908C 86 41 D2 00 		      	cmp  	r4,r3,#105
019090 3D 02 3E 00 		      	beq  	r4,debugger_444
019094 86 41 C8 00 		      	cmp  	r4,r3,#100
019098 3D 02 06 01 		      	beq  	r4,debugger_445
01909C 86 41 E4 00 		      	cmp  	r4,r3,#114
0190A0 3D 02 2E 03 		      	beq  	r4,debugger_446
0190A4 86 41 E6 00 		      	cmp  	r4,r3,#115
0190A8 3D 02 2E 03 		      	beq  	r4,debugger_447
0190AC 86 41 F0 00 		      	cmp  	r4,r3,#120
0190B0 3D 02 84 03 		      	beq  	r4,debugger_448
0190B4 3A 83 01 00 		      	bra  	debugger_438
                	debugger_439:
                	debugger_449:
0190B8 57 1F 11 00 		      	pop  	r17
0190BC 57 0F 11 00 		      	pop  	r16
0190C0 57 FF 10 00 		      	pop  	r15
0190C4 57 EF 10 00 		      	pop  	r14
0190C8 57 DF 10 00 		      	pop  	r13
0190CC 57 CF 10 00 		      	pop  	r12
0190D0 57 BF 10 00 		      	pop  	r11
0190D4 82 ED 01 1A 		      	mov  	sp,bp
0190D8 57 BF 11 00 		      	pop  	bp
0190DC 57 CF 11 00 		      	pop  	xlr
0190E0 57 FF 11 00 		      	pop  	lr
0190E4 37 FF 01 00 		      	rtl  	#0
                	debugger_440:
0190E8 BA 7C 01 00 		      	bra  	debugger_438
                	debugger_441:
0190EC B9 D4 FD FF 		      	bsr  	dbg_DisplayHelp
0190F0 BA 7B 01 00 		      	bra  	debugger_438
                	debugger_442:
0190F4 0A 10 02 00 		      	ldi  	r1,#1
0190F8 3A F8 FF FF 		      	bra  	debugger_449
                	debugger_443:
0190FC E6 E8 01 00 		      	push 	[r17]
019100 39 33 FE FF 		      	bsr  	dbg_arm
019104 14 EF 11 00 		      	addui	sp,sp,#8
019108 BA 78 01 00 		      	bra  	debugger_438
                	debugger_444:
01910C 39 3A FE FF 		      	bsr  	dbg_getchar
019110 82 30 00 1A 		      	mov  	r3,r1
019114 82 31 00 22 		      	sxc  	r3,r3
019118 E1 3D FC FF 		      	sc   	r3,-2[bp]
01911C C3 3D FC FF 		      	lcu  	r3,-2[bp]
019120 86 41 7E 00 		      	cmp  	r4,r3,#63
019124 3D 02 14 00 		      	beq  	r4,debugger_451
019128 86 41 60 00 		      	cmp  	r4,r3,#48
01912C 3D 02 9A 00 		      	beq  	r4,debugger_452
019130 86 41 62 00 		      	cmp  	r4,r3,#49
019134 3D 02 9E 00 		      	beq  	r4,debugger_453
019138 86 41 64 00 		      	cmp  	r4,r3,#50
01913C 3D 02 A2 00 		      	beq  	r4,debugger_454
019140 86 41 66 00 		      	cmp  	r4,r3,#51
019144 3D 02 A6 00 		      	beq  	r4,debugger_455
019148 3A 2B 00 00 		      	bra  	debugger_450
                	debugger_451:
01914C C6 38 00 00 		      	lw   	r3,[r17]
019150 7C 03 00 00 		      	and  	r3,r3,#196608
019154 8C 31 00 00 
019158 BD 11 1C 00 		      	bne  	r3,debugger_456
01915C C6 38 00 00 		      	lw   	r3,[r17]
019160 8C 31 02 00 		      	and  	r3,r3,#1
019164 86 31 02 00 		      	cmp  	r3,r3,#1
019168 BD 11 14 00 		      	bne  	r3,debugger_456
01916C 65 E0 01 00 		      	push 	#0
019170 B9 0A FE FF 		      	bsr  	dbg_GetDBAD
019174 14 EF 11 00 		      	addui	sp,sp,#8
019178 82 30 00 1A 		      	mov  	r3,r1
01917C E7 E1 01 00 		      	push 	r3
019180 FC 01 00 00 		      	push 	#debugger_411
019184 65 E0 D9 74 
019188 B9 9A F8 FF 		      	bsr  	printf
01918C 14 EF 21 00 		      	addui	sp,sp,#16
                	debugger_456:
019190 C6 38 00 00 		      	lw   	r3,[r17]
019194 7C 30 00 00 		      	and  	r3,r3,#3145728
019198 8C 31 00 00 
01919C BD 11 1C 00 		      	bne  	r3,debugger_458
0191A0 C6 38 00 00 		      	lw   	r3,[r17]
0191A4 8C 31 04 00 		      	and  	r3,r3,#2
0191A8 86 31 04 00 		      	cmp  	r3,r3,#2
0191AC BD 11 14 00 		      	bne  	r3,debugger_458
0191B0 65 E0 03 00 		      	push 	#1
0191B4 39 02 FE FF 		      	bsr  	dbg_GetDBAD
0191B8 14 EF 11 00 		      	addui	sp,sp,#8
0191BC 82 30 00 1A 		      	mov  	r3,r1
0191C0 E7 E1 01 00 		      	push 	r3
0191C4 FC 01 00 00 		      	push 	#debugger_412
0191C8 65 E0 B1 74 
0191CC 39 92 F8 FF 		      	bsr  	printf
0191D0 14 EF 21 00 		      	addui	sp,sp,#16
                	debugger_458:
0191D4 C6 38 00 00 		      	lw   	r3,[r17]
0191D8 7C 00 03 00 		      	and  	r3,r3,#50331648
0191DC 8C 31 00 00 
0191E0 BD 11 1C 00 		      	bne  	r3,debugger_460
0191E4 C6 38 00 00 		      	lw   	r3,[r17]
0191E8 8C 31 08 00 		      	and  	r3,r3,#4
0191EC 86 31 08 00 		      	cmp  	r3,r3,#4
0191F0 BD 11 14 00 		      	bne  	r3,debugger_460
0191F4 65 E0 05 00 		      	push 	#2
0191F8 B9 F9 FD FF 		      	bsr  	dbg_GetDBAD
0191FC 14 EF 11 00 		      	addui	sp,sp,#8
019200 82 30 00 1A 		      	mov  	r3,r1
019204 E7 E1 01 00 		      	push 	r3
019208 FC 01 00 00 		      	push 	#debugger_413
01920C 65 E0 89 74 
019210 B9 89 F8 FF 		      	bsr  	printf
019214 14 EF 21 00 		      	addui	sp,sp,#16
                	debugger_460:
019218 C6 38 00 00 		      	lw   	r3,[r17]
01921C 7C 00 30 00 		      	and  	r3,r3,#805306368
019220 8C 31 00 00 
019224 BD 11 1C 00 		      	bne  	r3,debugger_462
019228 C6 38 00 00 		      	lw   	r3,[r17]
01922C 8C 31 10 00 		      	and  	r3,r3,#8
019230 86 31 10 00 		      	cmp  	r3,r3,#8
019234 BD 11 14 00 		      	bne  	r3,debugger_462
019238 65 E0 07 00 		      	push 	#3
01923C 39 F1 FD FF 		      	bsr  	dbg_GetDBAD
019240 14 EF 11 00 		      	addui	sp,sp,#8
019244 82 30 00 1A 		      	mov  	r3,r1
019248 E7 E1 01 00 		      	push 	r3
01924C FC 01 00 00 		      	push 	#debugger_414
019250 65 E0 61 74 
019254 39 81 F8 FF 		      	bsr  	printf
019258 14 EF 21 00 		      	addui	sp,sp,#16
                	debugger_462:
01925C BA 08 00 00 		      	bra  	debugger_450
                	debugger_452:
019260 65 E0 01 00 		      	push 	#0
019264 39 6E FE FF 		      	bsr  	dbg_ReadSetIB
019268 14 EF 11 00 		      	addui	sp,sp,#8
01926C BA 06 00 00 		      	bra  	debugger_450
                	debugger_453:
019270 65 E0 03 00 		      	push 	#1
019274 39 6C FE FF 		      	bsr  	dbg_ReadSetIB
019278 14 EF 11 00 		      	addui	sp,sp,#8
01927C BA 04 00 00 		      	bra  	debugger_450
                	debugger_454:
019280 65 E0 05 00 		      	push 	#2
019284 39 6A FE FF 		      	bsr  	dbg_ReadSetIB
019288 14 EF 11 00 		      	addui	sp,sp,#8
01928C BA 02 00 00 		      	bra  	debugger_450
                	debugger_455:
019290 65 E0 07 00 		      	push 	#3
019294 39 68 FE FF 		      	bsr  	dbg_ReadSetIB
019298 14 EF 11 00 		      	addui	sp,sp,#8
01929C BA 00 00 00 		      	bra  	debugger_450
                	debugger_450:
0192A0 BA 45 01 00 		      	bra  	debugger_438
                	debugger_445:
0192A4 39 07 FE FF 		      	bsr  	dbg_getchar
0192A8 82 30 00 1A 		      	mov  	r3,r1
0192AC 82 31 00 22 		      	sxc  	r3,r3
0192B0 E1 3D FC FF 		      	sc   	r3,-2[bp]
0192B4 C3 3D FC FF 		      	lcu  	r3,-2[bp]
0192B8 86 41 D2 00 		      	cmp  	r4,r3,#105
0192BC 3D 02 1C 00 		      	beq  	r4,debugger_465
0192C0 86 41 7E 00 		      	cmp  	r4,r3,#63
0192C4 3D 02 52 00 		      	beq  	r4,debugger_466
0192C8 86 41 60 00 		      	cmp  	r4,r3,#48
0192CC 3D 02 F0 00 		      	beq  	r4,debugger_467
0192D0 86 41 62 00 		      	cmp  	r4,r3,#49
0192D4 3D 02 F4 00 		      	beq  	r4,debugger_468
0192D8 86 41 64 00 		      	cmp  	r4,r3,#50
0192DC 3D 02 F8 00 		      	beq  	r4,debugger_469
0192E0 86 41 66 00 		      	cmp  	r4,r3,#51
0192E4 3D 02 FC 00 		      	beq  	r4,debugger_470
0192E8 86 41 E6 00 		      	cmp  	r4,r3,#115
0192EC 3D 02 00 01 		      	beq  	r4,debugger_471
0192F0 BA 76 00 00 		      	bra  	debugger_472
                	debugger_465:
0192F4 B9 28 FE FF 		      	bsr  	dbg_nextSpace
0192F8 67 E8 01 00 		      	push 	r16
0192FC B9 35 FE FF 		      	bsr  	dbg_getHexNumber
019300 14 EF 11 00 		      	addui	sp,sp,#8
019304 82 30 00 1A 		      	mov  	r3,r1
019308 E3 3D A0 FF 		      	sw   	r3,-48[bp]
01930C C6 3D A0 FF 		      	lw   	r3,-48[bp]
019310 BD 51 2A 00 		      	ble  	r3,debugger_473
019314 E5 ED D1 FF 		      	pea  	-24[bp]
019318 39 4C FF FF 		      	bsr  	dbg_getDecNumber
01931C 14 EF 11 00 		      	addui	sp,sp,#8
019320 82 30 00 1A 		      	mov  	r3,r1
019324 E3 3D 90 FF 		      	sw   	r3,-56[bp]
019328 C6 3D 90 FF 		      	lw   	r3,-56[bp]
01932C BD 51 14 00 		      	ble  	r3,debugger_475
                	debugger_477:
019330 C6 3D 90 FF 		      	lw   	r3,-56[bp]
019334 BD 51 0E 00 		      	ble  	r3,debugger_478
019338 65 E0 01 00 		      	push 	#0
01933C 67 E8 01 00 		      	push 	r16
019340 B9 43 FB FF 		      	bsr  	disassem
019344 14 EF 21 00 		      	addui	sp,sp,#16
                	debugger_479:
019348 E4 FD 91 FF 		      	dec  	-56[bp],#1
01934C BA FC FF FF 		      	bra  	debugger_477
                	debugger_478:
019350 BA 02 00 00 		      	bra  	debugger_476
                	debugger_475:
019354 65 E0 01 00 		      	push 	#0
019358 66 E8 01 00 		      	push 	[r16]
01935C 39 78 FD FF 		      	bsr  	disassem20
019360 14 EF 21 00 		      	addui	sp,sp,#16
                	debugger_476:
                	debugger_473:
019364 BA 72 00 00 		      	bra  	debugger_464
                	debugger_466:
019368 FC 01 00 00 		      	push 	#debugger_415
01936C 65 E0 55 74 
019370 B9 5D F8 FF 		      	bsr  	printf
019374 14 EF 11 00 		      	addui	sp,sp,#8
019378 C6 38 00 00 		      	lw   	r3,[r17]
01937C 7C 03 00 00 		      	and  	r3,r3,#196608
019380 8C 31 00 00 
019384 7C 03 00 00 		      	cmp  	r3,r3,#196608
019388 86 31 00 00 
01938C BD 11 1C 00 		      	bne  	r3,debugger_480
019390 C6 38 00 00 		      	lw   	r3,[r17]
019394 8C 31 02 00 		      	and  	r3,r3,#1
019398 86 31 02 00 		      	cmp  	r3,r3,#1
01939C BD 11 14 00 		      	bne  	r3,debugger_480
0193A0 65 E0 01 00 		      	push 	#0
0193A4 39 C4 FD FF 		      	bsr  	dbg_GetDBAD
0193A8 14 EF 11 00 		      	addui	sp,sp,#8
0193AC 82 30 00 1A 		      	mov  	r3,r1
0193B0 E7 E1 01 00 		      	push 	r3
0193B4 FC 01 00 00 		      	push 	#debugger_416
0193B8 65 E0 2D 74 
0193BC 39 54 F8 FF 		      	bsr  	printf
0193C0 14 EF 21 00 		      	addui	sp,sp,#16
                	debugger_480:
0193C4 C6 38 00 00 		      	lw   	r3,[r17]
0193C8 7C 30 00 00 		      	and  	r3,r3,#3145728
0193CC 8C 31 00 00 
0193D0 7C 30 00 00 		      	cmp  	r3,r3,#3145728
0193D4 86 31 00 00 
0193D8 BD 11 1C 00 		      	bne  	r3,debugger_482
0193DC C6 38 00 00 		      	lw   	r3,[r17]
0193E0 8C 31 04 00 		      	and  	r3,r3,#2
0193E4 86 31 04 00 		      	cmp  	r3,r3,#2
0193E8 BD 11 14 00 		      	bne  	r3,debugger_482
0193EC 65 E0 03 00 		      	push 	#1
0193F0 B9 BA FD FF 		      	bsr  	dbg_GetDBAD
0193F4 14 EF 11 00 		      	addui	sp,sp,#8
0193F8 82 30 00 1A 		      	mov  	r3,r1
0193FC E7 E1 01 00 		      	push 	r3
019400 FC 01 00 00 		      	push 	#debugger_417
019404 65 E0 05 74 
019408 B9 4A F8 FF 		      	bsr  	printf
01940C 14 EF 21 00 		      	addui	sp,sp,#16
                	debugger_482:
019410 C6 38 00 00 		      	lw   	r3,[r17]
019414 7C 00 03 00 		      	and  	r3,r3,#50331648
019418 8C 31 00 00 
01941C 7C 00 03 00 		      	cmp  	r3,r3,#50331648
019420 86 31 00 00 
019424 BD 11 1C 00 		      	bne  	r3,debugger_484
019428 C6 38 00 00 		      	lw   	r3,[r17]
01942C 8C 31 08 00 		      	and  	r3,r3,#4
019430 86 31 08 00 		      	cmp  	r3,r3,#4
019434 BD 11 14 00 		      	bne  	r3,debugger_484
019438 65 E0 05 00 		      	push 	#2
01943C 39 B1 FD FF 		      	bsr  	dbg_GetDBAD
019440 14 EF 11 00 		      	addui	sp,sp,#8
019444 82 30 00 1A 		      	mov  	r3,r1
019448 E7 E1 01 00 		      	push 	r3
01944C FC 01 00 00 		      	push 	#debugger_418
019450 65 E0 DD 73 
019454 39 41 F8 FF 		      	bsr  	printf
019458 14 EF 21 00 		      	addui	sp,sp,#16
                	debugger_484:
01945C C6 38 00 00 		      	lw   	r3,[r17]
019460 7C 00 30 00 		      	and  	r3,r3,#805306368
019464 8C 31 00 00 
019468 7C 00 30 00 		      	cmp  	r3,r3,#805306368
01946C 86 31 00 00 
019470 BD 11 1C 00 		      	bne  	r3,debugger_486
019474 C6 38 00 00 		      	lw   	r3,[r17]
019478 8C 31 10 00 		      	and  	r3,r3,#8
01947C 86 31 10 00 		      	cmp  	r3,r3,#8
019480 BD 11 14 00 		      	bne  	r3,debugger_486
019484 65 E0 07 00 		      	push 	#3
019488 B9 A7 FD FF 		      	bsr  	dbg_GetDBAD
01948C 14 EF 11 00 		      	addui	sp,sp,#8
019490 82 30 00 1A 		      	mov  	r3,r1
019494 E7 E1 01 00 		      	push 	r3
019498 FC 01 00 00 		      	push 	#debugger_419
01949C 65 E0 B5 73 
0194A0 B9 37 F8 FF 		      	bsr  	printf
0194A4 14 EF 21 00 		      	addui	sp,sp,#16
                	debugger_486:
0194A8 3A 4A 00 00 		      	bra  	debugger_464
                	debugger_467:
0194AC 65 E0 01 00 		      	push 	#0
0194B0 39 5D FE FF 		      	bsr  	dbg_ReadSetDB
0194B4 14 EF 11 00 		      	addui	sp,sp,#8
0194B8 3A 48 00 00 		      	bra  	debugger_464
                	debugger_468:
0194BC 65 E0 03 00 		      	push 	#1
0194C0 39 5B FE FF 		      	bsr  	dbg_ReadSetDB
0194C4 14 EF 11 00 		      	addui	sp,sp,#8
0194C8 3A 46 00 00 		      	bra  	debugger_464
                	debugger_469:
0194CC 65 E0 05 00 		      	push 	#2
0194D0 39 59 FE FF 		      	bsr  	dbg_ReadSetDB
0194D4 14 EF 11 00 		      	addui	sp,sp,#8
0194D8 3A 44 00 00 		      	bra  	debugger_464
                	debugger_470:
0194DC 65 E0 07 00 		      	push 	#3
0194E0 39 57 FE FF 		      	bsr  	dbg_ReadSetDB
0194E4 14 EF 11 00 		      	addui	sp,sp,#8
0194E8 3A 42 00 00 		      	bra  	debugger_464
                	debugger_471:
0194EC 39 BE FD FF 		      	bsr  	dbg_getchar
0194F0 82 30 00 1A 		      	mov  	r3,r1
0194F4 82 31 00 22 		      	sxc  	r3,r3
0194F8 E1 3D FC FF 		      	sc   	r3,-2[bp]
0194FC C3 3D FC FF 		      	lcu  	r3,-2[bp]
019500 86 41 7E 00 		      	cmp  	r4,r3,#63
019504 3D 02 14 00 		      	beq  	r4,debugger_489
019508 86 41 60 00 		      	cmp  	r4,r3,#48
01950C 3D 02 AA 00 		      	beq  	r4,debugger_490
019510 86 41 62 00 		      	cmp  	r4,r3,#49
019514 3D 02 AE 00 		      	beq  	r4,debugger_491
019518 86 41 64 00 		      	cmp  	r4,r3,#50
01951C 3D 02 B2 00 		      	beq  	r4,debugger_492
019520 86 41 66 00 		      	cmp  	r4,r3,#51
019524 3D 02 B6 00 		      	beq  	r4,debugger_493
019528 3A 2F 00 00 		      	bra  	debugger_488
                	debugger_489:
01952C C6 38 00 00 		      	lw   	r3,[r17]
019530 7C 03 00 00 		      	and  	r3,r3,#196608
019534 8C 31 00 00 
019538 7C 01 00 00 		      	cmp  	r3,r3,#65536
01953C 86 31 00 00 
019540 BD 11 1C 00 		      	bne  	r3,debugger_494
019544 C6 38 00 00 		      	lw   	r3,[r17]
019548 8C 31 02 00 		      	and  	r3,r3,#1
01954C 86 31 02 00 		      	cmp  	r3,r3,#1
019550 BD 11 14 00 		      	bne  	r3,debugger_494
019554 65 E0 01 00 		      	push 	#0
019558 B9 8D FD FF 		      	bsr  	dbg_GetDBAD
01955C 14 EF 11 00 		      	addui	sp,sp,#8
019560 82 30 00 1A 		      	mov  	r3,r1
019564 E7 E1 01 00 		      	push 	r3
019568 FC 01 00 00 		      	push 	#debugger_420
01956C 65 E0 89 73 
019570 B9 1D F8 FF 		      	bsr  	printf
019574 14 EF 21 00 		      	addui	sp,sp,#16
                	debugger_494:
019578 C6 38 00 00 		      	lw   	r3,[r17]
01957C 7C 30 00 00 		      	and  	r3,r3,#3145728
019580 8C 31 00 00 
019584 7C 10 00 00 		      	cmp  	r3,r3,#1048576
019588 86 31 00 00 
01958C BD 11 1C 00 		      	bne  	r3,debugger_496
019590 C6 38 00 00 		      	lw   	r3,[r17]
019594 8C 31 04 00 		      	and  	r3,r3,#2
019598 86 31 04 00 		      	cmp  	r3,r3,#2
01959C BD 11 14 00 		      	bne  	r3,debugger_496
0195A0 65 E0 03 00 		      	push 	#1
0195A4 39 84 FD FF 		      	bsr  	dbg_GetDBAD
0195A8 14 EF 11 00 		      	addui	sp,sp,#8
0195AC 82 30 00 1A 		      	mov  	r3,r1
0195B0 E7 E1 01 00 		      	push 	r3
0195B4 FC 01 00 00 		      	push 	#debugger_421
0195B8 65 E0 5D 73 
0195BC 39 14 F8 FF 		      	bsr  	printf
0195C0 14 EF 21 00 		      	addui	sp,sp,#16
                	debugger_496:
0195C4 C6 38 00 00 		      	lw   	r3,[r17]
0195C8 7C 00 03 00 		      	and  	r3,r3,#50331648
0195CC 8C 31 00 00 
0195D0 7C 00 01 00 		      	cmp  	r3,r3,#16777216
0195D4 86 31 00 00 
0195D8 BD 11 1C 00 		      	bne  	r3,debugger_498
0195DC C6 38 00 00 		      	lw   	r3,[r17]
0195E0 8C 31 08 00 		      	and  	r3,r3,#4
0195E4 86 31 08 00 		      	cmp  	r3,r3,#4
0195E8 BD 11 14 00 		      	bne  	r3,debugger_498
0195EC 65 E0 05 00 		      	push 	#2
0195F0 B9 7A FD FF 		      	bsr  	dbg_GetDBAD
0195F4 14 EF 11 00 		      	addui	sp,sp,#8
0195F8 82 30 00 1A 		      	mov  	r3,r1
0195FC E7 E1 01 00 		      	push 	r3
019600 FC 01 00 00 		      	push 	#debugger_422
019604 65 E0 31 73 
019608 B9 0A F8 FF 		      	bsr  	printf
01960C 14 EF 21 00 		      	addui	sp,sp,#16
                	debugger_498:
019610 C6 38 00 00 		      	lw   	r3,[r17]
019614 7C 00 30 00 		      	and  	r3,r3,#805306368
019618 8C 31 00 00 
01961C 7C 00 10 00 		      	cmp  	r3,r3,#268435456
019620 86 31 00 00 
019624 BD 11 1C 00 		      	bne  	r3,debugger_500
019628 C6 38 00 00 		      	lw   	r3,[r17]
01962C 8C 31 10 00 		      	and  	r3,r3,#8
019630 86 31 10 00 		      	cmp  	r3,r3,#8
019634 BD 11 14 00 		      	bne  	r3,debugger_500
019638 65 E0 07 00 		      	push 	#3
01963C 39 71 FD FF 		      	bsr  	dbg_GetDBAD
019640 14 EF 11 00 		      	addui	sp,sp,#8
019644 82 30 00 1A 		      	mov  	r3,r1
019648 E7 E1 01 00 		      	push 	r3
01964C FC 01 00 00 		      	push 	#debugger_423
019650 65 E0 05 73 
019654 39 01 F8 FF 		      	bsr  	printf
019658 14 EF 21 00 		      	addui	sp,sp,#16
                	debugger_500:
01965C BA 08 00 00 		      	bra  	debugger_488
                	debugger_490:
019660 65 E0 01 00 		      	push 	#0
019664 39 66 FE FF 		      	bsr  	dbg_ReadSetDSB
019668 14 EF 11 00 		      	addui	sp,sp,#8
01966C BA 06 00 00 		      	bra  	debugger_488
                	debugger_491:
019670 65 E0 03 00 		      	push 	#1
019674 39 64 FE FF 		      	bsr  	dbg_ReadSetDSB
019678 14 EF 11 00 		      	addui	sp,sp,#8
01967C BA 04 00 00 		      	bra  	debugger_488
                	debugger_492:
019680 65 E0 05 00 		      	push 	#2
019684 39 62 FE FF 		      	bsr  	dbg_ReadSetDSB
019688 14 EF 11 00 		      	addui	sp,sp,#8
01968C BA 02 00 00 		      	bra  	debugger_488
                	debugger_493:
019690 65 E0 07 00 		      	push 	#3
019694 39 60 FE FF 		      	bsr  	dbg_ReadSetDSB
019698 14 EF 11 00 		      	addui	sp,sp,#8
01969C BA 00 00 00 		      	bra  	debugger_488
                	debugger_488:
0196A0 3A 0B 00 00 		      	bra  	debugger_464
                	debugger_472:
0196A4 B9 B2 FD FF 		      	bsr  	dbg_nextSpace
0196A8 65 E0 01 00 		      	push 	#0
0196AC 65 E0 01 00 		      	push 	#0
0196B0 39 6F FD FF 		      	bsr  	dbg_SetDBAD
0196B4 14 EF 21 00 		      	addui	sp,sp,#16
0196B8 65 E0 01 00 		      	push 	#0
0196BC 65 E0 03 00 		      	push 	#1
0196C0 39 6D FD FF 		      	bsr  	dbg_SetDBAD
0196C4 14 EF 21 00 		      	addui	sp,sp,#16
0196C8 65 E0 01 00 		      	push 	#0
0196CC 65 E0 05 00 		      	push 	#2
0196D0 39 6B FD FF 		      	bsr  	dbg_SetDBAD
0196D4 14 EF 21 00 		      	addui	sp,sp,#16
0196D8 65 E0 01 00 		      	push 	#0
0196DC 65 E0 07 00 		      	push 	#3
0196E0 39 69 FD FF 		      	bsr  	dbg_SetDBAD
0196E4 14 EF 21 00 		      	addui	sp,sp,#16
0196E8 65 E0 01 00 		      	push 	#0
0196EC B9 75 FD FF 		      	bsr  	dbg_arm
0196F0 14 EF 11 00 		      	addui	sp,sp,#8
0196F4 BA 00 00 00 		      	bra  	debugger_464
                	debugger_464:
0196F8 BA BA 00 00 		      	bra  	debugger_438
                	debugger_446:
0196FC 39 E7 FE FF 		      	bsr  	dbg_processReg
019700 BA B9 00 00 		      	bra  	debugger_438
                	debugger_447:
019704 39 7B FD FF 		      	bsr  	dbg_getchar
019708 82 30 00 1A 		      	mov  	r3,r1
01970C 82 31 00 22 		      	sxc  	r3,r3
019710 E1 3D FC FF 		      	sc   	r3,-2[bp]
019714 C3 3D FC FF 		      	lcu  	r3,-2[bp]
019718 86 31 E6 00 		      	cmp  	r3,r3,#115
01971C BD 11 4C 00 		      	bne  	r3,debugger_502
019720 B9 77 FD FF 		      	bsr  	dbg_getchar
019724 82 30 00 1A 		      	mov  	r3,r1
019728 82 31 00 22 		      	sxc  	r3,r3
01972C E1 3D FC FF 		      	sc   	r3,-2[bp]
019730 C3 3D FC FF 		      	lcu  	r3,-2[bp]
019734 86 31 5A 00 		      	cmp  	r3,r3,#45
019738 BD 11 18 00 		      	bne  	r3,debugger_504
01973C C6 38 00 00 		      	lw   	r3,[r17]
019740 FC FF FF 1F 		      	andi 	r3,r3,#4611686018427387903
019744 FC FF FF FF 
019748 8C 31 FE FF 
01974C E3 38 00 00 		      	sw   	r3,[r17]
019750 E6 E8 01 00 		      	push 	[r17]
019754 B9 68 FD FF 		      	bsr  	dbg_arm
019758 14 EF 11 00 		      	addui	sp,sp,#8
01975C FC 14 01 00 		      	sw   	r0,ssm
019760 63 00 B0 F9 
019764 3A 0A 00 00 		      	bra  	debugger_505
                	debugger_504:
019768 C3 3D FC FF 		      	lcu  	r3,-2[bp]
01976C 86 31 56 00 		      	cmp  	r3,r3,#43
019770 BD 01 08 00 		      	beq  	r3,debugger_508
019774 C3 3D FC FF 		      	lcu  	r3,-2[bp]
019778 86 31 DA 00 		      	cmp  	r3,r3,#109
01977C BD 11 1C 00 		      	bne  	r3,debugger_506
                	debugger_508:
019780 C6 38 00 00 		      	lw   	r3,[r17]
019784 7C 00 00 20 		      	ori  	r3,r3,#4611686018427387904
019788 7C 00 00 00 
01978C 8D 31 00 00 
019790 E3 38 00 00 		      	sw   	r3,[r17]
019794 E6 E8 01 00 		      	push 	[r17]
019798 39 60 FD FF 		      	bsr  	dbg_arm
01979C 14 EF 11 00 		      	addui	sp,sp,#8
0197A0 0A 30 02 00 		      	ldi  	r3,#1
0197A4 FC 14 01 00 		      	sw   	r3,ssm
0197A8 63 30 B0 F9 
0197AC 0A 10 02 00 		      	ldi  	r1,#1
0197B0 3A 21 FF FF 		      	bra  	debugger_449
                	debugger_506:
                	debugger_505:
                	debugger_502:
0197B4 3A A3 00 00 		      	bra  	debugger_438
                	debugger_448:
0197B8 B9 64 FD FF 		      	bsr  	dbg_getchar
0197BC 82 30 00 1A 		      	mov  	r3,r1
0197C0 82 31 00 22 		      	sxc  	r3,r3
0197C4 E1 3D FC FF 		      	sc   	r3,-2[bp]
0197C8 C3 3D FC FF 		      	lcu  	r3,-2[bp]
0197CC 86 31 5E 00 		      	cmp  	r3,r3,#47
0197D0 BD 11 BC 00 		      	bne  	r3,debugger_509
0197D4 E5 ED B1 FF 		      	pea  	-40[bp]
0197D8 39 B4 FE FF 		      	bsr  	dbg_getDecNumber
0197DC 14 EF 11 00 		      	addui	sp,sp,#8
0197E0 82 30 00 1A 		      	mov  	r3,r1
0197E4 E3 3D A0 FF 		      	sw   	r3,-48[bp]
0197E8 C6 3D A0 FF 		      	lw   	r3,-48[bp]
0197EC BD 51 06 00 		      	ble  	r3,debugger_511
0197F0 C6 3D B0 FF 		      	lw   	r3,-40[bp]
0197F4 E3 37 00 00 		      	sw   	r3,[r15]
                	debugger_511:
0197F8 B9 5C FD FF 		      	bsr  	dbg_getchar
0197FC 82 30 00 1A 		      	mov  	r3,r1
019800 82 31 00 22 		      	sxc  	r3,r3
019804 E1 3D FC FF 		      	sc   	r3,-2[bp]
019808 C3 3D FC FF 		      	lcu  	r3,-2[bp]
01980C 86 41 D2 00 		      	cmp  	r4,r3,#105
019810 3D 02 0C 00 		      	beq  	r4,debugger_514
019814 86 41 E6 00 		      	cmp  	r4,r3,#115
019818 3D 02 20 00 		      	beq  	r4,debugger_515
01981C 86 41 F0 00 		      	cmp  	r4,r3,#120
019820 3D 02 34 00 		      	beq  	r4,debugger_516
019824 BA 24 00 00 		      	bra  	debugger_513
                	debugger_514:
019828 0A 30 D2 00 		      	ldi  	r3,#105
01982C 61 37 00 00 		      	sc   	r3,[r14]
019830 67 E8 01 00 		      	push 	r16
019834 B9 8E FD FF 		      	bsr  	dbg_getHexNumber
019838 14 EF 11 00 		      	addui	sp,sp,#8
01983C 82 30 00 1A 		      	mov  	r3,r1
019840 E3 3D A0 FF 		      	sw   	r3,-48[bp]
019844 C6 3D A0 FF 		      	lw   	r3,-48[bp]
019848 BD 51 06 00 		      	ble  	r3,debugger_517
01984C 46 38 00 00 		      	lw   	r3,[r16]
019850 E3 36 00 00 		      	sw   	r3,[r13]
                	debugger_517:
019854 BA 1E 00 00 		      	bra  	debugger_513
                	debugger_515:
019858 0A 30 E6 00 		      	ldi  	r3,#115
01985C 61 37 00 00 		      	sc   	r3,[r14]
019860 67 E8 01 00 		      	push 	r16
019864 B9 88 FD FF 		      	bsr  	dbg_getHexNumber
019868 14 EF 11 00 		      	addui	sp,sp,#8
01986C 82 30 00 1A 		      	mov  	r3,r1
019870 E3 3D A0 FF 		      	sw   	r3,-48[bp]
019874 C6 3D A0 FF 		      	lw   	r3,-48[bp]
019878 BD 51 06 00 		      	ble  	r3,debugger_519
01987C 46 38 00 00 		      	lw   	r3,[r16]
019880 E3 36 00 00 		      	sw   	r3,[r13]
                	debugger_519:
019884 BA 18 00 00 		      	bra  	debugger_513
                	debugger_516:
019888 0A 30 F0 00 		      	ldi  	r3,#120
01988C 61 37 00 00 		      	sc   	r3,[r14]
019890 B9 49 FD FF 		      	bsr  	dbg_getchar
019894 82 30 00 1A 		      	mov  	r3,r1
019898 82 31 00 22 		      	sxc  	r3,r3
01989C E1 3D FC FF 		      	sc   	r3,-2[bp]
0198A0 C3 3D FC FF 		      	lcu  	r3,-2[bp]
0198A4 86 41 C4 00 		      	cmp  	r4,r3,#98
0198A8 3D 02 10 00 		      	beq  	r4,debugger_522
0198AC 86 41 C6 00 		      	cmp  	r4,r3,#99
0198B0 3D 02 16 00 		      	beq  	r4,debugger_523
0198B4 86 41 D0 00 		      	cmp  	r4,r3,#104
0198B8 3D 02 1C 00 		      	beq  	r4,debugger_524
0198BC 86 41 EE 00 		      	cmp  	r4,r3,#119
0198C0 3D 02 22 00 		      	beq  	r4,debugger_525
0198C4 BA 0A 00 00 		      	bra  	debugger_526
                	debugger_522:
0198C8 0A 30 C4 00 		      	ldi  	r3,#98
0198CC 63 36 00 00 		      	sw   	r3,[r12]
0198D0 0A 30 20 00 		      	ldi  	r3,#16
0198D4 E3 35 00 00 		      	sw   	r3,[r11]
0198D8 3A 09 00 00 		      	bra  	debugger_521
                	debugger_523:
0198DC 0A 30 C6 00 		      	ldi  	r3,#99
0198E0 63 36 00 00 		      	sw   	r3,[r12]
0198E4 0A 30 10 00 		      	ldi  	r3,#8
0198E8 E3 35 00 00 		      	sw   	r3,[r11]
0198EC BA 06 00 00 		      	bra  	debugger_521
                	debugger_524:
0198F0 0A 30 D0 00 		      	ldi  	r3,#104
0198F4 63 36 00 00 		      	sw   	r3,[r12]
0198F8 0A 30 08 00 		      	ldi  	r3,#4
0198FC E3 35 00 00 		      	sw   	r3,[r11]
019900 3A 04 00 00 		      	bra  	debugger_521
                	debugger_525:
019904 0A 30 EE 00 		      	ldi  	r3,#119
019908 63 36 00 00 		      	sw   	r3,[r12]
01990C 0A 30 04 00 		      	ldi  	r3,#2
019910 E3 35 00 00 		      	sw   	r3,[r11]
019914 BA 01 00 00 		      	bra  	debugger_521
                	debugger_526:
019918 FC 14 01 00 		      	dec  	linendx,#1
01991C 64 F0 F1 D5 
                	debugger_521:
019920 67 E8 01 00 		      	push 	r16
019924 B9 70 FD FF 		      	bsr  	dbg_getHexNumber
019928 14 EF 11 00 		      	addui	sp,sp,#8
01992C 82 30 00 1A 		      	mov  	r3,r1
019930 E3 3D A0 FF 		      	sw   	r3,-48[bp]
019934 C6 3D A0 FF 		      	lw   	r3,-48[bp]
019938 BD 51 06 00 		      	ble  	r3,debugger_527
01993C 46 38 00 00 		      	lw   	r3,[r16]
019940 E3 36 00 00 		      	sw   	r3,[r13]
                	debugger_527:
019944 BA 00 00 00 		      	bra  	debugger_513
                	debugger_513:
                	debugger_509:
019948 43 37 00 00 		      	lcu  	r3,[r14]
01994C 86 41 D2 00 		      	cmp  	r4,r3,#105
019950 3D 02 0C 00 		      	beq  	r4,debugger_530
019954 86 41 E6 00 		      	cmp  	r4,r3,#115
019958 3D 02 32 00 		      	beq  	r4,debugger_531
01995C 86 41 F0 00 		      	cmp  	r4,r3,#120
019960 3D 02 6E 00 		      	beq  	r4,debugger_532
019964 3A 6D 00 00 		      	bra  	debugger_529
                	debugger_530:
019968 FC 01 00 00 		      	push 	#debugger_424
01996C 65 E0 F9 72 
019970 B9 9D F7 FF 		      	bsr  	printf
019974 14 EF 11 00 		      	addui	sp,sp,#8
019978 E3 0D A0 FF 		      	sw   	r0,-48[bp]
                	debugger_533:
01997C C6 3D A0 FF 		      	lw   	r3,-48[bp]
019980 C6 47 00 00 		      	lw   	r4,[r15]
019984 82 31 08 0C 		      	cmp  	r3,r3,r4
019988 BD 31 18 00 		      	bge  	r3,debugger_534
01998C 39 8A F7 FF 		      	bsr  	getcharNoWait
019990 82 30 00 1A 		      	mov  	r3,r1
019994 86 31 06 00 		      	cmp  	r3,r3,#3
019998 BD 11 04 00 		      	bne  	r3,debugger_536
01999C BA 03 00 00 		      	bra  	debugger_534
                	debugger_536:
0199A0 65 E0 01 00 		      	push 	#0
0199A4 E7 E6 01 00 		      	push 	r13
0199A8 B9 76 FA FF 		      	bsr  	disassem
0199AC 14 EF 21 00 		      	addui	sp,sp,#16
                	debugger_535:
0199B0 E4 1D A0 FF 		      	inc  	-48[bp],#1
0199B4 3A F9 FF FF 		      	bra  	debugger_533
                	debugger_534:
0199B8 BA 62 00 00 		      	bra  	debugger_529
                	debugger_531:
0199BC E3 0D A0 FF 		      	sw   	r0,-48[bp]
                	debugger_538:
0199C0 C6 3D A0 FF 		      	lw   	r3,-48[bp]
0199C4 C6 47 00 00 		      	lw   	r4,[r15]
0199C8 82 31 08 0C 		      	cmp  	r3,r3,r4
0199CC BD 31 36 00 		      	bge  	r3,debugger_539
0199D0 B9 81 F7 FF 		      	bsr  	getcharNoWait
0199D4 82 30 00 1A 		      	mov  	r3,r1
0199D8 86 31 06 00 		      	cmp  	r3,r3,#3
0199DC BD 11 04 00 		      	bne  	r3,debugger_541
0199E0 3A 0B 00 00 		      	bra  	debugger_539
                	debugger_541:
0199E4 65 E0 A9 00 		      	push 	#84
0199E8 C6 36 00 00 		      	lw   	r3,[r13]
0199EC 82 31 02 78 		      	asri 	r3,r3,#1
0199F0 82 31 02 70 		      	asli 	r3,r3,#1
0199F4 FC 14 01 00 		      	lw   	r4,cmem
0199F8 46 40 30 FA 
0199FC 82 31 08 28 		      	addu 	r3,r3,r4
019A00 E7 E1 01 00 		      	push 	r3
019A04 B9 64 F7 FF 		      	bsr  	putstr
019A08 14 EF 21 00 		      	addui	sp,sp,#16
019A0C 82 30 00 1A 		      	mov  	r3,r1
019A10 82 31 02 70 		      	asli 	r3,r3,#1
019A14 C6 46 00 00 		      	lw   	r4,[r13]
019A18 02 42 06 28 		      	addu 	r4,r4,r3
019A1C E3 46 00 00 		      	sw   	r4,[r13]
019A20 FC 01 00 00 		      	push 	#debugger_425
019A24 65 E0 ED 72 
019A28 B9 86 F7 FF 		      	bsr  	printf
019A2C 14 EF 11 00 		      	addui	sp,sp,#8
                	debugger_540:
019A30 E4 1D A0 FF 		      	inc  	-48[bp],#1
019A34 BA F1 FF FF 		      	bra  	debugger_538
                	debugger_539:
019A38 BA 52 00 00 		      	bra  	debugger_529
                	debugger_532:
019A3C E3 0D A0 FF 		      	sw   	r0,-48[bp]
                	debugger_543:
019A40 C6 3D A0 FF 		      	lw   	r3,-48[bp]
019A44 C6 47 00 00 		      	lw   	r4,[r15]
019A48 82 31 08 0C 		      	cmp  	r3,r3,r4
019A4C BD 31 FC 00 		      	bge  	r3,debugger_544
019A50 B9 71 F7 FF 		      	bsr  	getcharNoWait
019A54 82 30 00 1A 		      	mov  	r3,r1
019A58 86 31 06 00 		      	cmp  	r3,r3,#3
019A5C BD 11 04 00 		      	bne  	r3,debugger_546
019A60 BA 3C 00 00 		      	bra  	debugger_544
                	debugger_546:
019A64 C6 3D A0 FF 		      	lw   	r3,-48[bp]
019A68 FC 14 01 00 		      	lw   	r4,muol
019A6C 46 40 10 FA 
019A70 82 31 08 32 		      	modu 	r3,r3,r4
019A74 BD 11 64 00 		      	bne  	r3,debugger_548
019A78 46 36 00 00 		      	lw   	r3,[r12]
019A7C 86 41 C4 00 		      	cmp  	r4,r3,#98
019A80 3D 02 10 00 		      	beq  	r4,debugger_551
019A84 86 41 C6 00 		      	cmp  	r4,r3,#99
019A88 3D 02 1E 00 		      	beq  	r4,debugger_552
019A8C 86 41 D0 00 		      	cmp  	r4,r3,#104
019A90 3D 02 2E 00 		      	beq  	r4,debugger_553
019A94 86 41 EE 00 		      	cmp  	r4,r3,#119
019A98 3D 02 3E 00 		      	beq  	r4,debugger_554
019A9C 3A 14 00 00 		      	bra  	debugger_550
                	debugger_551:
019AA0 C6 36 00 00 		      	lw   	r3,[r13]
019AA4 C6 4D A0 FF 		      	lw   	r4,-48[bp]
019AA8 82 31 08 28 		      	addu 	r3,r3,r4
019AAC E7 E1 01 00 		      	push 	r3
019AB0 FC 01 00 00 		      	push 	#debugger_426
019AB4 65 E0 CD 72 
019AB8 B9 74 F7 FF 		      	bsr  	printf
019ABC 14 EF 21 00 		      	addui	sp,sp,#16
019AC0 BA 0F 00 00 		      	bra  	debugger_550
                	debugger_552:
019AC4 C6 36 00 00 		      	lw   	r3,[r13]
019AC8 C6 4D A0 FF 		      	lw   	r4,-48[bp]
019ACC 02 42 02 70 		      	asli 	r4,r4,#1
019AD0 82 31 08 28 		      	addu 	r3,r3,r4
019AD4 E7 E1 01 00 		      	push 	r3
019AD8 FC 01 00 00 		      	push 	#debugger_427
019ADC 65 E0 AD 72 
019AE0 B9 6F F7 FF 		      	bsr  	printf
019AE4 14 EF 21 00 		      	addui	sp,sp,#16
019AE8 BA 0A 00 00 		      	bra  	debugger_550
                	debugger_553:
019AEC C6 36 00 00 		      	lw   	r3,[r13]
019AF0 C6 4D A0 FF 		      	lw   	r4,-48[bp]
019AF4 02 42 04 70 		      	asli 	r4,r4,#2
019AF8 82 31 08 28 		      	addu 	r3,r3,r4
019AFC E7 E1 01 00 		      	push 	r3
019B00 FC 01 00 00 		      	push 	#debugger_428
019B04 65 E0 8D 72 
019B08 B9 6A F7 FF 		      	bsr  	printf
019B0C 14 EF 21 00 		      	addui	sp,sp,#16
019B10 BA 05 00 00 		      	bra  	debugger_550
                	debugger_554:
019B14 C6 36 00 00 		      	lw   	r3,[r13]
019B18 C6 4D A0 FF 		      	lw   	r4,-48[bp]
019B1C 02 42 06 70 		      	asli 	r4,r4,#3
019B20 82 31 08 28 		      	addu 	r3,r3,r4
019B24 E7 E1 01 00 		      	push 	r3
019B28 FC 01 00 00 		      	push 	#debugger_429
019B2C 65 E0 6D 72 
019B30 B9 65 F7 FF 		      	bsr  	printf
019B34 14 EF 21 00 		      	addui	sp,sp,#16
019B38 BA 00 00 00 		      	bra  	debugger_550
                	debugger_550:
                	debugger_548:
                		      	     	 right here ; 
019B3C 46 36 00 00 		      	lw   	r3,[r12]
019B40 86 41 C4 00 		      	cmp  	r4,r3,#98
019B44 3D 02 10 00 		      	beq  	r4,debugger_556
019B48 86 41 C6 00 		      	cmp  	r4,r3,#99
019B4C 3D 02 24 00 		      	beq  	r4,debugger_557
019B50 86 41 D0 00 		      	cmp  	r4,r3,#104
019B54 3D 02 3C 00 		      	beq  	r4,debugger_558
019B58 86 41 EE 00 		      	cmp  	r4,r3,#119
019B5C 3D 02 54 00 		      	beq  	r4,debugger_559
019B60 BA 1B 00 00 		      	bra  	debugger_555
                	debugger_556:
019B64 C6 36 00 00 		      	lw   	r3,[r13]
019B68 C6 4D A0 FF 		      	lw   	r4,-48[bp]
019B6C 82 31 08 28 		      	addu 	r3,r3,r4
019B70 FC 14 01 00 		      	lw   	r4,bmem
019B74 46 40 20 FA 
019B78 49 32 06 00 		      	lbu  	r3,0[r4+r3]
019B7C E7 E1 01 00 		      	push 	r3
019B80 FC 01 00 00 		      	push 	#debugger_430
019B84 65 E0 55 72 
019B88 B9 5A F7 FF 		      	bsr  	printf
019B8C 14 EF 21 00 		      	addui	sp,sp,#16
019B90 BA 15 00 00 		      	bra  	debugger_555
                	debugger_557:
019B94 C6 36 00 00 		      	lw   	r3,[r13]
019B98 82 31 02 78 		      	asri 	r3,r3,#1
019B9C C6 4D A0 FF 		      	lw   	r4,-48[bp]
019BA0 82 31 08 28 		      	addu 	r3,r3,r4
019BA4 82 31 02 70 		      	asli 	r3,r3,#1
019BA8 FC 14 01 00 		      	lw   	r4,cmem
019BAC 46 40 30 FA 
019BB0 4B 32 06 00 		      	lcu  	r3,0[r4+r3]
019BB4 E7 E1 01 00 		      	push 	r3
019BB8 FC 01 00 00 		      	push 	#debugger_431
019BBC 65 E0 3D 72 
019BC0 B9 53 F7 FF 		      	bsr  	printf
019BC4 14 EF 21 00 		      	addui	sp,sp,#16
019BC8 BA 0E 00 00 		      	bra  	debugger_555
                	debugger_558:
019BCC C6 36 00 00 		      	lw   	r3,[r13]
019BD0 82 31 04 78 		      	asri 	r3,r3,#2
019BD4 C6 4D A0 FF 		      	lw   	r4,-48[bp]
019BD8 82 31 08 28 		      	addu 	r3,r3,r4
019BDC 82 31 04 70 		      	asli 	r3,r3,#2
019BE0 FC 14 01 00 		      	lw   	r4,hmem
019BE4 46 40 40 FA 
019BE8 4D 32 06 00 		      	lhu  	r3,0[r4+r3]
019BEC E7 E1 01 00 		      	push 	r3
019BF0 FC 01 00 00 		      	push 	#debugger_432
019BF4 65 E0 25 72 
019BF8 B9 4C F7 FF 		      	bsr  	printf
019BFC 14 EF 21 00 		      	addui	sp,sp,#16
019C00 BA 07 00 00 		      	bra  	debugger_555
                	debugger_559:
019C04 C6 36 00 00 		      	lw   	r3,[r13]
019C08 82 31 06 78 		      	asri 	r3,r3,#3
019C0C C6 4D A0 FF 		      	lw   	r4,-48[bp]
019C10 82 31 08 28 		      	addu 	r3,r3,r4
019C14 82 31 06 70 		      	asli 	r3,r3,#3
019C18 FC 14 01 00 		      	lw   	r4,wmem
019C1C 46 40 50 FA 
019C20 4E 32 06 00 		      	lw   	r3,0[r4+r3]
019C24 E7 E1 01 00 		      	push 	r3
019C28 FC 01 00 00 		      	push 	#debugger_433
019C2C 65 E0 09 72 
019C30 B9 45 F7 FF 		      	bsr  	printf
019C34 14 EF 21 00 		      	addui	sp,sp,#16
019C38 BA 00 00 00 		      	bra  	debugger_555
                	debugger_555:
                	debugger_545:
019C3C E4 1D A0 FF 		      	inc  	-48[bp],#1
019C40 3A C0 FF FF 		      	bra  	debugger_543
                	debugger_544:
019C44 46 36 00 00 		      	lw   	r3,[r12]
019C48 86 41 C4 00 		      	cmp  	r4,r3,#98
019C4C 3D 02 10 00 		      	beq  	r4,debugger_561
019C50 86 41 C6 00 		      	cmp  	r4,r3,#99
019C54 3D 02 14 00 		      	beq  	r4,debugger_562
019C58 86 41 D0 00 		      	cmp  	r4,r3,#104
019C5C 3D 02 1A 00 		      	beq  	r4,debugger_563
019C60 86 41 EE 00 		      	cmp  	r4,r3,#119
019C64 3D 02 20 00 		      	beq  	r4,debugger_564
019C68 3A 0A 00 00 		      	bra  	debugger_560
                	debugger_561:
019C6C C6 3D A0 FF 		      	lw   	r3,-48[bp]
019C70 C6 46 00 00 		      	lw   	r4,[r13]
019C74 02 42 06 28 		      	addu 	r4,r4,r3
019C78 E3 46 00 00 		      	sw   	r4,[r13]
                	debugger_562:
019C7C C6 3D A0 FF 		      	lw   	r3,-48[bp]
019C80 82 31 02 70 		      	asli 	r3,r3,#1
019C84 C6 46 00 00 		      	lw   	r4,[r13]
019C88 02 42 06 28 		      	addu 	r4,r4,r3
019C8C E3 46 00 00 		      	sw   	r4,[r13]
                	debugger_563:
019C90 C6 3D A0 FF 		      	lw   	r3,-48[bp]
019C94 82 31 04 70 		      	asli 	r3,r3,#2
019C98 C6 46 00 00 		      	lw   	r4,[r13]
019C9C 02 42 06 28 		      	addu 	r4,r4,r3
019CA0 E3 46 00 00 		      	sw   	r4,[r13]
                	debugger_564:
019CA4 C6 3D A0 FF 		      	lw   	r3,-48[bp]
019CA8 82 31 06 70 		      	asli 	r3,r3,#3
019CAC C6 46 00 00 		      	lw   	r4,[r13]
019CB0 02 42 06 28 		      	addu 	r4,r4,r3
019CB4 E3 46 00 00 		      	sw   	r4,[r13]
                	debugger_560:
019CB8 FC 01 00 00 		      	push 	#debugger_434
019CBC 65 E0 FD 71 
019CC0 B9 33 F7 FF 		      	bsr  	printf
019CC4 14 EF 11 00 		      	addui	sp,sp,#8
019CC8 BA 00 00 00 		      	bra  	debugger_529
                	debugger_529:
                	debugger_438:
019CCC BA 6E FE FF 		      	bra  	debugger_436
                	debugger_437:
019CD0 0A 10 00 00 		      	ldi  	r1,#0
019CD4 BA 7C FE FF 		      	bra  	debugger_449
                	debugger_435:
019CD8 C6 FD 11 00 		      	lw   	lr,8[bp]
019CDC E3 FD 21 00 		      	sw   	lr,16[bp]
019CE0 3A 7B FE FF 		      	bra  	debugger_449
                	endpublic
                	
                	public code dbg_irq:
019CE4 FC 14 01 00 		      	     	         lea   sp,dbg_stack+4088
019CE8 47 E0 81 F7 
019CEC FC 14 01 00 	         sw    r1,regs+8
019CF0 63 10 B0 F7 
019CF4 FC 14 01 00 	         sw    r2,regs+16
019CF8 63 20 C0 F7 
019CFC FC 14 01 00 	         sw    r3,regs+24
019D00 63 30 D0 F7 
019D04 FC 14 01 00 	         sw    r4,regs+32
019D08 63 40 E0 F7 
019D0C FC 14 01 00 	         sw    r5,regs+40
019D10 63 50 F0 F7 
019D14 FC 14 01 00 	         sw    r6,regs+48
019D18 63 60 00 F8 
019D1C FC 14 01 00 	         sw    r7,regs+56
019D20 63 70 10 F8 
019D24 FC 14 01 00 	         sw    r8,regs+64
019D28 63 80 20 F8 
019D2C FC 14 01 00 	         sw    r9,regs+72
019D30 63 90 30 F8 
019D34 FC 14 01 00 	         sw    r10,regs+80
019D38 63 A0 40 F8 
019D3C FC 14 01 00 	         sw    r11,regs+88
019D40 63 B0 50 F8 
019D44 FC 14 01 00 	         sw    r12,regs+96
019D48 63 C0 60 F8 
019D4C FC 14 01 00 	         sw    r13,regs+104
019D50 63 D0 70 F8 
019D54 FC 14 01 00 	         sw    r14,regs+112
019D58 63 E0 80 F8 
019D5C FC 14 01 00 	         sw    r15,regs+120
019D60 63 F0 90 F8 
019D64 FC 14 01 00 	         sw    r16,regs+128
019D68 63 00 A1 F8 
019D6C FC 14 01 00 	         sw    r17,regs+136
019D70 63 10 B1 F8 
019D74 FC 14 01 00 	         sw    r18,regs+144
019D78 63 20 C1 F8 
019D7C FC 14 01 00 	         sw    r19,regs+152
019D80 63 30 D1 F8 
019D84 FC 14 01 00 	         sw    r20,regs+160
019D88 63 40 E1 F8 
019D8C FC 14 01 00 	         sw    r21,regs+168
019D90 63 50 F1 F8 
019D94 FC 14 01 00 	         sw    r22,regs+176
019D98 63 60 01 F9 
019D9C FC 14 01 00 	         sw    r23,regs+184
019DA0 63 70 11 F9 
019DA4 FC 14 01 00 	         sw    r24,regs+192
019DA8 63 80 21 F9 
019DAC FC 14 01 00 	         sw    r25,regs+200
019DB0 63 90 31 F9 
019DB4 FC 14 01 00 	         sw    r26,regs+208
019DB8 63 A0 41 F9 
019DBC FC 14 01 00 	         sw    r27,regs+216
019DC0 63 B0 51 F9 
019DC4 FC 14 01 00 	         sw    r28,regs+224
019DC8 63 C0 61 F9 
019DCC FC 14 01 00 	         sw    r29,regs+232
019DD0 63 D0 71 F9 
019DD4 FC 14 01 00 	         sw    r30,regs+240
019DD8 63 E0 81 F9 
019DDC FC 14 01 00 	         sw    r31,regs+248
019DE0 63 F0 91 F9 
019DE4 02 10 00 3E 	         mfspr r1,cr0
019DE8 FC 14 01 00 	         sw    r1,cr0save
019DEC 63 10 A0 F9 
                	
019DF0 02 10 6C 3E 	         mfspr r1,dbctrl
019DF4 E7 E0 01 00 	         push  r1
019DF8 02 00 6C 3C 	         mtspr dbctrl,r0
019DFC 02 10 0E 3E 	         mfspr r1,dpc
019E00 E7 E0 01 00 	         push  r1
019E04 39 22 00 00 	         bsr   debugger
019E08 14 EF 21 00 	         addui sp,sp,#16
                	         
019E0C FC 14 01 00 	         lw    r1,cr0save
019E10 46 10 A0 F9 
019E14 82 00 00 3C 	         mtspr cr0,r1
019E18 FC 14 01 00 	         lw    r1,regs+8
019E1C 46 10 B0 F7 
019E20 FC 14 01 00 	         lw    r2,regs+16
019E24 46 20 C0 F7 
019E28 FC 14 01 00 	         lw    r3,regs+24
019E2C 46 30 D0 F7 
019E30 FC 14 01 00 	         lw    r4,regs+32
019E34 46 40 E0 F7 
019E38 FC 14 01 00 	         lw    r5,regs+40
019E3C 46 50 F0 F7 
019E40 FC 14 01 00 	         lw    r6,regs+48
019E44 46 60 00 F8 
019E48 FC 14 01 00 	         lw    r7,regs+56
019E4C 46 70 10 F8 
019E50 FC 14 01 00 	         lw    r8,regs+64
019E54 46 80 20 F8 
019E58 FC 14 01 00 	         lw    r9,regs+72
019E5C 46 90 30 F8 
019E60 FC 14 01 00 	         lw    r10,regs+80
019E64 46 A0 40 F8 
019E68 FC 14 01 00 	         lw    r11,regs+88
019E6C 46 B0 50 F8 
019E70 FC 14 01 00 	         lw    r12,regs+96
019E74 46 C0 60 F8 
019E78 FC 14 01 00 	         lw    r13,regs+104
019E7C 46 D0 70 F8 
019E80 FC 14 01 00 	         lw    r14,regs+112
019E84 46 E0 80 F8 
019E88 FC 14 01 00 	         lw    r15,regs+120
019E8C 46 F0 90 F8 
019E90 FC 14 01 00 	         lw    r16,regs+128
019E94 46 00 A1 F8 
019E98 FC 14 01 00 	         lw    r17,regs+136
019E9C 46 10 B1 F8 
019EA0 FC 14 01 00 	         lw    r18,regs+144
019EA4 46 20 C1 F8 
019EA8 FC 14 01 00 	         lw    r19,regs+152
019EAC 46 30 D1 F8 
019EB0 FC 14 01 00 	         lw    r20,regs+160
019EB4 46 40 E1 F8 
019EB8 FC 14 01 00 	         lw    r21,regs+168
019EBC 46 50 F1 F8 
019EC0 FC 14 01 00 	         lw    r22,regs+176
019EC4 46 60 01 F9 
019EC8 FC 14 01 00 	         lw    r23,regs+184
019ECC 46 70 11 F9 
019ED0 FC 14 01 00 	         lw    r24,regs+192
019ED4 46 80 21 F9 
019ED8 FC 14 01 00 	         lw    r25,regs+200
019EDC 46 90 31 F9 
019EE0 FC 14 01 00 	         lw    r26,regs+208
019EE4 46 A0 41 F9 
019EE8 FC 14 01 00 	         lw    r27,regs+216
019EEC 46 B0 51 F9 
019EF0 FC 14 01 00 	         lw    r28,regs+224
019EF4 46 C0 61 F9 
019EF8 FC 14 01 00 	         lw    r29,regs+232
019EFC 46 D0 71 F9 
019F00 FC 14 01 00 	         lw    r30,regs+240
019F04 46 E0 81 F9 
019F08 FC 14 01 00 	         lw    r31,regs+248
019F0C 46 F0 91 F9 
019F10 02 E0 3B 6E 	         rtd
                	     
                	endpublic
                	
                	public code debugger:
019F14 E7 EF 01 00 		      	push 	lr
019F18 67 EE 01 00 		      	push 	xlr
019F1C E7 ED 01 00 		      	push 	bp
019F20 FC 01 00 00 		      	ldi  	xlr,#debugger_568
019F24 0A C0 C1 43 
019F28 02 BF 01 1A 		      	mov  	bp,sp
019F2C 15 EF 51 00 		      	subui	sp,sp,#40
019F30 E7 E5 01 00 		      	push 	r11
019F34 67 E6 01 00 		      	push 	r12
019F38 E7 E6 01 00 		      	push 	r13
019F3C 67 E7 01 00 		      	push 	r14
019F40 FC 14 01 00 		      	ldi  	r11,#bmem
019F44 0A B0 20 FA 
019F48 FC 14 01 00 		      	ldi  	r12,#ssm
019F4C 0A C0 B0 F9 
019F50 FC 14 01 00 		      	ldi  	r13,#dbg_dbctrl
019F54 0A D0 90 F7 
019F58 C6 3D 40 00 		      	lw   	r3,32[bp]
019F5C E3 36 00 00 		      	sw   	r3,[r13]
019F60 7C D0 FF 00 		      	ldi  	r14,#4291821568
019F64 0A E0 00 00 
019F68 C6 3D 30 00 		      	lw   	r3,24[bp]
019F6C 8C 31 F8 FF 		      	and  	r3,r3,#-4
019F70 E3 3D 30 00 		      	sw   	r3,24[bp]
019F74 C6 3D 30 00 		      	lw   	r3,24[bp]
019F78 BD 01 0E 00 		      	beq  	r3,debugger_569
019F7C E6 ED 31 00 		      	push 	24[bp]
019F80 C6 3D 30 00 		      	lw   	r3,24[bp]
019F84 95 31 20 00 		      	subu 	r3,r3,#16
019F88 E7 E1 01 00 		      	push 	r3
019F8C 39 F2 FB FF 		      	bsr  	disassem20
019F90 14 EF 21 00 		      	addui	sp,sp,#16
                	debugger_569:
                	debugger_571:
019F94 FC 01 00 00 		      	push 	#debugger_567
019F98 65 E0 E1 71 
019F9C 39 D8 F6 FF 		      	bsr  	printf
019FA0 14 EF 11 00 		      	addui	sp,sp,#8
                	debugger_573:
019FA4 39 CB F6 FF 		      	bsr  	getchar
019FA8 82 30 00 1A 		      	mov  	r3,r1
019FAC E1 3D FC FF 		      	sc   	r3,-2[bp]
019FB0 46 36 00 00 		      	lw   	r3,[r12]
019FB4 BD 01 AC 00 		      	beq  	r3,debugger_575
019FB8 C3 3D FC FF 		      	lcu  	r3,-2[bp]
019FBC 86 31 E6 00 		      	cmp  	r3,r3,#115
019FC0 BD 11 2E 00 		      	bne  	r3,debugger_577
019FC4 C6 36 00 00 		      	lw   	r3,[r13]
019FC8 FC FF FF 1F 		      	andi 	r3,r3,#4611686018426404862
019FCC FC F0 FF FF 
019FD0 8C 31 FC FF 
019FD4 E3 36 00 00 		      	sw   	r3,[r13]
019FD8 C6 36 00 00 		      	lw   	r3,[r13]
019FDC 7C 00 00 20 		      	ori  	r3,r3,#4611686018427387904
019FE0 7C 00 00 00 
019FE4 8D 31 00 00 
019FE8 E3 36 00 00 		      	sw   	r3,[r13]
019FEC E6 E6 01 00 		      	push 	[r13]
019FF0 39 55 FC FF 		      	bsr  	dbg_arm
019FF4 14 EF 11 00 		      	addui	sp,sp,#8
                	debugger_579:
019FF8 57 EF 10 00 		      	pop  	r14
019FFC 57 DF 10 00 		      	pop  	r13
01A000 57 CF 10 00 		      	pop  	r12
01A004 57 BF 10 00 		      	pop  	r11
01A008 82 ED 01 1A 		      	mov  	sp,bp
01A00C 57 BF 11 00 		      	pop  	bp
01A010 57 CF 11 00 		      	pop  	xlr
01A014 57 FF 11 00 		      	pop  	lr
01A018 37 FF 01 00 		      	rtl  	#0
                	debugger_577:
01A01C C3 3D FC FF 		      	lcu  	r3,-2[bp]
01A020 86 31 5A 00 		      	cmp  	r3,r3,#45
01A024 BD 01 08 00 		      	beq  	r3,debugger_582
01A028 C3 3D FC FF 		      	lcu  	r3,-2[bp]
01A02C 86 31 06 00 		      	cmp  	r3,r3,#3
01A030 BD 11 16 00 		      	bne  	r3,debugger_580
                	debugger_582:
01A034 63 06 00 00 		      	sw   	r0,[r12]
01A038 C6 36 00 00 		      	lw   	r3,[r13]
01A03C FC FF FF 1F 		      	andi 	r3,r3,#4611686018427387903
01A040 FC FF FF FF 
01A044 8C 31 FE FF 
01A048 E3 36 00 00 		      	sw   	r3,[r13]
01A04C E6 E6 01 00 		      	push 	[r13]
01A050 39 49 FC FF 		      	bsr  	dbg_arm
01A054 14 EF 11 00 		      	addui	sp,sp,#8
01A058 3A F4 FF FF 		      	bra  	debugger_579
                	debugger_580:
01A05C C3 3D FC FF 		      	lcu  	r3,-2[bp]
01A060 86 31 DC 00 		      	cmp  	r3,r3,#110
01A064 BD 11 52 00 		      	bne  	r3,debugger_583
01A068 0A 30 04 00 		      	ldi  	r3,#2
01A06C 63 36 00 00 		      	sw   	r3,[r12]
01A070 C6 36 00 00 		      	lw   	r3,[r13]
01A074 FC FF FF 1F 		      	andi 	r3,r3,#4611686018426404863
01A078 FC F0 FF FF 
01A07C 8C 31 FE FF 
01A080 E3 36 00 00 		      	sw   	r3,[r13]
01A084 C6 36 00 00 		      	lw   	r3,[r13]
01A088 7C 08 00 00 		      	ori  	r3,r3,#524289
01A08C 8D 31 02 00 
01A090 E3 36 00 00 		      	sw   	r3,[r13]
01A094 C6 3D 30 00 		      	lw   	r3,24[bp]
01A098 C9 31 16 00 		      	lbu  	r3,[r3+r11]
01A09C 8C 31 FE 00 		      	and  	r3,r3,#127
01A0A0 86 31 F8 00 		      	cmp  	r3,r3,#124
01A0A4 BD 11 12 00 		      	bne  	r3,debugger_585
01A0A8 C6 3D 30 00 		      	lw   	r3,24[bp]
01A0AC 94 31 08 00 		      	addu 	r3,r3,#4
01A0B0 C9 31 16 00 		      	lbu  	r3,[r3+r11]
01A0B4 8C 31 FE 00 		      	and  	r3,r3,#127
01A0B8 86 31 F8 00 		      	cmp  	r3,r3,#124
01A0BC BD 11 06 00 		      	bne  	r3,debugger_585
01A0C0 E4 CD 30 00 		      	inc  	24[bp],#12
01A0C4 BA 04 00 00 		      	bra  	debugger_586
                	debugger_585:
01A0C8 C6 3D 30 00 		      	lw   	r3,24[bp]
01A0CC C9 31 16 00 		      	lbu  	r3,[r3+r11]
01A0D0 8C 31 FE 00 		      	and  	r3,r3,#127
01A0D4 86 31 F8 00 		      	cmp  	r3,r3,#124
01A0D8 BD 11 06 00 		      	bne  	r3,debugger_587
01A0DC E4 8D 30 00 		      	inc  	24[bp],#8
01A0E0 3A 01 00 00 		      	bra  	debugger_588
                	debugger_587:
01A0E4 E4 4D 30 00 		      	inc  	24[bp],#4
                	debugger_588:
                	debugger_586:
01A0E8 E6 ED 31 00 		      	push 	24[bp]
01A0EC 65 E0 01 00 		      	push 	#0
01A0F0 39 27 FC FF 		      	bsr  	dbg_SetDBAD
01A0F4 14 EF 21 00 		      	addui	sp,sp,#16
01A0F8 E6 E6 01 00 		      	push 	[r13]
01A0FC B9 33 FC FF 		      	bsr  	dbg_arm
01A100 14 EF 11 00 		      	addui	sp,sp,#8
01A104 BA DE FF FF 		      	bra  	debugger_579
                	debugger_583:
01A108 BA 07 00 00 		      	bra  	debugger_576
                	debugger_575:
01A10C C3 3D FC FF 		      	lcu  	r3,-2[bp]
01A110 86 31 1A 00 		      	cmp  	r3,r3,#13
01A114 BD 11 04 00 		      	bne  	r3,debugger_589
01A118 BA 06 00 00 		      	bra  	debugger_574
                	debugger_589:
01A11C C3 3D FC FF 		      	lcu  	r3,-2[bp]
01A120 86 31 18 00 		      	cmp  	r3,r3,#12
01A124 BD 11 08 00 		      	bne  	r3,debugger_591
01A128 B9 94 F4 FF 		      	     	                           bsr ClearScreen
                	                       
01A12C 39 0E FC FF 		      	bsr  	dbg_HomeCursor
01A130 BA 03 00 00 		      	bra  	debugger_574
                	debugger_591:
01A134 C3 3D FC FF 		      	lcu  	r3,-2[bp]
01A138 E7 E1 01 00 		      	push 	r3
01A13C B9 10 F6 FF 		      	bsr  	putch
01A140 14 EF 11 00 		      	addui	sp,sp,#8
                	debugger_576:
01A144 0A 30 02 00 		      	ldi  	r3,#1
01A148 BD 11 2E FF 		      	bne  	r3,debugger_573
                	debugger_574:
01A14C 39 01 FC FF 		      	bsr  	dbg_GetCursorRow
01A150 82 30 00 1A 		      	mov  	r3,r1
01A154 82 31 00 20 		      	sxb  	r3,r3
01A158 E3 3D E0 FF 		      	sw   	r3,-16[bp]
01A15C B9 03 FC FF 		      	bsr  	dbg_GetCursorCol
01A160 82 30 00 1A 		      	mov  	r3,r1
01A164 82 31 00 20 		      	sxb  	r3,r3
01A168 E3 3D D0 FF 		      	sw   	r3,-24[bp]
01A16C E3 0D B0 FF 		      	sw   	r0,-40[bp]
                	debugger_593:
01A170 C6 3D B0 FF 		      	lw   	r3,-40[bp]
01A174 86 31 A8 00 		      	cmp  	r3,r3,#84
01A178 BD 31 26 00 		      	bge  	r3,debugger_594
01A17C C6 3D E0 FF 		      	lw   	r3,-16[bp]
01A180 87 31 A8 00 		      	mul  	r3,r3,#84
01A184 C6 4D B0 FF 		      	lw   	r4,-40[bp]
01A188 82 31 08 28 		      	addu 	r3,r3,r4
01A18C 82 31 04 70 		      	asli 	r3,r3,#2
01A190 4D 37 06 00 		      	lhu  	r3,0[r14+r3]
01A194 8C 31 FE 07 		      	and  	r3,r3,#1023
01A198 E7 E1 01 00 		      	push 	r3
01A19C B9 23 FC FF 		      	bsr  	CvtScreenToAscii
01A1A0 14 EF 11 00 		      	addui	sp,sp,#8
01A1A4 82 30 00 1A 		      	mov  	r3,r1
01A1A8 82 31 00 22 		      	sxc  	r3,r3
01A1AC C6 4D B0 FF 		      	lw   	r4,-40[bp]
01A1B0 02 42 02 70 		      	asli 	r4,r4,#1
01A1B4 FC 14 01 00 		      	sc   	r3,linebuf[r4]
01A1B8 61 32 00 D6 
                	debugger_595:
01A1BC E4 1D B0 FF 		      	inc  	-40[bp],#1
01A1C0 3A F6 FF FF 		      	bra  	debugger_593
                	debugger_594:
01A1C4 B9 AE FD FF 		      	bsr  	dbg_parse_begin
01A1C8 82 30 00 1A 		      	mov  	r3,r1
01A1CC 86 31 02 00 		      	cmp  	r3,r3,#1
01A1D0 BD 11 04 00 		      	bne  	r3,debugger_596
01A1D4 3A 01 00 00 		      	bra  	debugger_572
                	debugger_596:
01A1D8 BA B7 FF FF 		      	bra  	debugger_571
                	debugger_572:
01A1DC BA C3 FF FF 		      	bra  	debugger_579
                	debugger_568:
01A1E0 C6 FD 11 00 		      	lw   	lr,8[bp]
01A1E4 E3 FD 21 00 		      	sw   	lr,16[bp]
01A1E8 3A C2 FF FF 		      	bra  	debugger_579
                	endpublic
                	
                	public code dbg_init:
01A1EC E7 EF 01 00 		      	push 	lr
01A1F0 67 EE 01 00 		      	push 	xlr
01A1F4 E7 ED 01 00 		      	push 	bp
01A1F8 FC 01 00 00 		      	ldi  	xlr,#debugger_598
01A1FC 0A C0 61 45 
01A200 02 BF 01 1A 		      	mov  	bp,sp
01A204 FC 01 00 00 		      	push 	#dbg_irq
01A208 65 E0 C9 39 
01A20C 65 E0 E1 03 		      	push 	#496
01A210 B9 D8 FB FF 		      	bsr  	set_vector
01A214 14 EF 21 00 		      	addui	sp,sp,#16
01A218 FC 01 00 00 		      	push 	#dbg_irq
01A21C 65 E0 C9 39 
01A220 65 E0 DF 03 		      	push 	#495
01A224 39 D6 FB FF 		      	bsr  	set_vector
01A228 14 EF 21 00 		      	addui	sp,sp,#16
01A22C FC 14 01 00 		      	sw   	r0,ssm
01A230 63 00 B0 F9 
01A234 FC 14 01 00 		      	sw   	r0,bmem
01A238 63 00 20 FA 
01A23C FC 14 01 00 		      	sw   	r0,cmem
01A240 63 00 30 FA 
01A244 FC 14 01 00 		      	sw   	r0,hmem
01A248 63 00 40 FA 
01A24C FC 14 01 00 		      	sw   	r0,wmem
01A250 63 00 50 FA 
01A254 7C 01 00 00 		      	ldi  	r3,#65536
01A258 0A 30 00 00 
01A25C FC 14 01 00 		      	sw   	r3,curaddr
01A260 63 30 D0 F9 
01A264 0A 30 20 00 		      	ldi  	r3,#16
01A268 FC 14 01 00 		      	sw   	r3,muol
01A26C 63 30 10 FA 
01A270 0A 30 C4 00 		      	ldi  	r3,#98
01A274 FC 14 01 00 		      	sw   	r3,cursz
01A278 63 30 E0 F9 
01A27C 0A 30 F0 00 		      	ldi  	r3,#120
01A280 FC 14 01 00 		      	sc   	r3,curfmt
01A284 61 30 F0 F9 
01A288 0A 30 02 00 		      	ldi  	r3,#1
01A28C FC 14 01 00 		      	sw   	r3,currep
01A290 63 30 00 FA 
01A294 FC 14 01 00 		      	sw   	r0,dbg_dbctrl
01A298 63 00 90 F7 
                	debugger_599:
01A29C 82 ED 01 1A 		      	mov  	sp,bp
01A2A0 57 BF 11 00 		      	pop  	bp
01A2A4 57 CF 11 00 		      	pop  	xlr
01A2A8 57 FF 11 00 		      	pop  	lr
01A2AC 37 FF 01 00 		      	rtl  	#0
                	debugger_598:
01A2B0 C6 FD 11 00 		      	lw   	lr,8[bp]
01A2B4 E3 FD 21 00 		      	sw   	lr,16[bp]
01A2B8 BA FC FF FF 		      	bra  	debugger_599
                	endpublic
                	
                		code
01A2BC 00 00 00 00 		align	1
                	
                	putaddr:
01A2C0 15 EF 21 00 		      	subui	sp,sp,#16
01A2C4 E7 ED 01 00 		      	push 	bp
01A2C8 02 BF 01 1A 		      	mov  	bp,sp
01A2CC E7 EF 01 00 		      	     	        push  lr
01A2D0 C6 1D 30 00 	        lw    r1,24[bp]
01A2D4 B9 F3 EC FF 	        bsr   DisplayHalf
01A2D8 0A 10 1A 00 	        ldi   r1,#'\r'
01A2DC 39 C2 F4 FF 	        bsr   DisplayChar
01A2E0 57 FF 11 00 	        pop   lr
                	    
                	ramtest_3:
01A2E4 82 ED 01 1A 		      	mov  	sp,bp
01A2E8 57 BF 11 00 		      	pop  	bp
01A2EC 37 FF 21 00 		      	rtl  	#16
                	badaddr:
01A2F0 15 EF 21 00 		      	subui	sp,sp,#16
01A2F4 E7 ED 01 00 		      	push 	bp
01A2F8 02 BF 01 1A 		      	mov  	bp,sp
01A2FC E7 EF 01 00 		      	     	        push   lr
01A300 7C C1 00 00 	        lea    r1,msgBadAddr
01A304 47 10 30 01 
01A308 B9 FA EC FF 	        bsr    DisplayString16
01A30C C6 1D 30 00 	        lw     r1,24[bp]
01A310 39 EC EC FF 	        bsr    DisplayHalf
01A314 0A 10 7A 00 	        ldi    r1,#'='
01A318 B9 BA F4 FF 	        bsr    DisplayChar
01A31C C6 1D 30 00 	        lw     r1,24[bp]
01A320 C6 10 00 00 	        lw     r1,[r1]
01A324 B9 E9 EC FF 	        bsr    DisplayHalf
01A328 B9 1D F5 FF 	        bsr    CRLF
01A32C 57 FF 11 00 	        pop    lr
                	        
                	ramtest_6:
01A330 82 ED 01 1A 		      	mov  	sp,bp
01A334 57 BF 11 00 		      	pop  	bp
01A338 37 FF 21 00 		      	rtl  	#16
                	ramtest_between:
01A33C E7 EF 01 00 		      	push 	lr
01A340 67 EE 01 00 		      	push 	xlr
01A344 E7 ED 01 00 		      	push 	bp
01A348 FC 01 00 00 		      	ldi  	xlr,#ramtest_9
01A34C 0A C0 19 49 
01A350 02 BF 01 1A 		      	mov  	bp,sp
01A354 15 EF 31 00 		      	subui	sp,sp,#24
01A358 C6 3D 30 00 		      	lw   	r3,24[bp]
01A35C 82 31 06 72 		      	lsr  	r3,r3,#3
01A360 E3 3D 30 00 		      	sw   	r3,24[bp]
01A364 C6 3D 40 00 		      	lw   	r3,32[bp]
01A368 82 31 06 72 		      	lsr  	r3,r3,#3
01A36C E3 3D 40 00 		      	sw   	r3,32[bp]
01A370 C6 3D 30 00 		      	lw   	r3,24[bp]
01A374 E3 3D F0 FF 		      	sw   	r3,-8[bp]
01A378 E3 0D E0 FF 		      	sw   	r0,-16[bp]
01A37C C6 3D 30 00 		      	lw   	r3,24[bp]
01A380 E3 3D F0 FF 		      	sw   	r3,-8[bp]
                	ramtest_10:
01A384 C6 3D F0 FF 		      	lw   	r3,-8[bp]
01A388 C6 4D 40 00 		      	lw   	r4,32[bp]
01A38C 82 31 08 0C 		      	cmp  	r3,r3,r4
01A390 BD 31 2A 00 		      	bge  	r3,ramtest_11
01A394 C6 3D F0 FF 		      	lw   	r3,-8[bp]
01A398 C6 4D 50 00 		      	lw   	r4,40[bp]
01A39C E3 41 00 00 		      	sw   	r4,[r3]
01A3A0 C6 3D F0 FF 		      	lw   	r3,-8[bp]
01A3A4 8C 31 FE 1F 		      	and  	r3,r3,#4095
01A3A8 BD 11 1A 00 		      	bne  	r3,ramtest_13
01A3AC C6 3D F0 FF 		      	lw   	r3,-8[bp]
01A3B0 82 31 18 78 		      	asri 	r3,r3,#12
01A3B4 E7 E1 01 00 		      	push 	r3
01A3B8 39 E1 FF FF 		      	bsr  	putaddr
01A3BC 14 EF 11 00 		      	addui	sp,sp,#8
01A3C0 B9 43 F6 FF 		      	bsr  	getcharNoWait
01A3C4 82 30 00 1A 		      	mov  	r3,r1
01A3C8 E1 3D DC FF 		      	sc   	r3,-18[bp]
01A3CC C3 3D DC FF 		      	lcu  	r3,-18[bp]
01A3D0 86 31 06 00 		      	cmp  	r3,r3,#3
01A3D4 BD 11 04 00 		      	bne  	r3,ramtest_15
01A3D8 3A 14 00 00 		      	bra  	ramtest_8
                	ramtest_15:
                	ramtest_13:
                	ramtest_12:
01A3DC E4 8D F0 FF 		      	inc  	-8[bp],#8
01A3E0 BA F4 FF FF 		      	bra  	ramtest_10
                	ramtest_11:
01A3E4 39 06 F5 FF 		      	     	bsr CRLF 
01A3E8 C6 3D 30 00 		      	lw   	r3,24[bp]
01A3EC E3 3D F0 FF 		      	sw   	r3,-8[bp]
                	ramtest_17:
01A3F0 C6 3D F0 FF 		      	lw   	r3,-8[bp]
01A3F4 C6 4D 40 00 		      	lw   	r4,32[bp]
01A3F8 82 31 08 0C 		      	cmp  	r3,r3,r4
01A3FC BD 31 3E 00 		      	bge  	r3,ramtest_18
01A400 C6 3D F0 FF 		      	lw   	r3,-8[bp]
01A404 C6 31 00 00 		      	lw   	r3,[r3]
01A408 C6 4D 50 00 		      	lw   	r4,40[bp]
01A40C 82 31 08 0C 		      	cmp  	r3,r3,r4
01A410 BD 01 0A 00 		      	beq  	r3,ramtest_20
01A414 E6 ED F1 FF 		      	push 	-8[bp]
01A418 39 DB FF FF 		      	bsr  	badaddr
01A41C 14 EF 11 00 		      	addui	sp,sp,#8
01A420 E4 1D E0 FF 		      	inc  	-16[bp],#1
                	ramtest_20:
01A424 C6 3D E0 FF 		      	lw   	r3,-16[bp]
01A428 86 31 14 00 		      	cmp  	r3,r3,#10
01A42C BD 51 04 00 		      	ble  	r3,ramtest_22
01A430 3A 09 00 00 		      	bra  	ramtest_18
                	ramtest_22:
01A434 C6 3D F0 FF 		      	lw   	r3,-8[bp]
01A438 8C 31 FE 1F 		      	and  	r3,r3,#4095
01A43C BD 11 1A 00 		      	bne  	r3,ramtest_24
01A440 C6 3D F0 FF 		      	lw   	r3,-8[bp]
01A444 82 31 18 78 		      	asri 	r3,r3,#12
01A448 E7 E1 01 00 		      	push 	r3
01A44C B9 CE FF FF 		      	bsr  	putaddr
01A450 14 EF 11 00 		      	addui	sp,sp,#8
01A454 39 31 F6 FF 		      	bsr  	getcharNoWait
01A458 82 30 00 1A 		      	mov  	r3,r1
01A45C E1 3D DC FF 		      	sc   	r3,-18[bp]
01A460 C3 3D DC FF 		      	lcu  	r3,-18[bp]
01A464 86 31 06 00 		      	cmp  	r3,r3,#3
01A468 BD 11 04 00 		      	bne  	r3,ramtest_26
01A46C BA 01 00 00 		      	bra  	ramtest_8
                	ramtest_26:
                	ramtest_24:
                	ramtest_19:
01A470 E4 8D F0 FF 		      	inc  	-8[bp],#8
01A474 BA EF FF FF 		      	bra  	ramtest_17
                	ramtest_18:
                	ramtest_8:
                	ramtest_28:
01A478 82 ED 01 1A 		      	mov  	sp,bp
01A47C 57 BF 11 00 		      	pop  	bp
01A480 57 CF 11 00 		      	pop  	xlr
01A484 57 FF 11 00 		      	pop  	lr
01A488 37 FF 01 00 		      	rtl  	#0
                	ramtest_9:
01A48C C6 FD 11 00 		      	lw   	lr,8[bp]
01A490 E3 FD 21 00 		      	sw   	lr,16[bp]
01A494 BA FC FF FF 		      	bra  	ramtest_28
                	public code ramtest:
01A498 E7 EF 01 00 		      	push 	lr
01A49C 67 EE 01 00 		      	push 	xlr
01A4A0 E7 ED 01 00 		      	push 	bp
01A4A4 FC 01 00 00 		      	ldi  	xlr,#ramtest_29
01A4A8 0A C0 A9 4A 
01A4AC 02 BF 01 1A 		      	mov  	bp,sp
01A4B0 FC 2A 55 15 		      	push 	#-6149008514797120171
01A4B4 7C AA AA 55 
01A4B8 65 E0 AB AA 
01A4BC 7C 01 00 00 		      	push 	#65536
01A4C0 65 E0 01 00 
01A4C4 FC 00 00 00 		      	push 	#32768
01A4C8 65 E0 01 00 
01A4CC 39 CE FF FF 		      	bsr  	ramtest_between
01A4D0 14 EF 31 00 		      	addui	sp,sp,#24
01A4D4 7C D5 AA 2A 		      	push 	#6149008514797120170
01A4D8 FC 55 55 AA 
01A4DC 65 E0 55 55 
01A4E0 7C 01 00 00 		      	push 	#65536
01A4E4 65 E0 01 00 
01A4E8 FC 00 00 00 		      	push 	#32768
01A4EC 65 E0 01 00 
01A4F0 B9 C9 FF FF 		      	bsr  	ramtest_between
01A4F4 14 EF 31 00 		      	addui	sp,sp,#24
01A4F8 FC 2A 55 15 		      	push 	#-6149008514797120171
01A4FC 7C AA AA 55 
01A500 65 E0 AB AA 
01A504 7C 00 08 00 		      	push 	#134217728
01A508 65 E0 01 00 
01A50C 7C 02 00 00 		      	push 	#131072
01A510 65 E0 01 00 
01A514 B9 5D CB FF 		      	bsr  	ramtest_betweem
01A518 14 EF 31 00 		      	addui	sp,sp,#24
01A51C 7C D5 AA 2A 		      	push 	#6149008514797120170
01A520 FC 55 55 AA 
01A524 65 E0 55 55 
01A528 7C 00 08 00 		      	push 	#134217728
01A52C 65 E0 01 00 
01A530 7C 02 00 00 		      	push 	#131072
01A534 65 E0 01 00 
01A538 39 59 CB FF 		      	bsr  	ramtest_betweem
01A53C 14 EF 31 00 		      	addui	sp,sp,#24
                	ramtest_30:
01A540 82 ED 01 1A 		      	mov  	sp,bp
01A544 57 BF 11 00 		      	pop  	bp
01A548 57 CF 11 00 		      	pop  	xlr
01A54C 57 FF 11 00 		      	pop  	lr
01A550 37 FF 01 00 		      	rtl  	#0
                	ramtest_29:
01A554 C6 FD 11 00 		      	lw   	lr,8[bp]
01A558 E3 FD 21 00 		      	sw   	lr,16[bp]
01A55C BA FC FF FF 		      	bra  	ramtest_30
                	endpublic
                	
                		rodata
                		align	16                	
                		align	8                	
                		extern	RTCC_BUF
                		extern	Milliseconds
                		extern	Milliseconds
                		rodata
                		align	16                	
                		align	8                	
                	;	global	sprites
                	;	global	pSpriteController
                	;	global	demo_stack
                		extern	getcharNoWait
                	;	global	sprite_main
                	;	global	sprite_main
                	;include "FMTK_Equates.inc"
                		rodata
                		align	16                	
                		align	8                	
                	FMTKc_94:
01B000 25 00 33 00 64 00 20 00 		dc	37,51,100,32,37,51,100,32
01B008 25 00 33 00 64 00 20 00 
01B010 25 00 30 00 38 00 58 00 		dc	37,48,56,88,32,37,48,56
01B018 20 00 25 00 30 00 38 00 
01B020 58 00 20 00 25 00 30 00 		dc	88,32,37,48,56,88,32,37
01B028 38 00 58 00 20 00 25 00 
01B030 30 00 38 00 58 00 0D 00 		dc	48,56,88,13,10,0
01B038 0A 00 00 00             
                	FMTKc_93:
01B03C 43 00 50 00 55 00 20 00 		dc	67,80,85,32,80,114,105,32
01B044 50 00 72 00 69 00 20 00 
01B04C 20 00 20 00 54 00 61 00 		dc	32,32,84,97,115,107,32,32
01B054 73 00 6B 00 20 00 20 00 
01B05C 20 00 20 00 20 00 50 00 		dc	32,32,32,80,114,101,118,32
01B064 72 00 65 00 76 00 20 00 
01B06C 20 00 20 00 20 00 20 00 		dc	32,32,32,32,78,101,120,116
01B074 4E 00 65 00 78 00 74 00 
01B07C 20 00 20 00 20 00 54 00 		dc	32,32,32,84,105,109,101,111
01B084 69 00 6D 00 65 00 6F 00 
01B08C 75 00 74 00 0D 00 0A 00 		dc	117,116,13,10,0
01B094 00 00                   
                	FMTKc_68:
01B096 4E 00 6F 00 20 00 65 00 		dc	78,111,32,101,110,116,114,105
01B09E 6E 00 74 00 72 00 69 00 
01B0A6 65 00 73 00 20 00 69 00 		dc	101,115,32,105,110,32,114,101
01B0AE 6E 00 20 00 72 00 65 00 
01B0B6 61 00 64 00 79 00 20 00 		dc	97,100,121,32,113,117,101,117
01B0BE 71 00 75 00 65 00 75 00 
01B0C6 65 00 2E 00 00 00       		dc	101,46,0
                	;	global	panic
                		extern	SelectTasktoRun
                	;	global	chkTCB
                	;	global	IdleTask
                	;	global	GetJCBPtr
                	;	global	video_bufs
                	;	global	getCPU
                	;	global	ExitTask
                	;	global	iof_switch
                		extern	getcharNoWait
                		extern	set_vector
                	;	global	iof_sema
                	;	global	FMTKInitialize
                	;	global	sys_stacks
                		extern	UnlockIOF
                	;	global	BIOS_RespMbx
                	;	global	DisplayIRQLive
                	;	global	BIOS1_sema
                	;	global	sys_sema
                	;	global	readyQ
                		extern	UnlockSYS
                	;	global	sysstack
                	;	global	freeTCB
                		extern	RequestIOFocus
                	;	global	TimeoutList
                		extern	LockSYS
                	;	global	stacks
                	;	global	SetBound50
                	;	global	SetBound51
                	;	global	tempTCB
                	;	global	SetBound48
                	;	global	SetBound49
                		extern	printf
                	;	global	bios_stacks
                	;	global	StartTask
                	;	global	jcbs
                		extern	FreeMbx
                	;	global	tcbs
                		extern	putstr
                	;	global	IOFocusTbl
                	;	global	irq_stack
                	;	global	IOFocusNdx
                	;	global	DumpTaskList
                	;	global	fmtk_irq_stack
                	;	global	runningTCB
                	;	global	GetRunningTCB
                	;	global	message
                	;	global	SetRunningTCB
                	;	global	mailbox
                	;	global	TimerIRQ
                	;	global	FMTK_Inited
                	;	global	RescheduleIRQ
                	;	global	RescheduleIRQ
                		rodata
01B0CC 00 00 00 00             		align	1
                	
                		align	8                	
                	;	global	HomeCursor
                	;	global	AsciiToScreen
                	;	global	ScreenToAscii
                	;	global	CalcScreenLocation
                	;	global	UpdateCursorPos
                		extern	GetJCBPtr
                	;	global	CRLF
                	;	global	ScrollUp
                	;	global	SetVideoReg
                	;	global	ClearScreen
                	;	global	DisplayString
                	;	global	DisplayChar
                	;	global	IncrementCursorPos
                	;	global	GetCurrAttr
                	;	global	SetCurrAttr
                	;	global	BlankLine
                	;	global	DisplayStringCRLF
                	;	global	GetScreenLocation
                		extern	IOFocusNdx
                	;	global	SetCursorCol
                	;	global	GetCursorPos
                	;	global	SetCursorPos
                	;	global	SetCursorPos
                	;------------------------------------------------------------------------------
                	; Lock the semaphore.
                	;
                	; Occasionally the semaphore fails to lock correctly and the system hangs up
                	; waiting for the semaphore lock. This could be because the SWCR works but
                	; cr0 doesn't get updated, or the bfextu instruction fails?? So the lock is
                	; tested to see if the current task is the one holding the lock. If same task
                	; that holds the lock is attempting a new lock, then we just return and assume
                	; a successful lock. The problem with this approach is if the task attempts a
                	; lock both while running and during an interrupt routine. The resource wouldn't
                	; be corectly protected in that case. So no BIOS calls during interrupt
                	; routines! The BIOS isn't re-entrant.
                	;
                	; Parameters:
                	; r1 = address of semaphore to lock
                	;------------------------------------------------------------------------------
                	
                	LockSema:
01B0D0 67 E1 01 00             	    push    r2
01B0D4 E7 E1 01 00             	    push    r3
                	
                	    ; Interrupts should be already enabled or there would be no way for a locked
                	    ; semaphore to clear. Let's enable interrupts just in case.
01B0D8 02 00 00 6E             	    cli
                	.0001:
01B0DC DC 30 00 00             	    lwar    r3,[r1]
01B0E0 BD 01 0A 00             	    beq     r3,.0003            ; branch if free
01B0E4 82 21 30 2C             	    cmpu    r2,r3,tr            ; test if already locked by this task
01B0E8 3D 01 12 00             	    beq     r2,.0002
01B0EC 82 21 60 34             	    chk     r2,r3,b48           ; check if locked by a valid task
01B0F0 3D 11 F6 FF             	    bne     r2,.0001
                	.0003:
01B0F4 EE 80 01 00             	    swcr    tr,[r1]             ; try and lock it
01B0F8 3F 00 00 00             	    nop                         ; cr0 needs time to update???
01B0FC 3F 00 00 00             	    nop
01B100 02 30 00 3E             	    mfspr   r3,cr0
01B104 83 31 48 D2             	    bfextu  r3,r3,#36,#36       ; status is bit 36 of cr0
01B108 BD 01 EA FF             	    beq     r3,.0001            ; lock failed, go try again
                	.0002:
01B10C 57 3F 10 00             	    pop     r3
01B110 57 2F 10 00             	    pop     r2
01B114 37 FF 01 00             	    rtl

                	;------------------------------------------------------------------------------
                	; Unlock a semaphore
                	;
                	; When unlocking the semaphore a test is made to see if the semaphore is still
                	; locked by same task attempting an unlock. If that is the case then the 
                	; SW instruction must have failed to clear the semaphore. So that the system
                	; isn't hung, we go back and redo the unlock.
                	;------------------------------------------------------------------------------
                	
                	UnlockSema:
01B118 67 E1 01 00             	    push    r2
01B11C E7 E1 01 00             	    push    r3
                	.0001:
01B120 E3 00 00 00             	    sw      r0,[r1]
01B124 C6 20 00 00             	    lw      r2,[r1]
01B128 3D 01 0A 00             	    beq     r2,.0002  ; the semaphore is unlock, by this task or another
01B12C 02 31 30 2C             	    cmpu    r3,r2,tr
01B130 BD 01 F8 FF             	    beq     r3,.0001  ; ??? this task still has it locked - store failed
                	    ; Here the semaphore was locked, but not by this task anymore. Another task
                	    ; must have interceded amd locked the semaphore right after it was unlocked
                	    ; by this task. Make sure this is the case, and it's not just bad memory.
                	    ; Make sure the semaphore was locked by a valid task
01B134 02 31 60 34             	    chk     r3,r2,b48
01B138 BD 01 F4 FF             	    beq     r3,.0001
                	    ; Here the semaphore probably was validly locked by a different task.
                	    ; Assume the unlock must have been successful.
                	.0002:
01B13C 57 3F 10 00             	    pop     r3
01B140 57 2F 10 00             	    pop     r2
01B144 37 FF 01 00             	    rtl

                	;------------------------------------------------------------------------------
                	; Lock/unlock routines.
                	;------------------------------------------------------------------------------
                	
                	LockSYS:
01B148 E7 EF 01 00             	    push    lr
01B14C E7 E0 01 00             	    push    r1
01B150 7C 08 01 00 47 10 C0 55 	    lea     r1,sys_sema
01B158 39 EF FF FF             	    bsr     LockSema
01B15C 57 1F 10 00             	    pop     r1
01B160 3B FF 11 00             	    rts
UnlockSYS:
01B164 E7 EF 01 00             	    push    lr
01B168 E7 E0 01 00             	    push    r1
01B16C 7C 08 01 00 47 10 C0 55 	    lea     r1,sys_sema
01B174 B9 F4 FF FF             	    bsr     UnlockSema
01B178 57 1F 10 00             	    pop     r1
01B17C 3B FF 11 00             	    rts
LockIOF:
01B180 E7 EF 01 00             	     push    lr
01B184 E7 E0 01 00             	     push    r1
01B188 7C 08 01 00 0A 10 B0 55 	     ldi     r1,#iof_sema
01B190 39 E8 FF FF             	     bsr     LockSema
01B194 57 1F 10 00             	     pop     r1
01B198 3B FF 11 00             	     rts
UnlockIOF:
01B19C E7 EF 01 00             	     push   lr
01B1A0 E7 E0 01 00             	     push   r1
01B1A4 7C 08 01 00 47 10 B0 55 	     lea    r1,iof_sema
01B1AC B9 ED FF FF             	     bsr    UnlockSema
01B1B0 57 1F 10 00             	     pop    r1
01B1B4 3B FF 11 00             	     rts
     
                	     
                		rodata
01B1B8 00 00 00 00 00 00 00 00 		align	1
                	
                		align	8                	
                	;	global	CopyScreenToVirtualScreen
                	;	global	CopyVirtualScreenToScreen
                	;	global	SwitchIOFocus
                		extern	GetJCBPtr
                		extern	SetVideoReg
                	;	global	ForceReleaseIOFocus
                		extern	UnlockIOF
                	;	global	ReleaseIOFocus
                		extern	LockIOF
                	;	global	RequestIOFocus
                	;	global	ForceIOFocus
                		extern	IOFocusTbl
                		extern	IOFocusNdx
                		extern	IOFocusNdx
                		rodata
                		align	16                	
                		align	8                	
                	stdio_970:
01B1C0 6D 00 6F 00 64 00 65 00 		dc	109,111,100,101,114,114,32,0
01B1C8 72 00 72 00 20 00 00 00 
                	;	global	putch
                	;	global	getcharNoWait
                	;	global	printf
                	;	global	putnum
                	;	global	putstr
                	;	global	getchar
                	;	global	putstr2
                		extern	isdigit
                	;	global	puthexnum
                	;	global	puthexnum
                		rodata
                		align	16                	
                		align	8                	
                	;	global	islower
                	;	global	ispunct
                	;	global	isupper
                	;	global	isprint
                	;	global	tolower
                	;	global	toupper
                	;	global	isxdigit
                	;	global	isalpha
                	;	global	isspace
                	;	global	isdigit
                	;	global	isgraph
                	;	global	isalnum
                	;	global	iscntrl
                	;	global	iscntrl
                		rodata
                		align	16                	
                		align	8                	
                	disassem_962:
01B1D0 44 00 69 00 73 00 61 00 		dc	68,105,115,97,115,115,101,109
01B1D8 73 00 73 00 65 00 6D 00 
01B1E0 3A 00 0D 00 0A 00 00 00 		dc	58,13,10,0
                	disassem_855:
01B1E8 3F 00 3F 00 3F 00 3F 00 		dc	63,63,63,63,63,13,10,0
01B1F0 3F 00 0D 00 0A 00 00 00 
                	disassem_854:
01B1F8 23 00 24 00 25 00 58 00 		dc	35,36,37,88,13,10,0
01B200 0D 00 0A 00 00 00       
                	disassem_853:
01B206 23 00 24 00 25 00 58 00 		dc	35,36,37,88,13,10,0
01B20E 0D 00 0A 00 00 00       
                	disassem_852:
01B214 4C 00 44 00 49 00 20 00 		dc	76,68,73,32,32,32,0
01B21C 20 00 20 00 00 00       
                	disassem_851:
01B222 4E 00 4F 00 50 00 0D 00 		dc	78,79,80,13,10,0
01B22A 0A 00 00 00             
                	disassem_850:
01B22E 0D 00 0A 00 00 00       		dc	13,10,0
                	disassem_849:
01B234 50 00 4F 00 50 00 20 00 		dc	80,79,80,32,32,32,0
01B23C 20 00 20 00 00 00       
                	disassem_848:
01B242 0D 00 0A 00 00 00       		dc	13,10,0
                	disassem_847:
01B248 50 00 55 00 53 00 48 00 		dc	80,85,83,72,32,32,0
01B250 20 00 20 00 00 00       
                	disassem_846:
01B256 53 00 57 00 43 00 52 00 		dc	83,87,67,82,32,0
01B25E 20 00 00 00             
                	disassem_845:
01B262 4C 00 57 00 41 00 52 00 		dc	76,87,65,82,32,0
01B26A 20 00 00 00             
                	disassem_844:
01B26E 53 00 57 00 20 00 20 00 		dc	83,87,32,32,32,0
01B276 20 00 00 00             
                	disassem_843:
01B27A 53 00 48 00 20 00 20 00 		dc	83,72,32,32,32,0
01B282 20 00 00 00             
                	disassem_842:
01B286 53 00 43 00 20 00 20 00 		dc	83,67,32,32,32,0
01B28E 20 00 00 00             
                	disassem_841:
01B292 53 00 42 00 20 00 20 00 		dc	83,66,32,32,32,0
01B29A 20 00 00 00             
                	disassem_840:
01B29E 53 00 57 00 20 00 20 00 		dc	83,87,32,32,32,0
01B2A6 20 00 00 00             
                	disassem_839:
01B2AA 53 00 48 00 20 00 20 00 		dc	83,72,32,32,32,0
01B2B2 20 00 00 00             
                	disassem_838:
01B2B6 53 00 43 00 20 00 20 00 		dc	83,67,32,32,32,0
01B2BE 20 00 00 00             
                	disassem_837:
01B2C2 53 00 42 00 20 00 20 00 		dc	83,66,32,32,32,0
01B2CA 20 00 00 00             
                	disassem_836:
01B2CE 4C 00 45 00 41 00 20 00 		dc	76,69,65,32,32,0
01B2D6 20 00 00 00             
                	disassem_835:
01B2DA 4C 00 57 00 20 00 20 00 		dc	76,87,32,32,32,0
01B2E2 20 00 00 00             
                	disassem_834:
01B2E6 4C 00 48 00 55 00 20 00 		dc	76,72,85,32,32,0
01B2EE 20 00 00 00             
                	disassem_833:
01B2F2 4C 00 48 00 20 00 20 00 		dc	76,72,32,32,32,0
01B2FA 20 00 00 00             
                	disassem_832:
01B2FE 4C 00 43 00 55 00 20 00 		dc	76,67,85,32,32,0
01B306 20 00 00 00             
                	disassem_831:
01B30A 4C 00 43 00 20 00 20 00 		dc	76,67,32,32,32,0
01B312 20 00 00 00             
                	disassem_830:
01B316 4C 00 42 00 55 00 20 00 		dc	76,66,85,32,32,0
01B31E 20 00 00 00             
                	disassem_829:
01B322 4C 00 42 00 20 00 20 00 		dc	76,66,32,32,32,0
01B32A 20 00 00 00             
                	disassem_828:
01B32E 4C 00 45 00 41 00 20 00 		dc	76,69,65,32,32,0
01B336 20 00 00 00             
                	disassem_827:
01B33A 4C 00 57 00 20 00 20 00 		dc	76,87,32,32,32,0
01B342 20 00 00 00             
                	disassem_826:
01B346 4C 00 48 00 55 00 20 00 		dc	76,72,85,32,32,0
01B34E 20 00 00 00             
                	disassem_825:
01B352 4C 00 48 00 20 00 20 00 		dc	76,72,32,32,32,0
01B35A 20 00 00 00             
                	disassem_824:
01B35E 4C 00 43 00 55 00 20 00 		dc	76,67,85,32,32,0
01B366 20 00 00 00             
                	disassem_823:
01B36A 4C 00 43 00 20 00 20 00 		dc	76,67,32,32,32,0
01B372 20 00 00 00             
                	disassem_822:
01B376 4C 00 42 00 55 00 20 00 		dc	76,66,85,32,32,0
01B37E 20 00 00 00             
                	disassem_821:
01B382 4C 00 42 00 20 00 20 00 		dc	76,66,32,32,32,0
01B38A 20 00 00 00             
                	disassem_820:
01B38E 52 00 54 00 53 00 20 00 		dc	82,84,83,32,32,32,35,37
01B396 20 00 20 00 23 00 25 00 
01B39E 58 00 0D 00 0A 00 00 00 		dc	88,13,10,0
                	disassem_819:
01B3A6 52 00 54 00 4C 00 20 00 		dc	82,84,76,32,32,32,35,37
01B3AE 20 00 20 00 23 00 25 00 
01B3B6 58 00 0D 00 0A 00 00 00 		dc	88,13,10,0
                	disassem_818:
01B3BE 42 00 52 00 41 00 20 00 		dc	66,82,65,32,32,32,36,37
01B3C6 20 00 20 00 24 00 25 00 
01B3CE 58 00 0D 00 0A 00 00 00 		dc	88,13,10,0
                	disassem_817:
01B3D6 42 00 53 00 52 00 20 00 		dc	66,83,82,32,32,32,36,37
01B3DE 20 00 20 00 24 00 25 00 
01B3E6 58 00 0D 00 0A 00 00 00 		dc	88,13,10,0
                	disassem_816:
01B3EE 3F 00 3F 00 3F 00 20 00 		dc	63,63,63,32,32,0
01B3F6 20 00 00 00             
                	disassem_815:
01B3FA 42 00 47 00 45 00 20 00 		dc	66,71,69,32,32,0
01B402 20 00 00 00             
                	disassem_814:
01B406 42 00 47 00 54 00 20 00 		dc	66,71,84,32,32,0
01B40E 20 00 00 00             
                	disassem_813:
01B412 42 00 4C 00 45 00 20 00 		dc	66,76,69,32,32,0
01B41A 20 00 00 00             
                	disassem_812:
01B41E 42 00 4C 00 54 00 20 00 		dc	66,76,84,32,32,0
01B426 20 00 00 00             
                	disassem_811:
01B42A 42 00 4E 00 45 00 20 00 		dc	66,78,69,32,32,0
01B432 20 00 00 00             
                	disassem_810:
01B436 42 00 45 00 51 00 20 00 		dc	66,69,81,32,32,0
01B43E 20 00 00 00             
                	disassem_809:
01B442 45 00 4F 00 52 00 20 00 		dc	69,79,82,32,32,0
01B44A 20 00 00 00             
                	disassem_808:
01B44E 4F 00 52 00 20 00 20 00 		dc	79,82,32,32,32,0
01B456 20 00 00 00             
                	disassem_807:
01B45A 41 00 4E 00 44 00 20 00 		dc	65,78,68,32,32,0
01B462 20 00 00 00             
                	disassem_806:
01B466 44 00 49 00 56 00 55 00 		dc	68,73,86,85,32,0
01B46E 20 00 00 00             
                	disassem_805:
01B472 44 00 49 00 56 00 20 00 		dc	68,73,86,32,32,0
01B47A 20 00 00 00             
                	disassem_804:
01B47E 4D 00 55 00 4C 00 55 00 		dc	77,85,76,85,32,0
01B486 20 00 00 00             
                	disassem_803:
01B48A 4D 00 55 00 4C 00 20 00 		dc	77,85,76,32,32,0
01B492 20 00 00 00             
                	disassem_802:
01B496 43 00 4D 00 50 00 55 00 		dc	67,77,80,85,32,0
01B49E 20 00 00 00             
                	disassem_801:
01B4A2 43 00 4D 00 50 00 20 00 		dc	67,77,80,32,32,0
01B4AA 20 00 00 00             
                	disassem_800:
01B4AE 53 00 55 00 42 00 55 00 		dc	83,85,66,85,32,0
01B4B6 20 00 00 00             
                	disassem_799:
01B4BA 53 00 55 00 42 00 20 00 		dc	83,85,66,32,32,0
01B4C2 20 00 00 00             
                	disassem_798:
01B4C6 41 00 44 00 44 00 55 00 		dc	65,68,68,85,32,0
01B4CE 20 00 00 00             
                	disassem_797:
01B4D2 41 00 44 00 44 00 20 00 		dc	65,68,68,32,32,0
01B4DA 20 00 00 00             
                	disassem_796:
01B4DE 0D 00 0A 00 00 00       		dc	13,10,0
                	disassem_795:
01B4E4 2C 00 00 00             		dc	44,0
                	disassem_794:
01B4E8 4D 00 54 00 53 00 50 00 		dc	77,84,83,80,82,32,0
01B4F0 52 00 20 00 00 00       
                	disassem_793:
01B4F6 0D 00 0A 00 00 00       		dc	13,10,0
                	disassem_792:
01B4FC 4D 00 46 00 53 00 50 00 		dc	77,70,83,80,82,32,0
01B504 52 00 20 00 00 00       
                	disassem_791:
01B50A 45 00 4F 00 52 00 20 00 		dc	69,79,82,32,32,0
01B512 20 00 00 00             
                	disassem_790:
01B516 4F 00 52 00 20 00 20 00 		dc	79,82,32,32,32,0
01B51E 20 00 00 00             
                	disassem_789:
01B522 41 00 4E 00 44 00 20 00 		dc	65,78,68,32,32,0
01B52A 20 00 00 00             
                	disassem_788:
01B52E 44 00 49 00 56 00 55 00 		dc	68,73,86,85,32,0
01B536 20 00 00 00             
                	disassem_787:
01B53A 44 00 49 00 56 00 20 00 		dc	68,73,86,32,32,0
01B542 20 00 00 00             
                	disassem_786:
01B546 4D 00 55 00 4C 00 55 00 		dc	77,85,76,85,32,0
01B54E 20 00 00 00             
                	disassem_785:
01B552 4D 00 55 00 4C 00 20 00 		dc	77,85,76,32,32,0
01B55A 20 00 00 00             
                	disassem_784:
01B55E 43 00 4D 00 50 00 55 00 		dc	67,77,80,85,32,0
01B566 20 00 00 00             
                	disassem_783:
01B56A 43 00 4D 00 50 00 20 00 		dc	67,77,80,32,32,0
01B572 20 00 00 00             
                	disassem_782:
01B576 53 00 55 00 42 00 55 00 		dc	83,85,66,85,32,0
01B57E 20 00 00 00             
                	disassem_781:
01B582 53 00 55 00 42 00 20 00 		dc	83,85,66,32,32,0
01B58A 20 00 00 00             
                	disassem_780:
01B58E 41 00 44 00 44 00 55 00 		dc	65,68,68,85,32,0
01B596 20 00 00 00             
                	disassem_779:
01B59A 41 00 44 00 44 00 20 00 		dc	65,68,68,32,32,0
01B5A2 20 00 00 00             
                	disassem_778:
01B5A6 3F 00 3F 00 3F 00 0D 00 		dc	63,63,63,13,10,0
01B5AE 0A 00 00 00             
                	disassem_777:
01B5B2 52 00 54 00 49 00 0D 00 		dc	82,84,73,13,10,0
01B5BA 0A 00 00 00             
                	disassem_776:
01B5BE 52 00 54 00 45 00 0D 00 		dc	82,84,69,13,10,0
01B5C6 0A 00 00 00             
                	disassem_775:
01B5CA 52 00 54 00 44 00 0D 00 		dc	82,84,68,13,10,0
01B5D2 0A 00 00 00             
                	disassem_774:
01B5D6 57 00 41 00 49 00 0D 00 		dc	87,65,73,13,10,0
01B5DE 0A 00 00 00             
                	disassem_773:
01B5E2 53 00 45 00 49 00 0D 00 		dc	83,69,73,13,10,0
01B5EA 0A 00 00 00             
                	disassem_772:
01B5EE 43 00 4C 00 49 00 0D 00 		dc	67,76,73,13,10,0
01B5F6 0A 00 00 00             
                	disassem_771:
01B5FA 49 00 4D 00 4D 00 0D 00 		dc	73,77,77,13,10,0
01B602 0A 00 00 00             
                	disassem_758:
01B606 29 00 0D 00 0A 00 00 00 		dc	41,13,10,0
                	disassem_757:
01B60E 5B 00 52 00 25 00 64 00 		dc	91,82,37,100,93,0
01B616 5D 00 00 00             
                	disassem_756:
01B61A 24 00 25 00 58 00 00 00 		dc	36,37,88,0
                	disassem_755:
01B622 24 00 25 00 58 00 00 00 		dc	36,37,88,0
                	disassem_754:
01B62A 4A 00 4D 00 50 00 20 00 		dc	74,77,80,32,32,32,40,0
01B632 20 00 20 00 28 00 00 00 
                	disassem_753:
01B63A 4A 00 53 00 52 00 20 00 		dc	74,83,82,32,32,32,40,0
01B642 20 00 20 00 28 00 00 00 
                	disassem_752:
01B64A 28 00 00 00             		dc	40,0
                	disassem_751:
01B64E 4A 00 41 00 4C 00 20 00 		dc	74,65,76,32,32,32,0
01B656 20 00 20 00 00 00       
                	disassem_746:
01B65C 0D 00 0A 00 00 00       		dc	13,10,0
                	disassem_745:
01B662 25 00 73 00 20 00 00 00 		dc	37,115,32,0
                	disassem_744:
01B66A 0D 00 0A 00 00 00       		dc	13,10,0
                	disassem_743:
01B670 4D 00 4F 00 56 00 20 00 		dc	77,79,86,32,32,32,0
01B678 20 00 20 00 00 00       
                	disassem_738:
01B67E 25 00 30 00 36 00 58 00 		dc	37,48,54,88,13,10,0
01B686 0D 00 0A 00 00 00       
                	disassem_737:
01B68C 25 00 73 00 20 00 00 00 		dc	37,115,32,0
                	disassem_732:
01B694 23 00 24 00 25 00 58 00 		dc	35,36,37,88,13,10,0
01B69C 0D 00 0A 00 00 00       
                	disassem_731:
01B6A2 23 00 24 00 25 00 58 00 		dc	35,36,37,88,13,10,0
01B6AA 0D 00 0A 00 00 00       
                	disassem_730:
01B6B0 25 00 73 00 20 00 00 00 		dc	37,115,32,0
                	disassem_726:
01B6B8 25 00 73 00 20 00 00 00 		dc	37,115,32,0
                	disassem_714:
01B6C0 5B 00 52 00 25 00 64 00 		dc	91,82,37,100,93,13,10,0
01B6C8 5D 00 0D 00 0A 00 00 00 
                	disassem_713:
01B6D0 5B 00 52 00 25 00 64 00 		dc	91,82,37,100,0
01B6D8 00 00                   
                	disassem_712:
01B6DA 5B 00 52 00 25 00 64 00 		dc	91,82,37,100,43,82,37,100
01B6E2 2B 00 52 00 25 00 64 00 
01B6EA 00 00                   		dc	0
                	disassem_711:
01B6EC 24 00 25 00 58 00 00 00 		dc	36,37,88,0
                	disassem_710:
01B6F4 25 00 73 00 20 00 52 00 		dc	37,115,32,82,37,100,44,0
01B6FC 25 00 64 00 2C 00 00 00 
                	disassem_701:
01B704 42 00 52 00 4B 00 3F 00 		dc	66,82,75,63,32,32,35,37
01B70C 20 00 20 00 23 00 25 00 
01B714 58 00 0D 00 0A 00 00 00 		dc	88,13,10,0
                	disassem_700:
01B71C 49 00 4E 00 54 00 20 00 		dc	73,78,84,32,32,32,35,37
01B724 20 00 20 00 23 00 25 00 
01B72C 58 00 0D 00 0A 00 00 00 		dc	88,13,10,0
                	disassem_699:
01B734 44 00 42 00 47 00 20 00 		dc	68,66,71,32,32,32,35,37
01B73C 20 00 20 00 23 00 25 00 
01B744 58 00 0D 00 0A 00 00 00 		dc	88,13,10,0
                	disassem_698:
01B74C 53 00 59 00 53 00 20 00 		dc	83,89,83,32,32,32,35,37
01B754 20 00 20 00 23 00 25 00 
01B75C 58 00 0D 00 0A 00 00 00 		dc	88,13,10,0
                	disassem_692:
01B764 5D 00 0D 00 0A 00 00 00 		dc	93,13,10,0
                	disassem_691:
01B76C 2A 00 25 00 64 00 5D 00 		dc	42,37,100,93,13,10,0
01B774 0D 00 0A 00 00 00       
                	disassem_681:
01B77A 23 00 25 00 64 00 0D 00 		dc	35,37,100,13,10,0
01B782 0A 00 00 00             
                	disassem_680:
01B786 5B 00 52 00 25 00 64 00 		dc	91,82,37,100,93,44,0
01B78E 5D 00 2C 00 00 00       
                	disassem_679:
01B794 2C 00 00 00             		dc	44,0
                	disassem_678:
01B798 24 00 25 00 58 00 00 00 		dc	36,37,88,0
                	disassem_677:
01B7A0 24 00 25 00 58 00 00 00 		dc	36,37,88,0
                	disassem_676:
01B7A8 49 00 4E 00 43 00 20 00 		dc	73,78,67,32,32,32,0
01B7B0 20 00 20 00 00 00       
                	disassem_675:
01B7B6 44 00 45 00 43 00 20 00 		dc	68,69,67,32,32,32,0
01B7BE 20 00 20 00 00 00       
                	disassem_667:
01B7C4 0D 00 0A 00 00 00       		dc	13,10,0
                	disassem_666:
01B7CA 5B 00 52 00 25 00 64 00 		dc	91,82,37,100,93,13,10,0
01B7D2 5D 00 0D 00 0A 00 00 00 
                	disassem_665:
01B7DA 24 00 25 00 58 00 00 00 		dc	36,37,88,0
                	disassem_664:
01B7E2 24 00 25 00 58 00 00 00 		dc	36,37,88,0
                	disassem_644:
01B7EA 53 00 50 00 52 00 25 00 		dc	83,80,82,37,100,0
01B7F2 64 00 00 00             
                	disassem_643:
01B7F6 44 00 42 00 53 00 54 00 		dc	68,66,83,84,65,84,0
01B7FE 41 00 54 00 00 00       
                	disassem_642:
01B804 44 00 42 00 43 00 54 00 		dc	68,66,67,84,82,76,0
01B80C 52 00 4C 00 00 00       
                	disassem_641:
01B812 44 00 42 00 41 00 44 00 		dc	68,66,65,68,51,0
01B81A 33 00 00 00             
                	disassem_640:
01B81E 44 00 42 00 41 00 44 00 		dc	68,66,65,68,50,0
01B826 32 00 00 00             
                	disassem_639:
01B82A 44 00 42 00 41 00 44 00 		dc	68,66,65,68,49,0
01B832 31 00 00 00             
                	disassem_638:
01B836 44 00 42 00 41 00 44 00 		dc	68,66,65,68,48,0
01B83E 30 00 00 00             
                	disassem_637:
01B842 56 00 42 00 52 00 00 00 		dc	86,66,82,0
                	disassem_636:
01B84A 45 00 50 00 43 00 00 00 		dc	69,80,67,0
                	disassem_635:
01B852 49 00 50 00 43 00 00 00 		dc	73,80,67,0
                	disassem_634:
01B85A 44 00 50 00 43 00 00 00 		dc	68,80,67,0
                	disassem_633:
01B862 43 00 4C 00 4B 00 00 00 		dc	67,76,75,0
                	disassem_632:
01B86A 54 00 49 00 43 00 4B 00 		dc	84,73,67,75,0
01B872 00 00                   
                	disassem_631:
01B874 43 00 52 00 33 00 00 00 		dc	67,82,51,0
                	disassem_630:
01B87C 43 00 52 00 30 00 00 00 		dc	67,82,48,0
                	disassem_626:
01B884 52 00 25 00 64 00 00 00 		dc	82,37,100,0
                	disassem_622:
01B88C 52 00 25 00 64 00 00 00 		dc	82,37,100,0
                	disassem_618:
01B894 52 00 25 00 64 00 2C 00 		dc	82,37,100,44,0
01B89C 00 00                   
                	disassem_614:
01B89E 52 00 25 00 64 00 2C 00 		dc	82,37,100,44,0
01B8A6 00 00                   
                	disassem_610:
01B8A8 72 00 25 00 64 00 00 00 		dc	114,37,100,0
                	disassem_606:
01B8B0 25 00 30 00 36 00 58 00 		dc	37,48,54,88,32,37,48,50
01B8B8 20 00 25 00 30 00 32 00 
01B8C0 58 00 20 00 25 00 30 00 		dc	88,32,37,48,50,88,32,37
01B8C8 32 00 58 00 20 00 25 00 
01B8D0 30 00 32 00 58 00 20 00 		dc	48,50,88,32,37,48,50,88
01B8D8 25 00 30 00 32 00 58 00 
01B8E0 09 00 00 00             		dc	9,0
                	;	global	DispRR
                	;	global	DumpInsnBytes
                	;	global	GetNormAttr
                	;	global	disassem
                	;	global	SetNormAttr
                	;	global	reverse_video
                		extern	printf
                	;	global	DispBcc
                	;	global	DispJALI
                	;	global	disassem20
                		extern	putstr2
                		extern	putstr2
                		rodata
01B8E4 00 00 00 00 00 00 00 00 		align	1
01B8EC 00 00 00 00             
                	
                		align	8                	
                	debugger_567:
01B8F0 0D 00 0A 00 44 00 42 00 		dc	13,10,68,66,71,62,0
01B8F8 47 00 3E 00 00 00       
                	debugger_434:
01B8FE 0D 00 0A 00 00 00       		dc	13,10,0
                	debugger_433:
01B904 25 00 30 00 31 00 36 00 		dc	37,48,49,54,88,32,0
01B90C 58 00 20 00 00 00       
                	debugger_432:
01B912 25 00 30 00 38 00 58 00 		dc	37,48,56,88,32,0
01B91A 20 00 00 00             
                	debugger_431:
01B91E 25 00 30 00 34 00 58 00 		dc	37,48,52,88,32,0
01B926 20 00 00 00             
                	debugger_430:
01B92A 25 00 30 00 32 00 58 00 		dc	37,48,50,88,32,0
01B932 20 00 00 00             
                	debugger_429:
01B936 0D 00 0A 00 25 00 30 00 		dc	13,10,37,48,54,88,32,0
01B93E 36 00 58 00 20 00 00 00 
                	debugger_428:
01B946 0D 00 0A 00 25 00 30 00 		dc	13,10,37,48,54,88,32,0
01B94E 36 00 58 00 20 00 00 00 
                	debugger_427:
01B956 0D 00 0A 00 25 00 30 00 		dc	13,10,37,48,54,88,32,0
01B95E 36 00 58 00 20 00 00 00 
                	debugger_426:
01B966 0D 00 0A 00 25 00 30 00 		dc	13,10,37,48,54,88,32,0
01B96E 36 00 58 00 20 00 00 00 
                	debugger_425:
01B976 0D 00 0A 00 00 00       		dc	13,10,0
                	debugger_424:
01B97C 0D 00 0A 00 00 00       		dc	13,10,0
                	debugger_423:
01B982 64 00 73 00 32 00 3D 00 		dc	100,115,50,61,37,48,56,88
01B98A 25 00 30 00 38 00 58 00 
01B992 0D 00 0A 00 00 00       		dc	13,10,0
                	debugger_422:
01B998 64 00 73 00 32 00 3D 00 		dc	100,115,50,61,37,48,56,88
01B9A0 25 00 30 00 38 00 58 00 
01B9A8 0D 00 0A 00 00 00       		dc	13,10,0
                	debugger_421:
01B9AE 64 00 73 00 31 00 3D 00 		dc	100,115,49,61,37,48,56,88
01B9B6 25 00 30 00 38 00 58 00 
01B9BE 0D 00 0A 00 00 00       		dc	13,10,0
                	debugger_420:
01B9C4 64 00 73 00 30 00 3D 00 		dc	100,115,48,61,37,48,56,88
01B9CC 25 00 30 00 38 00 58 00 
01B9D4 0D 00 0A 00 00 00       		dc	13,10,0
                	debugger_419:
01B9DA 64 00 32 00 3D 00 25 00 		dc	100,50,61,37,48,56,88,13
01B9E2 30 00 38 00 58 00 0D 00 
01B9EA 0A 00 00 00             		dc	10,0
                	debugger_418:
01B9EE 64 00 32 00 3D 00 25 00 		dc	100,50,61,37,48,56,88,13
01B9F6 30 00 38 00 58 00 0D 00 
01B9FE 0A 00 00 00             		dc	10,0
                	debugger_417:
01BA02 64 00 31 00 3D 00 25 00 		dc	100,49,61,37,48,56,88,13
01BA0A 30 00 38 00 58 00 0D 00 
01BA12 0A 00 00 00             		dc	10,0
                	debugger_416:
01BA16 64 00 30 00 3D 00 25 00 		dc	100,48,61,37,48,56,88,13
01BA1E 30 00 38 00 58 00 0D 00 
01BA26 0A 00 00 00             		dc	10,0
                	debugger_415:
01BA2A 0D 00 0A 00 00 00       		dc	13,10,0
                	debugger_414:
01BA30 69 00 32 00 3D 00 25 00 		dc	105,50,61,37,48,56,88,13
01BA38 30 00 38 00 58 00 0D 00 
01BA40 0A 00 00 00             		dc	10,0
                	debugger_413:
01BA44 69 00 32 00 3D 00 25 00 		dc	105,50,61,37,48,56,88,13
01BA4C 30 00 38 00 58 00 0D 00 
01BA54 0A 00 00 00             		dc	10,0
                	debugger_412:
01BA58 69 00 31 00 3D 00 25 00 		dc	105,49,61,37,48,56,88,13
01BA60 30 00 38 00 58 00 0D 00 
01BA68 0A 00 00 00             		dc	10,0
                	debugger_411:
01BA6C 69 00 30 00 3D 00 25 00 		dc	105,48,61,37,48,56,88,13
01BA74 30 00 38 00 58 00 0D 00 
01BA7C 0A 00 00 00             		dc	10,0
                	debugger_385:
01BA80 0D 00 0A 00 44 00 42 00 		dc	13,10,68,66,71,62,0
01BA88 47 00 3E 00 00 00       
                	debugger_382:
01BA8E 72 00 25 00 64 00 3D 00 		dc	114,37,100,61,37,88,13,10
01BA96 25 00 58 00 0D 00 0A 00 
01BA9E 00 00                   		dc	0
                	debugger_378:
01BAA0 72 00 32 00 39 00 3D 00 		dc	114,50,57,61,37,88,32,115
01BAA8 25 00 58 00 20 00 73 00 
01BAB0 70 00 3D 00 25 00 58 00 		dc	112,61,37,88,32,108,114,61
01BAB8 20 00 6C 00 72 00 3D 00 
01BAC0 25 00 58 00 0D 00 0A 00 		dc	37,88,13,10,0
01BAC8 00 00                   
                	debugger_377:
01BACA 72 00 32 00 35 00 3D 00 		dc	114,50,53,61,37,88,32,114
01BAD2 25 00 58 00 20 00 72 00 
01BADA 32 00 36 00 3D 00 25 00 		dc	50,54,61,37,88,32,114,50
01BAE2 58 00 20 00 72 00 32 00 
01BAEA 37 00 3D 00 25 00 58 00 		dc	55,61,37,88,32,114,50,56
01BAF2 20 00 72 00 32 00 38 00 
01BAFA 3D 00 25 00 58 00 0D 00 		dc	61,37,88,13,10,0
01BB02 0A 00 00 00             
                	debugger_376:
01BB06 72 00 32 00 31 00 3D 00 		dc	114,50,49,61,37,88,32,114
01BB0E 25 00 58 00 20 00 72 00 
01BB16 32 00 32 00 3D 00 25 00 		dc	50,50,61,37,88,32,114,50
01BB1E 58 00 20 00 72 00 32 00 
01BB26 33 00 3D 00 25 00 58 00 		dc	51,61,37,88,32,116,114,61
01BB2E 20 00 74 00 72 00 3D 00 
01BB36 25 00 58 00 0D 00 0A 00 		dc	37,88,13,10,0
01BB3E 00 00                   
                	debugger_375:
01BB40 72 00 31 00 37 00 3D 00 		dc	114,49,55,61,37,88,32,114
01BB48 25 00 58 00 20 00 72 00 
01BB50 31 00 38 00 3D 00 25 00 		dc	49,56,61,37,88,32,114,49
01BB58 58 00 20 00 72 00 31 00 
01BB60 39 00 3D 00 25 00 58 00 		dc	57,61,37,88,32,114,50,48
01BB68 20 00 72 00 32 00 30 00 
01BB70 3D 00 25 00 58 00 0D 00 		dc	61,37,88,13,10,0
01BB78 0A 00 00 00             
                	debugger_374:
01BB7C 72 00 31 00 33 00 3D 00 		dc	114,49,51,61,37,88,32,114
01BB84 25 00 58 00 20 00 72 00 
01BB8C 31 00 34 00 3D 00 25 00 		dc	49,52,61,37,88,32,114,49
01BB94 58 00 20 00 72 00 31 00 
01BB9C 35 00 3D 00 25 00 58 00 		dc	53,61,37,88,32,114,49,54
01BBA4 20 00 72 00 31 00 36 00 
01BBAC 3D 00 25 00 58 00 0D 00 		dc	61,37,88,13,10,0
01BBB4 0A 00 00 00             
                	debugger_373:
01BBB8 72 00 39 00 3D 00 25 00 		dc	114,57,61,37,88,32,114,49
01BBC0 58 00 20 00 72 00 31 00 
01BBC8 30 00 3D 00 25 00 58 00 		dc	48,61,37,88,32,114,49,49
01BBD0 20 00 72 00 31 00 31 00 
01BBD8 3D 00 25 00 58 00 20 00 		dc	61,37,88,32,114,49,50,61
01BBE0 72 00 31 00 32 00 3D 00 
01BBE8 25 00 58 00 0D 00 0A 00 		dc	37,88,13,10,0
01BBF0 00 00                   
                	debugger_372:
01BBF2 72 00 35 00 3D 00 25 00 		dc	114,53,61,37,88,32,114,54
01BBFA 58 00 20 00 72 00 36 00 
01BC02 3D 00 25 00 58 00 20 00 		dc	61,37,88,32,114,55,61,37
01BC0A 72 00 37 00 3D 00 25 00 
01BC12 58 00 20 00 72 00 38 00 		dc	88,32,114,56,61,37,88,13
01BC1A 3D 00 25 00 58 00 0D 00 
01BC22 0A 00 00 00             		dc	10,0
                	debugger_371:
01BC26 0D 00 0A 00 72 00 31 00 		dc	13,10,114,49,61,37,88,32
01BC2E 3D 00 25 00 58 00 20 00 
01BC36 72 00 32 00 3D 00 25 00 		dc	114,50,61,37,88,32,114,51
01BC3E 58 00 20 00 72 00 33 00 
01BC46 3D 00 25 00 58 00 20 00 		dc	61,37,88,32,114,52,61,37
01BC4E 72 00 34 00 3D 00 25 00 
01BC56 58 00 0D 00 0A 00 00 00 		dc	88,13,10,0
                	debugger_355:
01BC5E 0D 00 0A 00 44 00 42 00 		dc	13,10,68,66,71,62,100,115
01BC66 47 00 3E 00 64 00 73 00 
01BC6E 25 00 64 00 20 00 3C 00 		dc	37,100,32,60,110,111,116,32
01BC76 6E 00 6F 00 74 00 20 00 
01BC7E 73 00 65 00 74 00 3E 00 		dc	115,101,116,62,0
01BC86 00 00                   
                	debugger_354:
01BC88 0D 00 0A 00 44 00 42 00 		dc	13,10,68,66,71,62,100,115
01BC90 47 00 3E 00 64 00 73 00 
01BC98 25 00 64 00 3D 00 25 00 		dc	37,100,61,37,48,56,88,13
01BCA0 30 00 38 00 58 00 0D 00 
01BCA8 0A 00 00 00             		dc	10,0
                	debugger_339:
01BCAC 0D 00 0A 00 44 00 42 00 		dc	13,10,68,66,71,62,100,37
01BCB4 47 00 3E 00 64 00 25 00 
01BCBC 64 00 20 00 3C 00 6E 00 		dc	100,32,60,110,111,116,32,115
01BCC4 6F 00 74 00 20 00 73 00 
01BCCC 65 00 74 00 3E 00 00 00 		dc	101,116,62,0
                	debugger_338:
01BCD4 0D 00 0A 00 44 00 42 00 		dc	13,10,68,66,71,62,100,37
01BCDC 47 00 3E 00 64 00 25 00 
01BCE4 64 00 3D 00 25 00 30 00 		dc	100,61,37,48,56,88,13,10
01BCEC 38 00 58 00 0D 00 0A 00 
01BCF4 00 00                   		dc	0
                	debugger_323:
01BCF6 0D 00 0A 00 44 00 42 00 		dc	13,10,68,66,71,62,105,37
01BCFE 47 00 3E 00 69 00 25 00 
01BD06 64 00 20 00 3C 00 6E 00 		dc	100,32,60,110,111,116,32,115
01BD0E 6F 00 74 00 20 00 73 00 
01BD16 65 00 74 00 3E 00 00 00 		dc	101,116,62,0
                	debugger_322:
01BD1E 0D 00 0A 00 44 00 42 00 		dc	13,10,68,66,71,62,105,37
01BD26 47 00 3E 00 69 00 25 00 
01BD2E 64 00 3D 00 25 00 30 00 		dc	100,61,37,48,56,88,13,10
01BD36 38 00 58 00 0D 00 0A 00 
01BD3E 00 00                   		dc	0
                	debugger_251:
01BD40 0D 00 0A 00 44 00 42 00 		dc	13,10,68,66,71,62,0
01BD48 47 00 3E 00 00 00       
                	debugger_250:
01BD4E 0D 00 0A 00 54 00 79 00 		dc	13,10,84,121,112,101,32,39
01BD56 70 00 65 00 20 00 27 00 
01BD5E 71 00 27 00 20 00 74 00 		dc	113,39,32,116,111,32,113,117
01BD66 6F 00 20 00 71 00 75 00 
01BD6E 69 00 74 00 2E 00 00 00 		dc	105,116,46,0
                	debugger_249:
01BD76 0D 00 0A 00 61 00 72 00 		dc	13,10,97,114,109,32,100,101
01BD7E 6D 00 20 00 64 00 65 00 
01BD86 62 00 75 00 67 00 67 00 		dc	98,117,103,103,105,110,103,32
01BD8E 69 00 6E 00 67 00 20 00 
01BD96 6D 00 6F 00 64 00 65 00 		dc	109,111,100,101,32,117,115,105
01BD9E 20 00 75 00 73 00 69 00 
01BDA6 6E 00 67 00 20 00 74 00 		dc	110,103,32,116,104,101,32,39
01BDAE 68 00 65 00 20 00 27 00 
01BDB6 61 00 27 00 20 00 63 00 		dc	97,39,32,99,111,109,109,97
01BDBE 6F 00 6D 00 6D 00 61 00 
01BDC6 6E 00 64 00 2E 00 00 00 		dc	110,100,46,0
                	debugger_248:
01BDCE 0D 00 0A 00 4F 00 6E 00 		dc	13,10,79,110,99,101,32,116
01BDD6 63 00 65 00 20 00 74 00 
01BDDE 68 00 65 00 20 00 64 00 		dc	104,101,32,100,101,98,117,103
01BDE6 65 00 62 00 75 00 67 00 
01BDEE 20 00 72 00 65 00 67 00 		dc	32,114,101,103,105,115,116,101
01BDF6 69 00 73 00 74 00 65 00 
01BDFE 72 00 73 00 20 00 61 00 		dc	114,115,32,97,114,101,32,115
01BE06 72 00 65 00 20 00 73 00 
01BE0E 65 00 74 00 20 00 69 00 		dc	101,116,32,105,116,32,105,115
01BE16 74 00 20 00 69 00 73 00 
01BE1E 20 00 6E 00 65 00 63 00 		dc	32,110,101,99,101,115,115,97
01BE26 65 00 73 00 73 00 61 00 
01BE2E 72 00 79 00 20 00 74 00 		dc	114,121,32,116,111,32,0
01BE36 6F 00 20 00 00 00       
                	debugger_247:
01BE3C 0D 00 0A 00 53 00 65 00 		dc	13,10,83,101,116,116,105,110
01BE44 74 00 74 00 69 00 6E 00 
01BE4C 67 00 20 00 61 00 20 00 		dc	103,32,97,32,114,101,103,105
01BE54 72 00 65 00 67 00 69 00 
01BE5C 73 00 74 00 65 00 72 00 		dc	115,116,101,114,32,116,111,32
01BE64 20 00 74 00 6F 00 20 00 
01BE6C 7A 00 65 00 72 00 6F 00 		dc	122,101,114,111,32,119,105,108
01BE74 20 00 77 00 69 00 6C 00 
01BE7C 6C 00 20 00 63 00 6C 00 		dc	108,32,99,108,101,97,114,32
01BE84 65 00 61 00 72 00 20 00 
01BE8C 74 00 68 00 65 00 20 00 		dc	116,104,101,32,98,114,101,97
01BE94 62 00 72 00 65 00 61 00 
01BE9C 6B 00 70 00 6F 00 69 00 		dc	107,112,111,105,110,116,46,0
01BEA4 6E 00 74 00 2E 00 00 00 
                	debugger_246:
01BEAC 0D 00 0A 00 69 00 6E 00 		dc	13,10,105,110,100,105,99,97
01BEB4 64 00 69 00 63 00 61 00 
01BEBC 74 00 65 00 20 00 61 00 		dc	116,101,32,97,32,100,97,116
01BEC4 20 00 64 00 61 00 74 00 
01BECC 61 00 20 00 73 00 74 00 		dc	97,32,115,116,111,114,101,32
01BED4 6F 00 72 00 65 00 20 00 
01BEDC 6F 00 6E 00 6C 00 79 00 		dc	111,110,108,121,32,98,114,101
01BEE4 20 00 62 00 72 00 65 00 
01BEEC 61 00 6B 00 70 00 6F 00 		dc	97,107,112,111,105,110,116,46
01BEF4 69 00 6E 00 74 00 2E 00 
01BEFC 00 00                   		dc	0
                	debugger_245:
01BEFE 0D 00 0A 00 62 00 72 00 		dc	13,10,98,114,101,97,107,112
01BF06 65 00 61 00 6B 00 70 00 
01BF0E 6F 00 69 00 6E 00 74 00 		dc	111,105,110,116,46,32,80,114
01BF16 2E 00 20 00 50 00 72 00 
01BF1E 65 00 66 00 69 00 78 00 		dc	101,102,105,120,32,116,104,101
01BF26 20 00 74 00 68 00 65 00 
01BF2E 20 00 72 00 65 00 67 00 		dc	32,114,101,103,105,115,116,101
01BF36 69 00 73 00 74 00 65 00 
01BF3E 72 00 20 00 6E 00 75 00 		dc	114,32,110,117,109,98,101,114
01BF46 6D 00 62 00 65 00 72 00 
01BF4E 20 00 77 00 69 00 74 00 		dc	32,119,105,116,104,32,39,100
01BF56 68 00 20 00 27 00 64 00 
01BF5E 73 00 27 00 20 00 74 00 		dc	115,39,32,116,111,0
01BF66 6F 00 00 00             
                	debugger_244:
01BF6A 0D 00 0A 00 69 00 6E 00 		dc	13,10,105,110,115,116,114,117
01BF72 73 00 74 00 72 00 75 00 
01BF7A 63 00 74 00 69 00 6F 00 		dc	99,116,105,111,110,32,98,114
01BF82 6E 00 20 00 62 00 72 00 
01BF8A 65 00 61 00 6B 00 70 00 		dc	101,97,107,112,111,105,110,116
01BF92 6F 00 69 00 6E 00 74 00 
01BF9A 20 00 6F 00 72 00 20 00 		dc	32,111,114,32,97,32,39,100
01BFA2 61 00 20 00 27 00 64 00 
01BFAA 27 00 20 00 74 00 6F 00 		dc	39,32,116,111,32,105,110,100
01BFB2 20 00 69 00 6E 00 64 00 
01BFBA 69 00 63 00 61 00 74 00 		dc	105,99,97,116,101,32,97,32
01BFC2 65 00 20 00 61 00 20 00 
01BFCA 64 00 61 00 74 00 61 00 		dc	100,97,116,97,0
01BFD2 00 00                   
                	debugger_243:
01BFD4 0D 00 0A 00 50 00 72 00 		dc	13,10,80,114,101,102,105,120
01BFDC 65 00 66 00 69 00 78 00 
01BFE4 20 00 74 00 68 00 65 00 		dc	32,116,104,101,32,114,101,103
01BFEC 20 00 72 00 65 00 67 00 
01BFF4 69 00 73 00 74 00 65 00 		dc	105,115,116,101,114,32,110,117
01BFFC 72 00 20 00 6E 00 75 00 
01C004 6D 00 62 00 65 00 72 00 		dc	109,98,101,114,32,119,105,116
01C00C 20 00 77 00 69 00 74 00 
01C014 68 00 20 00 61 00 6E 00 		dc	104,32,97,110,32,39,105,39
01C01C 20 00 27 00 69 00 27 00 
01C024 20 00 74 00 6F 00 20 00 		dc	32,116,111,32,105,110,100,105
01C02C 69 00 6E 00 64 00 69 00 
01C034 63 00 61 00 74 00 65 00 		dc	99,97,116,101,32,97,110,0
01C03C 20 00 61 00 6E 00 00 00 
                	debugger_242:
01C044 0D 00 0A 00 54 00 68 00 		dc	13,10,84,104,101,114,101,32
01C04C 65 00 72 00 65 00 20 00 
01C054 61 00 72 00 65 00 20 00 		dc	97,114,101,32,97,32,116,111
01C05C 61 00 20 00 74 00 6F 00 
01C064 74 00 61 00 6C 00 20 00 		dc	116,97,108,32,111,102,32,102
01C06C 6F 00 66 00 20 00 66 00 
01C074 6F 00 75 00 72 00 20 00 		dc	111,117,114,32,98,114,101,97
01C07C 62 00 72 00 65 00 61 00 
01C084 6B 00 70 00 6F 00 69 00 		dc	107,112,111,105,110,116,32,114
01C08C 6E 00 74 00 20 00 72 00 
01C094 65 00 67 00 69 00 73 00 		dc	101,103,105,115,116,101,114,115
01C09C 74 00 65 00 72 00 73 00 
01C0A4 20 00 28 00 30 00 2D 00 		dc	32,40,48,45,51,41,46,0
01C0AC 33 00 29 00 2E 00 00 00 
                	debugger_241:
01C0B4 0D 00 0A 00 44 00 42 00 		dc	13,10,68,66,71,62,105,49
01C0BC 47 00 3E 00 69 00 31 00 
01C0C4 3D 00 31 00 32 00 33 00 		dc	61,49,50,51,52,53,54,55
01C0CC 34 00 35 00 36 00 37 00 
01C0D4 38 00 20 00 20 00 20 00 		dc	56,32,32,32,32,32,119,105
01C0DC 20 00 20 00 77 00 69 00 
01C0E4 6C 00 6C 00 20 00 61 00 		dc	108,108,32,97,115,115,105,103
01C0EC 73 00 73 00 69 00 67 00 
01C0F4 6E 00 20 00 31 00 32 00 		dc	110,32,49,50,51,52,53,54
01C0FC 33 00 34 00 35 00 36 00 
01C104 37 00 38 00 20 00 74 00 		dc	55,56,32,116,111,32,105,49
01C10C 6F 00 20 00 69 00 31 00 
01C114 00 00                   		dc	0
                	debugger_240:
01C116 0D 00 0A 00 61 00 6E 00 		dc	13,10,97,110,32,97,100,100
01C11E 20 00 61 00 64 00 64 00 
01C126 72 00 65 00 73 00 73 00 		dc	114,101,115,115,32,116,111,32
01C12E 20 00 74 00 6F 00 20 00 
01C136 69 00 74 00 2E 00 00 00 		dc	105,116,46,0
                	debugger_239:
01C13E 0D 00 0A 00 46 00 6F 00 		dc	13,10,70,111,108,108,111,119
01C146 6C 00 6C 00 6F 00 77 00 
01C14E 69 00 6E 00 67 00 20 00 		dc	105,110,103,32,97,32,98,114
01C156 61 00 20 00 62 00 72 00 
01C15E 65 00 61 00 6B 00 70 00 		dc	101,97,107,112,111,105,110,116
01C166 6F 00 69 00 6E 00 74 00 
01C16E 20 00 72 00 65 00 67 00 		dc	32,114,101,103,105,115,116,101
01C176 69 00 73 00 74 00 65 00 
01C17E 72 00 20 00 77 00 69 00 		dc	114,32,119,105,116,104,32,97
01C186 74 00 68 00 20 00 61 00 
01C18E 6E 00 20 00 27 00 3D 00 		dc	110,32,39,61,39,32,97,115
01C196 27 00 20 00 61 00 73 00 
01C19E 73 00 69 00 67 00 6E 00 		dc	115,105,103,110,115,32,0
01C1A6 73 00 20 00 00 00       
                	debugger_238:
01C1AC 0D 00 0A 00 44 00 42 00 		dc	13,10,68,66,71,62,105,50
01C1B4 47 00 3E 00 69 00 32 00 
01C1BC 3F 00 00 00             		dc	63,0
                	debugger_237:
01C1C0 0D 00 0A 00 27 00 3F 00 		dc	13,10,39,63,39,32,113,117
01C1C8 27 00 20 00 71 00 75 00 
01C1D0 65 00 72 00 69 00 65 00 		dc	101,114,105,101,115,32,116,104
01C1D8 73 00 20 00 74 00 68 00 
01C1E0 65 00 20 00 73 00 74 00 		dc	101,32,115,116,97,116,117,115
01C1E8 61 00 74 00 75 00 73 00 
01C1F0 20 00 6F 00 66 00 20 00 		dc	32,111,102,32,97,32,98,114
01C1F8 61 00 20 00 62 00 72 00 
01C200 65 00 61 00 6B 00 70 00 		dc	101,97,107,112,111,105,110,116
01C208 6F 00 69 00 6E 00 74 00 
01C210 20 00 72 00 65 00 67 00 		dc	32,114,101,103,105,115,116,101
01C218 69 00 73 00 74 00 65 00 
01C220 72 00 20 00 61 00 73 00 		dc	114,32,97,115,32,105,110,58
01C228 20 00 69 00 6E 00 3A 00 
01C230 00 00                   		dc	0
                	;	global	dbg_dbctrl
                	;	global	GetVBR
                	;	global	dbg_parse_begin
                	;	global	dbg_ReadSetDSB
                		extern	putch
                	;	global	dbg_prompt
                		extern	getcharNoWait
                	;	global	cursz
                	;	global	dbg_nextSpace
                	;	global	CvtScreenToAscii
                		extern	dbg_GetHexNumber
                	;	global	set_vector
                	;	global	dbg_init
                	;	global	dbg_getDecNumber
                	;	global	debugger
                	;	global	dbg_GetCursorCol
                	;	global	ssm
                		extern	disassem
                	;	global	dbg_getHexNumber
                	;	global	ignore_blanks
                	;	global	dbg_GetCursorRow
                	;	global	dbg_nextNonSpace
                	;	global	dbg_getchar
                	;	global	repcount
                	;	global	dbg_ungetch
                	;	global	curfmt
                	;	global	currep
                		extern	printf
                	;	global	dbg_HomeCursor
                	;	global	bmem
                	;	global	dbg_stack
                	;	global	cmem
                	;	global	hmem
                	;	global	dbg_processReg
                	;	global	dbg_parse_line
                	;	global	regs
                		extern	putstr
                	;	global	cr0save
                	;	global	wmem
                	;	global	dbg_GetDBAD
                	;	global	dbg_ReadSetDB
                		extern	disassem20
                	;	global	muol
                	;	global	dbg_ReadSetIB
                	;	global	dbg_SetDBAD
                	;	global	dbg_arm
                	;	global	dbg_irq
                		extern	getchar
                	;	global	linebuf
                	;	global	curaddr
                		extern	isdigit
                	;	global	linendx
                	;	global	linendx
                		rodata
01C232 00 00 00 00 00 00 00 00 		align	1
01C23A 00 00 00 00 00 00       
                	
                		align	8                	
                	ramtest_0:	; bad at address: 
01C240 62 00 61 00 64 00 20 00 		dc	98,97,100,32,97,116,32,97
01C248 61 00 74 00 20 00 61 00 
01C250 64 00 64 00 72 00 65 00 		dc	100,100,114,101,115,115,58,32
01C258 73 00 73 00 3A 00 20 00 
01C260 00 00                   		dc	0
                	;	global	ramtest
                		extern	getcharNoWait
                		extern	ramtest_betweem
                	;	global	msgBadAddr
                	;	global	msgBadAddr
                	message "hit end"
01C262 00 00 3F 00 00 00       	    nop
01C268 3F 00 00 00             	    nop
                	
                	
                	
                		rodata
01C26C 00 00 00 00             		align 
                	
                	begin_init_data:
                	    data
                	    org     $C10000
                		data
                		align	8                	
                		align	8                	
                	public data pSpriteController:
01C270 00 D0 DA FF FF FF FF FF 		dw	-2437120
                	endpublic
                	
                		data
                		align	8                	
                		align	8                	
                	FMTKc_65:	; startQ
01C278 00 00 00 01 00 00 00 02 		db	0,0,0,1,0,0,0,2,0,0,0,3
01C280 00 00 00 03             
01C284 00 01 00 04 00 00 00 05 		db	0,1,0,4,0,0,0,5,0,0,0,6
01C28C 00 00 00 06             
01C290 00 01 00 07 00 00 00 00 		db	0,1,0,7,0,0,0,0
                		align	8                	
                	FMTKc_66:	; startQNdx
01C298 00                      		fill.b	1,0x00
01C299 00 00 00 00 00 00 00    		align	
                	
01C2A0 00                      		db	0
                		data
01C2A1 00 00 00 00 00 00 00    		align	
                	
01C2A8 00                      		db	0
01C2A9 00 00 00 00 00 00 00    		align	
                	
01C2B0 00                      		db	0
01C2B1 00 00 00 00 00 00 00    		align	
                	
01C2B8 00                      		db	0
01C2B9 00 00 00 00 00 00 00    		align	
                	
01C2C0 00                      		db	0
01C2C1 00 00 00 00 00 00 00    		align	
                	
01C2C8 00                      		db	0
01C2C9 00 00 00 00 00 00 00    		align	
                	
01C2D0 00                      		db	0
                		data
01C2D1 00 00 00 00 00 00 00    		align	
                	
01C2D8 00                      		db	0
01C2D9 00 00 00 00 00 00 00    		align	
                	
01C2E0 00                      		db	0
01C2E1 00 00 00 00 00 00 00    		align	
                	
01C2E8 00                      		db	0
01C2E9 00 00 00 00 00 00 00    		align	
                	
01C2F0 00                      		db	0
01C2F1 00 00 00 00 00 00 00    		align	
                	
01C2F8 00                      		db	0
01C2F9 00 00 00 00 00 00 00    		align	
                	
01C300 00                      		db	0
                		data
01C301 00 00 00 00 00 00 00    		align	
                	
                		align	8                	
                	public data msgBadAddr:
01C308 40 C2 01 00 00 00 00 00 		dw	ramtest_0
                	endpublic
                	
                	
                		rodata
                		align 8                	
                	end_init_data:
                	    data
                	    org     $C10000
                		data
                		align	8                	
                		align	8                	
                	public data pSpriteController:
C10000 00 D0 DA FF FF FF FF FF 		dw	-2437120
                	endpublic
                	
                		data
                		align	8                	
                		align	8                	
                	FMTKc_65:	; startQ
C10008 00 00 00 01 00 00 00 02 		db	0,0,0,1,0,0,0,2,0,0,0,3
C10010 00 00 00 03             
C10014 00 01 00 04 00 00 00 05 		db	0,1,0,4,0,0,0,5,0,0,0,6
C1001C 00 00 00 06             
C10020 00 01 00 07 00 00 00 00 		db	0,1,0,7,0,0,0,0
                		align	8                	
                	FMTKc_66:	; startQNdx
C10028 00                      		fill.b	1,0x00
C10029 00 00 00 00 00 00 00    		align	
                	
C10030 00                      		db	0
                		data
C10031 00 00 00 00 00 00 00    		align	
                	
C10038 00                      		db	0
C10039 00 00 00 00 00 00 00    		align	
                	
C10040 00                      		db	0
C10041 00 00 00 00 00 00 00    		align	
                	
C10048 00                      		db	0
C10049 00 00 00 00 00 00 00    		align	
                	
C10050 00                      		db	0
C10051 00 00 00 00 00 00 00    		align	
                	
C10058 00                      		db	0
C10059 00 00 00 00 00 00 00    		align	
                	
C10060 00                      		db	0
                		data
C10061 00 00 00 00 00 00 00    		align	
                	
C10068 00                      		db	0
C10069 00 00 00 00 00 00 00    		align	
                	
C10070 00                      		db	0
C10071 00 00 00 00 00 00 00    		align	
                	
C10078 00                      		db	0
C10079 00 00 00 00 00 00 00    		align	
                	
C10080 00                      		db	0
C10081 00 00 00 00 00 00 00    		align	
                	
C10088 00                      		db	0
C10089 00 00 00 00 00 00 00    		align	
                	
C10090 00                      		db	0
                		data
C10091 00 00 00 00 00 00 00    		align	
                	
                		align	8                	
                	public data msgBadAddr:
C10098 40 C2 01 00 00 00 00 00 		dw	ramtest_0
                	endpublic
                	
1809 symbols
  Symbol Name                              seg     address
  API_AREA                                    bss  c20c30
  API_head                                    bss  c2037e
  API_sema                                    bss  c20388
  API_tail                                    bss  c20380
  AsciiToHexNybble                           code  011644
  AsciiToHexNybble.gthx3                     code  0116a4
  AsciiToHexNybble.gthx5                     code  011664
  AsciiToHexNybble.gthx6                     code  011684
  AsciiToScreen                              code  014358
  BIOS1_sema                                  bss  1082ad0
  BIOSCall                                   code  010da0
  BIOSCall.0003                              code  010dfc
  BIOSCall.0004                              code  010dec
  BIOSCall1                                  code  010ce8
  BIOSCall1.0002                             code  010d74
  BIOSCall1.0003                             code  010d8c
  BIOSCall1.0004                             code  010d70
  BIOSCallTask                               code  010e04
  BIOSCallTask.0001                          code  010e14
  BIOSSema                                  const  ffdb0010
  BIOS_CALL                                 const  00000a
  BIOS_DONE                                 const  000001
  BIOS_E_Timeout                            const  000002
  BIOS_FREE                                 const  000000
  BIOS_FuncTable                             code  010080
  BIOS_INSERVICE                            const  000002
  BIOS_MbxHandle                            const  c00008
  BIOS_RespMbx                                bss  1082ae8
  BIOS_arg1                                 const  000008
  BIOS_arg2                                 const  000010
  BIOS_arg3                                 const  000018
  BIOS_arg4                                 const  000020
  BIOS_arg5                                 const  000028
  BIOS_op                                   const  000000
  BIOS_resp                                 const  000030
  BIOS_sema                                   bss  c20390
  BIOS_stat                                 const  000038
  BMP_CLUT                                  const  0c5800
  BPT_ISR                                    code  012b00
  BPT_ISR.0001                               code  012b2c
  BSI_BootSig                               const  000026
  BSI_DriveNum                              const  000024
  BSI_FATS                                  const  000010
  BSI_FileSysType                           const  000036
  BSI_Heads                                 const  00001a
  BSI_HiddenSecs                            const  00001c
  BSI_HugeSecs                              const  00001e
  BSI_JMP                                   const  000000
  BSI_Media                                 const  000015
  BSI_OEMName                               const  000003
  BSI_ResSectors                            const  00000e
  BSI_RootDirEnts                           const  000011
  BSI_Rsvd1                                 const  000025
  BSI_SecPerCluster                         const  00000d
  BSI_SecPerFAT                             const  000016
  BSI_SecPerTrack                           const  000018
  BSI_Sectors                               const  000013
  BSI_VolID                                 const  000027
  BSI_VolLabel                              const  00002b
  BSI_bps                                   const  00000b
  BYTE_SECTOR_BUF                           const  c22000
  BlankLine                                  code  014698
  BranchToSelf2                              code  010c04
  CPU0_BIOS_STACK                           const  006800
  CPU0_DBG_STACK                            const  7cf000
  CPU0_IRQ_STACK                             code  800000000000012d
  CPU0_SYS_STACK                            const  005000
  CPU0_Start                                 code  010108
  CPU0_Start.0001                            code  01016c
  CPU0_Start.0002                            code  010108
  CPU0_Start.cpy_loop                        code  01012c
  CPU1_BIOS_STACK                           const  021800
  CPU1_SYS_STACK                            const  021000
  CPU1_Start                                 code  0100b8
  CPU1_Start.0001                            code  0100c0
  CPU1_Start.0003                            code  0100e0
  CPUIdleTick                                 bss  c203a8
  CR                                        const  00000d
  CRLF                                       code  014c14
  CTRLC                                     const  000003
  CTRLCCheck                                 code  0115a0
  CTRLCCheck.0001                            code  0115c8
  CTRLH                                     const  000008
  CTRLI                                     const  000009
  CTRLJ                                     const  00000a
  CTRLK                                     const  00000b
  CTRLM                                     const  00000d
  CTRLS                                     const  000013
  CTRLX                                     const  000018
  CalcScreenLocation                         code  014538
  CharsInRxBuf                               code  01063c
  CheckKeys                                  code  01158c
  CheckScrollLock                            code  0115d0
  CheckScrollLock.0001                       code  0115f4
  CheckScrollLock.0002                       code  0115dc
  ClearBmpScreen                             code  80000000000000bf
  ClearScreen                                code  0145cc
  CopyScreenToVirtualScreen                  code  015134
  CopyVirtualScreenToScreen                  code  015068
  CursorCol                                   bss  c20139
  CursorOff                                  code  010be4
  CursorOn                                   code  010be8
  CursorRow                                   bss  c20138
  CvtScreenToAscii                           code  0182b8
  DBG_STACK                                 const  007000
  DCB_LastErc                               const  000018
  DCB_Mbx                                   const  000048
  DCB_Name                                  const  000000
  DCB_ReentCount                            const  000038
  DCB_Resv1                                 const  000058
  DCB_Resv2                                 const  000060
  DCB_Size                                  const  000068
  DCB_StartBlock                            const  000020
  DCB_Type                                  const  00000c
  DCB_fSingleUser                           const  000039
  DCB_hJob                                  const  000040
  DCB_nBPB                                  const  000010
  DCB_nBlocks                               const  000028
  DCB_pCmdProc                              const  000030
  DCB_pSema                                 const  000050
  DRSP_DONE                                 const  000001
  DVC_BuildBPB                              const  000005
  DVC_Close                                 const  000007
  DVC_FlushInput                            const  000014
  DVC_FlushOutput                           const  000015
  DVC_GetChar                               const  000008
  DVC_GetCharDirect                         const  00000a
  DVC_IOCTRL_READ                           const  000018
  DVC_IOCTRL_WRITE                          const  000019
  DVC_IRQ                                   const  000016
  DVC_Initialize                            const  000002
  DVC_InputStatus                           const  00000c
  DVC_IsRemoveable                          const  000017
  DVC_MediaCheck                            const  000004
  DVC_Nop                                   const  000000
  DVC_Open                                  const  000006
  DVC_OutputStatus                          const  000013
  DVC_OutputUntilBusy                       const  00001a
  DVC_PeekChar                              const  000009
  DVC_PeekCharDirect                        const  00000b
  DVC_PutChar                               const  00000d
  DVC_ReadBlock                             const  000010
  DVC_SetPosition                           const  00000f
  DVC_Setup                                 const  000001
  DVC_Status                                const  000003
  DVC_VerifyBlock                           const  000012
  DVC_WriteBlock                            const  000011
  DispBcc                                    code  0169e0
  DispBrk                                    code  01662c
  DispCharAttr                               code  010998
  DispCharQ                                  code  010b28
  DispInc                                    code  016474
  DispIndexedAddr                            code  016710
  DispJALI                                   code  016bcc
  DispLS                                     code  01688c
  DispMemAddress                             code  016394
  DispRI                                     code  016908
  DispRR                                     code  016aa4
  DispRa                                     code  0160f4
  DispRac                                    code  01609c
  DispRb                                     code  01614c
  DispReg                                    code  018cd4
  DispRegs                                   code  018b90
  DispRst                                    code  015fec
  DispRstc                                   code  016044
  DispSpr                                    code  0161a4
  DispStartMsg                               code  010bf0
  DisplayByte                                code  010a98
  DisplayChar                                code  0148ec
  DisplayCharHex                             code  010a84
  DisplayErr                                 code  0116b0
  DisplayHalf                                code  010a70
  DisplayIRQLive                             code  0131fc
  DisplayMemBytes                            code  0114c4
  DisplayMemBytes.001                        code  0114f8
  DisplayMemBytes.002                        code  011534
  DisplayMemBytes.003                        code  011554
  DisplayMemBytes.004                        code  011548
  DisplayNybble                              code  010aac
  DisplayNybble.0001                         code  010acc
  DisplaySpace                               code  010c7c
  DisplayString                              code  014c64
  DisplayString16                            code  010adc
  DisplayString16.dm1                        code  010b1c
  DisplayString16.dm2                        code  010af8
  DisplayStringCRLF                          code  014cc8
  DisplayWord                                code  010a5c
  Dummy1                                      bss  c2013a
  DumpInsnBytes                              code  015f64
  DumpTaskList                               code  013a54
  E_BadFuncno                               const  000001
  E_Ok                                      const  000000
  E_Timeout                                 const  000010
  E_Unsupported                             const  000003
  EndStaticAllocations                        bss  c27000
  ExitTask                                   code  013b68
  FMTKInitialize                             code  013cbc
  FMTK_CALL                                 const  000004
  FMTK_Inited                                 bss  c29408
  FMTKc_100                                  code  013b10
  FMTKc_102                                  code  013ab4
  FMTKc_103                                  code  013b10
  FMTKc_104                                  code  013b04
  FMTKc_106                                  code  013b18
  FMTKc_108                                  code  013b48
  FMTKc_109                                  code  013b5c
  FMTKc_11                                   code  0131cc
  FMTKc_110                                  code  013b5c
  FMTKc_111                                  code  013be8
  FMTKc_112                                  code  013c00
  FMTKc_113                                  code  013bb8
  FMTKc_114                                  code  013be0
  FMTKc_115                                  code  013bec
  FMTKc_116                                  code  013cb0
  FMTKc_117                                  code  013c98
  FMTKc_118                                  code  014118
  FMTKc_119                                  code  0140fc
  FMTKc_121                                  code  013d1c
  FMTKc_122                                  code  013e4c
  FMTKc_123                                  code  013e44
  FMTKc_124                                  code  013da4
  FMTKc_125                                  code  013dfc
  FMTKc_126                                  code  013ebc
  FMTKc_127                                  code  013ee0
  FMTKc_128                                  code  013ed8
  FMTKc_129                                  code  013ee4
  FMTKc_130                                  code  01402c
  FMTKc_131                                  code  014024
  FMTKc_132                                  code  014024
  FMTKc_134                                  code  0140fc
  FMTKc_15                                   code  0131f0
  FMTKc_18                                   code  013244
  FMTKc_19                                   code  013230
  FMTKc_21                                   code  013328
  FMTKc_22                                   code  0132a8
  FMTKc_24                                   code  01328c
  FMTKc_25                                   code  0132c4
  FMTKc_27                                   code  0132bc
  FMTKc_28                                   code  013308
  FMTKc_3                                    code  013128
  FMTKc_31                                   code  013428
  FMTKc_32                                   code  013394
  FMTKc_34                                   code  013378
  FMTKc_35                                   code  0133b0
  FMTKc_37                                   code  0133a8
  FMTKc_38                                   code  0133dc
  FMTKc_40                                   code  0133fc
  FMTKc_44                                   code  013494
  FMTKc_46                                   code  01347c
  FMTKc_47                                   code  01349c
  FMTKc_48                                   code  0134c8
  FMTKc_49                                   code  0134ec
  FMTKc_5                                    code  013154
  FMTKc_51                                   code  013500
  FMTKc_52                                   code  013504
  FMTKc_55                                   code  013554
  FMTKc_57                                   code  013568
  FMTKc_59                                   code  013574
  FMTKc_62                                   code  0135bc
  FMTKc_64                                   code  0135c4
  FMTKc_65                                   data  c10008
  FMTKc_66                                   data  c10028
  FMTKc_68                                 rodata  01b096
  FMTKc_69                                   code  013708
  FMTKc_7                                    code  013180
  FMTKc_70                                   code  013644
  FMTKc_71                                   code  0136f8
  FMTKc_72                                   code  0136f0
  FMTKc_73                                   code  0136e0
  FMTKc_75                                   code  013674
  FMTKc_76                                   code  0136e0
  FMTKc_77                                   code  0136d0
  FMTKc_79                                   code  0136d0
  FMTKc_81                                   code  0136b4
  FMTKc_82                                   code  013900
  FMTKc_83                                   code  0137f0
  FMTKc_84                                   code  01382c
  FMTKc_85                                   code  01381c
  FMTKc_86                                   code  013828
  FMTKc_87                                   code  013900
  FMTKc_88                                   code  013a00
  FMTKc_89                                   code  013a00
  FMTKc_9                                    code  0131ac
  FMTKc_90                                   code  013a30
  FMTKc_91                                   code  013a48
  FMTKc_92                                   code  013a34
  FMTKc_93                                 rodata  01b03c
  FMTKc_94                                 rodata  01b000
  FMTKc_95                                   code  013b18
  FMTKc_96                                   code  013b30
  FMTKc_97                                   code  013a88
  FMTKc_98                                   code  013b18
  FMTKc_99                                   code  013b10
  ForceIOFocus                               code  014d10
  ForceReleaseIOFocus                        code  014f7c
  FreeMbx                                  rodata  000000
  GetCurrAttr                                code  014178
  GetCursorPos                               code  0142f4
  GetHexNumber                               code  011604
  GetHexNumber.gthxn1                        code  011634
  GetHexNumber.gthxn2                        code  011618
  GetJCBPtr                                rodata  013208
  GetNormAttr                                code  015eac
  GetPixel                                   code  8000000000000143
  GetRandomNumber                            code  011884
  GetRange                                   code  0110c4
  GetRunningTCB                              code  0131d8
  GetScreenLocation                          code  014130
  GetSystemTime                              code  010f00
  GetTwoParams                               code  0110a8
  GetVBR                                     code  0180b8
  HomeCursor                                 code  0144dc
  I2C_CMD                                   const  000004
  I2C_CONTROL                               const  000002
  I2C_ERR                                    code  0124f0
  I2C_INIT                                   code  012420
  I2C_MASTER                                const  ffdc0e00
  I2C_PRESCALE_HI                           const  000001
  I2C_PRESCALE_LO                           const  000000
  I2C_READ                                   code  012454
  I2C_RX                                    const  000003
  I2C_STAT                                  const  000004
  I2C_TX                                    const  000003
  I2C_WAIT_TC                                code  012588
  I2C_WAIT_TC.0001                           code  012588
  I2C_WRITE                                  code  012508
  IOFocusNdx                                  bss  1082aa0
  IOFocusTbl                                  bss  1082aa8
  IOFocusc_101                               code  015030
  IOFocusc_102                               code  015038
  IOFocusc_103                               code  015044
  IOFocusc_104                               code  015128
  IOFocusc_105                               code  0150b4
  IOFocusc_106                               code  0150dc
  IOFocusc_107                               code  0150d4
  IOFocusc_108                               code  015108
  IOFocusc_110                               code  015174
  IOFocusc_111                               code  01519c
  IOFocusc_112                               code  015194
  IOFocusc_113                               code  01519c
  IOFocusc_74                                code  014d8c
  IOFocusc_75                                code  014d70
  IOFocusc_77                                code  014d74
  IOFocusc_78                                code  014e3c
  IOFocusc_79                                code  014e1c
  IOFocusc_81                                code  014e1c
  IOFocusc_83                                code  014e1c
  IOFocusc_85                                code  014e20
  IOFocusc_86                                code  014f24
  IOFocusc_87                                code  014f04
  IOFocusc_89                                code  014ebc
  IOFocusc_90                                code  014ee4
  IOFocusc_91                                code  014f08
  IOFocusc_92                                code  014f70
  IOFocusc_93                                code  014f5c
  IOFocusc_94                                code  01505c
  IOFocusc_95                                code  015040
  IOFocusc_97                                code  014ff8
  IOFocusc_99                                code  015040
  IdleTask                                   code  013b3c
  IncrementCursorPos                         code  014840
  InitPIC                                    code  010420
  InitPIC1                                   code  01043c
  InitUart                                   code  010458
  InputVec                                    bss  c20118
  InsertIntoReadyList                        code  013250
  InsertIntoTimeoutList                      code  013434
  JCB0                                        bss  c203c8
  JCB_Array                                  code  80000000000001fd
  JCB_KeybdBuffer                            code  8000000000000206
  JCB_KeybdEcho                              code  8000000000000181
  JCB_KeybdHead                              code  80000000000001ff
  JCB_KeybdTail                              code  8000000000000200
  JCB_NormAttr                               code  8000000000000153
  JCB_Size                                   code  80000000000001fc
  KEYBD                                     const  ffdc0000
  KEYBDCLR                                  const  ffdc0004
  KEYBD_DELAY                               const  0003e8
  KeyState1                                   bss  c20140
  KeyState2                                   bss  c20141
  KeybdBad                                    bss  c2013d
  KeybdEcho                                   bss  c2013c
  KeybdGetChar                               code  011c74
  KeybdGetChar.0001                          code  011cac
  KeybdGetChar.0003                          code  011c80
  KeybdGetChar.0004                          code  011e0c
  KeybdGetChar.0005                          code  011ec8
  KeybdGetChar.0006                          code  011ca8
  KeybdGetChar.0007                          code  011d88
  KeybdGetChar.0008                          code  011d9c
  KeybdGetChar.0009                          code  011d6c
  KeybdGetChar.0010                          code  011d4c
  KeybdGetChar.0011                          code  011e58
  KeybdGetChar.0012                          code  011e94
  KeybdGetChar.0013                          code  011d1c
  KeybdGetChar.doAlt                         code  011e24
  KeybdGetChar.doCapsLock                    code  011efc
  KeybdGetChar.doCtrl                        code  011de0
  KeybdGetChar.doExtend                      code  011dc8
  KeybdGetChar.doKeyup                       code  011db8
  KeybdGetChar.doNumLock                     code  011ee0
  KeybdGetChar.doScrollLock                  code  011f18
  KeybdGetChar.doShift                       code  011e9c
  KeybdGetChar.doTab                         code  011e70
  KeybdGetCharDirect                         code  01190c
  KeybdGetCharDirect.0001                    code  011914
  KeybdGetCharDirect.gk1                     code  011960
  KeybdGetCharDirect.gk2                     code  011958
  KeybdGetCharDirectNB                       code  011890
  KeybdGetCharDirectNB.0001                  code  0118f8
  KeybdGetCharDirectNB.0002                  code  0118ec
  KeybdGetCharDirectNB.0003                  code  0118e4
  KeybdGetCharNoWait                         code  011c5c
  KeybdGetCharWait                           code  011c68
  KeybdGetScancode                           code  011af8
  KeybdGetScancode.0001                      code  011bc0
  KeybdGetScancode.0002                      code  011bb0
  KeybdGetStatus                             code  011a50
  KeybdGetStatus.0001                        code  011aec
  KeybdGetStatus.0002                        code  011ae0
  KeybdIRQ                                   code  012014
  KeybdIRQ.0001                              code  0120f8
  KeybdIRQ.0002                              code  012110
  KeybdIRQ1                                  code  012118
  KeybdInit                                  code  01199e
  KeybdInit.0001                             code  0119a8
  KeybdInit.0002                             code  0119b8
  KeybdInit.0004                             code  011a38
  KeybdInit.config                           code  0119f4
  KeybdInit.keybdErr                         code  011a24
  KeybdInit.tryAgain                         code  011a1c
  KeybdLEDs                                   bss  c20143
  KeybdLocks                                  bss  c2013e
  KeybdRecvByte                              code  011bcc
  KeybdRecvByte.0003                         code  011bd8
  KeybdRecvByte.0004                         code  011bfc
  KeybdSendByte                              code  011fd8
  KeybdSetLEDStatus                          code  011f34
  KeybdSetLEDStatus.0001                     code  011fc8
  KeybdSetLEDStatus.0002                     code  011f64
  KeybdSetLEDStatus.0003                     code  011f80
  KeybdSetLEDStatus.0004                     code  011f9c
  KeybdWaitFlag                               bss  c20142
  KeybdWaitTx                                code  011c0c
  KeybdWaitTx.0001                           code  011c1c
  KeybdWaitTx.0002                           code  011c48
  LEDS                                      const  ffdc0600
  LF                                        const  00000a
  LoadFromSerial                             code  0128a8
  LoadFromSerial.0001                        code  0128bc
  LockBIOS                                   code  010c94
  LockBIOS1                                  code  010ccc
  LockIOF                                  rodata  01b180
  LockSYS                                  rodata  01b148
  LockSema                                 rodata  01b0d0
  LockSema.0001                            rodata  01b0dc
  LockSema.0002                            rodata  01b10c
  LockSema.0003                            rodata  01b0f4
  LockVideoBIOS                              code  0108fc
  MAX_BIOS_CALL                             const  000064
  MAX_DEV_OP                                const  00001f
  MAX_VIDEO_BIOS_CALL                       const  000023
  MON_STACK                                 const  006000
  MON_r1                                      bss  c20008
  MON_r10                                     bss  c20050
  MON_r11                                     bss  c20058
  MON_r12                                     bss  c20060
  MON_r13                                     bss  c20068
  MON_r14                                     bss  c20070
  MON_r15                                     bss  c20078
  MON_r16                                     bss  c20080
  MON_r17                                     bss  c20088
  MON_r18                                     bss  c20090
  MON_r19                                     bss  c20098
  MON_r2                                      bss  c20010
  MON_r20                                     bss  c200a0
  MON_r21                                     bss  c200a8
  MON_r22                                     bss  c200b0
  MON_r23                                     bss  c200b8
  MON_r24                                     bss  c200c0
  MON_r25                                     bss  c200c8
  MON_r26                                     bss  c200d0
  MON_r27                                     bss  c200d8
  MON_r28                                     bss  c200e0
  MON_r29                                     bss  c200e8
  MON_r3                                      bss  c20018
  MON_r30                                     bss  c200f0
  MON_r31                                     bss  c200f8
  MON_r4                                      bss  c20020
  MON_r5                                      bss  c20028
  MON_r6                                      bss  c20030
  MON_r7                                      bss  c20038
  MON_r8                                      bss  c20040
  MON_r9                                      bss  c20048
  MRTest                                     code  8000000000000190
  MicroDelay                                 code  012878
  MicroDelay.0001                            code  012884
  Milliseconds                                bss  c20108
  MonGetch                                   code  01105c
  Monitor                                    code  010f4c
  NR_DCB                                    const  000020
  NR_JCB                                     code  80000000000001fa
  NUMWKA                                      bss  c20144
  NormAttr                                    bss  c20130
  OutChar                                    code  0111b4
  OutputVec                                   bss  c20110
  PIC                                       const  ffdc0fc0
  PIC_ES                                    const  ffdc0fd0
  PIC_IE                                    const  ffdc0fc4
  PIC_RSTE                                  const  ffdc0fd4
  PN1                                        code  010b6c
  PN2                                        code  010b6c
  PN3                                        code  010b8c
  PN4                                        code  010b98
  PN5                                        code  010ba4
  PN6                                        code  010b88
  PNRET                                      code  010bbc
  PROG_LOAD_AREA                            const  c23000
  PRTNUM                                     code  010b3c
  PopTimeoutList                             code  013584
  PrintSc                                    code  0165c0
  RANDOM_NUM                                const  ffdc0c00
  ROMChecksum                                code  010c08
  ROMChecksum.0001                           code  010c20
  ROOTDIR_BUF                                 bss  c23000
  RTCCOscOn                                  code  0125f0
  RTCCReadbuf                                code  012598
  RTCCReadbuf.0001                           code  0125a4
  RTCCWritebuf                               code  0125c4
  RTCCWritebuf.0001                          code  0125d0
  RTCC_BUF                                    bss  c20bd0
  RW_READ_SD_BLOCK                          const  000002
  RW_WRITE_SD_BLOCK                         const  000003
  ReleaseIOFocus                             code  014f30
  RemoveFromReadyList                        code  013334
  RemoveFromTimeoutList                      code  013518
  RequestIOFocus                           rodata  014e48
  RescheduleIRQ                              code  01390c
  RestoreContext                             code  013850
  SC_ALT                                    const  000011
  SC_CAPSLOCK                               const  000058
  SC_CTRL                                   const  000014
  SC_DEL                                    const  000071
  SC_EXTEND                                 const  0000e0
  SC_KEYUP                                  const  0000f0
  SC_LCTRL                                  const  000058
  SC_LSHIFT                                 const  000012
  SC_NUMLOCK                                const  000077
  SC_RSHIFT                                 const  000059
  SC_SCROLLLOCK                             const  00007e
  SC_TAB                                    const  00000d
  SDDiskSize                                 code  80000000000000c5
  SDInit                                     code  80000000000000c1
  SDReadBoot                                 code  80000000000001a5
  SDReadMultiple                             code  80000000000000c2
  SDReadPart                                 code  80000000000000c4
  SDWriteMultiple                            code  80000000000000c3
  SD_2_0                                     code  8000000000000242
  SD_CMD8                                    code  012660
  SD_CMD8.0001                               code  0126d0
  SD_CMD8.0002                               code  0126d8
  SD_CMD8.0003                               code  012734
  SD_CMD8.0004                               code  0126e8
  SD_CMD8.respOk                             code  012778
  SD_INIT                                    code  012614
  SD_MASTER                                 const  ffdc0b00
  SD_WAIT_RESP                               code  012790
  SD_WAIT_RESP.0001                          code  0127a4
  SD_WAIT_RESP.0002                          code  0127d0
  SECTOR_BUF                                  bss  c22000
  SPIMASTER                                 const  ffdc0500
  SPI_DIRECT_ACCESS_DATA_REG                const  000018
  SPI_INIT_NO_ERROR                         const  000000
  SPI_INIT_SD                               const  000001
  SPI_MASTER_CONTROL_REG                    const  000004
  SPI_MASTER_VERSION_REG                    const  000000
  SPI_READ_NO_ERROR                         const  000000
  SPI_RESP_BYTE1                            const  0000c0
  SPI_RESP_BYTE2                            const  0000c4
  SPI_RESP_BYTE3                            const  0000c8
  SPI_RESP_BYTE4                            const  0000cc
  SPI_RX_FIFO_CTRL_REG                      const  000050
  SPI_RX_FIFO_DATA_COUNT_LSB                const  00004c
  SPI_RX_FIFO_DATA_COUNT_MSB                const  000048
  SPI_RX_FIFO_DATA_REG                      const  000040
  SPI_SD_SECT_15_8_REG                      const  000020
  SPI_SD_SECT_23_16_REG                     const  000024
  SPI_SD_SECT_31_24_REG                     const  000028
  SPI_SD_SECT_7_0_REG                       const  00001c
  SPI_TRANS_BUSY                            const  000001
  SPI_TRANS_CTRL_REG                        const  00000c
  SPI_TRANS_ERROR_REG                       const  000014
  SPI_TRANS_START                           const  000001
  SPI_TRANS_STATUS_REG                      const  000010
  SPI_TRANS_TYPE_REG                        const  000008
  SPI_TX_FIFO_CTRL_REG                      const  000090
  SPI_TX_FIFO_DATA_REG                      const  000080
  SPI_WRITE_NO_ERROR                        const  000000
  SSM_ISR                                    code  012afc
  ScreenToAscii                              code  0143f4
  ScrollUp                                   code  014770
  SelectTaskToRun                            code  0135e0
  SelectTasktoRun                          rodata  000000
  SerialCheckForCharDirect                   code  010504
  SerialGetChar                              code  01066c
  SerialGetCharDirect                        code  0104e8
  SerialIRQ                                  code  010758
  SerialPutChar                              code  010514
  SerialStartMsg                             code  010248
  ServiceRequestIRQ                          code  80000000000000fb
  SetBkColor                                 code  8000000000000141
  SetBound48                                 code  013108
  SetBound49                                 code  013134
  SetBound50                                 code  013160
  SetBound51                                 code  01318c
  SetCurrAttr                                code  0141c0
  SetCursorCol                               code  014298
  SetCursorPos                               code  014234
  SetNormAttr                                code  015e80
  SetPixel                                   code  8000000000000142
  SetRunningTCB                              code  0131e0
  SetVideoReg                              rodata  014208
  SetupIntVectors                            code  01027c
  SetupIntVectors.0001                       code  010298
  SetupIntVectors1                           code  010360
  SetupIntVectors1.0001                      code  01037c
  SetupMemtags                               code  012834
  StartCPU1Addr                               bss  c203a0
  StartCPU1Flag                               bss  c20398
  StartTask                                  code  013c0c
  SwitchIOFocus                              code  014d98
  TAB                                       const  000009
  TCB_BASE                                  const  c00000
  TCB_BIOS_Stack                            const  000160
  TCB_SYS_Stack                              code  8000000000000258
  TCB_TOP                                   const  1c00000
  TCB_hJCB                                   code  80000000000001f9
  TEXTREG                                   const  0a0000
  TEXTSCR                                   const  ffd00000
  TEXT_COLS                                 const  000000
  TEXT_CURCTL                               const  000020
  TEXT_CURPOS                               const  00002c
  TEXT_ROWS                                 const  000004
  TXTCOLS                                   const  000054
  TXTROWS                                   const  00001f
  Tick1024Rout                               code  010ed8
  TickRout                                   code  010e74
  TickRout.0001                              code  010e9c
  TickVec                                     bss  c20128
  Ticks                                       bss  c20000
  TimeoutList                                 bss  114eaf0
  TimerIRQ                                   code  013714
  ToJul                                      code  012d08
  UART                                      const  ffdc0a00
  UART_CM0                                  const  000008
  UART_CM1                                  const  000009
  UART_CM2                                  const  00000a
  UART_CM3                                  const  00000b
  UART_CTRL                                 const  000007
  UART_FF                                   const  000005
  UART_IE                                   const  000004
  UART_IS                                   const  000003
  UART_LS                                   const  000001
  UART_MC                                   const  000006
  UART_MS                                   const  000002
  UART_RX                                   const  000000
  UART_SPR                                  const  00000f
  UART_TX                                   const  000000
  Uart_foff                                   bss  c20176
  Uart_fon                                    bss  c20178
  Uart_ms                                     bss  c2016c
  Uart_rxdtr                                  bss  c20174
  Uart_rxfifo                                 bss  c2017d
  Uart_rxflow                                 bss  c20172
  Uart_rxhead                                 bss  c2016e
  Uart_rxrts                                  bss  c20173
  Uart_rxtail                                 bss  c20170
  Uart_rxxon                                  bss  c20175
  Uart_txdtr                                  bss  c2017b
  Uart_txrts                                  bss  c2017a
  Uart_txxon                                  bss  c2017c
  Uart_txxonoff                               bss  c2016d
  UninitIRQ                                  code  012a6c
  UninitIRQ.0001                             code  012a90
  UnlockBIOS                                 code  010cb0
  UnlockIOF                                rodata  01b19c
  UnlockSYS                                rodata  01b164
  UnlockSema                               rodata  01b118
  UnlockSema.0001                          rodata  01b120
  UnlockSema.0002                          rodata  01b13c
  UnlockVideoBIOS                            code  010918
  UpdateCursorPos                            code  014460
  UserTickRout                               code  010ea8
  VBASciiToScreen                            code  010a30
  VBAsciiToScreen                            code  8000000000000147
  VBDisplayChar                              code  010a1c
  VBDisplayString                            code  8000000000000144
  VBDisplayString16                          code  8000000000000146
  VBGetCurrAttr                              code  010a58
  VBGetCursorPos                             code  010a10
  VBScreenToAscii                            code  010bd0
  VBSetCurrAttr                              code  010a44
  VBSetCursorPos                             code  0109f8
  VideoBIOSCall                              code  010934
  VideoBIOSCall.0003                         code  010988
  VideoBIOSCall.0004                         code  010974
  VideoBIOSCall.0005                         code  010990
  VideoBIOSSema                             const  ffdb0000
  VideoBIOS_FuncTable                        code  0108b4
  VideoBIOS_sema                              bss  c20100
  Wait10ms                                   code  011fe4
  Wait10ms.0001                              code  011ff0
  Wait10ms.0002                              code  012008
  XOFF                                      const  000013
  XON                                       const  000011
  badaddr                                    code  01a2f0
  begin_init_data                          rodata  01c270
  berr_rout                                  code  012a94
  bios_stacks                                 bss  e592a0
  bmem                                        bss  114fd10
  brkpt1                                     code  01283c
  brkpt1.0001                                code  012858
  chkTCB                                     code  0131b8
  cirxb1                                     code  010668
  cmem                                        bss  114fd18
  console_135                                code  01416c
  console_136                                code  014158
  console_137                                code  0141b4
  console_138                                code  0141a0
  console_139                                code  0141fc
  console_140                                code  0141e8
  console_142                                code  014228
  console_143                                code  01428c
  console_144                                code  014274
  console_145                                code  0142e8
  console_146                                code  0142d0
  console_147                                code  01434c
  console_148                                code  014334
  console_150                                code  014380
  console_152                                code  014374
  console_153                                code  014394
  console_155                                code  0143c4
  console_157                                code  0143dc
  console_160                                code  014428
  console_162                                code  01441c
  console_163                                code  01443c
  console_165                                code  014454
  console_167                                code  0144d0
  console_168                                code  0144b8
  console_169                                code  01452c
  console_170                                code  014514
  console_171                                code  0145c0
  console_172                                code  0145a8
  console_173                                code  01468c
  console_174                                code  014648
  console_175                                code  014670
  console_176                                code  014668
  console_177                                code  014670
  console_178                                code  014764
  console_179                                code  01471c
  console_180                                code  01474c
  console_181                                code  014744
  console_182                                code  01474c
  console_183                                code  014834
  console_184                                code  0147c8
  console_185                                code  014804
  console_186                                code  0147fc
  console_187                                code  014818
  console_188                                code  0148e0
  console_189                                code  0148a4
  console_191                                code  01488c
  console_192                                code  0148cc
  console_194                                code  014c08
  console_195                                code  014bec
  console_196                                code  014974
  console_197                                code  014980
  console_198                                code  0149ac
  console_199                                code  0149d0
  console_200                                code  0149f0
  console_201                                code  014a10
  console_202                                code  014a34
  console_203                                code  014a4c
  console_204                                code  014ad4
  console_205                                code  014b74
  console_206                                code  014ba8
  console_207                                code  0149a4
  console_208                                code  0149a8
  console_209                                code  0149cc
  console_211                                code  0149ec
  console_213                                code  014a0c
  console_215                                code  014a30
  console_217                                code  014a40
  console_219                                code  014a64
  console_220                                code  014a9c
  console_221                                code  014a94
  console_222                                code  014b70
  console_224                                code  014b04
  console_225                                code  014b3c
  console_226                                code  014b34
  console_227                                code  014bec
  console_228                                code  014c58
  console_229                                code  014c44
  console_230                                code  014cbc
  console_231                                code  014c84
  console_232                                code  014ca4
  console_233                                code  014ca4
  console_234                                code  014d04
  console_235                                code  014cf0
  cr0save                                     bss  114fcd0
  ctype_1                                    code  015964
  ctype_11                                   code  0159d4
  ctype_13                                   code  015a1c
  ctype_15                                   code  015a10
  ctype_16                                   code  015a3c
  ctype_19                                   code  015a78
  ctype_21                                   code  015a6c
  ctype_22                                   code  015a98
  ctype_24                                   code  015ab8
  ctype_27                                   code  015ae8
  ctype_29                                   code  015adc
  ctype_3                                    code  015958
  ctype_30                                   code  015afc
  ctype_32                                   code  015b10
  ctype_34                                   code  015b24
  ctype_36                                   code  015b38
  ctype_39                                   code  015b70
  ctype_4                                    code  015984
  ctype_41                                   code  015b78
  ctype_43                                   code  015bb4
  ctype_45                                   code  015bbc
  ctype_47                                   code  015bf4
  ctype_48                                   code  015bf8
  ctype_49                                   code  015bfc
  ctype_51                                   code  015c34
  ctype_52                                   code  015c38
  ctype_53                                   code  015c3c
  ctype_55                                   code  015d34
  ctype_56                                   code  015d1c
  ctype_57                                   code  015d2c
  ctype_58                                   code  015d20
  ctype_59                                   code  015da4
  ctype_6                                    code  0159a4
  ctype_60                                   code  015d88
  ctype_61                                   code  015d8c
  ctype_62                                   code  015d80
  ctype_63                                   code  015d90
  ctype_64                                   code  015e10
  ctype_65                                   code  015df4
  ctype_66                                   code  015df8
  ctype_67                                   code  015dec
  ctype_68                                   code  015dfc
  ctype_70                                   code  015e78
  ctype_71                                   code  015e60
  ctype_72                                   code  015e70
  ctype_73                                   code  015e64
  ctype_9                                    code  0159e0
  curaddr                                     bss  114fce8
  curfmt                                      bss  114fcf8
  currep                                      bss  114fd00
  cursz                                       bss  114fcf0
  dbg_DisplayHelp                            code  017f90
  dbg_GetCursorCol                           code  018178
  dbg_GetCursorRow                           code  018154
  dbg_GetDBAD                                code  0181c4
  dbg_GetHexNumber                         rodata  000000
  dbg_HomeCursor                             code  01819c
  dbg_ReadSetDB                              code  018798
  dbg_ReadSetDSB                             code  018994
  dbg_ReadSetIB                              code  0185d4
  dbg_SetDBAD                                code  018228
  dbg_arm                                    code  018298
  dbg_dbctrl                                  bss  114fbc8
  dbg_getDecNumber                           code  018d78
  dbg_getHexNumber                           code  0184a8
  dbg_getchar                                code  0182dc
  dbg_init                                   code  01a1ec
  dbg_irq                                    code  019ce4
  dbg_nextNonSpace                           code  0183b0
  dbg_nextSpace                              code  018438
  dbg_parse_begin                            code  018f38
  dbg_parse_line                             code  018fd0
  dbg_processReg                             code  018e34
  dbg_prompt                                 code  018d30
  dbg_stack                                   bss  114ebc8
  dbg_ungetch                                code  018384
  debugger                                   code  019f14
  debugger_237                             rodata  01c1c0
  debugger_238                             rodata  01c1ac
  debugger_239                             rodata  01c13e
  debugger_240                             rodata  01c116
  debugger_241                             rodata  01c0b4
  debugger_242                             rodata  01c044
  debugger_243                             rodata  01bfd4
  debugger_244                             rodata  01bf6a
  debugger_245                             rodata  01befe
  debugger_246                             rodata  01beac
  debugger_247                             rodata  01be3c
  debugger_248                             rodata  01bdce
  debugger_249                             rodata  01bd76
  debugger_250                             rodata  01bd4e
  debugger_251                             rodata  01bd40
  debugger_252                               code  0180ac
  debugger_253                               code  018098
  debugger_255                               code  0180c8
  debugger_256                               code  018148
  debugger_257                               code  01810c
  debugger_259                               code  0180f8
  debugger_260                               code  018124
  debugger_262                               code  018120
  debugger_264                               code  01816c
  debugger_266                               code  018190
  debugger_268                               code  0181b8
  debugger_270                               code  018224
  debugger_271                               code  0181f8
  debugger_272                               code  018200
  debugger_273                               code  018208
  debugger_274                               code  018210
  debugger_275                               code  018218
  debugger_277                               code  01828c
  debugger_278                               code  01825c
  debugger_279                               code  018268
  debugger_280                               code  018274
  debugger_281                               code  018280
  debugger_282                               code  01828c
  debugger_284                               code  0182ac
  debugger_286                               code  0182d0
  debugger_288                               code  018324
  debugger_290                               code  01832c
  debugger_292                               code  01834c
  debugger_293                               code  018378
  debugger_294                               code  018378
  debugger_296                               code  0183a4
  debugger_298                               code  0183a4
  debugger_299                               code  01842c
  debugger_300                               code  0183cc
  debugger_301                               code  018424
  debugger_302                               code  018420
  debugger_304                               code  018404
  debugger_305                               code  01840c
  debugger_306                               code  01849c
  debugger_307                               code  018454
  debugger_308                               code  018480
  debugger_309                               code  018474
  debugger_311                               code  018488
  debugger_312                               code  0185c8
  debugger_313                               code  0184d8
  debugger_314                               code  0185c4
  debugger_315                               code  018524
  debugger_316                               code  0185b4
  debugger_317                               code  018558
  debugger_318                               code  0185b4
  debugger_319                               code  01858c
  debugger_320                               code  0185b4
  debugger_321                               code  0185a0
  debugger_322                             rodata  01bd1e
  debugger_323                             rodata  01bcf6
  debugger_324                               code  01878c
  debugger_325                               code  018620
  debugger_327                               code  018608
  debugger_328                               code  0186f4
  debugger_329                               code  018788
  debugger_330                               code  0186a0
  debugger_331                               code  0186f0
  debugger_332                               code  018788
  debugger_334                               code  018774
  debugger_335                               code  018788
  debugger_338                             rodata  01bcd4
  debugger_339                             rodata  01bcac
  debugger_340                               code  018988
  debugger_341                               code  0187e4
  debugger_343                               code  0187cc
  debugger_344                               code  0188d8
  debugger_345                               code  018984
  debugger_346                               code  018884
  debugger_347                               code  0188d4
  debugger_348                               code  018984
  debugger_350                               code  018970
  debugger_351                               code  018984
  debugger_354                             rodata  01bc88
  debugger_355                             rodata  01bc5e
  debugger_356                               code  018b84
  debugger_357                               code  0189e0
  debugger_359                               code  0189c8
  debugger_360                               code  018ad4
  debugger_361                               code  018b80
  debugger_362                               code  018a80
  debugger_363                               code  018ad0
  debugger_364                               code  018b80
  debugger_366                               code  018b6c
  debugger_367                               code  018b80
  debugger_371                             rodata  01bc26
  debugger_372                             rodata  01bbf2
  debugger_373                             rodata  01bbb8
  debugger_374                             rodata  01bb7c
  debugger_375                             rodata  01bb40
  debugger_376                             rodata  01bb06
  debugger_377                             rodata  01baca
  debugger_378                             rodata  01baa0
  debugger_379                               code  018cc8
  debugger_380                               code  018cb0
  debugger_382                             rodata  01ba8e
  debugger_383                               code  018d24
  debugger_384                               code  018d10
  debugger_385                             rodata  01ba80
  debugger_386                               code  018d6c
  debugger_387                               code  018d58
  debugger_388                               code  018e28
  debugger_389                               code  018dbc
  debugger_391                               code  018da4
  debugger_392                               code  018dc4
  debugger_393                               code  018e0c
  debugger_394                               code  018f2c
  debugger_395                               code  018f28
  debugger_396                               code  018e70
  debugger_397                               code  018e78
  debugger_398                               code  018f24
  debugger_400                               code  018f24
  debugger_401                               code  018ecc
  debugger_402                               code  018eec
  debugger_403                               code  018f20
  debugger_404                               code  018ed8
  debugger_405                               code  018f1c
  debugger_407                               code  018fc4
  debugger_408                               code  018fa0
  debugger_410                               code  018fac
  debugger_411                             rodata  01ba6c
  debugger_412                             rodata  01ba58
  debugger_413                             rodata  01ba44
  debugger_414                             rodata  01ba30
  debugger_415                             rodata  01ba2a
  debugger_416                             rodata  01ba16
  debugger_417                             rodata  01ba02
  debugger_418                             rodata  01b9ee
  debugger_419                             rodata  01b9da
  debugger_420                             rodata  01b9c4
  debugger_421                             rodata  01b9ae
  debugger_422                             rodata  01b998
  debugger_423                             rodata  01b982
  debugger_424                             rodata  01b97c
  debugger_425                             rodata  01b976
  debugger_426                             rodata  01b966
  debugger_427                             rodata  01b956
  debugger_428                             rodata  01b946
  debugger_429                             rodata  01b936
  debugger_430                             rodata  01b92a
  debugger_431                             rodata  01b91e
  debugger_432                             rodata  01b912
  debugger_433                             rodata  01b904
  debugger_434                             rodata  01b8fe
  debugger_435                               code  019cd8
  debugger_436                               code  019040
  debugger_437                               code  019cd0
  debugger_438                               code  019ccc
  debugger_439                               code  0190b8
  debugger_440                               code  0190e8
  debugger_441                               code  0190ec
  debugger_442                               code  0190f4
  debugger_443                               code  0190fc
  debugger_444                               code  01910c
  debugger_445                               code  0192a4
  debugger_446                               code  0196fc
  debugger_447                               code  019704
  debugger_448                               code  0197b8
  debugger_449                               code  0190b8
  debugger_450                               code  0192a0
  debugger_451                               code  01914c
  debugger_452                               code  019260
  debugger_453                               code  019270
  debugger_454                               code  019280
  debugger_455                               code  019290
  debugger_456                               code  019190
  debugger_458                               code  0191d4
  debugger_460                               code  019218
  debugger_462                               code  01925c
  debugger_464                               code  0196f8
  debugger_465                               code  0192f4
  debugger_466                               code  019368
  debugger_467                               code  0194ac
  debugger_468                               code  0194bc
  debugger_469                               code  0194cc
  debugger_470                               code  0194dc
  debugger_471                               code  0194ec
  debugger_472                               code  0196a4
  debugger_473                               code  019364
  debugger_475                               code  019354
  debugger_476                               code  019364
  debugger_477                               code  019330
  debugger_478                               code  019350
  debugger_479                               code  019348
  debugger_480                               code  0193c4
  debugger_482                               code  019410
  debugger_484                               code  01945c
  debugger_486                               code  0194a8
  debugger_488                               code  0196a0
  debugger_489                               code  01952c
  debugger_490                               code  019660
  debugger_491                               code  019670
  debugger_492                               code  019680
  debugger_493                               code  019690
  debugger_494                               code  019578
  debugger_496                               code  0195c4
  debugger_498                               code  019610
  debugger_500                               code  01965c
  debugger_502                               code  0197b4
  debugger_504                               code  019768
  debugger_505                               code  0197b4
  debugger_506                               code  0197b4
  debugger_508                               code  019780
  debugger_509                               code  019948
  debugger_511                               code  0197f8
  debugger_513                               code  019948
  debugger_514                               code  019828
  debugger_515                               code  019858
  debugger_516                               code  019888
  debugger_517                               code  019854
  debugger_519                               code  019884
  debugger_521                               code  019920
  debugger_522                               code  0198c8
  debugger_523                               code  0198dc
  debugger_524                               code  0198f0
  debugger_525                               code  019904
  debugger_526                               code  019918
  debugger_527                               code  019944
  debugger_529                               code  019ccc
  debugger_530                               code  019968
  debugger_531                               code  0199bc
  debugger_532                               code  019a3c
  debugger_533                               code  01997c
  debugger_534                               code  0199b8
  debugger_535                               code  0199b0
  debugger_536                               code  0199a0
  debugger_538                               code  0199c0
  debugger_539                               code  019a38
  debugger_540                               code  019a30
  debugger_541                               code  0199e4
  debugger_543                               code  019a40
  debugger_544                               code  019c44
  debugger_545                               code  019c3c
  debugger_546                               code  019a64
  debugger_548                               code  019b3c
  debugger_550                               code  019b3c
  debugger_551                               code  019aa0
  debugger_552                               code  019ac4
  debugger_553                               code  019aec
  debugger_554                               code  019b14
  debugger_555                               code  019c3c
  debugger_556                               code  019b64
  debugger_557                               code  019b94
  debugger_558                               code  019bcc
  debugger_559                               code  019c04
  debugger_560                               code  019cb8
  debugger_561                               code  019c6c
  debugger_562                               code  019c7c
  debugger_563                               code  019c90
  debugger_564                               code  019ca4
  debugger_567                             rodata  01b8f0
  debugger_568                               code  01a1e0
  debugger_569                               code  019f94
  debugger_571                               code  019f94
  debugger_572                               code  01a1dc
  debugger_573                               code  019fa4
  debugger_574                               code  01a14c
  debugger_575                               code  01a10c
  debugger_576                               code  01a144
  debugger_577                               code  01a01c
  debugger_579                               code  019ff8
  debugger_580                               code  01a05c
  debugger_582                               code  01a034
  debugger_583                               code  01a108
  debugger_585                               code  01a0c8
  debugger_586                               code  01a0e8
  debugger_587                               code  01a0e4
  debugger_588                               code  01a0e8
  debugger_589                               code  01a11c
  debugger_591                               code  01a134
  debugger_593                               code  01a170
  debugger_594                               code  01a1c4
  debugger_595                               code  01a1bc
  debugger_596                               code  01a1d8
  debugger_598                               code  01a2b0
  debugger_599                               code  01a29c
  demo_stack                                  bss  c27008
  disassem                                 rodata  016d5c
  disassem20                               rodata  017f1c
  disassem_601                               code  015ea0
  disassem_603                               code  015ec8
  disassem_604                               code  015f58
  disassem_605                               code  015f44
  disassem_606                             rodata  01b8b0
  disassem_607                               code  015fe0
  disassem_608                               code  015fcc
  disassem_610                             rodata  01b8a8
  disassem_611                               code  016038
  disassem_612                               code  016024
  disassem_614                             rodata  01b89e
  disassem_615                               code  016090
  disassem_616                               code  01607c
  disassem_618                             rodata  01b894
  disassem_619                               code  0160e8
  disassem_620                               code  0160d4
  disassem_622                             rodata  01b88c
  disassem_623                               code  016140
  disassem_624                               code  01612c
  disassem_626                             rodata  01b884
  disassem_627                               code  016198
  disassem_628                               code  016184
  disassem_630                             rodata  01b87c
  disassem_631                             rodata  01b874
  disassem_632                             rodata  01b86a
  disassem_633                             rodata  01b862
  disassem_634                             rodata  01b85a
  disassem_635                             rodata  01b852
  disassem_636                             rodata  01b84a
  disassem_637                             rodata  01b842
  disassem_638                             rodata  01b836
  disassem_639                             rodata  01b82a
  disassem_640                             rodata  01b81e
  disassem_641                             rodata  01b812
  disassem_642                             rodata  01b804
  disassem_643                             rodata  01b7f6
  disassem_644                             rodata  01b7ea
  disassem_645                               code  016388
  disassem_646                               code  016374
  disassem_647                               code  016248
  disassem_648                               code  01625c
  disassem_649                               code  016270
  disassem_650                               code  016284
  disassem_651                               code  016298
  disassem_652                               code  0162ac
  disassem_653                               code  0162c0
  disassem_654                               code  0162d4
  disassem_655                               code  0162e8
  disassem_656                               code  0162fc
  disassem_657                               code  016310
  disassem_658                               code  016324
  disassem_659                               code  016338
  disassem_660                               code  01634c
  disassem_661                               code  016360
  disassem_662                               code  016374
  disassem_664                             rodata  01b7e2
  disassem_665                             rodata  01b7da
  disassem_666                             rodata  01b7ca
  disassem_667                             rodata  01b7c4
  disassem_668                               code  016468
  disassem_669                               code  0163ec
  disassem_670                               code  016410
  disassem_671                               code  016444
  disassem_672                               code  016454
  disassem_673                               code  016454
  disassem_675                             rodata  01b7b6
  disassem_676                             rodata  01b7a8
  disassem_677                             rodata  01b7a0
  disassem_678                             rodata  01b798
  disassem_679                             rodata  01b794
  disassem_680                             rodata  01b786
  disassem_681                             rodata  01b77a
  disassem_682                               code  0165b4
  disassem_683                               code  0164f4
  disassem_684                               code  016504
  disassem_685                               code  016538
  disassem_686                               code  01655c
  disassem_687                               code  016578
  disassem_688                               code  01658c
  disassem_689                               code  0165a0
  disassem_691                             rodata  01b76c
  disassem_692                             rodata  01b764
  disassem_693                               code  016620
  disassem_694                               code  0165fc
  disassem_695                               code  01660c
  disassem_696                               code  01660c
  disassem_698                             rodata  01b74c
  disassem_699                             rodata  01b734
  disassem_700                             rodata  01b71c
  disassem_701                             rodata  01b704
  disassem_702                               code  016704
  disassem_703                               code  0166f0
  disassem_704                               code  0166a0
  disassem_705                               code  0166b4
  disassem_706                               code  0166c8
  disassem_707                               code  0166dc
  disassem_708                               code  0166f0
  disassem_710                             rodata  01b6f4
  disassem_711                             rodata  01b6ec
  disassem_712                             rodata  01b6da
  disassem_713                             rodata  01b6d0
  disassem_714                             rodata  01b6c0
  disassem_715                               code  016880
  disassem_716                               code  0167f8
  disassem_718                               code  016828
  disassem_719                               code  01686c
  disassem_720                               code  016854
  disassem_721                               code  01686c
  disassem_722                               code  01686c
  disassem_724                               code  01686c
  disassem_726                             rodata  01b6b8
  disassem_727                               code  0168fc
  disassem_728                               code  0168e8
  disassem_730                             rodata  01b6b0
  disassem_731                             rodata  01b6a2
  disassem_732                             rodata  01b694
  disassem_733                               code  0169d4
  disassem_734                               code  01699c
  disassem_735                               code  0169c0
  disassem_736                               code  0169c0
  disassem_737                             rodata  01b68c
  disassem_738                             rodata  01b67e
  disassem_739                               code  016a98
  disassem_740                               code  016a34
  disassem_742                               code  016a84
  disassem_743                             rodata  01b670
  disassem_744                             rodata  01b66a
  disassem_745                             rodata  01b662
  disassem_746                             rodata  01b65c
  disassem_747                               code  016bc0
  disassem_748                               code  016b68
  disassem_750                               code  016b54
  disassem_751                             rodata  01b64e
  disassem_752                             rodata  01b64a
  disassem_753                             rodata  01b63a
  disassem_754                             rodata  01b62a
  disassem_755                             rodata  01b622
  disassem_756                             rodata  01b61a
  disassem_757                             rodata  01b60e
  disassem_758                             rodata  01b606
  disassem_759                               code  016d50
  disassem_760                               code  016c90
  disassem_761                               code  016ca0
  disassem_762                               code  016c7c
  disassem_763                               code  016c8c
  disassem_764                               code  016cdc
  disassem_765                               code  016d10
  disassem_766                               code  016d10
  disassem_768                               code  016d2c
  disassem_770                               code  016d3c
  disassem_771                             rodata  01b5fa
  disassem_772                             rodata  01b5ee
  disassem_773                             rodata  01b5e2
  disassem_774                             rodata  01b5d6
  disassem_775                             rodata  01b5ca
  disassem_776                             rodata  01b5be
  disassem_777                             rodata  01b5b2
  disassem_778                             rodata  01b5a6
  disassem_779                             rodata  01b59a
  disassem_780                             rodata  01b58e
  disassem_781                             rodata  01b582
  disassem_782                             rodata  01b576
  disassem_783                             rodata  01b56a
  disassem_784                             rodata  01b55e
  disassem_785                             rodata  01b552
  disassem_786                             rodata  01b546
  disassem_787                             rodata  01b53a
  disassem_788                             rodata  01b52e
  disassem_789                             rodata  01b522
  disassem_790                             rodata  01b516
  disassem_791                             rodata  01b50a
  disassem_792                             rodata  01b4fc
  disassem_793                             rodata  01b4f6
  disassem_794                             rodata  01b4e8
  disassem_795                             rodata  01b4e4
  disassem_796                             rodata  01b4de
  disassem_797                             rodata  01b4d2
  disassem_798                             rodata  01b4c6
  disassem_799                             rodata  01b4ba
  disassem_800                             rodata  01b4ae
  disassem_801                             rodata  01b4a2
  disassem_802                             rodata  01b496
  disassem_803                             rodata  01b48a
  disassem_804                             rodata  01b47e
  disassem_805                             rodata  01b472
  disassem_806                             rodata  01b466
  disassem_807                             rodata  01b45a
  disassem_808                             rodata  01b44e
  disassem_809                             rodata  01b442
  disassem_810                             rodata  01b436
  disassem_811                             rodata  01b42a
  disassem_812                             rodata  01b41e
  disassem_813                             rodata  01b412
  disassem_814                             rodata  01b406
  disassem_815                             rodata  01b3fa
  disassem_816                             rodata  01b3ee
  disassem_817                             rodata  01b3d6
  disassem_818                             rodata  01b3be
  disassem_819                             rodata  01b3a6
  disassem_820                             rodata  01b38e
  disassem_821                             rodata  01b382
  disassem_822                             rodata  01b376
  disassem_823                             rodata  01b36a
  disassem_824                             rodata  01b35e
  disassem_825                             rodata  01b352
  disassem_826                             rodata  01b346
  disassem_827                             rodata  01b33a
  disassem_828                             rodata  01b32e
  disassem_829                             rodata  01b322
  disassem_830                             rodata  01b316
  disassem_831                             rodata  01b30a
  disassem_832                             rodata  01b2fe
  disassem_833                             rodata  01b2f2
  disassem_834                             rodata  01b2e6
  disassem_835                             rodata  01b2da
  disassem_836                             rodata  01b2ce
  disassem_837                             rodata  01b2c2
  disassem_838                             rodata  01b2b6
  disassem_839                             rodata  01b2aa
  disassem_840                             rodata  01b29e
  disassem_841                             rodata  01b292
  disassem_842                             rodata  01b286
  disassem_843                             rodata  01b27a
  disassem_844                             rodata  01b26e
  disassem_845                             rodata  01b262
  disassem_846                             rodata  01b256
  disassem_847                             rodata  01b248
  disassem_848                             rodata  01b242
  disassem_849                             rodata  01b234
  disassem_850                             rodata  01b22e
  disassem_851                             rodata  01b222
  disassem_852                             rodata  01b214
  disassem_853                             rodata  01b206
  disassem_854                             rodata  01b1f8
  disassem_855                             rodata  01b1e8
  disassem_856                               code  017f10
  disassem_857                               code  016d9c
  disassem_858                               code  017ef4
  disassem_859                               code  016db8
  disassem_861                               code  017ecc
  disassem_862                               code  016fb0
  disassem_863                               code  017044
  disassem_864                               code  017494
  disassem_865                               code  0174bc
  disassem_866                               code  0174e4
  disassem_867                               code  01750c
  disassem_868                               code  017534
  disassem_869                               code  01755c
  disassem_870                               code  017584
  disassem_871                               code  0175ac
  disassem_872                               code  0175d4
  disassem_873                               code  0175fc
  disassem_874                               code  017624
  disassem_875                               code  01764c
  disassem_876                               code  017674
  disassem_877                               code  01769c
  disassem_878                               code  0177d8
  disassem_879                               code  0177f8
  disassem_880                               code  01780c
  disassem_881                               code  017880
  disassem_882                               code  0178f4
  disassem_883                               code  017934
  disassem_884                               code  017974
  disassem_885                               code  01799c
  disassem_886                               code  0179c4
  disassem_887                               code  0179ec
  disassem_888                               code  017a14
  disassem_889                               code  017a3c
  disassem_890                               code  017a64
  disassem_891                               code  017a8c
  disassem_892                               code  017ab4
  disassem_893                               code  017ad4
  disassem_894                               code  017af4
  disassem_895                               code  017b14
  disassem_896                               code  017b34
  disassem_897                               code  017b54
  disassem_898                               code  017b74
  disassem_899                               code  017b94
  disassem_900                               code  017bb4
  disassem_901                               code  017be4
  disassem_902                               code  017c0c
  disassem_903                               code  017c34
  disassem_904                               code  017c5c
  disassem_905                               code  017c84
  disassem_906                               code  017ca4
  disassem_907                               code  017cc4
  disassem_908                               code  017ce4
  disassem_909                               code  017d04
  disassem_910                               code  017d2c
  disassem_911                               code  017d54
  disassem_912                               code  017d9c
  disassem_913                               code  017de4
  disassem_914                               code  017e0c
  disassem_915                               code  017ea4
  disassem_916                               code  016ff8
  disassem_917                               code  017018
  disassem_918                               code  016ff4
  disassem_920                               code  017490
  disassem_921                               code  0170cc
  disassem_922                               code  017230
  disassem_923                               code  017250
  disassem_924                               code  017270
  disassem_925                               code  017290
  disassem_926                               code  0172b0
  disassem_927                               code  0172d0
  disassem_928                               code  0172f0
  disassem_929                               code  017310
  disassem_930                               code  017330
  disassem_931                               code  017350
  disassem_932                               code  017370
  disassem_933                               code  017390
  disassem_934                               code  0173b0
  disassem_935                               code  0173d0
  disassem_936                               code  017428
  disassem_937                               code  01722c
  disassem_938                               code  017114
  disassem_939                               code  01713c
  disassem_940                               code  017164
  disassem_941                               code  01718c
  disassem_942                               code  0171b4
  disassem_943                               code  0171dc
  disassem_944                               code  017204
  disassem_945                               code  0177d4
  disassem_946                               code  0176f4
  disassem_947                               code  017714
  disassem_948                               code  017734
  disassem_949                               code  017754
  disassem_950                               code  017774
  disassem_951                               code  017794
  disassem_952                               code  0177b4
  disassem_953                               code  017854
  disassem_955                               code  0178c8
  disassem_957                               code  017e7c
  disassem_958                               code  017ea0
  disassem_959                               code  017ee8
  disassem_961                               code  017ef4
  disassem_962                             rodata  01b1d0
  disassem_963                               code  017f84
  disassem_964                               code  017f4c
  disassem_965                               code  017f70
  disassem_966                               code  017f68
  disassem_967                               code  017f70
  disk_size                                   bss  c20168
  doCLS                                      code  011878
  doCS                                       code  800000000000018d
  doDate                                     code  0113c4
  doDate.0001                                code  011420
  doDay                                      code  011464
  doDebug                                    code  0114a8
  doDisassem                                 code  011480
  doDumpTL                                   code  011104
  doDumpmem                                  code  0110e4
  doDumpmem.001                              code  0110f0
  doFillmem                                  code  01110c
  doFillmem.0001                             code  011168
  doFillmem.0002                             code  011150
  doFillmem.0003                             code  011170
  doFillmem.0004                             code  011120
  doJump                                     code  0111bc
  doRand                                     code  8000000000000192
  doSDBoot                                   code  011190
  drf_rout                                   code  012938
  drf_rout.0001                              code  012950
  dwf_rout                                   code  012954
  dwf_rout.0001                              code  01296c
  end_init_data                            rodata  01c310
  eval                                       code  8000000000000193
  exf_rout                                   code  01291c
  exf_rout.0001                              code  012934
  fmtk_irq_stack                              bss  f592a0
  freeTCB                                     bss  c57298
  getCPU                                     code  013100
  get_datetime                               code  012b30
  getchar                                  rodata  0155fc
  getcharNoWait                            rodata  0155dc
  hangprg                                    code  012824
  here                                       code  019b3c
  hmem                                        bss  114fd20
  ignBlanks                                  code  011088
  ignBlanks1                                 code  011090
  ignore_blanks                              code  01833c
  iof_sema                                    bss  1082ad8
  iof_switch                                  bss  1082ac8
  irq_stack                                   bss  c28408
  isalnum                                    code  015a44
  isalpha                                    code  0159e8
  iscntrl                                    code  015e1c
  isdigit                                  rodata  0159ac
  isgraph                                    code  015d38
  islower                                    code  015c08
  isprint                                    code  015db0
  ispunct                                    code  015c48
  isspace                                    code  015ac0
  isupper                                    code  015bc8
  isxdigit                                   code  015930
  jcbs                                        bss  c295a0
  jmp_vector                                  bss  c20120
  kbdi5                                      code  01196c
  keybdControlCodes                          code  012320
  keybdExtendedCodes                         code  0123a0
  ld                                         code  0155f0
  linebuf                                     bss  114eb00
  linendx                                     bss  114eaf8
  loadBootFile                               code  80000000000001a6
  mailbox                                     bss  f5a2a0
  message                                     bss  f82aa0
  mon1                                       code  010f90
  mon1.Prompt1                               code  010fc0
  mon1.Prompt2                               code  010fe4
  mon1.Prompt3                               code  010fa8
  mon1.PromptLn                              code  010f9c
  mon1.doHelp                                code  011048
  msgBadAddr                                 data  c10098
  msgBadKeybd                                code  01196c
  msgBusErr                                  code  012a1a
  msgEA                                      code  012a3a
  msgErr                                     code  0116c0
  msgHelp                                    code  0116d0
  msgMonitorStarted                          code  011856
  msgParErr                                  code  012900
  msgPriv                                    code  0129e2
  msgROMChecksum                             code  010c58
  msgStart                                   code  010f12
  msgUninit                                  code  012a02
  msgUninitIRQ                               code  012a44
  msgdrf                                     code  0129ce
  msgdwf                                     code  0129d8
  msgexf                                     code  0129c4
  muol                                        bss  114fd08
  nmi_rout                                   code  0128d4
  nmi_rout1                                  code  0128fc
  pSpriteController                          data  c10000
  panic                                      code  013a0c
  printf                                   rodata  01565c
  priv_rout                                  code  012970
  priv_rout.0001                             code  0129c0
  putaddr                                    code  01a2c0
  putch                                    rodata  0151c0
  puthexnum                                  code  015384
  putnum                                     code  0151ec
  putstr                                   rodata  015528
  putstr2                                  rodata  0155b0
  r1                                         code  013860
  r6                                         code  0155f0
  ramtest                                    code  01a498
  ramtest_0                                rodata  01c240
  ramtest_10                                 code  01a384
  ramtest_11                                 code  01a3e4
  ramtest_12                                 code  01a3dc
  ramtest_13                                 code  01a3dc
  ramtest_15                                 code  01a3dc
  ramtest_17                                 code  01a3f0
  ramtest_18                                 code  01a478
  ramtest_19                                 code  01a470
  ramtest_20                                 code  01a424
  ramtest_22                                 code  01a434
  ramtest_24                                 code  01a470
  ramtest_26                                 code  01a470
  ramtest_28                                 code  01a478
  ramtest_29                                 code  01a554
  ramtest_3                                  code  01a2e4
  ramtest_30                                 code  01a540
  ramtest_6                                  code  01a330
  ramtest_8                                  code  01a478
  ramtest_9                                  code  01a48c
  ramtest_betweem                          rodata  000000
  ramtest_between                            code  01a33c
  readyQ                                      bss  c57250
  regs                                        bss  114fbd0
  repcount                                    bss  114fce0
  reverse_video                              code  015ed4
  right                                      code  019b3c
  runningTCB                                  bss  c57290
  rxfull                                    const  000001
  set_time_serial                            code  012ddc
  set_time_serial_10                         code  012ca8
  set_time_serial_12                         code  012ce0
  set_time_serial_14                         code  012ce0
  set_time_serial_17                         code  012dd0
  set_time_serial_19                         code  012e90
  set_time_serial_2                          code  012bbc
  set_time_serial_20                         code  012e7c
  set_time_serial_4                          code  012bf4
  set_time_serial_6                          code  012c2c
  set_time_serial_8                          code  012c70
  set_vector                               rodata  0180d4
  sgc1                                       code  0104e8
  sgcfifo1                                   code  010740
  sgcfifo2                                   code  01072c
  sgcfifo3                                   code  0106fc
  sgcfifo4                                   code  010714
  sgcfifo5                                   code  01072c
  shiftedScanCodes                           code  012220
  sirq1                                      code  0107a0
  sl                                         code  013860
  smsirq                                     code  0107b4
  spcabort                                   code  010624
  spcb1                                      code  010580
  spcb2                                      code  0105c4
  spcb3                                      code  010554
  spcb4                                      code  010598
  spcb5                                      code  0105e8
  spcb6                                      code  0105d0
  spcb7                                      code  010620
  spcb8                                      code  0105f4
  sprite_demo                                code  012eb4
  sprite_demo_10                             code  012f60
  sprite_demo_11                             code  012fe0
  sprite_demo_12                             code  012fd8
  sprite_demo_13                             code  012fe0
  sprite_demo_14                             code  0130ec
  sprite_demo_15                             code  012fec
  sprite_demo_16                             code  0130ac
  sprite_demo_17                             code  0130a4
  sprite_demo_18                             code  0130e8
  sprite_demo_20                             code  0130c8
  sprite_demo_3                              code  0130f0
  sprite_demo_4                              code  012ef8
  sprite_demo_5                              code  012f30
  sprite_demo_6                              code  012f28
  sprite_demo_7                              code  012f34
  sprite_demo_8                              code  012f5c
  sprite_demo_9                              code  012f54
  sprite_main                                code  012ea0
  sprites                                     bss  c28008
  srxirq                                     code  0107c8
  srxirq1                                    code  0107c8
  srxirq2                                    code  0107f0
  srxirq3                                    code  010804
  srxirq5                                    code  01082c
  srxirq6                                    code  010884
  srxirq7                                    code  01089c
  srxirq8                                    code  0108b0
  ssm                                         bss  114fcd8
  stacks                                      bss  c592a0
  start                                      code  0100a8
  startSector                                 bss  c20164
  stdio_1000                                 code  0153e0
  stdio_1001                                 code  0153f8
  stdio_1003                                 code  0153f8
  stdio_1004                                 code  015480
  stdio_1005                                 code  015428
  stdio_1006                                 code  01545c
  stdio_1007                                 code  015448
  stdio_1008                                 code  01545c
  stdio_1009                                 code  015480
  stdio_1010                                 code  0154a0
  stdio_1012                                 code  0154a0
  stdio_1013                                 code  0154e0
  stdio_1014                                 code  0154c4
  stdio_1015                                 code  0154d0
  stdio_1016                                 code  0154e0
  stdio_1017                                 code  015504
  stdio_1018                                 code  015504
  stdio_1019                                 code  0155a4
  stdio_1020                                 code  015550
  stdio_1021                                 code  015578
  stdio_1022                                 code  01556c
  stdio_1023                                 code  01558c
  stdio_1025                                 code  0155d0
  stdio_1028                                 code  015650
  stdio_1029                                 code  015618
  stdio_1030                                 code  015630
  stdio_1031                                 code  01563c
  stdio_1032                                 code  0156c4
  stdio_1033                                 code  015924
  stdio_1034                                 code  01568c
  stdio_1035                                 code  015908
  stdio_1036                                 code  015900
  stdio_1037                                 code  0158f0
  stdio_1038                                 code  015900
  stdio_1039                                 code  0158ec
  stdio_1040                                 code  015758
  stdio_1041                                 code  015764
  stdio_1042                                 code  015774
  stdio_1043                                 code  015794
  stdio_1044                                 code  0157b4
  stdio_1045                                 code  0157d4
  stdio_1046                                 code  0157f0
  stdio_1047                                 code  0157f8
  stdio_1048                                 code  015868
  stdio_1049                                 code  01580c
  stdio_1050                                 code  015854
  stdio_1051                                 code  015868
  stdio_1053                                 code  01588c
  stdio_1055                                 code  0158a0
  stdio_1056                                 code  0158e8
  stdio_1057                                 code  015908
  stdio_969                                  code  0151e0
  stdio_970                                rodata  01b1c0
  stdio_971                                  code  015378
  stdio_972                                  code  01522c
  stdio_974                                  code  015228
  stdio_975                                  code  01523c
  stdio_976                                  code  015244
  stdio_977                                  code  01525c
  stdio_979                                  code  015260
  stdio_980                                  code  0152f8
  stdio_981                                  code  015290
  stdio_983                                  code  0152c0
  stdio_985                                  code  0152b0
  stdio_986                                  code  0152f8
  stdio_987                                  code  015318
  stdio_989                                  code  015318
  stdio_990                                  code  01533c
  stdio_991                                  code  015334
  stdio_992                                  code  01533c
  stdio_993                                  code  015360
  stdio_994                                  code  015360
  stdio_995                                  code  01551c
  stdio_996                                  code  0153c4
  stdio_998                                  code  0153c0
  stdio_999                                  code  0153d8
  stxirq                                     code  0107c4
  sys_sema                                    bss  1082ae0
  sys_stacks                                  bss  d592a0
  sysstack                                    bss  c572a0
  tcbs                                        bss  c3e450
  tempTCB                                     bss  c29410
  tolower                                    code  015b40
  toupper                                    code  015b84
  tr                                         code  013860
  unshiftedScanCodes                         code  012120
  video_bufs                                  bss  1082af0
  wmem                                        bss  114fd28
