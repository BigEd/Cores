00000000	           				code
FFFFF800	           		 		org		0xFFFFF800
FFFFF800	           		 start
                  	           		 		; Initialize segment registers for "flat" addressing
FFFFF800	01A90020         		mtspr	seg0,r0
FFFFF804	01A90021         		mtspr	seg1,r0
FFFFF808	01A90022         		mtspr	seg2,r0
FFFFF80C	01A90023         		mtspr	seg3,r0
FFFFF810	01A90024         		mtspr	seg4,r0
FFFFF814	01A90025         		mtspr	seg5,r0
FFFFF818	01A90026         		mtspr	seg6,r0
FFFFF81C	01A90027         		mtspr	seg7,r0
FFFFF820	01A90028         		mtspr	seg8,r0
FFFFF824	01A90029         		mtspr	seg9,r0
FFFFF828	01A9002A         		mtspr	seg10,r0
FFFFF82C	01A9002B         		mtspr	seg11,r0
FFFFF830	01A9002C         		mtspr	seg12,r0
FFFFF834	01A9002D         		mtspr	seg13,r0
FFFFF838	01A9002E         		mtspr	seg14,r0
FFFFF83C	01A9002F         		mtspr	seg15,r0
FFFFF840	01F08800         		tlbwrreg DMA,r0				; clear TLB miss registers
FFFFF844	01F09800         		tlbwrreg IMA,r0
FFFFF848	016F0102         		ldi			r1,#2			; 2 wired registers
FFFFF84C	01F00801         		tlbwrreg	Wired,r1
FFFFF850	016F0102         		ldi			r1,#$2			; 64kiB page size
FFFFF854	01F03801         		tlbwrreg	PageSize,r1
                  	           		 
                  	           		 		; setup the first translation
                  	           		 		; virtual page $FFFF0000 maps to physical page $FFFF0000
                  	           		 		; This places the BIOS ROM at $FFFFxxxx in the memory map
FFFFF858	5001008000      
FFFFF85D	016F0101         		ldi			r1,#$80000101	; ASID=zero, G=1,valid=1
FFFFF861	01F07801         		tlbwrreg	ASID,r1
FFFFF865	30FF00          
FFFFF868	016F01FF         		ldi			r1,#$0FFFF
FFFFF86C	01F04801         		tlbwrreg	VirtPage,r1
FFFFF870	01F05801         		tlbwrreg	PhysPage,r1
FFFFF874	01F01800         		tlbwrreg	Index,r0		; select way #0
FFFFF878	01F00400         		tlbwi						; write to TLB entry group #0 with hold registers
                  	           		 
                  	           		 		; setup second translation
                  	           		 		; virtual page 0 maps to physical page 0
FFFFF87C	5001008000      
FFFFF881	016F0101         		ldi			r1,#$80000101	; ASID=zero, G=1,valid=1
FFFFF885	01F07801         		tlbwrreg	ASID,r1
FFFFF889	01F04800         		tlbwrreg	VirtPage,r0
FFFFF88D	01F05800         		tlbwrreg	PhysPage,r0
FFFFF891	016F0108         		ldi			r1,#8			; select way#1
FFFFF895	01F01801         		tlbwrreg	Index,r1		
FFFFF899	01F00400         		tlbwi						; write to TLB entry group #0 with hold registers
                  	           		 
                  	           		 		; turn on the TLB
FFFFF89D	01F00500         		tlben
                  	           		 
FFFFF8A1	01A9001C         		mtspr	br12,r0			; set vector table address
FFFFF8A5	50F9FFFF00      
FFFFF8AA	0184000140       		lh		r1,jirq			; setup jump to irqrout
FFFFF8AF	50F9FFFF00      
FFFFF8B4	0184000244       		lh		r2,jirq+4
FFFFF8B9	50F9FFFF00      
FFFFF8BE	0184000348       		lh		r3,jirq+8
FFFFF8C3	50F9FFFF00      
FFFFF8C8	018400044C       		lh		r4,jirq+12
FFFFF8CD	200F            
FFFFF8CF	01920001E0       		sh		r1,$fe0
FFFFF8D4	200F            
FFFFF8D6	01920002E4       		sh		r2,$fe4
FFFFF8DB	200F            
FFFFF8DD	01920003E8       		sh		r3,$fe8
FFFFF8E2	200F            
FFFFF8E4	01920004EC       		sh		r4,$fec
FFFFF8E9	50F8FFFF00      
FFFFF8EE	016F03F8         		ldi		r3,#st1			; set return address for an RTI
FFFFF8F2	01A9031E         		mtspr	br14,r3
FFFFF8F6	01F4             		rti						; RTI to enable interrupts
FFFFF8F8	           		 st1:
FFFFF8F8	2004            
FFFFF8FA	016F01D2         		ldi		r1,#1234
FFFFF8FE	2016            
FFFFF900	016F022E         		ldi		r2,#5678
FFFFF904	201E            
FFFFF906	016F0361         		ldi		r3,#7777
FFFFF90A	2011            
FFFFF90C	016F045C         		ldi		r4,#4444
FFFFF910	2022            
FFFFF912	016F05B8         		ldi		r5,#8888
FFFFF916	2027            
FFFFF918	016F060F         		ldi		r6,#9999
FFFFF91C	0140020301       		add		r1,r2,r3
FFFFF921	0166040503       		nand	r3,r4,r5
FFFFF926	0166050604       		nand	r4,r5,r6
FFFFF92B	0140030401       		add		r1,r3,r4
FFFFF930	010101           		tst		p1,r1
FFFFF933	123016           p1.eq	br		foobar
FFFFF936	0140040501       		add		r1,r4,r5
FFFFF93B	10               		nop
FFFFF93C	10               		nop
FFFFF940	           		 		align	8
FFFFF93D	000000           		align	8
FFFFF940	           		 jirq:
FFFFF940	50F9FFFF00      
FFFFF945	01A20056         		jmp		irqrout
                  	           		 
FFFFF949	           		 foobar
FFFFF949	2004            
FFFFF94B	01483901D2       		addi	r1,r57,#1234
FFFFF950	2004            
FFFFF952	012101D1         		cmpi	p1,r1,#1233
                  	           		 
FFFFF956	           		 irqrout:
FFFFF956	01F4             		rti
                  	           		 
FFFFF958	124901010A       p1.eq	subi	r1,r1,#10
FFFFFFF0	           		 		org		0xFFFFFFF0
FFFFFFF0	50F8FFFF00      
FFFFFFF5	01A20000         		jmp		start
FFFFFFF9	10               		nop
FFFFFFFA	10               		nop
FFFFFFFB	10               		nop
                  	           		 
                  	           		 
 
 
Symbol Table:
============================================================
Name                   Typ  Segment     Scope Address/Value
------------------------------------------------------------
0start              	L	code    	  	00000000FFFFF800
0st1                	L	code    	  	00000000FFFFF8F8
0foobar             	L	code    	  	00000000FFFFF949
0jirq               	L	code    	  	00000000FFFFF940
0irqrout            	L	code    	  	00000000FFFFF956
