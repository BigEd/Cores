                        	; ============================================================================
                        	; bootrom3.asm
                        	;        __
                        	;   \\__/ o\    (C) 2014  Robert Finch, Stratford
                        	;    \  __ /    All rights reserved.
                        	;     \/_//     robfinch<remove>@finitron.ca
                        	;       ||
                        	;  
                        	;
                        	; This source file is free software: you can redistribute it and/or modify 
                        	; it under the terms of the GNU Lesser General Public License as published 
                        	; by the Free Software Foundation, either version 3 of the License, or     
                        	; (at your option) any later version.                                      
                        	;                                                                          
                        	; This source file is distributed in the hope that it will be useful,      
                        	; but WITHOUT ANY WARRANTY; without even the implied warranty of           
                        	; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            
                        	; GNU General Public License for more details.                             
                        	;                                                                          
                        	; You should have received a copy of the GNU General Public License        
                        	; along with this program.  If not, see <http://www.gnu.org/licenses/>.    
                        	;                                                                          
                        	; ============================================================================
                        	;
                        	TXTCOLS		EQU		84
                        	TXTROWS		EQU		31
                        	
                        	CR	EQU	0x0D		;ASCII equates
                        	LF	EQU	0x0A
                        	TAB	EQU	0x09
                        	CTRLC	EQU	0x03
                        	CTRLH	EQU	0x08
                        	CTRLI	EQU	0x09
                        	CTRLJ	EQU	0x0A
                        	CTRLK	EQU	0x0B
                        	CTRLM   EQU 0x0D
                        	CTRLS	EQU	0x13
                        	CTRLX	EQU	0x18
                        	XON		EQU	0x11
                        	XOFF	EQU	0x13
                        	
                        	SC_LSHIFT	EQU		$12
                        	SC_RSHIFT	EQU		$59
                        	SC_KEYUP	EQU		$F0
                        	SC_EXTEND	EQU		$E0
                        	SC_CTRL		EQU		$14
                        	SC_ALT		EQU		$11
                        	SC_DEL		EQU		$71		; extend
                        	SC_LCTRL	EQU		$58
                        	SC_NUMLOCK	EQU		$77
                        	SC_SCROLLLOCK	EQU	$7E
                        	SC_CAPSLOCK	EQU		$58
                        	
                        	; Boot sector info (62 byte structure) */
                        	BSI_JMP		= 0x00
                        	BSI_OEMName	= 0x03
                        	BSI_bps		= 0x0B
                        	BSI_SecPerCluster	= 0x0D
                        	BSI_ResSectors	= 0x0E
                        	BSI_FATS	= 0x10
                        	BSI_RootDirEnts	= 0x11
                        	BSI_Sectors	= 0x13
                        	BSI_Media	= 0x15
                        	BSI_SecPerFAT	= 0x16
                        	BSI_SecPerTrack	= 0x18
                        	BSI_Heads	= 0x1A
                        	BSI_HiddenSecs	= 0x1C
                        	BSI_HugeSecs	= 0x1E
                        	
                        	BSI_DriveNum	= 0x24
                        	BSI_Rsvd1		= 0x25
                        	BSI_BootSig		= 0x26
                        	BSI_VolID		= 0x27
                        	BSI_VolLabel	= 0x2B
                        	BSI_FileSysType = 0x36
                        	
                        	; error codes
                        	E_Ok		=		0x00
                        	E_Arg		=		0x01
                        	E_BadMbx	=		0x04
                        	E_QueFull	=		0x05
                        	E_NoThread	=		0x06
                        	E_NotAlloc	=		0x09
                        	E_NoMsg		=		0x0b
                        	E_Timeout	=		0x10
                        	E_BadAlarm	=		0x11
                        	E_NotOwner	=		0x12
                        	E_QueStrategy =		0x13
                        	E_DCBInUse	=		0x19
                        	; Device driver errors
                        	E_BadDevNum	=		0x20
                        	E_NoDev		=		0x21
                        	E_BadDevOp	=		0x22
                        	E_ReadError	=		0x23
                        	E_WriteError =		0x24
                        	E_BadBlockNum	=	0x25
                        	E_TooManyBlocks	=	0x26
                        	
                        	; resource errors
                        	E_NoMoreMbx	=		0x40
                        	E_NoMoreMsgBlks	=	0x41
                        	E_NoMoreAlarmBlks	= 0x44
                        	E_NoMoreTCBs	=	0x45
                        	E_NoMem		= 12
                        	
                        	TS_READY	EQU		1
                        	TS_RUNNING	EQU		2
                        	TS_PREEMPT	EQU		4
                        	
                        	LEDS	equ		$FFDC0600
                        	
                        	; The following offsets in the I/O segment
                        	TEXTSCR	equ		$00000
                        	TEXTREG		EQU		$A0000
                        	TEXT_COLS	EQU		0x00
                        	TEXT_ROWS	EQU		0x04
                        	TEXT_CURPOS	EQU		0x2C
                        	TEXT_CURCTL	EQU		0x20
                        	
                        	BMP_CLUT	EQU		$C5800
                        	
                        	PIC			EQU		0xFFDC0FC0
                        	PIC_IE		EQU		0xFFDC0FC4
                        	PIC_ES		EQU		0xFFDC0FD0
                        	PIC_RSTE	EQU		0xFFDC0FD4
                        	
                        	KEYBD		EQU		0xFFDC0000
                        	KEYBDCLR	EQU		0xFFDC0004
                        	
                        	SPIMASTER	EQU		0xFFDC0500
                        	SPI_MASTER_VERSION_REG	EQU	0x00
                        	SPI_MASTER_CONTROL_REG	EQU	0x04
                        	SPI_TRANS_TYPE_REG	EQU		0x08
                        	SPI_TRANS_CTRL_REG	EQU		0x0C
                        	SPI_TRANS_STATUS_REG	EQU	0x10
                        	SPI_TRANS_ERROR_REG		EQU	0x14
                        	SPI_DIRECT_ACCESS_DATA_REG		EQU	0x18
                        	SPI_SD_SECT_7_0_REG		EQU	0x1C
                        	SPI_SD_SECT_15_8_REG	EQU	0x20
                        	SPI_SD_SECT_23_16_REG	EQU	0x24
                        	SPI_SD_SECT_31_24_REG	EQU	0x28
                        	SPI_RX_FIFO_DATA_REG	EQU	0x40
                        	SPI_RX_FIFO_DATA_COUNT_MSB	EQU	0x48
                        	SPI_RX_FIFO_DATA_COUNT_LSB  EQU 0x4C
                        	SPI_RX_FIFO_CTRL_REG		EQU	0x50
                        	SPI_TX_FIFO_DATA_REG	EQU	0x80
                        	SPI_TX_FIFO_CTRL_REG	EQU	0x90
                        	SPI_RESP_BYTE1			EQU	0xC0
                        	SPI_RESP_BYTE2			EQU	0xC4
                        	SPI_RESP_BYTE3			EQU	0xC8
                        	SPI_RESP_BYTE4			EQU	0xCC
                        	
                        	SPI_INIT_SD			EQU		0x01
                        	SPI_TRANS_START		EQU		0x01
                        	SPI_TRANS_BUSY		EQU		0x01
                        	SPI_INIT_NO_ERROR	EQU		0x00
                        	SPI_READ_NO_ERROR	EQU		0x00
                        	SPI_WRITE_NO_ERROR	EQU		0x00
                        	RW_READ_SD_BLOCK	EQU		0x02
                        	RW_WRITE_SD_BLOCK	EQU		0x03
                        	
                        	NR_TCB		EQU		16
                        	TCB_BackLink    EQU     0
                        	TCB_Regs		EQU		8
                        	TCB_SP0Save		EQU		0x800
                        	TCB_SS0Save     EQU     0x808
                        	TCB_SP1Save		EQU		0x810
                        	TCB_SS1Save     EQU     0x818
                        	TCB_SP2Save		EQU		0x820
                        	TCB_SS2Save     EQU     0x828
                        	TCB_SP3Save		EQU		0x830
                        	TCB_SS3Save     EQU     0x838
                        	TCB_SP4Save		EQU		0x840
                        	TCB_SS4Save     EQU     0x848
                        	TCB_SP5Save		EQU		0x850
                        	TCB_SS5Save     EQU     0x858
                        	TCB_SP6Save		EQU		0x860
                        	TCB_SS6Save     EQU     0x868
                        	TCB_SP7Save		EQU		0x870
                        	TCB_SS7Save     EQU     0x878
                        	TCB_SP8Save		EQU		0x880
                        	TCB_SS8Save     EQU     0x888
                        	TCB_SP9Save		EQU		0x890
                        	TCB_SS9Save     EQU     0x898
                        	TCB_SP10Save	EQU		0x8A0
                        	TCB_SS10Save    EQU     0x8A8
                        	TCB_SP11Save	EQU		0x8B0
                        	TCB_SS11Save    EQU     0x8B8
                        	TCB_SP12Save	EQU		0x8C0
                        	TCB_SS12Save    EQU     0x8C8
                        	TCB_SP13Save	EQU		0x8D0
                        	TCB_SS13Save    EQU     0x8D8
                        	TCB_SP14Save	EQU		0x8E0
                        	TCB_SS14Save    EQU     0x8E8
                        	TCB_SP15Save	EQU		0x8F0
                        	TCB_SS15Save    EQU     0x8F8
                        	TCB_Seg0Save    EQU     0x900
                        	TCB_Seg1Save	EQU		0x908
                        	TCB_Seg2Save	EQU		0x910
                        	TCB_Seg3Save	EQU		0x918
                        	TCB_Seg4Save	EQU		0x920
                        	TCB_Seg5Save	EQU		0x928
                        	TCB_Seg6Save	EQU		0x930
                        	TCB_Seg7Save	EQU		0x938
                        	TCB_Seg8Save	EQU		0x940
                        	TCB_Seg9Save	EQU		0x948
                        	TCB_Seg10Save	EQU		0x950
                        	TCB_Seg11Save	EQU		0x958
                        	TCB_Seg12Save	EQU		0x960
                        	TCB_Seg13Save	EQU		0x968
                        	TCB_Seg14Save	EQU		0x970
                        	TCB_Seg15Save	EQU		0x978
                        	TCB_PCSave      EQU     0x980
                        	TCB_SPSave		EQU		0x988
                        	TCB_Next		EQU		0xA00
                        	TCB_Prev		EQU		0xA08
                        	TCB_Status		EQU		0xA18
                        	TCB_Priority	EQU		0xA20
                        	TCB_hJob		EQU		0xA28
                        	TCB_Size	EQU		8192
                        	
                        		code
                        		org		$00008000
008000 C8 8A 00 00 00 		dw		ClearScreen	& -4		; $8000
008005 00 00 00       
008008 B0 8A 00 00 00 		dw		HomeCursor	& -4		; $8008
00800D 00 00 00       
008010 E4 8B 00 00 00 		dw		DisplayString	& -4	; $8010
008015 00 00 00       
008018 70 98 00 00 00 		dw		KeybdGetCharNoWait	& -4	; $8018
00801D 00 00 00       
008020 58 8B 00 00 00 		dw		ClearBmpScreen	& -4	; $8020
008025 00 00 00       
008028 94 8D 00 00 00 		dw		DisplayChar		& -4	; $8028
00802D 00 00 00       
008030 08 9F 00 00 00 		dw		SDInit			& -4	; $8030
008035 00 00 00       
008038 14 A2 00 00 00 		dw		SDReadMultiple	& -4	; $8038
00803D 00 00 00       
008040 58 A2 00 00 00 		dw		SDWriteMultiple	& -4	; $8040
008045 00 00 00       
008048 A0 A2 00 00 00 		dw		SDReadPart		& -4	; $8048
00804D 00 00 00       
008050 40 A3 00 00 00 		dw		SDDiskSize		& -4	; $8050
008055 00 00 00       
008058 74 8B 00 00 00 		dw		DisplayWord		& -4	; $8058
00805D 00 00 00       
008060 84 8B 00 00 00 		dw		DisplayHalf		& -4	; $8060
008065 00 00 00       
008068 94 8B 00 00 00 		dw		DisplayCharHex	& -4	; $8068
00806D 00 00 00       
008070 A4 8B 00 00 00 		dw		DisplayByte		& -4	; $8070
008075 00 00 00       
                        	
008078 00 00 00 00 00 		org		$8200
00807D 00 00 00 00 00 
008082 00 00 00 00 00 
008087 00 00 00 00 00 
00808C 00 00 00 00 00 
008091 00 00 00 00 00 
008096 00 00 00 00 00 
00809B 00 00 00 00 00 
0080A0 00 00 00 00 00 
0080A5 00 00 00 00 00 
0080AA 00 00 00 00 00 
0080B0 00 00 00 00 00 
0080B5 00 00 00 00 00 
0080BA 00 00 00 00 00 
0080C0 00 00 00 00 00 
0080C5 00 00 00 00 00 
0080CA 00 00 00 00 00 
0080D0 00 00 00 00 00 
0080D5 00 00 00 00 00 
0080DA 00 00 00 00 00 
0080E0 00 00 00 00 00 
0080E5 00 00 00 00 00 
0080EA 00 00 00 00 00 
0080F0 00 00 00 00 00 
0080F5 00 00 00 00 00 
0080FA 00 00 00 00 00 
008100 00 00 00 00 00 
008105 00 00 00 00 00 
00810A 00 00 00 00 00 
008110 00 00 00 00 00 
008115 00 00 00 00 00 
00811A 00 00 00 00 00 
008120 00 00 00 00 00 
008125 00 00 00 00 00 
00812A 00 00 00 00 00 
008130 00 00 00 00 00 
008135 00 00 00 00 00 
00813A 00 00 00 00 00 
008140 00 00 00 00 00 
008145 00 00 00 00 00 
00814A 00 00 00 00 00 
008150 00 00 00 00 00 
008155 00 00 00 00 00 
00815A 00 00 00 00 00 
008160 00 00 00 00 00 
008165 00 00 00 00 00 
00816A 00 00 00 00 00 
008170 00 00 00 00 00 
008175 00 00 00 00 00 
00817A 00 00 00 00 00 
008180 00 00 00 00 00 
008185 00 00 00 00 00 
00818A 00 00 00 00 00 
008190 00 00 00 00 00 
008195 00 00 00 00 00 
00819A 00 00 00 00 00 
0081A0 00 00 00 00 00 
0081A5 00 00 00 00 00 
0081AA 00 00 00 00 00 
0081B0 00 00 00 00 00 
0081B5 00 00 00 00 00 
0081BA 00 00 00 00 00 
0081C0 00 00 00 00 00 
0081C5 00 00 00 00 00 
0081CA 00 00 00 00 00 
0081D0 00 00 00 00 00 
0081D5 00 00 00 00 00 
0081DA 00 00 00 00 00 
0081E0 00 00 00 00 00 
0081E5 00 00 00 00 00 
0081EA 00 00 00 00 00 
0081F0 00 00 00 00 00 
0081F5 00 00 00 00 00 
0081FA 00 00 00 00 00 
                        	start:
008200 01 00 00 00 30 		sei
008205 16 01 80 00 00 		ldi		r1,#$00000080			; tmr writes
00820A 01 01 05 00 48 		mtspr	cr0,r1
008210 FD 00 00 F0 FF 	    ldi     r1,#$00FFF00000000012  ; 256 entries, base address $12000
008215 16 01 12 00 00 
00821A 01 01 19 00 48 		mtspr   GDT,r1
008220 FD 00 00 F0 0F 		ldi     r1,#$000FF00000000002  ; 256 entries, base address $2000
008225 16 01 02 00 00 
00822A 01 01 18 00 48 		mtspr   LDT,r1
008230 16 01 FF 1F 00 		ldi     r1,#8191
                        	.strt1:
008235 FD 00 20 01 00 		sw      r0,GDTBaseAddress[r0+r1*8]
00823A AB 00 01 00 07 
008240 5A 01 35 02 00 		dbnz    r1,.strt1
                        		; Setup the first sixteen entries in the descriptor table corresponding to
                        	    ; the sixteen segment registers. They are setup for a flat memory model.
008245 FD 12 00 00 00 		sw      r0,GDTBaseAddress
00824A A3 00 00 01 00 
008250 FD 12 00 00 00 		sw      r0,GDTBaseAddress+8
008255 A3 00 00 81 00 
00825A FD FF FF FF 0F 		ldi     r1,#$920FFFFFFFFFFFFF  ; data segment
008260 FE 92 00 00 00 
008265 16 01 FF FF FF 
00826A 16 02 00 20 01 		ldi     r2,#GDTBaseAddress
008270 A3 02 01 81 01 	    sw      r1,$18[r2]
008275 A3 02 01 81 02 	    sw      r1,$28[r2]
00827A A3 02 01 81 03 	    sw      r1,$38[r2]
008280 A3 02 01 81 04 	    sw      r1,$48[r2]
008285 A3 02 01 81 05 	    sw      r1,$58[r2]
00828A A3 02 01 81 06 	    sw      r1,$68[r2]
008290 A3 02 01 81 07 	    sw      r1,$78[r2]
008295 A3 02 01 81 08 	    sw      r1,$88[r2]
00829A A3 02 01 81 09 	    sw      r1,$98[r2]
0082A0 A3 02 01 81 0A 	    sw      r1,$A8[r2]
0082A5 16 01 00 FD 0F 	    ldi     r1,#$00000000000FFD00    ; setup I/O segment
0082AA A3 02 01 01 0B 	    sw      r1,$B0[r2]
0082B0 FD 00 00 00 00 	    ldi     r1,#$92000000000000FF    ; 1MB limit
0082B5 FE 92 00 00 00 
0082BA 16 01 FF 00 00 
0082C0 A3 02 01 81 0B 	    sw      r1,$B8[r2]
0082C5 FD FF FF FF 0F 		ldi     r1,#$920FFFFFFFFFFFFF  ; data segment
0082CA FE 92 00 00 00 
0082D0 16 01 FF FF FF 
0082D5 A3 02 01 81 0C 	    sw      r1,$C8[r2]
0082DA A3 02 01 81 0D 	    sw      r1,$D8[r2]
0082E0 FD FC 0F 00 00 	    ldi     r1,#$9600000FFC0003C0    ; stack limits paragraph 3C0-3FF
0082E5 FE 96 00 00 00 
0082EA 16 01 C0 03 00 
0082F0 A3 02 00 01 0E 	    sw      r0,$E0[r2]
0082F5 A3 02 01 81 0E 	    sw      r1,$E8[r2]
0082FA FD 00 00 00 00 		ldi     r1,#$9A00000000001FFF    ; 32MB is top of memory
008300 FE 9A 00 00 00 
008305 16 01 FF 1F 00 
00830A A3 02 00 01 0F 		sw      r0,$F0[r2]               ; setup code segment
008310 A3 02 01 81 0F 		sw      r1,$F8[r2]
                        	
                        	; Initialize TSS segment descriptors
                        	; The TSS segment is needed as a storage place for the stack (SS:SP)
                        	
008315 16 01 50 00 00 		ldi     r1,#TSSBaseAddress>>12   ; setup first TSS descriptor
00831A 16 04 0F 00 00 		ldi     r4,#15
008320 16 03 00 00 00 		ldi     r3,#0
008325 FD 00 00 00 00 		ldi     r5,#$8100000000000001    ; TSS segment size = 8k
00832A FE 81 00 00 00 
008330 16 05 01 00 00 
                        	.st0003:
008335 FD C0 00 00 00 		sw      r1,$C0[r2+r3]
00833A AB 02 03 01 04 
008340 FD C8 00 00 00 		sw      r5,$C8[r2+r3]
008345 AB 02 03 05 04 
00834A 04 01 01 02 00 		addi    r1,r1,#2                 ; increment by 8k
008350 04 03 03 00 01 		addi    r3,r3,#$100              ; increment to next selector group
008355 5A 04 35 03 00 		dbnz    r4,.st0003
                        	
                        	;	ldi     r1,#$810FFFFFFFFFFFFF    ; TSS segment
                        	;	sw      r1,$C8[r2]
                        		; Setup data and stack segment
00835A 16 01 01 00 00 		ldi     r1,#1
008360 01 01 21 00 48 		mtspr	ds,r1					; setup data and stack segments
008365 16 01 0E 00 00 		ldi     r1,#14
00836A 01 01 2E 00 48 		mtspr	ss,r1
008370 16 01 0B 00 00 		ldi     r1,#11
008375 01 01 2B 00 48 		mtspr   ios,r1
00837A 16 01 0C 00 00 		ldi     r1,#12
008380 01 01 2C 00 48 		mtspr   ts,r1
                        		; now do a far jump to set the code segment
008385 61 00 0F 00 00 		jsp     r0,#15                  ; selector index 15, GDT
00838A 50 90 83 00 00 		jmp     .strt2
                        	.strt2:
008390 16 FF F8 FF 3F 		ldi		sp,#$3FFFF8
008395 16 01 94 8D 00 		ldi		r1,#DisplayChar & 0xFFFFFFFFFC
00839A A3 00 01 81 01 		sw		r1,OutputVec
0083A0 56 00 55 0C 00 	    bsr     DispStartMsg
0083A5 56 00 20 05 00 	    bsr     CopyROMtoRAM
                        	
0083AA 16 01 C0 00 00 		ldi		r1,#$000000C0			; tmr reads/writes
0083B0 01 01 05 00 48 		mtspr	cr0,r1
                        	
                        	;	icache_on
0083B5 EA EA EA EA EA 		nop
0083BA 16 01 FF 00 00 		ldi		r1,#$FF
0083C0 FD C0 FD 0F 00 		sb		r1,LEDS
0083C5 A0 00 01 01 60 
0083CA 16 01 08 00 00 		ldi		r1,#IVTBaseAddress>>13
0083D0 01 01 01 00 48 		mtspr	vbr,r1
                        	
                        		; setup page tables and the page table address register
0083D5 56 00 0A 07 00 		bsr		SetupPageTbl
0083DA 16 01 02 50 02 		ldi		r1,#RootPageTbl+4096+2	; 3 level page table system
0083E0 01 01 04 00 48 		mtspr	cr3,r1
                        		; turn on paging
0083E5 16 01 C0 01 00 		ldi		r1,#$000001C0			; 1C0 cache on, paging and protection on; tmr read/write/execute (1C0)
0083EA 01 01 05 00 48 		mtspr	cr0,r1
0083F0 56 00 25 0B 00 		bsr		InitBMP
                        	
0083F5 16 01 9A 8C 00 		ldi		r1,#TickRout
0083FA A3 00 01 01 02 		sw		r1,TickVec
008400 16 01 FC 00 00 		ldi		r1,#$FC
008405 FD C0 FD 0F 00 		sb		r1,LEDS
00840A A0 00 01 01 60 
008410 A3 00 00 01 01 		sw		r0,Milliseconds
008415 16 01 00 B8 26 		ldi		r1,#%000000100_110101110_0000000000
00841A A0 00 01 41 08 		sb		r1,KeybdEcho
008420 A0 00 00 51 08 		sb		r0,KeybdBad
008425 A2 00 01 81 07 		sh		r1,NormAttr
00842A A0 00 00 01 08 		sb		r0,CursorRow
008430 A0 00 00 11 08 		sb		r0,CursorCol
008435 16 01 94 8D 00 		ldi		r1,#DisplayChar & 0xFFFFFFFFFC
00843A A3 00 01 81 01 		sw		r1,OutputVec
008440 56 00 CA 0A 00 		bsr		ClearScreen
008445 56 00 B0 0A 00 		bsr		HomeCursor
00844A 16 01 07 00 00 		ldi     r1,#7
008450 FD C0 FD 0F 00 		sb      r1,LEDS
008455 A0 00 01 01 60 
00845A 16 01 94 8D 00 		ldi		r1,#DisplayChar & 0xFFFFFFFFFC
008460 A3 00 01 81 01 		sw		r1,OutputVec
008465 16 01 08 00 00 		ldi     r1,#8
00846A FD C0 FD 0F 00 		sb      r1,LEDS
008470 A0 00 01 01 60 
008475 56 00 40 05 00 		bsr		SetupIntVectors
00847A 56 00 A5 16 00 		bsr		KeybdInit
008480 56 00 E5 06 00 		bsr		InitPIC
008485 46 00 C0 10 00 		bra		Monitor
00848A 56 00 3A 27 00 		bsr		FMTKInitialize
008490 01 00 00 00 31 		cli
                        	
008495 16 01 FF 00 00 		ldi		r1,#$FF
00849A FD C0 FD 0F 00 		sb		r1,LEDS
0084A0 A0 00 01 01 60 
0084A5 16 01 FE 00 00 		ldi		r1,#$FE
0084AA A6 01 02 03 04 		push	r1/r2/r3/r4
0084B0 56 00 CA 0A 00 		bsr		ClearScreen
0084B5 16 01 06 00 00 		ldi		r1,#$6
0084BA FD C0 FD 0F 00 		sb		r1,LEDS
0084C0 A0 00 01 01 60 
0084C5 56 00 55 0C 00 		bsr		DispStartMsg
0084CA 16 01 FD 00 00 		ldi		r1,#$FD
0084D0 A7 04 03 02 01 		pop		r4/r3/r2/r1
0084D5 FD C0 FD 0F 00 		sb		r1,LEDS
0084DA A0 00 01 01 60 
                        	j1:
0084E0 56 00 B0 0A 00 		bsr		HomeCursor
0084E5 16 03 E0 00 00 		ldi		r3,#TEXTSCR+224
0084EA 86 00 01 01 01 		lw		r1,Milliseconds
0084F0 56 00 75 0B 00 		bsr		DisplayWord
0084F5 84 00 01 CB 1B 		ios:lh	r1,TEXTSCR+444
0084FA 04 01 01 01 00 		add		r1,r1,#1
008500 A2 00 01 CB 1B 		ios:sh	r1,TEXTSCR+444
008505 46 00 E0 04 00 		bra		j1
                        		
                        	DispLed:
00850A 86 FF 01 8E 00 		lw		r1,8[sp]
008510 FD C0 FD 0F 00 		sb		r1,LEDS
008515 A0 00 01 01 60 
00851A 60 00 08 00 00 		rts		#8
                        	CopyROMtoRAM:
                        		; copy the ROM to RAM
                        		
008520 16 03 FF 7F 00 		ldi		r3,#$7FFF
008525 16 01 00 80 00 		ldi		r1,#$8000
                        	.st1:
00852A 88 01 03 02 04 		lb		r2,[r1+r3]
008530 A8 01 03 02 04 		sb		r2,[r1+r3]
008535 5A 03 2A 05 00 		dbnz	r3,.st1
00853A 60 00 00 00 00 		rts

                        	SetupIntVectors:
008540 16 01 A7 00 00 		ldi     r1,#$A7
008545 FD C0 FD 0F 00 		sb      r1,LEDS
00854A A0 00 01 01 60 
008550 01 00 00 00 32 		php
008555 01 00 00 00 30 		sei
00855A 16 01 AB 00 00 		ldi     r1,#$AB
008560 FD C0 FD 0F 00 		sb      r1,LEDS
008565 A0 00 01 01 60 
00856A 16 02 00 00 01 		ldi		r2,#IVTBaseAddress
008570 16 03 FF 01 00 		ldi		r3,#511
008575 16 01 E5 AE 00 		ldi		r1,#uninit_rout
00857A FD 00 00 00 F0 		ldi     r5,#$86F000000000000F             ; interrupt gate, CS=15
008580 FE 86 00 00 00 
008585 16 05 0F 00 00 
                        	.siv1:
                        		; setup specific vectors
00858A 02 03 04 04 50 		shli	r4,r3,#4
008590 AB 02 04 01 04 		sw		r1,[r2+r4]
008595 FD 08 00 00 00 		sw		r5,8[r2+r4]		; set CS to #15
00859A AB 02 04 05 04 
0085A0 5A 03 8A 05 00 		dbnz	r3,.siv1	
0085A5 16 01 AC 00 00 		ldi     r1,#$AC
0085AA FD C0 FD 0F 00 		sb      r1,LEDS
0085B0 A0 00 01 01 60 
0085B5 16 01 00 82 00 		ldi		r1,#start
0085BA FD 01 00 00 00 		lea		r3,449*16[r2]
0085C0 9F 02 03 01 C1 
0085C5 56 00 D0 06 00 		bsr     SetVector
0085CA 16 01 B0 8C 00 		ldi		r1,#Tick1000Rout
0085D0 FD 01 00 00 00 		lea		r3,450*16[r2]
0085D5 9F 02 03 01 C2 
0085DA 56 00 D0 06 00 		bsr     SetVector
0085E0 16 01 9A 8C 00 		ldi		r1,#TickRout    ; This vector will be taken over by FMTK
0085E5 FD 01 00 00 00 		lea		r3,451*16[r2]
0085EA 9F 02 03 01 C3 
0085F0 56 00 D0 06 00 		bsr     SetVector
0085F5 16 01 8A 8C 00 		ldi		r1,#KeybdIRQ
0085FA FD 01 00 00 00 		lea		r3,463*16[r2]
008600 9F 02 03 01 CF 
008605 56 00 D0 06 00 		bsr     SetVector
00860A 16 01 45 AF 00 		ldi		r1,#exf_rout
008610 FD 01 00 00 00 		lea		r3,497*16[r2]
008615 9F 02 03 01 F1 
00861A 56 00 D0 06 00 		bsr     SetVector
008620 16 01 85 AF 00 		ldi		r1,#dwf_rout
008625 FD 01 00 00 00 		lea		r3,498*16[r2]
00862A 9F 02 03 01 F2 
008630 56 00 D0 06 00 		bsr     SetVector
008635 16 01 65 AF 00 		ldi		r1,#drf_rout
00863A FD 01 00 00 00 		lea		r3,499*16[r2]
008640 9F 02 03 01 F3 
008645 56 00 D0 06 00 		bsr     SetVector
00864A 16 01 A5 AF 00 		ldi		r1,#sbv_rout
008650 FD 01 00 00 00 		lea		r3,500*16[r2]
008655 9F 02 03 01 F4 
00865A 56 00 D0 06 00 		bsr     SetVector
008660 16 01 C5 AF 00 		ldi		r1,#priv_rout
008665 FD 01 00 00 00 		lea		r3,501*16[r2]
00866A 9F 02 03 01 F5 
008670 56 00 D0 06 00 		bsr     SetVector
008675 16 01 E5 AF 00 		ldi		r1,#stv_rout
00867A FD 01 00 00 00 		lea		r3,502*16[r2]
008680 9F 02 03 01 F6 
008685 56 00 D0 06 00 		bsr     SetVector
00868A 16 01 45 B0 00 		ldi		r1,#snp_rout
008690 FD 01 00 00 00 		lea		r3,503*16[r2]
008695 9F 02 03 01 F7 
00869A 56 00 D0 06 00 		bsr     SetVector
0086A0 16 01 B5 B0 00 		ldi		r1,#berr_rout
0086A5 FD 01 00 00 00 		lea		r3,508*16[r2]
0086AA 9F 02 03 01 FC 
0086B0 56 00 D0 06 00 		bsr     SetVector
0086B5 16 01 AA 00 00 		ldi     r1,#$AA
0086BA FD C0 FD 0F 00 		sb      r1,LEDS
0086C0 A0 00 01 01 60 
0086C5 01 00 00 00 33 		plp
0086CA 60 00 00 00 00 		rts

                        	SetVector:
0086D0 0C 01 01 FC FF 	    andi    r1,r1,#-4
0086D5 0D 01 01 03 00 	    ori     r1,r1,#3
0086DA A3 03 01 01 00 	    sw      r1,[r3]
0086E0 60 00 00 00 00 	    rts

                        	;------------------------------------------------------------------------------
                        	; Initialize the interrupt controller.
                        	;------------------------------------------------------------------------------
                        	
                        	InitPIC:
0086E5 16 01 0C 00 00 		ldi		r1,#$0C			; timer interrupt(s) are edge sensitive
0086EA FD C0 FD 0F 00 		sh		r1,PIC_ES
0086F0 A2 00 01 01 FD 
0086F5 16 01 0F 00 00 		ldi		r1,#$000F		; enable keyboard reset, timer interrupts
0086FA FD C0 FD 0F 00 		sh		r1,PIC_IE
008700 A2 00 01 41 FC 
008705 60 00 00 00 00 		rts

                        	;------------------------------------------------------------------------------
                        	; Setup the initial page tables.
                        	; Initialize the PAM.
                        	;------------------------------------------------------------------------------
                        	
                        	SetupPageTbl:
00870A A6 01 02 03 04 		push	r1/r2/r3/r4
008710 16 01 00 50 02 		ldi		r1,#RootPageTbl+4096
008715 56 00 80 09 00 		bsr		ClearPageTable
00871A 01 01 02 00 04 		mov		r2,r1
008720 16 01 00 40 04 		ldi		r1,#PgSD0
008725 0C 01 01 00 F0 		and		r1,r1,#-4096
00872A 0D 01 01 0F 00 		or		r1,r1,#$0F	; priv 0, cacheable, readable, executable, writeable
008730 A3 02 01 01 00 		sw		r1,[r2]
008735 16 01 00 40 04 		ldi		r1,#PgSD0
00873A 0C 01 01 00 F0 		and		r1,r1,#-4096
008740 0D 01 01 0F 00 		or		r1,r1,#$0F	; priv 0, cacheable, readable, executable, writeable
008745 A3 02 01 81 00 		sw		r1,8[r2]
00874A 16 01 00 50 04 		ldi		r1,#PgSD3
008750 0C 01 01 00 F0 		and		r1,r1,#-4096
008755 0D 01 01 8D 00 		or		r1,r1,#$8D	; priv 8, cacheable, readable, executable, writeable
00875A A3 02 01 81 01 		sw		r1,24[r2]
008760 16 02 00 40 04 		ldi		r2,#PgSD0
008765 16 03 FF 01 00 		ldi		r3,#511
00876A 16 04 F8 0F 00 		ldi     r4,#511*8
                        	.0002:
008770 AB 02 04 00 04 		sw		r0,[r2+r4]
008775 15 04 04 08 00 		subui   r4,r4,#8
00877A 5A 03 70 07 00 		dbnz	r3,.0002
008780 16 01 00 60 04 		ldi		r1,#PgTbl0
008785 0C 01 01 00 F0 		and		r1,r1,#-4096
00878A 0D 01 01 0F 00 		or		r1,r1,#$0F	; priv 0, cacheable, readable, executable, writeable
008790 A3 02 01 01 00 		sw		r1,[r2]
                        	
008795 16 01 00 70 04 		ldi		r1,#PgTbl1
00879A 0C 01 01 00 F0 		and		r1,r1,#-4096
0087A0 0D 01 01 0F 00 		or		r1,r1,#$0F	; priv 0, cacheable, readable, executable, writeable
0087A5 A3 02 01 81 00 		sw		r1,8[r2]
                        	
                        		; Bitmap graphics memory pages
0087AA 16 01 00 80 04 		ldi		r1,#PgTbl2
0087B0 0C 01 01 00 F0 		and		r1,r1,#-4096
0087B5 0D 01 01 8D 00 		or		r1,r1,#$8D	; priv 8, cacheable, readable, executable, writeable
0087BA A3 02 01 01 01 		sw		r1,2*8[r2]
0087C0 16 01 00 90 04 		ldi		r1,#PgTbl3
0087C5 0C 01 01 00 F0 		and		r1,r1,#-4096
0087CA 0D 01 01 8D 00 		or		r1,r1,#$8D	; priv 8, cacheable, readable, executable, writeable
0087D0 A3 02 01 81 01 		sw		r1,3*8[r2]
0087D5 16 01 00 A0 04 		ldi		r1,#PgTbl4
0087DA 0C 01 01 00 F0 		and		r1,r1,#-4096
0087E0 0D 01 01 8D 00 		or		r1,r1,#$8D	; priv 8, cacheable, readable, executable, writeable
0087E5 A3 02 01 01 02 		sw		r1,4*8[r2]
0087EA 16 01 00 B0 04 		ldi		r1,#PgTbl5
0087F0 0C 01 01 00 F0 		and		r1,r1,#-4096
0087F5 0D 01 01 8D 00 		or		r1,r1,#$8D	; priv 8, cacheable, readable, executable, writeable
0087FA A3 02 01 81 02 		sw		r1,5*8[r2]
008800 16 01 00 60 04 		ldi		r1,#PgTbl0
008805 56 00 80 09 00 		bsr		ClearPageTable
00880A 01 01 02 00 04 		mov		r2,r1
008810 16 01 8F 00 00 		ldi		r1,#$008F
008815 A3 02 01 01 00 		sw		r1,[r2]
00881A 16 01 8F 10 00 		ldi		r1,#$108F
008820 A3 02 01 81 00 		sw		r1,8[r2]
008825 16 01 8F 20 00 		ldi		r1,#$208F
00882A A3 02 01 01 01 		sw		r1,16[r2]
008830 16 01 8F 30 00 		ldi		r1,#$308F
008835 A3 02 01 81 01 		sw		r1,24[r2]
                        	
                        		; memory between $8000 and $FFFF is the bootrom
00883A 16 03 07 00 00 		ldi		r3,#7		; eight pages to setup
008840 16 04 38 00 00 		ldi     r4,#7*8
008845 16 01 0E F0 00 		ldi		r1,#$F00E	; priv 0, cacheable, readable, executable, but not writeable
                        	.0003:
00884A FD 40 00 00 00 		sw		r1,8*8[r2+r4]
008850 AB 02 04 01 04 
008855 15 01 01 00 10 		subui	r1,r1,#$1000
00885A 15 04 04 08 00 		subui   r4,r4,#8
008860 5A 03 4A 08 00 		dbnz	r3,.0003
                        		
                        		; memmory above $FFFF to $1FFFFF is RAM for the OS (2MB)
008865 16 03 EF 01 00 		ldi		r3,#495		; 512- 16-1
00886A 16 04 78 0F 00 		ldi     r4,#495*8
008870 16 01 FF FF 1F 		ldi		r1,#$1FFFFF
                        	.0006:
008875 FD 80 00 00 00 		sw		r1,16*8[r2+r4]
00887A AB 02 04 01 04 
008880 15 01 01 00 10 		subui	r1,r1,#$1000
008885 15 04 04 08 00 		subui   r4,r4,#8
00888A 5A 03 75 08 00 		dbnz	r3,.0006
008890 16 02 00 70 04 		ldi		r2,#PgTbl1
008895 16 01 FF FF 3F 		ldi		r1,#$3FFFFF
00889A 56 00 A0 09 00 		bsr		SetupBMTable
0088A0 16 02 00 80 04 		ldi		r2,#PgTbl2
0088A5 16 01 FF FF 5F 		ldi		r1,#$5FFFFF
0088AA 56 00 A0 09 00 		bsr		SetupBMTable
0088B0 16 02 00 90 04 		ldi		r2,#PgTbl3
0088B5 16 01 FF FF 7F 		ldi		r1,#$7FFFFF
0088BA 56 00 A0 09 00 		bsr		SetupBMTable
0088C0 16 02 00 A0 04 		ldi		r2,#PgTbl4
0088C5 FD 00 00 00 00 		ldi		r1,#$9FFFFF
0088CA 16 01 FF FF 9F 
0088D0 56 00 A0 09 00 		bsr		SetupBMTable
                        	
                        		; Page5 range $A00000 to $BFFFFF
                        		; 0000_0000_101x_xxxx_xxxx_xxxx_xxxx_xxxx
0088D5 16 02 00 B0 04 		ldi		r2,#PgTbl5
0088DA FD 00 00 00 00 		ldi		r1,#$BFFFFF
0088E0 16 01 FF FF BF 
0088E5 56 00 A0 09 00 		bsr		SetupBMTable
                        	
                        		;--------------------------------------------------------------------------
                        		; Setup the PAM (page allocation map).
                        		;--------------------------------------------------------------------------
                        		; first mark all free
0088EA 16 03 FF 01 00 		ldi		r3,#32768/64-1	; number of pages
0088F0 16 01 00 00 00 		ldi		r1,#0
                        	.0007:
0088F5 FD 22 00 00 00 		sw		r0,PAM1[r3]
0088FA A3 03 00 01 00 
008900 5A 03 F5 08 00 		dbnz	r3,.0007
                        	
                        		; We've allocated the first 12MB of RAM to the OS and bitmapped
                        		; graphics display. Mark it in the PAM.
008905 16 03 63 00 00 		ldi		r3,#$63		; 3072 pages /64 - 1
00890A 16 01 FF FF FF 		ldi		r1,#-1
                        	.0008:
008910 FD 22 00 00 00 		sw		r1,PAM1[r3]
008915 A3 03 01 01 00 
00891A 5A 03 10 09 00 		dbnz	r3,.0008
008920 16 01 00 50 04 		ldi		r1,#PgSD3
008925 56 00 80 09 00 		bsr		ClearPageTable
00892A 01 01 02 00 04 		mov		r2,r1
008930 16 01 00 C0 04 		ldi		r1,#IOPgTbl
008935 0D 01 01 8D 00 		or		r1,r1,#$8D		; priv 8,cachable, readable, non-executable, writeable
00893A FD 00 00 00 00 		sw		r1,510*8[r2]	; put in proper slot
008940 A3 02 01 01 FF 
                        	
                        		;--------------------------------------------------------------------------
                        		; Setup the I/O page table
                        		; We setup the I/O page table with linear addresses matching
                        		; physical ones between $FFCxxxxx and $FFDFFFFF
                        		; We map all entries assuming there is I/O in each one. In
                        		; reality all the I/O is above $FFDx, it's too cumbersone
                        		; to map on a device by device basis. If there happens not to be an I/O
                        		; device at a memory location, a bus error will result.
                        		; ++--------------- these two bit mapped by the root directory
                        		; ||++-++++-+++---- these nine bits mapped by subirectory SD3
                        		; |||| |||| |||+-++++-++++---- these nine bits mapped by the I/O page table
                        		; rrss_ssss_sss| |||| ||||
                        		; 1111_1111_110t_tttt_tttt_xxxx_xxxx_xxxx
                        		;--------------------------------------------------------------------------
008945 16 02 00 C0 04 		ldi		r2,#IOPgTbl
00894A 16 03 FF 01 00 		ldi		r3,#511
008950 16 04 F8 0F 00 		ldi     r4,#511*8
008955 FD FF 00 00 00 		ldi		r1,#$FFDFF085	; priv 8, non-cachable, readable, non-executable, writeable
00895A 16 01 85 F0 DF 
                        	.0005:
008960 AB 02 04 01 04 		sw		r1,[r2+r4]
008965 15 01 01 00 10 		subui	r1,r1,#$1000
00896A 15 04 04 08 00 		subui   r4,r4,#8
008970 5A 03 60 09 00 		dbnz	r3,.0005
                        	
008975 A7 04 03 02 01 		pop		r4/r3/r2/r1
00897A 60 00 00 00 00 		rts

                        	ClearPageTable:
008980 A6 02 00 00 00 		push	r2
008985 16 02 FF 01 00 		ldi		r2,#511
                        	.0001:
00898A AB 01 02 00 07 		sw		r0,[r1+r2*8]
008990 5A 02 8A 09 00 		dbnz	r2,.0001
008995 A7 02 00 00 00 		pop		r2
00899A 60 00 00 00 00 		rts

                        	SetupBMTable:
0089A0 A6 03 04 00 00 		push	r3/r4
0089A5 16 03 FF 01 00 		ldi		r3,#511
0089AA 16 04 F8 0F 00 		ldi     r4,#511*8
                        	.0006:
0089B0 0C 01 01 00 F0 		and		r1,r1,#-4096
0089B5 0D 01 01 8F 00 		or		r1,r1,#$8F
0089BA AB 02 04 01 04 		sw		r1,[r2+r4]
0089C0 15 01 01 00 10 		subui	r1,r1,#$1000
0089C5 15 04 04 08 00 		subui   r4,r4,#8
0089CA 5A 03 B0 09 00 		dbnz	r3,.0006
0089D0 A7 04 03 00 00 		pop		r4/r3
0089D5 60 00 00 00 00 		rts

                        	;------------------------------------------------------------------------------
                        	; Find the highest available page number and allocate it.
                        	;
                        	; Returns:
                        	;	r1 = physical page number, 0 if none available
                        	;------------------------------------------------------------------------------
                        	
                        	FindHiPage:
0089DA A6 02 03 00 00 		push	r2/r3
0089E0 16 01 F8 0F 00 		ldi		r1,#511*8		; start at top of map
                        	.0002:
0089E5 FD 22 00 00 00 		lw		r2,PAM1[r1]
0089EA 86 01 02 01 00 
0089F0 01 02 02 00 06 		com		r2,r2			; com bit pattern so we can test for all ones
0089F5 59 02 10 0A 00 		brnz	r2,.0001		; is any page free ?
0089FA 5A 01 E5 09 00 		dbnz	r1,.0002		; no, try next word
008A00 01 00 01 00 04 		mov		r1,r0
008A05 A7 03 02 00 00 		pop		r3/r2
008A0A 60 00 00 00 00 		rts

                        	.0001:
008A10 01 02 02 00 06 		com		r2,r2			; get back positive bits
008A15 16 03 3F 00 00 		ldi		r3,#63			; number of bits to test - 1
                        	.0004:
008A1A 45 02 2A 0A 00 		brpl	r2,.0003		; check MSB, is it clear ?
008A20 02 02 01 02 51 		rol		r2,r2,#1		; rotate to next bit
008A25 5A 03 1A 0A 00 		dbnz	r3,.0004		; loop back
                        	.0003:
008A2A 02 02 01 02 51 		rol		r2,r2,#1		; make MSB the LSB
008A30 0D 02 02 01 00 		or		r2,r2,#1		; and set bit
008A35 02 02 03 02 41 		rol		r2,r2,r3		; put the bits back in original place
008A3A FD 22 00 00 00 		sw		r2,PAM1[r1]		; update word in memory
008A40 A3 01 02 01 00 
                        	
008A45 02 03 0D 03 50 		shl		r3,r3,#13		; multiply bit # by page size
008A4A 02 01 13 01 50 		shl		r1,r1,#19		; 
008A50 02 01 03 01 21 		or		r1,r1,r3		; r1 = physical address
008A55 A7 03 02 00 00 		pop		r3/r2
008A5A 60 00 00 00 00 		rts

                        	AddOSPT:
                        		
                        	
                        	;------------------------------------------------------------------------------
                        	; Convert ASCII character to screen display character.
                        	;------------------------------------------------------------------------------
                        	
                        	AsciiToScreen:
008A60 0C 01 01 FF 00 		and		r1,r1,#$FF
008A65 0D 01 01 00 01 		or		r1,r1,#$100
008A6A 0C 01 F4 20 00 		and		fl0,r1,#%00100000	; if bit 5 or 6 isn't set
008A70 58 F4 85 0A 00 		brz		fl0,.00001
008A75 0C 01 F4 40 00 		and		fl0,r1,#%01000000
008A7A 58 F4 85 0A 00 		brz		fl0,.00001
008A80 0C 01 01 9F 01 		and		r1,r1,#%110011111
                        	.00001:
008A85 60 00 00 00 00 		rts

                        	ScreenChar:
                        	    db     
                        	    
                        	;------------------------------------------------------------------------------
                        	; Convert screen display character to ascii.
                        	;------------------------------------------------------------------------------
                        	
                        	ScreenToAscii:
008A8A 0C 01 01 FF 00 		and		r1,r1,#$FF
008A90 06 01 F4 1B 00 		cmp		fl0,r1,#26+1
008A95 4E F4 A0 0A 00 		bhs		fl0,.stasc1
008A9A 04 01 01 60 00 		add		r1,r1,#$60
                        	.stasc1:
008AA0 60 00 00 00 00 		rts

                        	CursorOff:
008AA5 60 00 00 00 00 		rts
CursorOn:
008AAA 60 00 00 00 00 		rts
HomeCursor:
008AB0 A0 00 00 01 08 		sb		r0,CursorRow
008AB5 A0 00 00 11 08 		sb		r0,CursorCol
008ABA FD A0 FD 0F 00 		sc	    r0,TEXTREG+TEXT_CURPOS+$FFD00000
008AC0 A1 00 00 C1 02 
008AC5 60 00 00 00 00 		rts

                        	;------------------------------------------------------------------------------
                        	;------------------------------------------------------------------------------
                        	                                                                               
                        	ClearScreen:
008ACA A6 01 02 03 04 	    push	r1/r2/r3/r4
008AD0 FD A0 FD 0F 00 		lbu	    r1,TEXTREG+TEXT_COLS+$FFD00000
008AD5 81 00 01 01 00 
008ADA FD A0 FD 0F 00 		lbu	    r2,TEXTREG+TEXT_ROWS+$FFD00000
008AE0 81 00 02 41 00 
008AE5 02 02 01 04 17 		mulu	r4,r2,r1
008AEA 15 04 04 01 00 		subui   r4,r4,#1
008AF0 FD FF 00 00 00 		ldi		r3,#TEXTSCR+$FFD00000
008AF5 16 03 00 00 D0 
008AFA 16 01 20 00 00 		ldi		r1,#' '
008B00 56 00 60 0A 00 		bsr		AsciiToScreen
008B05 85 00 02 81 07 		lhu		r2,NormAttr
008B0A 02 01 02 01 21 		or		r1,r1,r2
                        	.cs1:
008B10 AA 03 04 01 06 	    sh	    r1,[r3+r4*4]
008B15 5A 04 10 0B 00 		dbnz	r4,.cs1
008B1A A7 04 03 02 01 		pop		r4/r3/r2/r1
008B20 60 00 00 00 00 		rts

                        	;------------------------------------------------------------------------------
                        	; Randomize the color lookup table for 8bpp mode (the default), so that
                        	; something will show on the bitmap display if it's written to.
                        	;------------------------------------------------------------------------------
                        	
                        	InitBMP:
008B25 01 00 02 00 49 		mfspr	r2,tick
008B2A 01 02 10 00 48 		mtspr	srand1,r2
008B30 01 00 02 00 49 		mfspr	r2,tick
008B35 01 02 11 00 48 		mtspr	srand2,r2
008B3A 16 02 FF 01 00 		ldi		r2,#511
                        	.ibmp1:
008B40 01 00 01 00 14 		gran	r1
008B45 FD 00 58 0C 00 		ios:sh	r1,BMP_CLUT[r0+r2*4]
008B4A AA 00 02 01 2E 
008B50 5A 02 40 0B 00 		dbnz	r2,.ibmp1
008B55 60 00 00 00 00 		rts

                        	;------------------------------------------------------------------------------
                        	;------------------------------------------------------------------------------
                        	
                        	ClearBmpScreen:
008B5A 16 01 00 00 40 		ldi		r1,#$400000
008B60 16 02 FF FF 07 		ldi		r2,#$7FFFF
                        	.0001:
008B65 AB 01 02 00 07 		sw		r0,[r1+r2*8]
008B6A 5A 02 65 0B 00 		dbnz	r2,.0001
008B70 60 00 00 00 00 		rts

                        	;------------------------------------------------------------------------------
                        	; Display the word in r1
                        	;------------------------------------------------------------------------------
                        	
                        	DisplayWord:
008B75 01 01 01 00 03 		swap	r1,r1
008B7A 56 00 85 0B 00 		bsr		DisplayHalf
008B80 01 01 01 00 03 		swap	r1,r1
                        	
                        	;------------------------------------------------------------------------------
                        	; Display the half-word in r1
                        	;------------------------------------------------------------------------------
                        	
                        	DisplayHalf:
008B85 02 01 10 01 53 		ror		r1,r1,#16
008B8A 56 00 95 0B 00 		bsr		DisplayCharHex
008B90 02 01 10 01 51 		rol		r1,r1,#16
                        	
                        	;------------------------------------------------------------------------------
                        	; Display the char in r1
                        	;------------------------------------------------------------------------------
                        	
                        	DisplayCharHex:
008B95 02 01 08 01 53 		ror		r1,r1,#8
008B9A 56 00 A5 0B 00 		bsr		DisplayByte
008BA0 02 01 08 01 51 		rol		r1,r1,#8
                        	
                        	;------------------------------------------------------------------------------
                        	; Display the byte in r1
                        	;------------------------------------------------------------------------------
                        	
                        	DisplayByte:
008BA5 02 01 04 01 53 		ror		r1,r1,#4
008BAA 56 00 B5 0B 00 		bsr		DisplayNybble
008BB0 02 01 04 01 51 		rol		r1,r1,#4
                        	
                        	;------------------------------------------------------------------------------
                        	; Display nybble in r1
                        	;------------------------------------------------------------------------------
                        	
                        	DisplayNybble:
008BB5 A6 01 00 00 00 		push	r1
008BBA 0C 01 01 0F 00 		and		r1,r1,#$0F
008BC0 04 01 01 30 00 		add		r1,r1,#'0'
008BC5 06 01 F4 3A 00 		cmp		fl0,r1,#'9'+1
008BCA 4F F4 D5 0B 00 		blo		fl0,.0001
008BD0 04 01 01 07 00 		add		r1,r1,#7
                        	.0001:
008BD5 53 00 81 01 00 		jsr		(OutputVec)
008BDA A7 01 00 00 00 		pop		r1
008BE0 60 00 00 00 00 		rts

                        	DisplayString:
008BE5 A6 01 02 00 00 		push	r1/r2
008BEA 01 01 02 00 04 		mov		r2,r1
                        	.dm2:
008BF0 81 02 01 01 00 		lbu		r1,[r2]
008BF5 14 02 02 01 00 		addui   r2,r2,#1	; increment text pointer
008BFA 58 01 0A 0C 00 		brz		r1,.dm1
008C00 56 00 8A 12 00 		bsr		OutChar
008C05 58 00 F0 0B 00 		brz		r0,.dm2
                        	.dm1:
008C0A A7 02 01 00 00 		pop		r2/r1
008C10 60 00 00 00 00 		rts

                        	DisplayStringCRLF:
008C15 56 00 E5 0B 00 		bsr		DisplayString
                        	CRLF:
008C1A A6 01 00 00 00 		push	r1
008C20 16 01 0D 00 00 		ldi		r1,#CR
008C25 56 00 8A 12 00 		bsr		OutChar
008C2A 16 01 0A 00 00 		ldi		r1,#LF
008C30 56 00 8A 12 00 		bsr		OutChar
008C35 A7 01 00 00 00 		pop		r1
008C3A 60 00 00 00 00 		rts

                        	DispCharQ:
008C40 56 00 60 0A 00 		bsr		AsciiToScreen
008C45 A1 03 01 01 00 		sc		r1,[r3]
008C4A 04 03 03 04 00 		add		r3,r3,#4
008C50 60 00 00 00 00 		rts

                        	DispStartMsg:
008C55 16 01 6A 8C 00 		ldi		r1,#msgStart
008C5A 56 00 E5 0B 00 		bsr		DisplayString
008C60 60 00 00 00 00 		rts

008C65 00             		db	0
008C66 00 00 00 00    	msgStart:
008C6A 54 61 62 6C 65 		db	"Table888 test system starting.",0
008C70 38 38 20 74 65 
008C75 73 74 20 73 79 
008C7A 73 74 65 6D 20 
008C80 74 61 72 74 69 
008C85 6E 67 2E 00    
                        	
                        	;------------------------------------------------------------------------------
                        	;------------------------------------------------------------------------------
                        	
008C89 00             	KeybdIRQ:
008C8A FD C0 FD 0F 00 		sh		r0,KEYBD+4
008C90 A2 00 00 41 00 
008C95 01 00 00 00 40 		rti
                        	
                        	;------------------------------------------------------------------------------
                        	;------------------------------------------------------------------------------
                        	
                        	TickRout:
008C9A 84 00 FC CB 0D 		ios:lh	tr,TEXTSCR+220
008CA0 04 FC FC 01 00 		add		tr,tr,#1
008CA5 A2 00 FC CB 0D 		ios:sh	tr,TEXTSCR+220
008CAA 60 00 00 00 00 		rts

                        	Tick1000Rout:
008CB0 A6 01 00 00 00 		push	r1
008CB5 16 01 02 00 00 		ldi		r1,#2				; reset the edge sense circuit
008CBA FD C0 FD 0F 00 		sh		r1,PIC_RSTE
008CC0 A2 00 01 41 FD 
008CC5 86 00 01 01 01 		lw		r1,Milliseconds
008CCA 04 01 01 01 00 		add		r1,r1,#1
008CD0 A3 00 01 01 01 		sw		r1,Milliseconds
008CD5 A7 01 00 00 00 		pop		r1
008CDA 01 00 00 00 40 		rti
                        	GetScreenLocation:
008CE0 FD FF 00 00 00 		ldi		r1,#TEXTSCR+$FFD00000
008CE5 16 01 00 00 D0 
008CEA 60 00 00 00 00 		rts
GetCurrAttr:
008CF0 85 00 01 81 07 		lhu		r1,NormAttr
008CF5 60 00 00 00 00 		rts

                        	;------------------------------------------------------------------------------
                        	;------------------------------------------------------------------------------
                        	
                        	UpdateCursorPos:
008CFA A6 01 02 04 00 		push	r1/r2/r4
008D00 81 00 01 01 08 		lbu		r1,CursorRow
008D05 0C 01 01 3F 00 		and		r1,r1,#$3f
008D0A FD A0 FD 0F 00 		lbu	r2,TEXTREG+TEXT_COLS+$FFD00000
008D10 81 00 02 01 00 
008D15 02 02 01 02 07 		mul		r2,r2,r1
008D1A 81 00 01 11 08 		lbu		r1,CursorCol
008D20 0C 01 01 7F 00 		and		r1,r1,#$7f
008D25 02 02 01 02 04 		add		r2,r2,r1
008D2A FD A0 FD 0F 00 		sc	r2,TEXTREG+TEXT_CURPOS+$FFD00000
008D30 A1 00 02 C1 02 
008D35 A7 04 02 01 00 		pop		r4/r2/r1
008D3A 60 00 00 00 00 		rts
	
                        	CalcScreenLoc:
008D40 A6 02 04 00 00 		push	r2/r4
008D45 81 00 01 01 08 		lbu		r1,CursorRow
008D4A 0C 01 01 3F 00 		and		r1,r1,#$3f
008D50 FD A0 FD 0F 00 		lbu	r2,TEXTREG+TEXT_COLS+$FFD00000
008D55 81 00 02 01 00 
008D5A 02 02 01 02 07 		mul		r2,r2,r1
008D60 81 00 01 11 08 		lbu		r1,CursorCol
008D65 0C 01 01 7F 00 		and		r1,r1,#$7f
008D6A 02 02 01 02 04 		add		r2,r2,r1
008D70 FD A0 FD 0F 00 		sc	r2,TEXTREG+TEXT_CURPOS+$FFD00000
008D75 A1 00 02 C1 02 
008D7A 56 00 E0 0C 00 		bsr		GetScreenLocation
008D80 02 02 02 02 50 		shl		r2,r2,#2
008D85 02 01 02 01 04 		add		r1,r1,r2
008D8A A7 04 02 00 00 		pop		r4/r2
008D90 60 00 00 00 00 		rts

                        	;------------------------------------------------------------------------------
                        	;------------------------------------------------------------------------------
                        	
                        	DisplayChar:
008D95 A6 01 02 03 04 		push	r1/r2/r3/r4
008D9A 0C 01 01 FF 00 		and		r1,r1,#$FF
008DA0 06 01 F4 0D 00 		cmp		fl0,r1,#'\r'
008DA5 40 F4 40 0E 00 		beq		fl0,.docr
008DAA 06 01 F4 91 00 		cmp		fl0,r1,#$91		; cursor right ?
008DB0 40 F4 50 0E 00 		beq		fl0,.doCursorRight
008DB5 06 01 F4 90 00 		cmp		fl0,r1,#$90		; cursor up ?
008DBA 40 F4 75 0E 00 		beq		fl0,.doCursorUp
008DC0 06 01 F4 93 00 		cmp		fl0,r1,#$93		; cursor left ?
008DC5 40 F4 90 0E 00 		beq		fl0,.doCursorLeft
008DCA 06 01 F4 92 00 		cmp		fl0,r1,#$92		; cursor down ?
008DD0 40 F4 AA 0E 00 		beq		fl0,.doCursorDown
008DD5 06 01 F4 94 00 		cmp		fl0,r1,#$94		; cursor home ?
008DDA 40 F4 CA 0E 00 		beq		fl0,.doCursorHome
008DE0 06 01 F4 99 00 		cmp		fl0,r1,#$99		; delete ?
008DE5 40 F4 EA 0E 00 		beq		fl0,.doDelete
008DEA 06 01 F4 08 00 		cmp		fl0,r1,#CTRLH	; backspace ?
008DF0 40 F4 00 0F 00 		beq		fl0,.doBackspace
008DF5 06 01 F4 0A 00 		cmp		fl0,r1,#'\n'	; line feed ?
008DFA 40 F4 6A 0F 00 		beq		fl0,.doLinefeed
008E00 01 01 02 00 04 		mov		r2,r1
008E05 56 00 40 0D 00 		bsr		CalcScreenLoc
008E0A 01 01 03 00 04 		mov		r3,r1
008E10 01 02 01 00 04 		mov		r1,r2
008E15 56 00 60 0A 00 		bsr		AsciiToScreen
008E1A 01 01 02 00 04 		mov		r2,r1
008E20 56 00 F0 0C 00 		bsr		GetCurrAttr
008E25 02 01 02 01 21 		or		r1,r1,r2
008E2A A2 03 01 01 00 		sh	    r1,[r3]
008E30 56 00 75 0F 00 		bsr		IncCursorPos
                        	.dcx4:
008E35 A7 04 03 02 01 		pop		r4/r3/r2/r1
008E3A 60 00 00 00 00 		rts
.docr:
008E40 A0 00 00 11 08 		sb		r0,CursorCol
008E45 56 00 FA 0C 00 		bsr		UpdateCursorPos
008E4A 46 00 35 0E 00 		bra     .dcx4
                        	.doCursorRight:
008E50 81 00 01 11 08 		lbu		r1,CursorCol
008E55 04 01 01 01 00 		add		r1,r1,#1
008E5A 06 01 F4 54 00 		cmp		fl0,r1,#TXTCOLS
008E60 4E F4 6A 0E 00 		bhs		fl0,.dcx7
008E65 A0 00 01 11 08 		sb		r1,CursorCol
                        	.dcx7:
008E6A 56 00 FA 0C 00 		bsr		UpdateCursorPos
008E70 46 00 35 0E 00 		bra     .dcx4
                        	.doCursorUp:
008E75 81 00 01 01 08 		lbu		r1,CursorRow
008E7A 58 01 6A 0E 00 		brz		r1,.dcx7
008E80 05 01 01 01 00 		sub		r1,r1,#1
008E85 A0 00 01 01 08 		sb		r1,CursorRow
008E8A 46 00 6A 0E 00 		bra		.dcx7
                        	.doCursorLeft:
008E90 81 00 01 11 08 		lbu		r1,CursorCol
008E95 58 01 6A 0E 00 		brz		r1,.dcx7
008E9A 05 01 01 01 00 		sub		r1,r1,#1
008EA0 A0 00 01 11 08 		sb		r1,CursorCol
008EA5 46 00 6A 0E 00 		bra		.dcx7
                        	.doCursorDown:
008EAA 81 00 01 01 08 		lbu		r1,CursorRow
008EB0 04 01 01 01 00 		add		r1,r1,#1
008EB5 06 01 F4 1F 00 		cmp		fl0,r1,#TXTROWS
008EBA 4E F4 6A 0E 00 		bhs		fl0,.dcx7
008EC0 A0 00 01 01 08 		sb		r1,CursorRow
008EC5 46 00 6A 0E 00 		bra		.dcx7
                        	.doCursorHome:
008ECA 81 00 01 11 08 		lbu		r1,CursorCol
008ED0 58 01 E0 0E 00 		brz		r1,.dcx12
008ED5 A0 00 00 11 08 		sb		r0,CursorCol
008EDA 46 00 6A 0E 00 		bra		.dcx7
                        	.dcx12:
008EE0 A0 00 00 01 08 		sb		r0,CursorRow
008EE5 46 00 6A 0E 00 		bra		.dcx7
                        	.doDelete:
008EEA 56 00 40 0D 00 		bsr		CalcScreenLoc
008EF0 01 01 03 00 04 		mov		r3,r1
008EF5 81 00 01 11 08 		lbu		r1,CursorCol
008EFA 46 00 25 0F 00 		bra		.dcx5
                        	.doBackspace:
008F00 81 00 01 11 08 		lbu		r1,CursorCol
008F05 58 01 35 0E 00 		brz		r1,.dcx4
008F0A 05 01 01 01 00 		sub		r1,r1,#1
008F10 A0 00 01 11 08 		sb		r1,CursorCol
008F15 56 00 40 0D 00 		bsr		CalcScreenLoc
008F1A 01 01 03 00 04 		mov		r3,r1
008F20 81 00 01 11 08 		lbu		r1,CursorCol
                        	.dcx5:
008F25 85 03 02 41 00 		lhu	    r2,4[r3]
008F2A A2 03 02 01 00 		sh	    r2,[r3]
008F30 04 03 03 04 00 		add		r3,r3,#4
008F35 04 01 01 01 00 		add		r1,r1,#1
008F3A 06 01 F4 54 00 		cmp		fl0,r1,#TXTCOLS
008F40 4F F4 25 0F 00 		blo		fl0,.dcx5
008F45 16 01 20 00 00 		ldi		r1,#' '
008F4A 56 00 60 0A 00 		bsr		AsciiToScreen
008F50 85 00 02 81 07 		lhu		r2,NormAttr
008F55 02 01 02 01 21 		or		r1,r1,r2
008F5A 05 03 03 04 00 		sub		r3,r3,#4
008F60 A2 03 01 01 00 		sh	    r1,[r3]
008F65 46 00 35 0E 00 		bra		.dcx4
                        	.doLinefeed:
008F6A 56 00 A0 0F 00 		bsr		IncCursorRow
008F70 46 00 35 0E 00 		bra		.dcx4
                        	
                        	
                        	;------------------------------------------------------------------------------
                        	;------------------------------------------------------------------------------
                        	
                        	IncCursorPos:
008F75 A6 01 02 04 00 		push	r1/r2/r4
008F7A 81 00 01 11 08 		lbu		r1,CursorCol
008F80 14 01 01 01 00 		addui	r1,r1,#1
008F85 A0 00 01 11 08 		sb		r1,CursorCol
008F8A 06 01 F4 38 00 		cmp		fl0,r1,#56
008F90 4F F4 D0 0F 00 		blo		fl0,icc1
008F95 A0 00 00 11 08 		sb		r0,CursorCol
008F9A 46 00 A5 0F 00 		bra		icr1
                        	IncCursorRow:
008FA0 A6 01 02 04 00 		push	r1/r2/r4
                        	icr1:
008FA5 81 00 01 01 08 		lbu		r1,CursorRow
008FAA 14 01 01 01 00 		addui	r1,r1,#1
008FB0 A0 00 01 01 08 		sb		r1,CursorRow
008FB5 06 01 F4 1F 00 		cmp		fl0,r1,#31
008FBA 4F F4 D0 0F 00 		blo		fl0,icc1
008FC0 16 02 1E 00 00 		ldi		r2,#30
008FC5 A0 00 02 01 08 		sb		r2,CursorRow
008FCA 56 00 E0 0F 00 		bsr		ScrollUp
                        	icc1:
008FD0 56 00 FA 0C 00 		bsr		UpdateCursorPos
008FD5 A7 04 02 01 00 		pop		r4/r2/r1
008FDA 60 00 00 00 00 		rts

                        	ScrollUp:
008FE0 A6 01 02 03 05 		push	r1/r2/r3/r5
008FE5 A6 06 00 00 00 		push	r6
008FEA FD A0 FD 0F 00 		lbu	    r1,TEXTREG+TEXT_COLS+$FFD00000
008FF0 81 00 01 01 00 
008FF5 EA EA EA EA EA ; NOP Ramp
008FFA EA EA EA EA EA ; NOP Ramp
009000 FD A0 FD 0F 00 		lbu	    r2,TEXTREG+TEXT_ROWS+$FFD00000
009005 81 00 02 41 00 
00900A 05 02 02 01 00 		sub		r2,r2,#1
009010 02 01 02 06 07 		mul		r6,r1,r2
009015 FD FF 00 00 00 		ldi		r1,#TEXTSCR+$FFD00000
00901A 16 01 00 00 D0 
009020 FD FF 00 00 00 		ldi		r2,#TEXTSCR+224+$FFD00000
009025 16 02 E0 00 D0 
00902A 16 03 00 00 00 		ldi		r3,#0
                        	.0001:
009030 8C 02 03 05 06 		lh	r5,[r2+r3*4]
009035 AA 01 03 05 06 		sh	r5,[r1+r3*4]
00903A 04 03 03 01 00 		add		r3,r3,#1
009040 5A 06 30 00 00 		dbnz	r6,.0001
009045 FD A0 FD 0F 00 		lbu	    r1,TEXTREG+TEXT_ROWS+$FFD00000
00904A 81 00 01 41 00 
009050 05 01 01 01 00 		sub		r1,r1,#1
009055 56 00 6A 00 00 		bsr		BlankLine
00905A A7 06 00 00 00 		pop		r6
009060 A7 05 03 02 01 		pop		r5/r3/r2/r1
009065 60 00 00 00 00 		rts

                        	;------------------------------------------------------------------------------
                        	; Blank out a line on the screen.
                        	;
                        	; Parameters:
                        	;	r1 = line number to blank out
                        	;------------------------------------------------------------------------------
                        	
                        	BlankLine:
00906A A6 01 02 03 04 		push	r1/r2/r3/r4
009070 FD A0 FD 0F 00 	    lbu r2,TEXTREG+TEXT_COLS+$FFD00000
009075 81 00 02 01 00 
00907A 02 02 01 03 07 		mul		r3,r2,r1
009080 05 02 02 01 00 		sub		r2,r2,#1		; r2 = #chars to blank - 1
009085 02 03 02 03 50 		shl		r3,r3,#2
00908A FD D0 FF 00 00 		add		r3,r3,#TEXTSCR+$FFD00000
009090 04 03 03 00 00 
009095 16 01 20 00 00 		ldi		r1,#' '
00909A 56 00 60 FA FF 		bsr		AsciiToScreen
0090A0 85 00 04 81 07 		lhu		r4,NormAttr
0090A5 02 01 04 01 21 		or		r1,r1,r4
                        	.0001:
0090AA AA 03 02 01 06 		sh	    r1,[r3+r2*4]
0090B0 5A 02 AA 00 00 		dbnz	r2,.0001
0090B5 A7 04 03 02 01 		pop		r4/r3/r2/r1
0090BA 60 00 00 00 00 		rts

                        	Monitor:
0090C0 16 01 31 00 00 		ldi		r1,#49
0090C5 FD C0 FD 0F 00 		sb		r1,LEDS
0090CA A0 00 01 01 60 
0090D0 16 01 2A 95 00 		ldi		r1,#msgMonitorStarted
0090D5 56 00 15 FC FF 		bsr		DisplayStringCRLF
0090DA A0 00 00 41 08 		sb		r0,KeybdEcho
                        	mon1:
0090E0 16 01 01 00 00 	    ldi     r1,#$01                 ; restore data segment
0090E5 01 01 21 00 48 	    mtspr   ds,r1
0090EA 16 01 32 00 00 		ldi		r1,#50
0090F0 FD C0 FD 0F 00 		sb		r1,LEDS
0090F5 A0 00 01 01 60 
                        	;	ldi		sp,#TCBs+TCB_Size-8		; reload the stack pointer, it may have been trashed
0090FA 16 01 0E 00 00 	    ldi     r1,#$0E
009100 01 00 00 00 30 	    sei                             ; restore SS:SP
009105 01 01 2E 00 48 	    mtspr   ss,r1
00910A 16 FF F8 FF 3F 		ldi		sp,#$3FFFF8
009110 01 00 00 00 31 		cli
                        	.PromptLn:
009115 56 00 1A FC FF 		bsr		CRLF
00911A 16 01 24 00 00 		ldi		r1,#'$'
009120 56 00 8A 02 00 		bsr		OutChar
                        	.Prompt3:
009125 56 00 70 08 00 		bsr		KeybdGetCharNoWait		; KeybdGetCharDirectNB
00912A 44 01 25 01 00 		brmi	r1,.Prompt3
009130 06 01 F4 0D 00 		cmp		fl0,r1,#CR
009135 40 F4 45 01 00 		beq		fl0,.Prompt1
00913A 56 00 8A 02 00 		bsr		OutChar
009140 46 00 25 01 00 		bra		.Prompt3
                        	.Prompt1:
009145 A0 00 00 11 08 		sb		r0,CursorCol
00914A 56 00 40 FD FF 		bsr		CalcScreenLoc
009150 01 01 03 00 04 		mov		r3,r1
009155 56 00 CA 01 00 		bsr		MonGetch
00915A 06 01 F4 24 00 		cmp		fl0,r1,#'$'
009160 41 F4 6A 01 00 		bne		fl0,.Prompt2
009165 56 00 CA 01 00 		bsr		MonGetch
                        	.Prompt2:
00916A 06 01 F4 3F 00 		cmp		fl0,r1,#'?'
009170 40 F4 BA 01 00 		beq		fl0,.doHelp
009175 06 01 F4 43 00 		cmp		fl0,r1,#'C'
00917A 40 F4 40 05 00 		beq		fl0,doCLS
009180 06 01 F4 63 00 		cmp     fl0,r1,#'c'
009185 40 F4 C0 02 00 		beq     fl0,doCS
00918A 06 01 F4 4D 00 		cmp		fl0,r1,#'M'
009190 40 F4 35 02 00 		beq		fl0,doDumpmem
009195 06 01 F4 6D 00 		cmp		fl0,r1,#'m'
00919A 40 F4 D0 0E 00 		beq		fl0,MRTest
0091A0 06 01 F4 53 00 		cmp		fl0,r1,#'S'
0091A5 40 F4 60 02 00 		beq		fl0,doSDBoot
0091AA 06 01 F4 67 00 		cmp		fl0,r1,#'g'
0091B0 40 F4 90 02 00 		beq		fl0,doRand
0091B5 46 00 E0 00 00 		bra mon1
                        	
                        	.doHelp:
0091BA 16 01 DA 94 00 		ldi		r1,#msgHelp
0091C0 56 00 E5 FB FF 		bsr		DisplayString
0091C5 46 00 E0 00 00 		bra mon1
                        	
                        	MonGetch:
0091CA 85 03 01 01 00 		lhu	    r1,[r3]
0091D0 0C 01 01 FF 01 		andi	r1,r1,#$1FF
0091D5 04 03 03 04 00 		add		r3,r3,#4
0091DA 56 00 8A FA FF 		bsr		ScreenToAscii
0091E0 60 00 00 00 00 		rts

                        	;------------------------------------------------------------------------------
                        	; Ignore blanks in the input
                        	; r3 = text pointer
                        	; r1 destroyed
                        	;------------------------------------------------------------------------------
                        	
                        	ignBlanks:
                        	ignBlanks1:
0091E5 56 00 CA 01 00 		bsr		MonGetch
0091EA 06 01 F4 20 00 		cmp		fl0,r1,#' '
0091F0 40 F4 E5 01 00 		beq		fl0,ignBlanks1
0091F5 05 03 03 04 00 		sub		r3,r3,#4
0091FA 60 00 00 00 00 		rts

                        	GetTwoParams:
009200 56 00 E5 01 00 		bsr		ignBlanks
009205 56 00 00 04 00 		bsr		GetHexNumber	; get start address of dump
00920A 01 01 02 00 04 		mov		r2,r1
009210 56 00 E5 01 00 		bsr		ignBlanks
009215 56 00 00 04 00 		bsr		GetHexNumber	; get end address of dump
00921A 60 00 00 00 00 		rts

                        	GetRange:
009220 56 00 00 02 00 		bsr		GetTwoParams
009225 02 02 01 F4 06 		cmp		fl0,r2,r1
00922A 4C F4 C0 04 00 		bhi		fl0,DisplayErr
009230 60 00 00 00 00 		rts

                        	doDumpmem:
009235 56 00 A5 FA FF 		bsr		CursorOff
00923A 56 00 20 02 00 		bsr		GetRange
009240 56 00 1A FC FF 		bsr		CRLF
                        	.001:
009245 56 00 A5 03 00 		bsr		CheckKeys
00924A 56 00 D5 02 00 		bsr		DisplayMemBytes
009250 02 02 01 F4 06 		cmp		fl0,r2,r1
009255 4D F4 45 02 00 		bls		fl0,.001
00925A 46 00 E0 00 00 		bra mon1
                        	doSDBoot:
                        	;	sub		r3,r3,#4
009260 56 00 0A 0F 00 		bsr		SDInit
009265 59 01 E0 00 00 		brnz	r1,mon1
00926A 56 00 A0 12 00 		bsr		SDReadPart
009270 59 01 E0 00 00 		brnz	r1,mon1
009275 56 00 4A 13 00 		bsr		SDReadBoot
00927A 59 01 E0 00 00 		brnz	r1,mon1
009280 56 00 10 14 00 		bsr		loadBootFile
009285 50 E0 90 00 00 		jmp		mon1
                        	
                        	OutChar:
00928A 52 00 81 01 00 		jmp		(OutputVec)
                        	doRand:
009290 01 00 01 00 49 		mfspr	r1,tick
009295 01 01 10 00 48 		mtspr	srand1,r1
00929A 01 00 01 00 49 		mfspr	r1,tick
0092A0 01 01 11 00 48 		mtspr	srand2,r1
                        	.0001:
0092A5 01 00 01 00 14 		gran	r1
0092AA 56 00 75 FB FF 		bsr		DisplayWord
0092B0 56 00 1A FC FF 		bsr		CRLF
0092B5 56 00 A5 03 00 		bsr		CheckKeys
0092BA 46 00 A5 02 00 		bra .0001
                        	doCS:
0092C0 01 2F 01 00 49 	    mfspr   r1,cs
0092C5 56 00 85 FB FF 	    bsr     DisplayHalf
0092CA 56 00 1A FC FF 	    bsr     CRLF
0092D0 46 00 E0 00 00 	    bra     mon1
                        	
                        	;------------------------------------------------------------------------------
                        	; Display memory pointed to by r2.
                        	; destroys r1,r3
                        	;------------------------------------------------------------------------------
                        	;
                        	DisplayMemBytes:
0092D5 A6 01 03 00 00 		push	r1/r3
0092DA 16 01 3E 00 00 		ldi		r1,#'>'
0092E0 56 00 8A 02 00 		bsr		OutChar
0092E5 16 01 42 00 00 		ldi		r1,#'B'
0092EA 56 00 8A 02 00 		bsr		OutChar
0092F0 16 01 20 00 00 		ldi		r1,#' '
0092F5 56 00 8A 02 00 		bsr		OutChar
0092FA 01 02 01 00 04 		mov		r1,r2
009300 56 00 85 FB FF 		bsr		DisplayHalf
009305 16 03 07 00 00 		ldi		r3,#7
                        	.001:
00930A 16 01 20 00 00 		ldi		r1,#' '
009310 56 00 8A 02 00 		bsr		OutChar
009315 81 02 01 01 00 		lbu		r1,[r2]
00931A 51 A5 8B 00 00 		jsr		DisplayByte
009320 04 02 02 01 00 		add		r2,r2,#1
009325 5A 03 0A 03 00 		dbnz	r3,.001
00932A 16 01 3A 00 00 		ldi		r1,#':'
009330 56 00 8A 02 00 		bsr		OutChar
009335 FD 0D 00 00 00 		ldi		r1,#%110101110_000000100_0000000000	; reverse video
00933A 16 01 00 10 70 
009340 A2 00 01 81 07 		sh		r1,NormAttr
009345 16 03 07 00 00 		ldi		r3,#7
00934A 05 02 02 08 00 		sub		r2,r2,#8
                        	.002
009350 81 02 01 01 00 		lbu		r1,[r2]
009355 06 01 F4 1A 00 		cmp		fl0,r1,#26				; convert control characters to '.'
00935A 4E F4 6A 03 00 		bhs		fl0,.004
009360 16 01 2E 00 00 		ldi		r1,#'.'
009365 46 00 7A 03 00 		bra .003
                        	.004:
00936A 06 01 F4 80 00 		cmp		fl0,r1,#$80				; convert other non-ascii to '.'
009370 4F F4 7A 03 00 		blo		fl0,.003
009375 16 01 2E 00 00 		ldi		r1,#'.'
                        	.003:
00937A 56 00 8A 02 00 		bsr		OutChar
009380 04 02 02 01 00 		add		r2,r2,#1
009385 5A 03 50 03 00 		dbnz	r3,.002
00938A 16 01 00 B8 26 		ldi		r1,#%000000100_110101110_0000000000	; normal video
009390 A2 00 01 81 07 		sh		r1,NormAttr
009395 56 00 1A FC FF 		bsr		CRLF
00939A A7 03 01 00 00 		pop		r3/r1
0093A0 60 00 00 00 00 		rts

                        	;------------------------------------------------------------------------------
                        	; CheckKeys:
                        	;	Checks for a CTRLC or a scroll lock during long running dumps.
                        	;------------------------------------------------------------------------------
                        	
                        	CheckKeys:
0093A5 56 00 B0 03 00 		bsr		CTRLCCheck
0093AA 46 00 DA 03 00 		bra CheckScrollLock
                        	CTRLCCheck:
0093B0 A6 01 00 00 00 		push	r1
0093B5 56 00 50 05 00 		bsr		KeybdGetCharDirectNB
0093BA 06 01 F4 03 00 		cmp		fl0,r1,#CTRLC
0093C0 40 F4 D0 03 00 		beq		fl0,.0001
0093C5 A7 01 00 00 00 		pop		r1
0093CA 60 00 00 00 00 		rts
.0001:
0093D0 04 FF FF 10 00 		add		sp,sp,#16
0093D5 46 00 E0 00 00 		bra mon1
                        	
                        	;------------------------------------------------------------------------------
                        	; CheckScrollLock:
                        	;	Check for a scroll lock by the user. If scroll lock is active then tasks
                        	; are rescheduled while the scroll lock state is tested in a loop.
                        	;------------------------------------------------------------------------------
                        	
                        	CheckScrollLock:
0093DA A6 01 00 00 00 		push	r1
                        	.0002:
0093E0 83 00 01 61 08 		lcu		r1,KeybdLocks
0093E5 0C 01 F4 00 40 		and		fl0,r1,#$4000		; is scroll lock active ?
0093EA 58 F4 F5 03 00 		brz		fl0,.0001
0093F0 46 00 E0 03 00 		bra .0002
                        	.0001:
0093F5 A7 01 00 00 00 		pop		r1
0093FA 60 00 00 00 00 		rts

                        	GetHexNumber:
009400 A6 02 04 00 00 		push	r2/r4
009405 16 02 00 00 00 		ldi		r2,#0
00940A 16 04 0F 00 00 		ldi		r4,#15
                        	.gthxn2:
009410 56 00 CA 01 00 		bsr		MonGetch
009415 56 00 4A 04 00 		bsr		AsciiToHexNybble
00941A 06 01 F4 FF FF 		cmp		fl0,r1,#-1
009420 40 F4 3A 04 00 		beq		fl0,.gthxn1
009425 02 02 04 02 50 		shl		r2,r2,#4
00942A 0C 01 01 0F 00 		and		r1,r1,#$0f
009430 02 02 01 02 21 		or		r2,r2,r1
009435 5A 04 10 04 00 		dbnz	r4,.gthxn2
                        	.gthxn1:
00943A 01 02 01 00 04 		mov		r1,r2
009440 A7 04 02 00 00 		pop		r4/r2
009445 60 00 00 00 00 		rts

                        	;------------------------------------------------------------------------------
                        	; Convert ASCII character in the range '0' to '9', 'a' to 'f' or 'A' to 'F'
                        	; to a hex nybble.
                        	;------------------------------------------------------------------------------
                        	;
                        	AsciiToHexNybble:
00944A 06 01 F4 30 00 		cmp		fl0,r1,#'0'
009450 4F F4 B5 04 00 		blo		fl0,.gthx3
009455 06 01 F4 3A 00 		cmp		fl0,r1,#'9'+1
00945A 4E F4 6A 04 00 		bhs		fl0,.gthx5
009460 05 01 01 30 00 		sub		r1,r1,#'0'
009465 60 00 00 00 00 		rts
.gthx5:
00946A 06 01 F4 41 00 		cmp		fl0,r1,#'A'
009470 4F F4 B5 04 00 		blo		fl0,.gthx3
009475 06 01 F4 47 00 		cmp		fl0,r1,#'F'+1
00947A 4E F4 90 04 00 		bhs		fl0,.gthx6
009480 05 01 01 41 00 		sub		r1,r1,#'A'
009485 04 01 01 0A 00 		add		r1,r1,#10
00948A 60 00 00 00 00 		rts
.gthx6:
009490 06 01 F4 61 00 		cmp		fl0,r1,#'a'
009495 4F F4 B5 04 00 		blo		fl0,.gthx3
00949A 06 01 F4 7B 00 		cmp		fl0,r1,#'z'+1
0094A0 4E F4 B5 04 00 		bhs		fl0,.gthx3
0094A5 05 01 01 61 00 		sub		r1,r1,#'a'
0094AA 04 01 01 0A 00 		add		r1,r1,#10
0094B0 60 00 00 00 00 		rts
.gthx3:
0094B5 16 01 FF FF FF 		ldi		r1,#-1		; not a hex number
0094BA 60 00 00 00 00 		rts

                        	DisplayErr:
0094C0 16 01 D0 94 00 		ldi		r1,#msgErr
0094C5 56 00 E5 FB FF 		bsr		DisplayString
0094CA 46 00 E0 00 00 		bra mon1
                        	msgErr:
0094D0 2A 2A 45 72 72 		db	"**Err",CR,LF,0
0094D5 0D 0A 00       
                        	
0094D8 00 00          	msgHelp:
0094DA 3F 20 3D 20 44 		db		"? = Display Help",CR,LF
0094E0 73 70 6C 61 79 
0094E5 20 48 65 6C 70 
0094EA 0D 0A          
0094EC 43 4C 53 20 3D 		db		"CLS = clear screen",CR,LF
0094F1 20 63 6C 65 61 
0094F6 72 20 73 63 72 
0094FB 65 65 6E 0D 0A 
009500 4D 42 20 3D 20 		db		"MB = dump memory",CR,LF
009505 64 75 6D 70 20 
00950A 6D 65 6D 6F 72 
009510 0D 0A          
009512 53 20 3D 20 62 		db		"S = boot from SD card",CR,LF
009517 6F 6F 74 20 66 
00951C 72 6F 6D 20 53 
009521 44 20 63 61 72 
009526 64 0D 0A       
009529 00             		db		0
                        	
                        	msgMonitorStarted
00952A 4D 6F 6E 69 74 		db		"Monitor started.",0
009530 72 20 73 74 61 
009535 72 74 65 64 2E 
00953A 00             
                        	
00953B 00 00 00 00 00 	doCLS:
009540 56 00 CA FA FF 		bsr		ClearScreen
009545 56 00 B0 FA FF 		bsr		HomeCursor
00954A 46 00 E0 00 00 		bra mon1
                        	KEYBD_DELAY		EQU		1000
                        	
                        	KeybdGetCharDirectNB:
009550 A6 02 00 00 00 		push	r2
009555 01 00 00 00 30 		sei
00955A 01 05 01 00 49 		mfspr	r1,cr0			; turn off tmr for i/o
009560 A6 01 00 00 00 		push	r1
009565 16 01 00 00 00 		ldi		r1,#0
00956A 01 01 05 00 48 		mtspr	cr0,r1
009570 FD C0 FD 0F 00 		lcu		r1,KEYBD
009575 83 00 01 01 00 
00957A FD 00 00 00 00 		and		fl0,r1,#$8000
009580 0C 01 F4 00 80 
009585 58 F4 E5 05 00 		brz		fl0,.0001
00958A FD C0 FD 0F 00 		lbu		r0,KEYBD+4		; clear keyboard strobe
009590 81 00 00 41 00 
009595 01 00 00 00 31 		cli
00959A 0C 01 F4 00 08 		and		fl0,r1,#$800	; is it keydown ?
0095A0 59 F4 E5 05 00 		brnz	fl0,.0001
0095A5 A7 02 00 00 00 		pop		r2
0095AA 01 02 05 00 48 		mtspr	cr0,r2			; set tmr mode back
0095B0 0C 01 01 FF 00 		and		r1,r1,#$FF
0095B5 81 00 02 41 08 		lbu		r2,KeybdEcho
0095BA 58 02 DA 05 00 		brz		r2,.0002
0095C0 06 01 F4 0D 00 		cmp		fl0,r1,#CR
0095C5 41 F4 D5 05 00 		bne		fl0,.0003
0095CA 56 00 1A FC FF 		bsr		CRLF
0095D0 46 00 DA 05 00 		bra .0002
                        	.0003:
0095D5 53 00 81 01 00 		jsr		(OutputVec)
                        	.0002:
0095DA A7 02 00 00 00 		pop		r2
0095E0 60 00 00 00 00 		rts
.0001:
0095E5 A7 02 00 00 00 		pop		r2
0095EA 01 02 05 00 48 		mtspr	cr0,r2			; set tmr mode back
0095F0 01 00 00 00 31 		cli
0095F5 16 01 FF FF FF 		ldi		r1,#-1
0095FA A7 02 00 00 00 		pop		r2
009600 60 00 00 00 00 		rts

                        	KeybdGetCharDirect:
009605 A6 02 00 00 00 		push	r2
00960A 01 05 01 00 49 		mfspr	r1,cr0
009610 A6 01 00 00 00 		push	r1
009615 01 00 05 00 48 		mtspr	cr0,r0			; clear tmr mode
                        	.0001:
00961A FD C0 FD 0F 00 		lc		r1,KEYBD
009620 82 00 01 01 00 
009625 FD 00 00 00 00 		and		fl0,r1,#$8000
00962A 0C 01 F4 00 80 
009630 58 F4 1A 06 00 		brz		fl0,.0001
009635 FD C0 FD 0F 00 		lbu		r0,KEYBD+4		; clear keyboard strobe
00963A 81 00 00 41 00 
009640 0C 01 F4 00 08 		and		fl0,r1,#$800	; is it keydown ?
009645 59 F4 1A 06 00 		brnz	fl0,.0001
00964A A7 02 00 00 00 		pop		r2				; restore tmr mode
009650 01 02 05 00 48 		mtspr	cr0,r2
009655 0C 01 01 FF 00 		and		r1,r1,#$FF
00965A 81 00 02 41 08 		lbu		r2,KeybdEcho
009660 58 02 80 06 00 		brz		r2,.gk1
009665 06 01 F4 0D 00 		cmp		fl0,r1,#CR
00966A 41 F4 7A 06 00 		bne		fl0,.gk2
009670 56 00 1A FC FF 		bsr		CRLF
009675 46 00 80 06 00 		bra .gk1
                        	.gk2:
00967A 53 00 81 01 00 		jsr		(OutputVec)
                        	.gk1:
009680 A7 02 00 00 00 		pop		r2
009685 60 00 00 00 00 		rts

                        	;KeybdInit:
                        	;	mfspr	r1,cr0		; turn off tmr mode
                        	;	push	r1
                        	;	mtspr	cr0,r0
                        	;	ldi		r1,#33
                        	;	sb		r1,LEDS
                        	;	bsr		WaitForKeybdAck	; grab a byte from the keyboard
                        	;	cmp		flg0,r1,#$AA	; did it send a ack ?
                        	;	
                        	;	ldi		r1,#$ff			; issue keyboard reset
                        	;	bsr		SendByteToKeybd
                        	;	ldi		r1,#38
                        	;	sb		r1,LEDS
                        	;	ldi		r1,#4
                        	;	jsr		Sleep
                        	;	ldi		r1,#KEYBD_DELAY	; delay a bit
                        	kbdi5:
                        	;	sub		r1,r1,#1
                        	;	brnz	r1,kbdi5
                        	;	ldi		r1,#34
                        	;	sb		r1,LEDS
                        	;	ldi		r1,#0xf0		; send scan code select
                        	;	bsr		SendByteToKeybd
                        	;	ldi		r1,#35
                        	;	sb		r1,LEDS
                        	;	ldi		r2,#0xFA
                        	;	bsr		WaitForKeybdAck
                        	;	cmp		fl0,r1,#$FA
                        	;	bne		fl0,kbdi2
                        	;	ldi		r1,#36
                        	;	sb		r1,LEDS
                        	;	ldi		r1,#2			; select scan code set#2
                        	;	bsr		SendByteToKeybd
                        	;	ldi		r1,#39
                        	;	sb		r1,LEDS
                        	;kbdi2:
                        	;	ldi		r1,#45
                        	;	sb		r1,LEDS
                        	;	pop		r1				; turn back on tmr mode
                        	;	mtspr	cr0,r1
                        	;	rts
                        	
                        	msgBadKeybd:
00968A 4B 65 79 62 6F 		db		"Keyboard not responding.",0
009690 72 64 20 6E 6F 
009695 74 20 72 65 73 
00969A 70 6F 6E 64 69 
0096A0 67 2E 00       
                        	
                        	;SendByteToKeybd:
                        	;	push	r2
                        	;	sb		r1,KEYBD
                        	;	ldi		r1,#40
                        	;	sb		r1,LEDS
                        	;	mfspr	r3,tick
                        	;kbdi4:						; wait for transmit complete
                        	;	mfspr	r4,tick
                        	;	sub		r4,r4,r3
                        	;	cmp		fl0,r4,#KEYBD_DELAY
                        	;	bhi		fl0,kbdbad
                        	;	ldi		r1,#41
                        	;	sb		r1,LEDS
                        	;	lbu		r1,KEYBD+1
                        	;	and		fl0,r1,#64
                        	;	brz		fl0,kbdi4
                        	;	bra 	sbtk1
                        	;kbdbad:
                        	;	ldi		r1,#42
                        	;	sb		r1,LEDS
                        	;	lbu		r1,KeybdBad
                        	;	brnz	r1,sbtk2
                        	;	ldi		r1,#1
                        	;	sb		r1,KeybdBad
                        	;	ldi		r1,#43
                        	;	sb		r1,LEDS
                        	;	ldi		r1,#msgBadKeybd
                        	;	bsr		DisplayStringCRLF
                        	;sbtk1:
                        	;	ldi		r1,#44
                        	;	sb		r1,LEDS
                        	;	pop		r2
                        	;	rts
                        	;sbtk2:
                        	;	bra sbtk1
                        	
                        	; Wait for keyboard to respond with an ACK (FA)
                        	;
                        	;WaitForKeybdAck:
                        	;	ldi		r1,#64
                        	;	sb		r1,LEDS
                        	;	mfspr	r3,tick
                        	;wkbdack1:
                        	;	mfspr	r4,tick
                        	;	sub		r4,r4,r3
                        	;	cmp		fl0,r4,#KEYBD_DELAY
                        	;	bhi		fl0,wkbdbad
                        	;	ldi		r1,#65
                        	;	sb		r1,LEDS
                        	;	lb		r1,KEYBD+1				; check keyboard status for key
                        	;	brpl	r1,wkbdack1				; no key available, go back
                        	;	lbu		r1,KEYBD				; get the scan code
                        	;	sb		r0,KEYBD+1				; clear recieve register
                        	;wkbdbad:
                        	;	rts
                        	
0096A3 00 00          	KeybdInit:
0096A5 16 03 05 00 00 		ldi		r3,#5
                        	.0001:
0096AA 56 00 EA 07 00 		bsr		KeybdRecvByte	; Look for $AA
0096B0 44 01 C0 06 00 		bmi		r1,.0002
0096B5 06 01 F4 AA 00 		cmp		fl0,r1,#$AA		;
0096BA 40 F4 10 07 00 		beq		fl0,.config
                        	.0002:
0096C0 56 00 90 0B 00 		bsr		Wait10ms
0096C5 16 01 FF FF FF 		ldi		r1,#-1			; send reset code to keyboard
0096CA FD C0 FD 0F 00 		sb		r1,KEYBD+1		; write to status reg to clear TX state
0096D0 A0 00 01 11 00 
0096D5 56 00 90 0B 00 		bsr		Wait10ms
0096DA 16 01 FF 00 00 		ldi		r1,#$FF
0096E0 56 00 5A 0B 00 		bsr		KeybdSendByte	; now write to transmit register
0096E5 56 00 2A 08 00 		bsr		KeybdWaitTx		; wait until no longer busy
0096EA 56 00 EA 07 00 		bsr		KeybdRecvByte	; look for an ACK ($FA)
0096F0 06 01 F4 FA 00 		cmp		fl0,r1,#$FA
0096F5 56 00 EA 07 00 		bsr		KeybdRecvByte
0096FA 06 01 F4 FC 00 		cmp		fl0,r1,#$FC		; reset error ?
009700 40 F4 45 07 00 		beq		fl0,.tryAgain
009705 06 01 F4 AA 00 		cmp		fl0,r1,#$AA		; reset complete okay ?
00970A 41 F4 45 07 00 		bne		fl0,.tryAgain
                        	.config:
009710 16 01 F0 00 00 		ldi		r1,#$F0			; send scan code select
009715 FD C0 FD 0F 00 		sb		r1,LEDS
00971A A0 00 01 01 60 
009720 56 00 5A 0B 00 		bsr		KeybdSendByte
009725 56 00 2A 08 00 		bsr		KeybdWaitTx
00972A 44 01 45 07 00 		bmi		r1,.tryAgain
009730 56 00 EA 07 00 		bsr		KeybdRecvByte	; wait for response from keyboard
009735 44 01 45 07 00 		bmi		r1,.tryAgain
00973A 06 01 F4 FA 00 		cmp		fl0,r1,#$FA
009740 40 F4 5A 07 00 		beq		fl0,.0004
                        	.tryAgain:
009745 5A 03 AA 06 00 		dbnz	r3,.0001
                        	.keybdErr:
00974A 16 01 8A 96 00 		ldi		r1,#msgBadKeybd
009750 56 00 E5 FB FF 		bsr		DisplayString
009755 60 00 00 00 00 		rts
.0004:
00975A 16 01 02 00 00 		ldi		r1,#2			; select scan code set #2
009760 56 00 5A 0B 00 		bsr		KeybdSendByte
009765 56 00 2A 08 00 		bsr		KeybdWaitTx
00976A 44 01 45 07 00 		bmi		r1,.tryAgain
009770 60 00 00 00 00 		rts

                        	; Get the keyboard status
                        	;
                        	KeybdGetStatus:
009775 A6 02 00 00 00 		push	r2
00977A 01 05 02 00 49 		mfspr	r2,cr0			; turn off tmr mode
009780 A6 02 00 00 00 		push	r2
009785 01 00 05 00 48 		mtspr	cr0,r0
00978A FD C0 FD 0F 00 		lb		r1,KEYBD+1
009790 80 00 01 11 00 
009795 A7 02 00 00 00 		pop		r2
00979A 01 02 05 00 48 		mtspr	cr0,r2			; restore TMR
0097A0 A7 02 00 00 00 		pop		r2
0097A5 60 00 00 00 00 		rts

                        	; Get the scancode from the keyboard port
                        	;
                        	KeybdGetScancode:
0097AA A6 02 00 00 00 		push	r2
0097B0 01 05 02 00 49 		mfspr	r2,cr0					; turn off tmr mode
0097B5 A6 02 00 00 00 		push	r2
0097BA 01 00 05 00 48 		mtspr	cr0,r0
0097C0 FD C0 FD 0F 00 		lbu		r1,KEYBD				; get the scan code
0097C5 81 00 01 01 00 
0097CA FD C0 FD 0F 00 		sb		r0,KEYBD+1				; clear receive register
0097D0 A0 00 00 11 00 
0097D5 A7 02 00 00 00 		pop		r2
0097DA 01 02 05 00 48 		mtspr	cr0,r2					; restore TMR
0097E0 A7 02 00 00 00 		pop		r2
0097E5 60 00 00 00 00 		rts

                        	; Recieve a byte from the keyboard, used after a command is sent to the
                        	; keyboard in order to wait for a response.
                        	;
                        	KeybdRecvByte:
0097EA A6 03 00 00 00 		push	r3
0097F0 16 03 64 00 00 		ldi		r3,#100			; wait up to 1s
                        	.0003:
0097F5 56 00 75 07 00 		bsr		KeybdGetStatus	; wait for response from keyboard
0097FA 44 01 1A 08 00 		bmi		r1,.0004		; is input buffer full ? yes, branch
009800 56 00 90 0B 00 		bsr		Wait10ms		; wait a bit
009805 5A 03 F5 07 00 		dbnz	r3,.0003		; go back and try again
00980A A7 03 00 00 00 		pop		r3				; timeout
009810 16 01 FF FF FF 		ldi		r1,#-1			; return -1
009815 60 00 00 00 00 		rts
.0004:
00981A 56 00 AA 07 00 		bsr		KeybdGetScancode
009820 A7 03 00 00 00 		pop		r3
009825 60 00 00 00 00 		rts

                        	
                        	; Wait until the keyboard transmit is complete
                        	; Returns .CF = 1 if successful, .CF=0 timeout
                        	;
                        	KeybdWaitTx:
00982A A6 02 03 00 00 		push	r2/r3
009830 16 03 64 00 00 		ldi		r3,#100			; wait a max of 1s
                        	.0001:
009835 56 00 75 07 00 		bsr		KeybdGetStatus
00983A 0C 01 01 40 00 		and		r1,r1,#$40		; check for transmit complete bit
009840 59 01 60 08 00 		brnz	r1,.0002		; branch if bit set
009845 56 00 90 0B 00 		bsr		Wait10ms		; delay a little bit
00984A 5A 03 35 08 00 		dbnz	r3,.0001		; go back and try again
009850 A7 03 02 00 00 		pop		r3/r2			; timed out
009855 16 01 FF FF FF 		ldi		r1,#-1			; return -1
00985A 60 00 00 00 00 		rts
.0002:
009860 A7 03 02 00 00 		pop		r3/r2			; wait complete, return 
009865 16 01 00 00 00 		ldi		r1,#0			; return 0
00986A 60 00 00 00 00 		rts

                        	KeybdGetCharNoWait:
009870 A0 00 00 A1 08 		sb		r0,KeybdWaitFlag
009875 46 00 85 08 00 		bra		KeybdGetChar
                        	
                        	KeybdGetCharWait:
00987A 16 01 FF FF FF 		ldi		r1,#-1
009880 A0 00 01 A1 08 		sb		r1,KeybdWaitFlag
                        		
                        	KeybdGetChar:
009885 A6 02 03 00 00 		push	r2/r3
                        	.0003:
00988A 56 00 75 07 00 		bsr		KeybdGetStatus			; check keyboard status for key available
009890 44 01 B0 08 00 		bmi		r1,.0006				; yes, go process
009895 80 00 01 A1 08 		lb		r1,KeybdWaitFlag		; are we willing to wait for a key ?
00989A 44 01 8A 08 00 		bmi		r1,.0003				; yes, branch back
0098A0 16 01 FF FF FF 		ldi		r1,#-1					; flag no char available
0098A5 A7 03 02 00 00 		pop		r3/r2
0098AA 60 00 00 00 00 		rts
.0006:
0098B0 56 00 AA 07 00 		bsr		KeybdGetScancode
                        	.0001:
0098B5 16 02 01 00 00 		ldi		r2,#1
0098BA FD C0 FD 0F 00 		sb		r2,LEDS
0098C0 A0 00 02 01 60 
0098C5 06 01 F4 F0 00 		cmp		fl0,r1,#SC_KEYUP
0098CA 40 F4 D5 09 00 		beq		fl0,.doKeyup
0098D0 06 01 F4 E0 00 		cmp		fl0,r1,#SC_EXTEND
0098D5 40 F4 E5 09 00 		beq		fl0,.doExtend
0098DA 06 01 F4 14 00 		cmp		fl0,r1,#$14				; code for CTRL
0098E0 40 F4 FA 09 00 		beq		fl0,.doCtrl
0098E5 06 01 F4 12 00 		cmp		fl0,r1,#$12				; code for left shift
0098EA 40 F4 35 0A 00 		beq		fl0,.doShift
0098F0 06 01 F4 59 00 		cmp		fl0,r1,#$59				; code for right-shift
0098F5 40 F4 35 0A 00 		beq		fl0,.doShift
0098FA 06 01 F4 77 00 		cmp		fl0,r1,#SC_NUMLOCK
009900 40 F4 70 0A 00 		beq		fl0,.doNumLock
009905 06 01 F4 58 00 		cmp		fl0,r1,#SC_CAPSLOCK
00990A 40 F4 8A 0A 00 		beq		fl0,.doCapsLock
009910 06 01 F4 7E 00 		cmp		fl0,r1,#SC_SCROLLLOCK
009915 40 F4 00 70 1F 		beq		fl0,.doScrolllock
00991A 80 00 02 81 08 		lb		r2,KeyState1			; check key up/down
009920 A0 00 00 81 08 		sb		r0,KeyState1			; clear keyup status
009925 59 02 8A 08 00 		brnz	r2,.0003				; ignore key up
00992A 80 00 02 91 08 		lb		r2,KeyState2
009930 0C 02 03 80 00 		and		r3,r2,#$80				; is it extended code ?
009935 58 03 5A 09 00 		brz		r3,.0010
00993A 0C 02 03 7F 00 		and		r3,r2,#$7f				; clear extended bit
009940 A0 00 03 91 08 		sb		r3,KeyState2
009945 A0 00 00 81 08 		sb		r0,KeyState1			; clear keyup
00994A FD 09 00 00 00 		lbu		r1,keybdExtendedCodes[r1]
009950 81 01 01 01 E5 
009955 46 00 BA 09 00 		bra		.0008
                        	.0010:
00995A 80 00 02 91 08 		lb		r2,KeyState2
009960 0C 02 03 04 00 		and		r3,r2,#$04				; is it CTRL code ?
009965 58 03 80 09 00 		brz		r3,.0009
00996A 0C 01 01 7F 00 		and		r1,r1,#$7F
009970 FD 09 00 00 00 		lbu		r1,keybdControlCodes[r1]
009975 81 01 01 01 DD 
00997A 46 00 BA 09 00 		bra		.0008
                        	.0009:
009980 80 00 02 91 08 		lb		r2,KeyState2
009985 0C 02 03 01 00 		and		r3,r2,#$01				; is it shift down ?
00998A 58 03 A0 09 00 		brz		r3,.0007
009990 FD 09 00 00 00 		lbu		r1,shiftedScanCodes[r1]
009995 81 01 01 01 CD 
00999A 46 00 BA 09 00 		bra		.0008
                        	.0007:
0099A0 FD 09 00 00 00 		lbu		r1,unshiftedScanCodes[r1]
0099A5 81 01 01 01 BD 
0099AA 16 02 02 00 00 		ldi		r2,#2
0099B0 FD C0 FD 0F 00 		sb		r2,LEDS
0099B5 A0 00 02 01 60 
                        	.0008:
0099BA 16 02 03 00 00 		ldi		r2,#3
0099C0 FD C0 FD 0F 00 		sb		r2,LEDS
0099C5 A0 00 02 01 60 
0099CA A7 03 02 00 00 		pop		r3/r2
0099D0 60 00 00 00 00 		rts
.doKeyup:
0099D5 16 01 FF FF FF 		ldi		r1,#-1
0099DA A0 00 01 81 08 		sb		r1,KeyState1
0099E0 46 00 8A 08 00 		bra		.0003
                        	.doExtend:
0099E5 81 00 01 91 08 		lbu		r1,KeyState2
0099EA 0D 01 01 80 00 		or		r1,r1,#$80
0099F0 A0 00 01 91 08 		sb		r1,KeyState2
0099F5 46 00 8A 08 00 		bra		.0003
                        	.doCtrl:
0099FA 80 00 01 81 08 		lb		r1,KeyState1
009A00 A0 00 00 81 08 		sb		r0,KeyState1
009A05 45 01 20 0A 00 		bpl		r1,.0004
009A0A 80 00 01 91 08 		lb		r1,KeyState2
009A10 0C 01 01 FB FF 		and		r1,r1,#-5
009A15 A0 00 01 91 08 		sb		r1,KeyState2
009A1A 46 00 8A 08 00 		bra		.0003
                        	.0004:
009A20 80 00 01 91 08 		lb		r1,KeyState2
009A25 0D 01 01 04 00 		or		r1,r1,#4
009A2A A0 00 01 91 08 		sb		r1,KeyState2
009A30 46 00 8A 08 00 		bra		.0003
                        	.doShift:
009A35 80 00 01 81 08 		lb		r1,KeyState1
009A3A A0 00 00 81 08 		sb		r0,KeyState1
009A40 45 01 5A 0A 00 		bpl		r1,.0005
009A45 80 00 01 91 08 		lb		r1,KeyState2
009A4A 0C 01 01 FE FF 		and		r1,r1,#-2
009A50 A0 00 01 91 08 		sb		r1,KeyState2
009A55 46 00 8A 08 00 		bra		.0003
                        	.0005:
009A5A 80 00 01 91 08 		lb		r1,KeyState2
009A60 0D 01 01 01 00 		or		r1,r1,#1
009A65 A0 00 01 91 08 		sb		r1,KeyState2
009A6A 46 00 8A 08 00 		bra		.0003
                        	.doNumLock:
009A70 80 00 01 01 00 		lb		r1,KeySTate2
009A75 0E 01 01 10 00 		eor		r1,r1,#16
009A7A A0 00 01 91 08 		sb		r1,KeyState2
009A80 56 00 C0 0A 00 		bsr		KeybdSetLEDStatus
009A85 46 00 8A 08 00 		bra		.0003
                        	.doCapsLock:
009A8A 80 00 01 91 08 		lb		r1,KeyState2
009A90 0E 01 01 20 00 		eor		r1,r1,#32
009A95 A0 00 01 91 08 		sb		r1,KeyState2
009A9A 56 00 C0 0A 00 		bsr		KeybdSetLEDStatus
009AA0 46 00 8A 08 00 		bra		.0003
                        	.doScrollLock:
009AA5 80 00 01 91 08 		lb		r1,KeyState2
009AAA 0E 01 01 40 00 		eor		r1,r1,#64
009AB0 A0 00 01 91 08 		sb		r1,KeyState2
009AB5 56 00 C0 0A 00 		bsr		KeybdSetLEDStatus
009ABA 46 00 8A 08 00 		bra		.0003
                        	KeybdSetLEDStatus:
009AC0 A6 02 03 00 00 		push	r2/r3
009AC5 A0 00 00 B1 08 		sb		r0,KeybdLEDs
009ACA 80 00 01 91 08 		lb		r1,KeyState2
009AD0 0C 01 02 10 00 		and		r2,r1,#16
009AD5 58 02 E5 0A 00 		brz		r2,.0002
009ADA 16 03 02 00 00 		ldi		r3,#2
009AE0 A0 00 03 B1 08 		sb		r3,KeybdLEDs
                        	.0002:
009AE5 0C 01 02 20 00 		and		r2,r1,#32
009AEA 58 02 00 0B 00 		brz		r2,.0003
009AF0 80 00 03 B1 08 		lb		r3,KeybdLEDs
009AF5 0D 03 03 04 00 		or		r3,r3,#4
009AFA A0 00 03 B1 08 		sb		r3,KeybdLEDs
                        	.0003:
009B00 0C 01 02 40 00 		and		r2,r1,#64
009B05 58 02 1A 0B 00 		brz		r2,.0004
009B0A 80 00 03 B1 08 		lb		r3,KeybdLEDs
009B10 0D 03 03 01 00 		or		r3,r3,#1
009B15 A0 00 03 B1 08 		sb		r3,KeybdLEDs
                        	.0004:
009B1A 16 01 ED 00 00 		ldi		r1,#$ED
009B20 56 00 5A 0B 00 		bsr		KeybdSendByte
009B25 56 00 2A 08 00 		bsr		KeybdWaitTx
009B2A 56 00 EA 07 00 		bsr		KeybdRecvByte
009B30 44 01 50 0B 00 		bmi		r1,.0001
009B35 06 01 F4 FA 00 		cmp		fl0,r1,#$FA
009B3A 80 00 01 B1 08 		lb		r1,KeybdLEDs
009B40 56 00 5A 0B 00 		bsr		KeybdSendByte
009B45 56 00 2A 08 00 		bsr		KeybdWaitTx
009B4A 56 00 EA 07 00 		bsr		KeybdRecvByte
                        	.0001:
009B50 A7 03 02 00 00 		pop		r3/r2
009B55 60 00 00 00 00 		rts

                        	KeybdSendByte:
009B5A A6 02 00 00 00 		push	r2
009B60 01 05 02 00 49 		mfspr	r2,cr0		; turn off tmr mode
009B65 A6 02 00 00 00 		push	r2
009B6A 01 00 05 00 48 		mtspr	cr0,r0
009B70 FD C0 FD 0F 00 		sb		r1,KEYBD
009B75 A0 00 01 01 00 
009B7A A7 02 00 00 00 		pop		r2
009B80 01 02 05 00 48 		mtspr	cr0,r2
009B85 A7 02 00 00 00 		pop		r2
009B8A 60 00 00 00 00 		rts
	
                        	Wait10ms:
009B90 A6 03 04 00 00 		push	r3/r4
009B95 01 00 03 00 49 		mfspr	r3,tick					; get orginal count
                        	.0001:
009B9A 01 00 04 00 49 		mfspr	r4,tick
009BA0 02 04 03 04 05 		sub		r4,r4,r3
009BA5 44 04 BA 0B 00 		brmi	r4,.0002				; shouldn't be -ve unless counter overflowed
009BAA FD 03 00 00 00 		cmp		fl0,r4,#250000			; about 10ms at 25 MHz
009BB0 06 04 F4 90 D0 
009BB5 4F F4 9A 0B 00 		blo		fl0,.0001
                        	.0002:
009BBA A7 04 03 00 00 		pop		r4/r3
009BC0 60 00 00 00 00 		rts

                        		;--------------------------------------------------------------------------
                        		; PS2 scan codes to ascii conversion tables.
                        		;--------------------------------------------------------------------------
                        		;
009BC5 00 00 00 00 00 		align	1
009BCA 00 00 00 00 00 
                        	
                        	unshiftedScanCodes:
009BD0 2E A9 2E A5 A3 		.byte	$2e,$a9,$2e,$a5,$a3,$a1,$a2,$ac
009BD5 A1 A2 AC       
009BD8 2E AA A8 A6 A4 		.byte	$2e,$aa,$a8,$a6,$a4,$09,$60,$2e
009BDD 09 60 2E       
009BE0 2E 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$71,$31,$2e
009BE5 71 31 2E       
009BE8 2E 2E 7A 73 61 		.byte	$2e,$2e,$7a,$73,$61,$77,$32,$2e
009BED 77 32 2E       
009BF0 2E 63 78 64 65 		.byte	$2e,$63,$78,$64,$65,$34,$33,$2e
009BF5 34 33 2E       
009BF8 2E 20 76 66 74 		.byte	$2e,$20,$76,$66,$74,$72,$35,$2e
009BFD 72 35 2E       
009C00 2E 6E 62 68 67 		.byte	$2e,$6e,$62,$68,$67,$79,$36,$2e
009C05 79 36 2E       
009C08 2E 2E 6D 6A 75 		.byte	$2e,$2e,$6d,$6a,$75,$37,$38,$2e
009C0D 37 38 2E       
009C10 2E 2C 6B 69 6F 		.byte	$2e,$2c,$6b,$69,$6f,$30,$39,$2e
009C15 30 39 2E       
009C18 2E 2E 2F 6C 3B 		.byte	$2e,$2e,$2f,$6c,$3b,$70,$2d,$2e
009C1D 70 2D 2E       
009C20 2E 2E 27 2E 5B 		.byte	$2e,$2e,$27,$2e,$5b,$3d,$2e,$2e
009C25 3D 2E 2E       
009C28 AD 2E 0D 5D 2E 		.byte	$ad,$2e,$0d,$5d,$2e,$5c,$2e,$2e
009C2D 5C 2E 2E       
009C30 2E 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$08,$2e
009C35 2E 08 2E       
009C38 2E 95 2E 93 94 		.byte	$2e,$95,$2e,$93,$94,$2e,$2e,$2e
009C3D 2E 2E 2E       
009C40 98 7F 92 2E 91 		.byte	$98,$7f,$92,$2e,$91,$90,$1b,$af
009C45 90 1B AF       
009C48 AB 2E 97 2E 2E 		.byte	$ab,$2e,$97,$2e,$2e,$96,$ae,$2e
009C4D 96 AE 2E       
                        	
009C50 2E 2E 2E A7 2E 		.byte	$2e,$2e,$2e,$a7,$2e,$2e,$2e,$2e
009C55 2E 2E 2E       
009C58 2E 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
009C5D 2E 2E 2E       
009C60 2E 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
009C65 2E 2E 2E       
009C68 2E 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
009C6D 2E 2E 2E       
009C70 2E 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
009C75 2E 2E 2E       
009C78 2E 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
009C7D 2E 2E 2E       
009C80 2E 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
009C85 2E 2E 2E       
009C88 2E 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
009C8D 2E 2E 2E       
009C90 2E 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
009C95 2E 2E 2E       
009C98 2E 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
009C9D 2E 2E 2E       
009CA0 2E 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
009CA5 2E 2E 2E       
009CA8 2E 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
009CAD 2E 2E 2E       
009CB0 2E 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
009CB5 2E 2E 2E       
009CB8 2E 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
009CBD 2E 2E 2E       
009CC0 2E 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
009CC5 2E 2E 2E       
009CC8 2E 2E FA 2E 2E 		.byte	$2e,$2e,$fa,$2e,$2e,$2e,$2e,$2e
009CCD 2E 2E 2E       
                        	
                        	shiftedScanCodes:
009CD0 2E 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
009CD5 2E 2E 2E       
009CD8 2E 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$09,$7e,$2e
009CDD 09 7E 2E       
009CE0 2E 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$51,$21,$2e
009CE5 51 21 2E       
009CE8 2E 2E 5A 53 41 		.byte	$2e,$2e,$5a,$53,$41,$57,$40,$2e
009CED 57 40 2E       
009CF0 2E 43 58 44 45 		.byte	$2e,$43,$58,$44,$45,$24,$23,$2e
009CF5 24 23 2E       
009CF8 2E 20 56 46 54 		.byte	$2e,$20,$56,$46,$54,$52,$25,$2e
009CFD 52 25 2E       
009D00 2E 4E 42 48 47 		.byte	$2e,$4e,$42,$48,$47,$59,$5e,$2e
009D05 59 5E 2E       
009D08 2E 2E 4D 4A 55 		.byte	$2e,$2e,$4d,$4a,$55,$26,$2a,$2e
009D0D 26 2A 2E       
009D10 2E 3C 4B 49 4F 		.byte	$2e,$3c,$4b,$49,$4f,$29,$28,$2e
009D15 29 28 2E       
009D18 2E 3E 3F 4C 3A 		.byte	$2e,$3e,$3f,$4c,$3a,$50,$5f,$2e
009D1D 50 5F 2E       
009D20 2E 2E 22 2E 7B 		.byte	$2e,$2e,$22,$2e,$7b,$2b,$2e,$2e
009D25 2B 2E 2E       
009D28 2E 2E 0D 7D 2E 		.byte	$2e,$2e,$0d,$7d,$2e,$7c,$2e,$2e
009D2D 7C 2E 2E       
009D30 2E 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$08,$2e
009D35 2E 08 2E       
009D38 2E 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
009D3D 2E 2E 2E       
009D40 2E 7F 2E 2E 2E 		.byte	$2e,$7f,$2e,$2e,$2e,$2e,$1b,$2e
009D45 2E 1B 2E       
009D48 2E 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
009D4D 2E 2E 2E       
                        	
009D50 2E 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
009D55 2E 2E 2E       
009D58 2E 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
009D5D 2E 2E 2E       
009D60 2E 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
009D65 2E 2E 2E       
009D68 2E 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
009D6D 2E 2E 2E       
009D70 2E 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
009D75 2E 2E 2E       
009D78 2E 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
009D7D 2E 2E 2E       
009D80 2E 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
009D85 2E 2E 2E       
009D88 2E 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
009D8D 2E 2E 2E       
009D90 2E 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
009D95 2E 2E 2E       
009D98 2E 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
009D9D 2E 2E 2E       
009DA0 2E 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
009DA5 2E 2E 2E       
009DA8 2E 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
009DAD 2E 2E 2E       
009DB0 2E 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
009DB5 2E 2E 2E       
009DB8 2E 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
009DBD 2E 2E 2E       
009DC0 2E 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
009DC5 2E 2E 2E       
009DC8 2E 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
009DCD 2E 2E 2E       
                        	
                        	; control
                        	keybdControlCodes:
009DD0 2E 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
009DD5 2E 2E 2E       
009DD8 2E 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$09,$7e,$2e
009DDD 09 7E 2E       
009DE0 2E 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$11,$21,$2e
009DE5 11 21 2E       
009DE8 2E 2E 1A 13 01 		.byte	$2e,$2e,$1a,$13,$01,$17,$40,$2e
009DED 17 40 2E       
009DF0 2E 03 18 04 05 		.byte	$2e,$03,$18,$04,$05,$24,$23,$2e
009DF5 24 23 2E       
009DF8 2E 20 16 06 14 		.byte	$2e,$20,$16,$06,$14,$12,$25,$2e
009DFD 12 25 2E       
009E00 2E 0E 02 08 07 		.byte	$2e,$0e,$02,$08,$07,$19,$5e,$2e
009E05 19 5E 2E       
009E08 2E 2E 0D 0A 15 		.byte	$2e,$2e,$0d,$0a,$15,$26,$2a,$2e
009E0D 26 2A 2E       
009E10 2E 3C 0B 09 0F 		.byte	$2e,$3c,$0b,$09,$0f,$29,$28,$2e
009E15 29 28 2E       
009E18 2E 3E 3F 0C 3A 		.byte	$2e,$3e,$3f,$0c,$3a,$10,$5f,$2e
009E1D 10 5F 2E       
009E20 2E 2E 22 2E 7B 		.byte	$2e,$2e,$22,$2e,$7b,$2b,$2e,$2e
009E25 2B 2E 2E       
009E28 2E 2E 0D 7D 2E 		.byte	$2e,$2e,$0d,$7d,$2e,$7c,$2e,$2e
009E2D 7C 2E 2E       
009E30 2E 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$08,$2e
009E35 2E 08 2E       
009E38 2E 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
009E3D 2E 2E 2E       
009E40 2E 7F 2E 2E 2E 		.byte	$2e,$7f,$2e,$2e,$2e,$2e,$1b,$2e
009E45 2E 1B 2E       
009E48 2E 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
009E4D 2E 2E 2E       
                        	
                        	keybdExtendedCodes:
009E50 2E 2E 2E 2E A3 		.byte	$2e,$2e,$2e,$2e,$a3,$a1,$a2,$2e
009E55 A1 A2 2E       
009E58 2E 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
009E5D 2E 2E 2E       
009E60 2E 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
009E65 2E 2E 2E       
009E68 2E 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
009E6D 2E 2E 2E       
009E70 2E 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
009E75 2E 2E 2E       
009E78 2E 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
009E7D 2E 2E 2E       
009E80 2E 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
009E85 2E 2E 2E       
009E88 2E 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
009E8D 2E 2E 2E       
009E90 2E 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
009E95 2E 2E 2E       
009E98 2E 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
009E9D 2E 2E 2E       
009EA0 2E 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
009EA5 2E 2E 2E       
009EA8 2E 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
009EAD 2E 2E 2E       
009EB0 2E 2E 2E 2E 2E 		.byte	$2e,$2e,$2e,$2e,$2e,$2e,$2e,$2e
009EB5 2E 2E 2E       
009EB8 2E 95 2E 93 94 		.byte	$2e,$95,$2e,$93,$94,$2e,$2e,$2e
009EBD 2E 2E 2E       
009EC0 98 99 92 2E 91 		.byte	$98,$99,$92,$2e,$91,$90,$2e,$2e
009EC5 90 2E 2E       
009EC8 2E 2E 97 2E 2E 		.byte	$2e,$2e,$97,$2e,$2e,$96,$2e,$2e
009ECD 96 2E 2E       
                        	
                        		align	16                        	
                        	MRTest:
009ED0 16 01 00 00 00 		ldi		r1,#0
009ED5 16 03 FF 00 00 		ldi		r3,#255
                        	.0001:
009EDA 02 03 03 04 50 	    shl     r4,r3,#3
009EE0 FD 00 00 10 00 		sw		r3,$100000[r0+r4]
009EE5 AB 00 04 03 04 
009EEA 5A 03 DA 0E 00 		dbnz	r3,.0001
009EF0 16 01 00 00 10 		ldi		r1,#$100000
009EF5 9C 02 FF 01 01 		lmr		r2,r255,[r1]
009EFA 16 01 00 00 12 		ldi		r1,#$120000
009F00 BC 02 FF 01 01 		smr		r2,r255,[r1]
009F05 50 E0 90 00 00 		jmp		mon1
                        			
                        	; ============================================================================
                        	; ============================================================================
                        	;------------------------------------------------------------------------------
                        	; Initialize the SD card
                        	; Returns
                        	; acc = 0 if successful, 1 otherwise
                        	; Z=1 if successful, otherwise Z=0
                        	;------------------------------------------------------------------------------
                        	;
                        	SDInit:
009F0A A6 02 00 00 00 		push	r2
009F10 01 05 02 00 49 		mfspr	r2,cr0		; turn off tmr
009F15 A6 02 00 00 00 		push	r2
009F1A 01 00 05 00 48 		mtspr	cr0,r0
009F20 FD FF 00 00 00 		ldi		r2,#SPIMASTER
009F25 16 02 00 05 DC 
009F2A 16 01 01 00 00 		ldi		r1,#SPI_INIT_SD
009F30 A0 02 01 81 00 		sb		r1,SPI_TRANS_TYPE_REG[r2]
009F35 16 01 01 00 00 		ldi		r1,#SPI_TRANS_START
009F3A A0 02 01 C1 00 		sb		r1,SPI_TRANS_CTRL_REG[r2]
009F40 EA EA EA EA EA 		nop
                        	.spi_init1
009F45 81 02 01 01 01 		lbu		r1,SPI_TRANS_STATUS_REG[r2]
009F4A 56 00 E0 0F 00 		bsr		spi_delay
009F50 06 01 F4 01 00 		cmp		fl0,r1,#SPI_TRANS_BUSY
009F55 40 F4 45 0F 00 		beq		fl0,.spi_init1
009F5A 81 02 01 41 01 		lbu		r1,SPI_TRANS_ERROR_REG[r2]
009F60 0C 01 01 03 00 		and		r1,r1,#3
009F65 06 01 F4 00 00 		cmp		fl0,r1,#SPI_INIT_NO_ERROR
009F6A 41 F4 8A 0F 00 		bne		fl0,.spi_error
009F70 A7 02 00 00 00 		pop		r2
009F75 01 02 05 00 48 		mtspr	cr0,r2
009F7A A7 02 00 00 00 		pop		r2
009F80 16 01 00 00 00 		ldi		r1,#E_Ok
009F85 60 00 00 00 00 		rts
.spi_error
009F8A 56 00 A5 FB FF 		bsr		DisplayByte
009F90 16 01 BA A6 00 		ldi		r1,#spi_init_error_msg
009F95 56 00 E5 FB FF 		bsr		DisplayString
009F9A 81 02 01 01 0C 		lbu		r1,SPI_RESP_BYTE1[r2]
009FA0 56 00 A5 FB FF 		bsr		DisplayByte
009FA5 81 02 01 41 0C 		lbu		r1,SPI_RESP_BYTE2[r2]
009FAA 56 00 A5 FB FF 		bsr		DisplayByte
009FB0 81 02 01 81 0C 		lbu		r1,SPI_RESP_BYTE3[r2]
009FB5 56 00 A5 FB FF 		bsr		DisplayByte
009FBA 81 02 01 C1 0C 		lbu		r1,SPI_RESP_BYTE4[r2]
009FC0 56 00 A5 FB FF 		bsr		DisplayByte
009FC5 A7 02 00 00 00 		pop		r2
009FCA 01 02 05 00 48 		mtspr	cr0,r2
009FD0 A7 02 00 00 00 		pop		r2
009FD5 16 01 01 00 00 		ldi		r1,#1
009FDA 60 00 00 00 00 		rts

                        	spi_delay:
009FE0 EA EA EA EA EA 		nop
009FE5 EA EA EA EA EA 		nop
009FEA 60 00 00 00 00 		rts

                        	SDReadSector:
009FF0 A6 02 03 04 05 		push	r2/r3/r4/r5
009FF5 A6 06 00 00 00 		push	r6
009FFA 01 05 06 00 49 		mfspr	r6,cr0
00A000 01 00 05 00 48 		mtspr	cr0,r0
00A005 FD FF 00 00 00 		ldi		r5,#SPIMASTER	
00A00A 16 05 00 05 DC 
00A010 A0 05 01 C1 01 		sb		r1,SPI_SD_SECT_7_0_REG[r5]
00A015 02 01 08 01 52 		shr		r1,r1,#8
00A01A A0 05 01 01 02 		sb		r1,SPI_SD_SECT_15_8_REG[r5]
00A020 02 01 08 01 52 		shr		r1,r1,#8
00A025 A0 05 01 41 02 		sb		r1,SPI_SD_SECT_23_16_REG[r5]
00A02A 02 01 08 01 52 		shr		r1,r1,#8
00A030 A0 05 01 81 02 		sb		r1,SPI_SD_SECT_31_24_REG[r5]
                        	
00A035 16 04 13 00 00 		ldi		r4,#19	; retry count
                        	
                        	.spi_read_retry:
                        		; Force the reciever fifo to be empty, in case a prior error leaves it
                        		; in an unknown state.
00A03A 16 01 01 00 00 		ldi		r1,#1
00A040 A0 05 01 01 05 		sb		r1,SPI_RX_FIFO_CTRL_REG[r5]
                        	
00A045 16 01 02 00 00 		ldi		r1,#RW_READ_SD_BLOCK
00A04A A0 05 01 81 00 		sb		r1,SPI_TRANS_TYPE_REG[r5]
00A050 16 01 01 00 00 		ldi		r1,#SPI_TRANS_START
00A055 A0 05 01 C1 00 		sb		r1,SPI_TRANS_CTRL_REG[r5]
00A05A EA EA EA EA EA 		nop
                        	.spi_read_sect1:
00A060 81 05 01 01 01 		lbu		r1,SPI_TRANS_STATUS_REG[r5]
00A065 56 00 E0 FF FF 		bsr		spi_delay			; just a delay between consecutive status reg reads
00A06A 06 01 F4 01 00 		cmp		fl0,r1,#SPI_TRANS_BUSY
00A070 40 F4 60 00 00 		beq		fl0,.spi_read_sect1
00A075 81 05 01 41 01 		lbu		r1,SPI_TRANS_ERROR_REG[r5]
00A07A 02 01 02 01 52 		shr		r1,r1,#2
00A080 0C 01 01 03 00 		and		r1,r1,#3
00A085 06 01 F4 00 00 		cmp		fl0,r1,#SPI_READ_NO_ERROR
00A08A 41 F4 C0 00 00 		bne		fl0,.spi_read_error
00A090 16 03 FF 01 00 		ldi		r3,#511		; read 512 bytes from fifo
                        	.spi_read_sect2:
00A095 81 05 01 01 04 		lbu		r1,SPI_RX_FIFO_DATA_REG[r5]
00A09A 01 06 05 00 48 		mtspr	cr0,r6
00A0A0 A0 02 01 01 00 		sb		r1,[r2]		; store byte in buffer using tmr
00A0A5 01 00 05 00 48 		mtspr	cr0,r0
00A0AA 04 02 02 01 00 		add		r2,r2,#1
00A0B0 5A 03 95 00 00 		dbnz	r3,.spi_read_sect2
00A0B5 16 01 00 00 00 		ldi		r1,#0
00A0BA 46 00 DA 00 00 		bra		.spi_read_ret
                        	.spi_read_error:
00A0C0 5A 04 3A 00 00 		dbnz	r4,.spi_read_retry
00A0C5 56 00 A5 EB FF 		bsr		DisplayByte
00A0CA 16 01 FA A6 00 		ldi		r1,#spi_read_error_msg
00A0D0 56 00 E5 EB FF 		bsr		DisplayString
00A0D5 16 01 01 00 00 		ldi		r1,#1
                        	.spi_read_ret:
00A0DA 01 06 05 00 48 		mtspr	cr0,r6
00A0E0 A7 06 00 00 00 		pop		r6
00A0E5 A7 05 04 03 02 		pop		r5/r4/r3/r2
00A0EA 60 00 00 00 00 		rts

                        	BlocksToSectors:
00A0F0 02 01 01 01 50 		shl		r1,r1,#1			; 1k blocks = 2 sectors
00A0F5 60 00 00 00 00 		rts

                        	;------------------------------------------------------------------------------
                        	; SDReadBlocks:
                        	;
                        	; Registers Affected: r1-r5
                        	; Parameters:
                        	;	r1 = pointer to DCB
                        	;	r3 = block number
                        	;	r4 = number of blocks
                        	;	r5 = pointer to data area
                        	;------------------------------------------------------------------------------
                        	
                        	SDReadBlocks:
00A0FA 60 00 00 00 00 		rts

                        	SDWriteBlocks:
00A100 60 00 00 00 00 		rts

                        	;------------------------------------------------------------------------------
                        	; SDWriteSector:
                        	;
                        	; r1= sector number to write
                        	; r2= address to get data from
                        	; Returns:
                        	; r1 = 0 if successful
                        	;------------------------------------------------------------------------------
                        	;
                        	SDWriteSector:
00A105 A6 02 03 04 05 		push	r2/r3/r4/r5
00A10A A6 01 00 00 00 		push	r1
00A110 01 05 05 00 49 		mfspr	r5,cr0
00A115 01 00 05 00 48 		mtspr	cr0,r0
00A11A FD FF 00 00 00 		ldi		r4,#SPIMASTER
00A120 16 04 00 05 DC 
                        	
                        		; Force the transmitter fifo to be empty, in case a prior error leaves it
                        		; in an unknown state.
00A125 16 01 01 00 00 		ldi		r1,#1
00A12A A0 04 01 01 09 		sb		r1,SPI_TX_FIFO_CTRL_REG[r4]
00A130 EA EA EA EA EA 		nop			; give I/O time to respond
00A135 EA EA EA EA EA 		nop
                        	
                        		; now fill up the transmitter fifo
00A13A 16 03 FF 01 00 		ldi		r3,#511
                        	.spi_write_sect1:
00A140 01 05 05 00 48 		mtspr	cr0,r5
00A145 81 02 01 01 00 		lbu		r1,[r2]
00A14A 01 00 05 00 48 		mtspr	cr0,r0
00A150 A0 04 01 01 08 		sb		r1,SPI_TX_FIFO_DATA_REG[r4]
00A155 EA EA EA EA EA 		nop			; give the I/O time to respond
00A15A EA EA EA EA EA 		nop
00A160 04 02 02 01 00 		add		r2,r2,#1
00A165 5A 03 40 01 00 		dbnz	r3,.spi_write_sect1
                        	
                        		; set the sector number in the spi master address registers
00A16A A7 01 00 00 00 		pop		r1
00A170 A0 04 01 C1 01 		sb		r1,SPI_SD_SECT_7_0_REG[r4]
00A175 02 01 08 01 52 		shr		r1,r1,#8
00A17A A0 04 01 01 02 		sb		r1,SPI_SD_SECT_15_8_REG[r4]
00A180 02 01 08 01 52 		shr		r1,r1,#8
00A185 A0 04 01 41 02 		sb		r1,SPI_SD_SECT_23_16_REG[r4]
00A18A 02 01 08 01 52 		shr		r1,r1,#8
00A190 A0 04 01 81 02 		sb		r1,SPI_SD_SECT_31_24_REG[r4]
                        	
                        		; issue the write command
00A195 16 01 03 00 00 		ldi		r1,#RW_WRITE_SD_BLOCK
00A19A A0 04 01 81 00 		sb		r1,SPI_TRANS_TYPE_REG[r4]
00A1A0 16 01 01 00 00 		ldi		r1,#SPI_TRANS_START
00A1A5 A0 04 01 C1 00 		sb		r1,SPI_TRANS_CTRL_REG[r4]
00A1AA EA EA EA EA EA 		nop
                        	.spi_write_sect2:
00A1B0 81 04 01 01 01 		lbu		r1,SPI_TRANS_STATUS_REG[r4]
00A1B5 EA EA EA EA EA 		nop							; just a delay between consecutive status reg reads
00A1BA EA EA EA EA EA 		nop
00A1C0 06 01 F4 01 00 		cmp		fl0,r1,#SPI_TRANS_BUSY
00A1C5 40 F4 B0 01 00 		beq		fl0,.spi_write_sect2
00A1CA 81 04 01 41 01 		lbu		r1,SPI_TRANS_ERROR_REG[r4]
00A1D0 02 01 04 01 52 		shr		r1,r1,#4
00A1D5 0C 01 01 03 00 		and		r1,r1,#3
00A1DA 06 01 F4 00 00 		cmp		fl0,r1,#SPI_WRITE_NO_ERROR
00A1E0 41 F4 F0 01 00 		bne		fl0,.spi_write_error
00A1E5 16 01 00 00 00 		ldi		r1,#0
00A1EA 46 00 05 02 00 		bra		.spi_write_ret
                        	.spi_write_error:
00A1F0 56 00 A5 EB FF 		bsr		DisplayByte
00A1F5 16 01 10 A7 00 		ldi		r1,#spi_write_error_msg
00A1FA 56 00 E5 EB FF 		bsr		DisplayString
00A200 16 01 01 00 00 		ldi		r1,#1
                        	
                        	.spi_write_ret:
00A205 01 05 05 00 48 		mtspr	cr0,r5
00A20A A7 05 04 03 02 		pop		r5/r4/r3/r2
00A210 60 00 00 00 00 		rts

                        	;------------------------------------------------------------------------------
                        	; SDReadMultiple: read multiple sectors
                        	;
                        	; r1= sector number to read
                        	; r2= address to write data
                        	; r3= number of sectors to read
                        	;
                        	; Returns:
                        	; r1 = 0 if successful
                        	;
                        	;------------------------------------------------------------------------------
                        	
                        	SDReadMultiple:
00A215 A6 04 00 00 00 		push	r4
00A21A 16 04 00 00 00 		ldi		r4,#0
                        	.spi_rm1:
00A220 A6 01 00 00 00 		push	r1
00A225 56 00 F0 FF FF 		bsr		SDReadSector
00A22A 02 04 01 04 04 		add		r4,r4,r1
00A230 04 02 02 00 02 		add		r2,r2,#512
00A235 A7 01 00 00 00 		pop		r1
00A23A 04 01 01 01 00 		add		r1,r1,#1
00A240 05 03 03 01 00 		sub		r3,r3,#1
00A245 59 03 20 02 00 		brnz	r3,.spi_rm1
00A24A 01 04 01 00 04 		mov		r1,r4
00A250 A7 04 00 00 00 		pop		r4
00A255 60 00 00 00 00 		rts

                        	;------------------------------------------------------------------------------
                        	; SD write multiple sector
                        	;
                        	; r1= sector number to write
                        	; r2= address to get data from
                        	; r3= number of sectors to write
                        	;
                        	; Returns:
                        	; r1 = 0 if successful
                        	;------------------------------------------------------------------------------
                        	;
                        	SDWriteMultiple:
00A25A A6 04 00 00 00 		push	r4
00A260 16 04 00 00 00 		ldi		r4,#0
                        	.spi_wm1:
00A265 A6 01 00 00 00 		push	r1
00A26A 56 00 05 01 00 		bsr		SDWriteSector
00A270 02 04 01 04 04 		add		r4,r4,r1		; accumulate an error count
00A275 04 02 02 00 02 		add		r2,r2,#512		; 512 bytes per sector
00A27A A7 01 00 00 00 		pop		r1
00A280 04 01 01 01 00 		add		r1,r1,#1
00A285 05 03 03 01 00 		sub		r3,r3,#1
00A28A 59 03 65 02 00 		brnz	r3,.spi_wm1
00A290 01 04 01 00 04 		mov		r1,r4
00A295 A7 04 00 00 00 		pop		r4
00A29A 60 00 00 00 00 		rts
	
                        	SDReadPart:
00A2A0 A6 02 03 00 00 		push	r2/r3
00A2A5 A2 00 00 C1 08 		sh		r0,startSector					; default starting sector
00A2AA 16 01 00 00 00 		ldi		r1,#0							; r1 = sector number (#0)
00A2B0 16 02 00 00 07 		ldi		r2,#BYTE_SECTOR_BUF				; r2 = target address (word to byte address)
00A2B5 56 00 F0 FF FF 		bsr		SDReadSector
00A2BA 59 01 30 03 00 		brnz	r1,.spi_rp1
00A2C0 FD 70 00 00 00 		lcu		r1,BYTE_SECTOR_BUF+$1C8
00A2C5 83 00 01 81 1C 
00A2CA FD 70 00 00 00 		lcu		r3,BYTE_SECTOR_BUF+$1C6
00A2D0 83 00 03 61 1C 
00A2D5 02 01 10 01 50 		shl		r1,r1,#16
00A2DA 02 01 03 01 21 		or		r1,r1,r3
00A2E0 A2 00 01 C1 08 		sh		r1,startSector					; r1 = 0, for okay status
00A2E5 56 00 85 EB FF 		bsr		DisplayHalf
00A2EA 56 00 1A EC FF 		bsr		CRLF
00A2F0 FD 70 00 00 00 		lcu		r1,BYTE_SECTOR_BUF+$1CC
00A2F5 83 00 01 C1 1C 
00A2FA FD 70 00 00 00 		lcu		r3,BYTE_SECTOR_BUF+$1CA
00A300 83 00 03 A1 1C 
00A305 02 01 10 01 50 		shl		r1,r1,#16
00A30A 02 01 03 01 21 		or		r1,r1,r3
00A310 A2 00 01 01 09 		sh		r1,disk_size					; r1 = 0, for okay status
00A315 56 00 85 EB FF 		bsr		DisplayHalf
00A31A 56 00 1A EC FF 		bsr		CRLF
00A320 A7 03 02 00 00 		pop		r3/r2
00A325 16 01 00 00 00 		ldi		r1,#0
00A32A 60 00 00 00 00 		rts
.spi_rp1:
00A330 A7 03 02 00 00 		pop		r3/r2
00A335 16 01 01 00 00 		ldi		r1,#1
00A33A 60 00 00 00 00 		rts

                        	SDDiskSize:
00A340 85 00 01 01 09 		lhu		r1,disk_size
00A345 60 00 00 00 00 		rts

                        	;------------------------------------------------------------------------------
                        	; Read the boot sector from the disk.
                        	; Make sure it's the boot sector by looking for the signature bytes 'EB' and '55AA'.
                        	; Returns:
                        	; r1 = 0 means this card is bootable
                        	; r1 = 1 means a read error occurred
                        	; r1 = 2 means the card is not bootable
                        	;------------------------------------------------------------------------------
                        	
                        	SDReadBoot:
00A34A A6 02 03 05 00 		push	r2/r3/r5
00A350 85 00 01 C1 08 		lhu		r1,startSector				; r1 = sector number
00A355 16 02 00 00 07 		ldi		r2,#BYTE_SECTOR_BUF			; r2 = target address
00A35A 56 00 F0 FF FF 		bsr		SDReadSector
00A360 59 01 C0 03 00 		brnz	r1,spi_read_boot_err
00A365 FD 70 00 00 00 		lbu		r1,BYTE_SECTOR_BUF
00A36A 81 00 01 01 00 
00A370 06 01 F4 EB 00 		cmp		fl0,r1,#$EB
00A375 41 F4 D0 03 00 		bne		fl0,spi_eb_err
                        	spi_read_boot2:
00A37A 16 01 EA A3 00 		ldi		r1,#msgFoundEB
00A380 56 00 15 EC FF 		bsr		DisplayStringCRLF
00A385 FD 70 00 00 00 		lbu		r1,BYTE_SECTOR_BUF+$1FE		; check for 0x55AA signature
00A38A 81 00 01 E1 1F 
00A390 06 01 F4 55 00 		cmp		fl0,r1,#$55
00A395 41 F4 D0 03 00 		bne		fl0,spi_eb_err
00A39A FD 70 00 00 00 		lbu		r1,BYTE_SECTOR_BUF+$1FF		; check for 0x55AA signature
00A3A0 81 00 01 F1 1F 
00A3A5 06 01 F4 AA 00 		cmp		fl0,r1,#$AA
00A3AA 41 F4 D0 03 00 		bne		fl0,spi_eb_err
00A3B0 A7 05 03 02 00 		pop		r5/r3/r2
00A3B5 16 01 00 00 00 		ldi		r1,#0						; r1 = 0, for okay status
00A3BA 60 00 00 00 00 		rts
spi_read_boot_err:
00A3C0 A7 05 03 02 00 		pop		r5/r3/r2
00A3C5 16 01 01 00 00 		ldi		r1,#1
00A3CA 60 00 00 00 00 		rts
spi_eb_err:
00A3D0 16 01 FA A3 00 		ldi		r1,#msgNotFoundEB
00A3D5 56 00 15 EC FF 		bsr		DisplayStringCRLF
00A3DA A7 05 03 02 00 		pop		r5/r3/r2
00A3E0 16 01 02 00 00 		ldi		r1,#2
00A3E5 60 00 00 00 00 		rts

                        	msgFoundEB:
00A3EA 46 6F 75 6E 64 		db	"Found EB code.",0
00A3F0 45 42 20 63 6F 
00A3F5 64 65 2E 00    
00A3F9 00             	msgNotFoundEB:
00A3FA 45 42 2F 35 35 		db	"EB/55AA Code missing.",0
00A400 41 20 43 6F 64 
00A405 65 20 6D 69 73 
00A40A 73 69 6E 67 2E 
                        	
                        	
                        	; Load the root directory from disk
                        	; r2 = where to place root directory in memory
                        	;
                        	loadBootFile:
00A410 FD 70 00 00 00 		lbu		r1,BYTE_SECTOR_BUF+BSI_SecPerFAT+1			; sectors per FAT
00A415 81 00 01 71 01 
00A41A 02 01 08 02 50 		shl		r2,r1,#8
00A420 FD 70 00 00 00 		lbu		r1,BYTE_SECTOR_BUF+BSI_SecPerFAT
00A425 81 00 01 61 01 
00A42A 02 02 01 01 21 		or		r1,r2,r1
00A430 59 01 40 04 00 		brnz	r1,loadBootFile7
00A435 FD 70 00 00 00 		lhu		r1,BYTE_SECTOR_BUF+$24			; sectors per FAT, FAT32
00A43A 85 00 01 41 02 
                        	loadBootFile7:
00A440 FD 70 00 00 00 		lbu		r4,BYTE_SECTOR_BUF+$10			; number of FATs
00A445 81 00 04 01 01 
00A44A 02 01 04 03 07 		mul		r3,r1,r4						; offset
00A450 FD 70 00 00 00 		lcu		r1,BYTE_SECTOR_BUF+$E			; r1 = # reserved sectors before FAT
00A455 83 00 01 E1 00 
00A45A FD 70 00 00 00 		lbu     r13,BYTE_SECTOR_BUF+$D          ; r13 = sectors per cluster
00A460 81 00 0D D1 00 
00A465 02 03 01 03 04 		add		r3,r3,r1						; r3 = root directory sector number
00A46A 85 00 06 C1 08 		lhu		r6,startSector
00A470 02 03 06 05 04 		add		r5,r3,r6						; r5 = root directory sector number
00A475 FD 70 00 00 00 		lbu     r7,BYTE_SECTOR_BUF+BSI_RootDirEnts
00A47A 81 00 07 11 01 
00A480 FD 70 00 00 00 		lbu     r8,BYTE_SECTOR_BUF+BSI_RootDirEnts+1
00A485 81 00 08 21 01 
00A48A 02 08 08 08 50 		shl     r8,r8,#8
00A490 02 07 08 07 21 		or      r7,r7,r8                        ; r7 = #root directory entries
                        		; /16 is sector size / directory entry size (512 / 32) = 16
00A495 02 07 04 07 52 		shru    r7,r7,#4                        ; r7 = #sectors for directory (likely 32)
00A49A 02 07 05 08 04 		add     r8,r7,r5                        ; r8 = start of data area (cluster #2)
00A4A0 01 05 01 00 04 	    mov      r1,r5                          ; r1 = root directory sector
00A4A5 16 02 00 10 07 	    ldi      r2,#ROOTDIR_BUF                ; r2 = where to place directory info
00A4AA 01 07 03 00 04 	    mov      r3,r7                          ; r3 = number of sectors in roor dir
00A4B0 56 00 15 02 00 	    bsr      SDReadMultiple                 ; read it
                        	
00A4B5 02 07 04 07 50 	    shl      r7,r7,#4                       ; r7 = # root directory entries
00A4BA 01 07 03 00 04 	    mov      r3,r7                          ; r3 = # root directory entries
00A4C0 05 03 03 01 00 	    sub      r3,r3,#1                       ; r3 = count which is one less
00A4C5 16 02 00 10 07 	    ldi      r2,#ROOTDIR_BUF                ; r2 = where to start search
                        	.0002:
00A4CA A0 02 00 B1 00 	    sb       r0,11[r2]
00A4D0 86 02 01 01 00 	    lw       r1,[r2]
00A4D5 FD 53 20 20 20 	    cmp      flg0,r1,#$2020202020534F44     ; look for "DOS"
00A4DA FE 20 20 00 00 
00A4E0 06 01 F4 44 4F 
00A4E5 41 F4 2A 05 00 	    bne      flg0,.0001
00A4EA 83 02 01 A1 01 	    lcu      r1,$1A[r2]                     ; r1 = starting cluster
00A4F0 85 02 0A C1 01 	    lhu      r10,$1C[r2]                    ; r10 = size of file
00A4F5 05 01 01 02 00 	    sub      r1,r1,#2                       ; clusters start at 2
00A4FA 02 01 0D 09 07 	    mul      r9,r1,r13                      ; r9 = clusters to sectors
00A500 02 09 08 09 04 	    add      r9,r9,r8                       ; r9 = starting sector of file
00A505 01 09 01 00 04 	    mov      r1,r9
00A50A 16 02 00 0E 07 	    ldi      r2,#PROG_LOAD_AREA-$200        ; $200 is size of ELF header
00A510 01 0A 03 00 04 	    mov      r3,r10
00A515 04 03 03 FF 01 	    add      r3,r3,#511                     ; round up to next sector
00A51A 02 03 09 03 52 	    shru     r3,r3,#9                       ; divide by sector size (512)
00A520 56 00 15 02 00 	    bsr      SDReadMultiple
00A525 46 00 AA 05 00 	    bra      loadBootFile3
                        	.0001:
00A52A 04 02 02 20 00 	    add      r2,r2,#32                      ; directory entry size
00A530 5A 03 CA 04 00 	    dbnz     r3,.0002
00A535 16 01 25 A7 00 	    ldi      r1,#msgDOSNotFound
00A53A 56 00 E5 EB FF 	    bsr      DisplayString
00A540 46 00 E0 F0 1F 	    bra      mon1
                        	
                        		;lbu		r1,BYTE_SECTOR_BUF+$D			; sectors per cluster
00A545 02 07 05 03 04 		add		r3,r7,r5						; r3 = start of data area
00A54A 01 03 01 00 04 		mov     r1,r3
00A550 56 00 85 EB FF 		bsr     DisplayHalf
00A555 56 00 1A EC FF 		bsr     CRLF
00A55A 46 00 60 05 00 		bra		loadBootFile6
                        	loadBootFile6:
                        		; For now we cheat and just go directly to sector 512.
00A560 46 00 65 05 00 		bra		loadBootFileTmp
                        	
                        	loadBootFileTmp:
                        		; We load the number of sectors per cluster, then load a single cluster of the file.
                        		; This is 16kib
00A565 01 03 05 00 04 		mov		r5,r3							; r5 = start sector of data area	
00A56A 16 02 00 0E 07 		ldi		r2,#PROG_LOAD_AREA-0x200    	; where to place file in memory (200 is ELF header size)
00A570 FD 70 00 00 00 		lbu		r3,BYTE_SECTOR_BUF+$D			; sectors per cluster
00A575 81 00 03 D1 00 
00A57A 17 03 03 10 00 		mului	r3,r3,#16						; read 16 clusters (256kb)
00A580 05 03 03 01 00 		sub		r3,r3,#1
                        	loadBootFile1:
00A585 16 01 2E 00 00 		ldi		r1,#'.'
00A58A 56 00 95 ED FF 		bsr		DisplayChar
00A590 01 05 01 00 04 		mov		r1,r5							; r1=sector to read
00A595 56 00 F0 FF FF 		bsr		SDReadSector
00A59A 04 05 05 01 00 		add		r5,r5,#1						; r5 = next sector
00A5A0 04 02 02 00 02 		add		r2,r2,#512
00A5A5 5A 03 85 05 00 		dbnz	r3,loadBootFile1
                        	loadBootFile3:
00A5AA FD 71 00 00 00 		lhu		r1,PROG_LOAD_AREA		; make sure it's bootable
00A5B0 85 00 01 01 00 
00A5B5 FD 4F 54 00 00 		cmp		fl0,r1,#$544F4F42
00A5BA 06 01 F4 42 4F 
00A5C0 41 F4 E0 05 00 		bne		fl0,loadBootFile2
00A5C5 16 01 7A A6 00 		ldi		r1,#msgJumpingToBoot
00A5CA 56 00 E5 EB FF 		bsr		DisplayString
00A5D0 46 00 0A 06 00 		bra     cpy_br_desc
00A5D5 51 00 11 07 00 		jsr		PROG_LOAD_AREA+$100
00A5DA 46 00 E0 F0 1F 		bra		mon1
                        	loadBootFile2:
00A5E0 16 01 8A A6 00 		ldi		r1,#msgNotBootable
00A5E5 56 00 E5 EB FF 		bsr		DisplayString
00A5EA 16 02 00 10 07 		ldi		r2,#PROG_LOAD_AREA
00A5F0 56 00 D5 F2 FF 		bsr		DisplayMemBytes
00A5F5 56 00 D5 F2 FF 		bsr		DisplayMemBytes
00A5FA 56 00 D5 F2 FF 		bsr		DisplayMemBytes
00A600 56 00 D5 F2 FF 		bsr		DisplayMemBytes
00A605 46 00 E0 F0 1F 		bra		mon1
                        	
                        	cpy_br_desc:
                        	; copy the BIOS descriptors to the first program descriptor area
00A60A 16 02 00 20 01 	    ldi     r2,#GDTBaseAddress
00A610 16 03 1F 00 00 	    ldi     r3,#31
                        	.lbf0001:
00A615 8E 02 03 04 07 	    lw      r4,[r2+r3*8]
00A61A FD 00 01 00 00 	    sw      r4,$100[r2+r3*8]
00A620 AB 02 03 04 07 
00A625 5A 03 15 06 00 	    dbnz    r3,.lbf0001
                        	; Set code segment base address
00A62A 16 01 00 10 07 	    ldi     r1,#PROG_LOAD_AREA
00A630 02 01 0C 01 52 	    shrui   r1,r1,#12
00A635 A3 02 01 01 1F 	    sw      r1,$1F0[r2]
                        	; Set data segment base address
00A63A A3 02 01 01 11 	    sw      r1,$110[r2]
00A640 A3 02 01 01 1E 	    sw      r1,$1E0[r2]
                        	
00A645 01 00 00 00 30 	    sei
00A64A 16 FF F8 FF 0F 	    ldi     sp,#$FFFF8   ; set stack pointer to the top of the program space
00A650 16 01 1E 00 00 	    ldi     r1,#$1E
00A655 01 01 2E 00 48 	    mtspr   ss,r1
00A65A 01 00 00 00 31 	    cli
00A660 16 01 11 00 00 	    ldi     r1,#$11
00A665 01 01 21 00 48 	    mtspr   ds,r1
00A66A 61 00 1F 00 00 	    jsp     r0,#$00001F
00A670 51 00 01 00 00 	    jsr     $100
                        	; Reset the bootrom stack and data segments
00A675 46 00 E0 F0 1F 	    bra     mon1
                        	
                        	    ; Save registers to TSS in blocks of 16 registers at a time so that
                        	    ; interrupt latency isn't adversely affected.
                        	;    ts:smr      r1,r15,$008
                        	;    ts:smr     r16,r31,$080
                        	;    ts:smr     r32,r47,$100
                        	;    ts:smr     r48,r63,$180
                        	;    ts:smr     r64,r79,$200
                        	;    ts:smr     r80,r95,$280
                        	;    ts:smr     r96,r111,$300
                        	;    ts:smr     r112,r127,$380
                        	;    ts:smr     r128,r143,$400
                        	;    ts:smr     r144,r159,$480
                        	;    ts:smr     r160,r175,$500
                        	;    ts:smr     r176,r191,$580
                        	;    ts:smr     r192,r207,$600
                        	;    ts:smr     r208,r223,$680
                        	;    ts:smr     r224,r239,$700
                        	;    ts:smr     r240,r255,$780
                        	
                        	msgJumpingToBoot:
00A67A 4A 75 6D 70 69 		db	"Jumping to boot",0	
00A680 67 20 74 6F 20 
00A685 62 6F 6F 74 00 
                        	msgNotBootable:
00A68A 63 61 72 64 20 		db	"card not bootable.",0
00A690 6F 74 20 62 6F 
00A695 6F 74 61 62 6C 
00A69A 65 2E 00       
00A69D 00 00 00       	spi_init_ok_msg:
00A6A0 63 61 72 64 20 		db "card initialized okay.",0
00A6A5 69 6E 69 74 69 
00A6AA 61 6C 69 7A 65 
00A6B0 20 6F 6B 61 79 
00A6B5 2E 00          
00A6B7 00 00 00       	spi_init_error_msg:
00A6BA 3A 20 65 72 72 		db	": error occurred initializing the card.",0
00A6C0 72 20 6F 63 63 
00A6C5 75 72 72 65 64 
00A6CA 20 69 6E 69 74 
00A6D0 61 6C 69 7A 69 
00A6D5 6E 67 20 74 68 
00A6DA 65 20 63 61 72 
00A6E0 2E 00          
00A6E2 00 00 00       	spi_boot_error_msg:
00A6E5 63 61 72 64 20 		db	"card boot error",CR,LF,0
00A6EA 62 6F 6F 74 20 
00A6F0 72 72 6F 72 0D 
00A6F5 0A 00          
00A6F7 00 00 00       	spi_read_error_msg:
00A6FA 63 61 72 64 20 		db	"card read error",CR,LF,0
00A700 65 61 64 20 65 
00A705 72 72 6F 72 0D 
00A70A 0A 00          
00A70C 00 00 00 00    	spi_write_error_msg:
00A710 63 61 72 64 20 		db	"card write error",0
00A715 77 72 69 74 65 
00A71A 20 65 72 72 6F 
00A720 00             
00A721 00 00 00 00    	msgDOSNotFound:
00A725 44 4F 53 20 66 	    db  "DOS file not found",CR,LF,0
00A72A 69 6C 65 20 6E 
00A730 74 20 66 6F 75 
00A735 6E 64 0D 0A 00 
                        	
                        	; ============================================================================
                        	; FMTK: Finitron Multi-Tasking Kernel
                        	;        __
                        	;   \\__/ o\    (C) 2014  Robert Finch, Stratford
                        	;    \  __ /    All rights reserved.
                        	;     \/_//     robfinch<remove>@finitron.ca
                        	;       ||
                        	; ============================================================================
                        	;  
                        	;------------------------------------------------------------------------------
                        	; Initialize the multi-tasking kernel.
                        	;------------------------------------------------------------------------------
                        	
                        	FMTKInitialize:
00A73A 01 00 00 00 32 		php
00A740 01 00 00 00 30 		sei
00A745 16 01 2E 00 00 		ldi		r1,#46
00A74A FD C0 FD 0F 00 		sb		r1,LEDS
00A750 A0 00 01 01 60 
00A755 01 01 01 00 49 		mfspr	r1,vbr
00A75A 16 02 BA AA 00 		ldi		r2,#FMTKScheduler
00A760 A3 01 02 01 02 		sw		r2,2*16[r1]
00A765 16 02 30 AB 00 		ldi		r2,#FMTKTick
00A76A FD 01 00 00 00 		sw		r2,451*16[r1]
00A770 A3 01 02 01 C3 
00A775 01 00 00 00 33 		plp
                        	
00A77A A3 00 00 81 02 		sw		r0,RunningTCB
00A780 A3 00 00 81 03 		sw		r0,QNdx0
00A785 A3 00 00 01 04 		sw		r0,QNdx0+8
00A78A A3 00 00 81 04 		sw		r0,QNdx0+16	
00A790 A3 00 00 01 05 		sw		r0,QNdx0+24
00A795 A3 00 00 81 05 		sw		r0,QNdx0+32
00A79A A3 00 00 01 06 		sw		r0,QNdx0+40
00A7A0 A3 00 00 81 06 		sw		r0,QNdx0+48
00A7A5 A3 00 00 01 07 		sw		r0,QNdx0+56
                        	
00A7AA 16 02 00 00 05 		ldi		r2,#TCBs			; r2 = pointer to TCB
00A7B0 16 03 00 20 05 		ldi		r3,#TCBs+TCB_Size	; r3 = pointer to next TCB
00A7B5 16 06 0F 00 00 		ldi		r6,#NR_TCB-1		; r6 = counter
00A7BA A3 00 02 01 03 		sw		r2,FreeTCB
                        	.0001:
00A7C0 FD 00 00 00 00 		sw		r3,TCB_Next[r2]
00A7C5 A3 02 03 01 A0 
00A7CA FD 00 00 00 00 		sw		r0,TCB_Prev[r2]
00A7D0 A3 02 00 81 A0 
00A7D5 FD 00 00 00 00 		sb		r0,TCB_Status[r2]	; status = none
00A7DA A0 02 00 81 A1 
00A7E0 FD 00 00 00 00 		sb		r0,TCB_hJob[r2]
00A7E5 A0 02 00 81 A2 
00A7EA 16 04 07 00 00 		ldi		r4,#7
00A7F0 FD 00 00 00 00 		sb		r4,TCB_Priority[r2]	; lowest priority
00A7F5 A0 02 04 01 A2 
00A7FA 01 03 02 00 04 		mov		r2,r3				; current = next
00A800 04 03 03 00 20 		add		r3,r3,#TCB_Size
00A805 5A 06 C0 07 00 		dbnz	r6,.0001
00A80A FD 00 00 00 00 		sw		r0,TCB_Next[r2]		; initialize last link
00A810 A3 02 00 01 A0 
                        	
00A815 16 01 2F 00 00 		ldi		r1,#47
00A81A FD C0 FD 0F 00 		sb		r1,LEDS
00A820 A0 00 01 01 60 
00A825 16 FC 00 00 05 		ldi		tr,#TCBs
00A82A 16 01 04 00 00 		ldi		r1,#4
00A830 16 02 00 00 00 		ldi		r2,#0
00A835 16 03 C0 90 00 		ldi		r3,#Monitor
00A83A 16 04 00 00 00 		ldi		r4,#0
00A840 16 05 00 00 00 		ldi		r5,#0
00A845 56 00 75 08 00 		bsr		StartTask
00A84A 16 01 30 00 00 		ldi		r1,#48
00A850 FD C0 FD 0F 00 		sb		r1,LEDS
00A855 A0 00 01 01 60 
                        		
00A85A 60 00 00 00 00 		rts

                        	IdleTask:
                        	.it1:
00A860 85 00 C7 CB 1B 		ios:lhu	r199,TEXTSCR+444
00A865 04 C7 C7 01 00 		add		r199,r199,#1
00A86A A2 00 C7 CB 1B 		ios:sh	r199,TEXTSCR+444
00A870 50 60 A8 00 00 		jmp		.it1
                        	
                        	;------------------------------------------------------------------------------
                        	; Parameters:
                        	;	r1 = priority
                        	;	r2 = flags
                        	;	r3 = start address
                        	;	r4 = parameter
                        	;	r5 = job
                        	;------------------------------------------------------------------------------
                        	
                        	StartTask:
00A875 A6 06 07 08 00 		push	r6/r7/r8
                        	
                        		; Get a TCB from the free list
00A87A 01 00 00 00 32 		php
00A880 01 00 00 00 30 		sei
00A885 16 06 33 00 00 		ldi		r6,#51
00A88A FD C0 FD 0F 00 		sb		r6,LEDS
00A890 A0 00 06 01 60 
00A895 86 00 06 01 03 		lw		r6,FreeTCB
00A89A FD 00 00 00 00 		lw		r7,TCB_Next[r6]
00A8A0 86 06 07 01 A0 
00A8A5 A3 00 07 01 03 		sw		r7,FreeTCB
00A8AA 01 00 00 00 33 		plp
00A8B0 FD 00 00 00 00 		sb		r1,TCB_Priority[r6]
00A8B5 A0 06 01 01 A2 
00A8BA FD 00 00 00 00 		sb		r5,TCB_hJob[r6]
00A8C0 A0 06 05 81 A2 
00A8C5 04 06 07 F8 1F 		add		r7,r6,#TCB_Size-8
00A8CA 05 07 07 18 00 		sub		r7,r7,#24
00A8D0 16 08 35 A9 00 		ldi		r8,#ExitTask
00A8D5 0C 08 08 FC FF 		and		r8,r8,#-4				; flag: short form address
00A8DA A3 07 08 01 01 		sw		r8,16[r7]				; setup exit address on stack
00A8E0 A3 07 00 81 00 		sw		r0,8[r7]				; setup code segment
00A8E5 0C 03 03 FC FF 		and		r3,r3,#-4				; flag:
00A8EA 0D 03 03 00 00 		or		r3,r3,#0				; interrupt flag
00A8F0 A3 07 03 01 00 		sw		r3,[r7]					; setup return address (start address)
00A8F5 FD 00 00 00 00 		sw		r7,TCB_SP0Save[r6]		; save the stack pointer
00A8FA A3 06 07 01 80 
00A900 01 06 01 00 04 		mov		r1,r6
00A905 01 00 00 00 32 		php
00A90A 01 00 00 00 30 		sei
00A910 56 00 7A 09 00 		bsr		AddTaskToReadyList
00A915 01 00 00 00 33 		plp
00A91A 16 06 36 00 00 		ldi		r6,#54
00A920 FD C0 FD 0F 00 		sb		r6,LEDS
00A925 A0 00 06 01 60 
                        		brk		#2*16						; reschedule tasks
00A92A A7 08 07 06 00 		pop		r8/r7/r6
00A930 60 00 00 00 00 		rts

                        	;------------------------------------------------------------------------------
                        	;------------------------------------------------------------------------------
                        	
                        	ExitTask:
00A935 01 00 00 00 30 		sei
00A93A 86 00 FC 81 02 		lw		tr,RunningTCB			; refuse to exit the Monitor task
00A940 FD 05 00 00 00 		cmp		fl0,tr,#TCBs
00A945 06 FC F4 00 00 
00A94A 40 F4 70 09 00 		beq		fl0,.0001
00A950 86 00 06 01 03 		lw		r6,FreeTCB
00A955 FD 00 00 00 00 		sw		r6,TCB_Next[tr]
00A95A A3 FC 06 0C A0 
00A960 A3 00 FC 01 03 		sw		tr,FreeTCB
00A965 A3 00 00 81 02 		sw		r0,RunningTCB
00A96A 50 9A AB 00 00 		jmp		SelectTaskToRun
                        	.0001:
00A970 01 00 00 00 31 		cli
00A975 60 00 00 00 00 		rts

                        	;------------------------------------------------------------------------------
                        	; Inserts a task into the ready queue at the tail.
                        	;------------------------------------------------------------------------------
                        	
                        	AddTaskToReadyList:
00A97A A6 03 04 05 06 		push	r3/r4/r5/r6
00A980 FD 00 00 00 00 		lbu		r3,TCB_Priority[r1]
00A985 81 01 03 01 A2 
00A98A 0C 03 03 07 00 		and		r3,r3,#7
00A990 02 03 03 04 50 		shl     r4,r3,#3
00A995 86 04 04 81 03 		lw		r4,QNdx0[r4]
00A99A 58 04 FA 09 00 		brz		r4,.initQ				; is the queue empty ?
00A9A0 FD 00 00 00 00 		lw		r5,TCB_Prev[r4]
00A9A5 86 04 05 81 A0 
00A9AA FD 00 00 00 00 		lw		r6,TCB_Next[r5]
00A9B0 86 05 06 01 A0 
00A9B5 FD 00 00 00 00 		sw		r1,TCB_Next[r5]
00A9BA A3 05 01 01 A0 
00A9C0 FD 00 00 00 00 		sw		r1,TCB_Prev[r4]
00A9C5 A3 04 01 81 A0 
00A9CA FD 00 00 00 00 		sw		r5,TCB_Prev[r1]
00A9D0 A3 01 05 81 A0 
00A9D5 FD 00 00 00 00 		sw		r4,TCB_Next[r1]
00A9DA A3 01 04 01 A0 
00A9E0 16 04 01 00 00 		ldi		r4,#TS_READY
00A9E5 FD 00 00 00 00 		sb		r4,TCB_Status[r1]
00A9EA A0 01 04 81 A1 
00A9F0 A7 06 05 04 03 		pop		r6/r5/r4/r3
00A9F5 60 00 00 00 00 		rts
.initQ:
00A9FA 02 03 03 04 50 	    shl     r4,r3,#3
00AA00 A3 04 01 81 03 		sw		r1,QNdx0[r4]
00AA05 FD 00 00 00 00 		sw		r1,TCB_Next[r1]
00AA0A A3 01 01 01 A0 
00AA10 FD 00 00 00 00 		sw		r1,TCB_Prev[r1]
00AA15 A3 01 01 81 A0 
00AA1A 16 04 01 00 00 		ldi		r4,#TS_READY
00AA20 FD 00 00 00 00 		sb		r4,TCB_Status[r1]
00AA25 A0 01 04 81 A1 
00AA2A A7 06 05 04 03 		pop		r6/r5/r4/r3
00AA30 60 00 00 00 00 		rts

                        	;------------------------------------------------------------------------------
                        	;------------------------------------------------------------------------------
                        	
                        	RemoveTaskFromReadyList:
00AA35 A6 03 04 06 07 		push	r3/r4/r6/r7
00AA3A FD 00 00 00 00 		lw		r6,TCB_Next[r1]
00AA40 86 01 06 01 A0 
00AA45 FD 00 00 00 00 		lw		r7,TCB_Prev[r1]
00AA4A 86 01 07 81 A0 
00AA50 FD 00 00 00 00 		sw		r7,TCB_Prev[r6]
00AA55 A3 06 07 81 A0 
00AA5A FD 00 00 00 00 		sw		r6,TCB_Next[r7]
00AA60 A3 07 06 01 A0 
00AA65 FD 00 00 00 00 		lbu		r3,TCB_Priority[r1]
00AA6A 81 01 03 01 A2 
00AA70 02 03 03 04 50 		shl     r4,r3,#3
00AA75 86 04 04 81 03 		lw		r4,QNdx0[r4]
00AA7A 02 04 01 F4 06 		cmp		fl0,r4,r1
00AA80 41 F4 90 0A 00 		bne		fl0,.0001
00AA85 02 03 03 04 50 		shl     r4,r3,#3
00AA8A A3 04 06 81 03 		sw		r6,QNdx0[r4]
                        	.0001:
00AA90 FD 00 00 00 00 		sw		r0,TCB_Next[r1]
00AA95 A3 01 00 01 A0 
00AA9A FD 00 00 00 00 		sw		r0,TCB_Prev[r1]
00AAA0 A3 01 00 81 A0 
00AAA5 FD 00 00 00 00 		sb		r0,TCB_Status[r1]
00AAAA A0 01 00 81 A1 
00AAB0 A7 07 06 04 03 		pop		r7/r6/r4/r3
00AAB5 60 00 00 00 00 		rts
	
                        	;------------------------------------------------------------------------------
                        	;------------------------------------------------------------------------------
                        	
                        	FMTKScheduler:
00AABA 01 00 00 00 30 		sei
00AAC0 16 FC 34 00 00 		ldi		tr,#52
00AAC5 FD C0 FD 0F 00 		sb		tr,LEDS
00AACA A0 00 FC 01 60 
00AAD0 86 00 FC 81 02 		lw		tr,RunningTCB
00AAD5 59 FC E0 0A 00 		brnz	tr,.0002
00AADA 16 FC 00 E0 04 		ldi		tr,#TCBs-TCB_Size
                        	.0002:
                        		;mfspr	r250,cs
                        		;shr		r250,r250,#60
00AAE0 FD 00 00 00 00 		sw		sp,TCB_SP0Save[tr]	;+r250*8]
00AAE5 A3 FC FF 0C 80 
00AAEA A6 FC 00 00 00 		push	tr
00AAF0 56 00 90 0C 00 		bsr		SaveContext
00AAF5 A7 FC 00 00 00 		pop		tr
00AAFA 16 C9 01 00 00 		ldi		r201,#TS_READY
00AB00 FD 00 00 00 00 		sb		r201,TCB_Status[tr]
00AB05 A0 FC C9 8C A1 
00AB0A 46 00 9A 0B 00 		bra		SelectTaskToRun
                        	nStartQue:
00AB10 00 01 00 02 00 		db		0,1,0,2,0,3,0,1,0,4,0,5,0,6,0,7
00AB15 03 00 01 00 04 
00AB1A 00 05 00 06 00 
00AB20 00 01 00 02 00 		db		0,1,0,2,0,3,0,1,0,4,0,5,0,6,0,7
00AB25 03 00 01 00 04 
00AB2A 00 05 00 06 00 
                        	
                        	;------------------------------------------------------------------------------
                        	; FMTKTick:
                        	;	Timer tick routine that does the pre-emptive multi-tasking.
                        	;------------------------------------------------------------------------------
                        	;interrupt link register......
                        	
                        	FMTKTick:
00AB30 16 FC 03 00 00 		ldi		tr,#3				; reset the edge sense circuit
00AB35 FD C0 FD 0F 00 		sh		tr,PIC_RSTE
00AB3A A2 00 FC 41 FD 
00AB40 86 00 FC 01 02 		lw		tr,TickVec
00AB45 58 FC 50 0B 00 		brz		tr,.0001
00AB4A 53 00 01 02 00 		jsr		(TickVec)
                        	.0001:
00AB50 84 00 FC 81 00 		lh		tr,Ticks
00AB55 04 FC FC 01 00 		add		tr,tr,#1
00AB5A A2 00 FC 81 00 		sh		tr,Ticks
00AB60 86 00 FC 81 02 		lw		tr,RunningTCB
00AB65 59 FC 70 0B 00 		brnz	tr,.0002
00AB6A 16 FC 00 E0 04 		ldi		tr,#TCBs-TCB_Size
                        	.0002:
00AB70 FD 00 00 00 00 		sw		sp,TCB_SP0Save[tr]
00AB75 A3 FC FF 0C 80 
00AB7A A6 FC 00 00 00 		push	tr
00AB80 56 00 90 0C 00 		bsr		SaveContext
00AB85 A7 FC 00 00 00 		pop		tr
00AB8A 16 CE 04 00 00 		ldi		r206,#TS_PREEMPT
00AB90 FD 00 00 00 00 		sb		r206,TCB_Status[tr]
00AB95 A0 FC CE 8C A1 
                        	
                        	;------------------------------------------------------------------------------
                        	; SelectTaskToRun:
                        	;
                        	;------------------------------------------------------------------------------
                        	
                        	SelectTaskToRun:
00AB9A 16 C9 35 00 00 		ldi		r201,#53
00ABA0 FD C0 FD 0F 00 		sb		r201,LEDS
00ABA5 A0 00 C9 01 60 
00ABAA 84 00 C9 81 00 		lh		r201,Ticks
00ABB0 0C C9 C9 1F 00 		and		r201,r201,#$1F
00ABB5 FD 0A 00 00 00 		lb		r203,nStartQue[r201]
00ABBA 80 C9 CB 01 B1 
00ABC0 16 CE 07 00 00 		ldi		r206,#7				; number of queues to check - 1
                        	.qagain:
00ABC5 0C CB CB 07 00 		and		r203,r203,#7			; max 0-7 queues
00ABCA 02 CB 03 CB 50 		shl     r203,r203,#3
00ABD0 86 CB C9 81 03 		lw		r201,QNdx0[r203]
00ABD5 58 C9 05 0C 00 		brz		r201,.qempty
00ABDA FD 00 00 00 00 		lw		tr,TCB_Next[r201]
00ABE0 86 C9 FC 01 A0 
00ABE5 A3 CB FC 81 03 		sw		tr,QNdx0[r203]
00ABEA A3 00 FC 81 02 		sw		tr,RunningTCB
00ABF0 16 CE 02 00 00 		ldi		r206,#TS_RUNNING
00ABF5 FD 00 00 00 00 		sb		r206,TCB_Status[tr]
00ABFA A0 FC CE 8C A1 
00AC00 46 00 40 0C 00 		bra		.qxit
                        	.qempty:
00AC05 02 CB 03 CB 52 	    shr     r203,r203,#3
00AC0A 04 CB CB 01 00 		add		r203,r203,#1
00AC10 5A CE C5 0B 00 		dbnz	r206,.qagain
00AC15 16 FC 00 E0 04 		ldi		tr,#TCBs-TCB_Size
00AC1A 50 40 AC 00 00 		jmp		.qxit
00AC20 16 01 70 AC 00 		ldi		r1,#msgNoTasks
00AC25 56 00 85 0C 00 		bsr		kernel_panic
                        	.qerr:
00AC2A 16 FA 0C 00 00 		ldi		r250,#$C
00AC30 FD C0 FD 0F 00 		sb		r250,LEDS
00AC35 A0 00 FA 01 60 
00AC3A 58 00 2A 0C 00 		brz		r0,.qerr
                        	.qxit:
00AC40 16 C9 0A 00 00 		ldi		r201,#$A
00AC45 FD C0 FD 0F 00 		sb		r201,LEDS
00AC4A A0 00 C9 01 60 
00AC50 FD 00 00 00 00 		lw		r250,TCB_SP0Save[tr]
00AC55 86 FC FA 0C 80 
00AC5A A6 FA 00 00 00 		push	r250
00AC60 56 00 4A 0D 00 		bsr		RestoreContext
00AC65 A7 FF 00 00 00 		pop		sp
00AC6A 01 00 00 00 40 		rti
                        	msgNoTasks:
00AC70 4E 6F 20 74 61 		db		"No tasks in queue.",0
00AC75 73 6B 73 20 69 
00AC7A 6E 20 71 75 65 
00AC80 65 2E 00       
                        	
00AC83 00 00          	kernel_panic:
00AC85 56 00 E5 EB FF 		bsr		DisplayString
00AC8A 60 00 00 00 00 		rts

                        	SaveContext:
00AC90 A6 FC 00 00 00 		push	tr
00AC95 BC 01 0F FC 0C 		smr		r1,r15,[tr]
00AC9A 04 FC FC 78 00 		add		tr,tr,#15*8
00ACA0 BC 10 1F FC 0C 		smr		r16,r31,[tr]
00ACA5 04 FC FC 80 00 		add		tr,tr,#16*8
00ACAA BC 20 2F FC 0C 		smr		r32,r47,[tr]
00ACB0 04 FC FC 80 00 		add		tr,tr,#16*8
00ACB5 BC 30 3F FC 0C 		smr		r48,r63,[tr]
00ACBA 04 FC FC 80 00 		add		tr,tr,#16*8
00ACC0 BC 40 4F FC 0C 		smr		r64,r79,[tr]
00ACC5 04 FC FC 80 00 		add		tr,tr,#16*8
00ACCA BC 50 5F FC 0C 		smr		r80,r95,[tr]
00ACD0 04 FC FC 80 00 		add		tr,tr,#16*8
00ACD5 BC 60 6F FC 0C 		smr		r96,r111,[tr]
00ACDA 04 FC FC 80 00 		add		tr,tr,#16*8
00ACE0 BC 70 7F FC 0C 		smr		r112,r127,[tr]
00ACE5 04 FC FC 80 00 		add		tr,tr,#16*8
00ACEA BC 80 8F FC 0C 		smr		r128,r143,[tr]
00ACF0 04 FC FC 80 00 		add		tr,tr,#16*8
00ACF5 BC 90 9F FC 0C 		smr		r144,r159,[tr]
00ACFA 04 FC FC 80 00 		add		tr,tr,#16*8
00AD00 BC A0 AF FC 0C 		smr		r160,r175,[tr]
00AD05 04 FC FC 80 00 		add		tr,tr,#16*8
00AD0A BC B0 BF FC 0C 		smr		r176,r191,[tr]
00AD10 04 FC FC 80 00 		add		tr,tr,#16*8
00AD15 BC C0 CF FC 0C 		smr		r192,r207,[tr]
00AD1A 04 FC FC 80 00 		add		tr,tr,#16*8
00AD20 BC D0 DF FC 0C 		smr		r208,r223,[tr]
00AD25 04 FC FC 80 00 		add		tr,tr,#16*8
00AD2A BC E0 EF FC 0C 		smr		r224,r239,[tr]
00AD30 04 FC FC 80 00 		add		tr,tr,#16*8
00AD35 BC F0 FE FC 0C 		smr		r240,r254,[tr]
00AD3A 04 FC FC 78 00 		add		tr,tr,#15*8
00AD40 A7 FC 00 00 00 		pop		tr
                        	
00AD45 60 00 00 00 00 		rts

                        	;------------------------------------------------------------------------------
                        	; Restore the task context. The context is saved in blocks of 16 registers at
                        	; a time in otder to minimize interrupt latency.
                        	;------------------------------------------------------------------------------
                        	
                        	RestoreContext:
00AD4A 9C 01 0F FC 0C 		lmr		r1,r15,[tr]
00AD50 04 FC FC 78 00 		add		tr,tr,#15*8
00AD55 9C 10 1F FC 0C 		lmr		r16,r31,[tr]
00AD5A 04 FC FC 80 00 		add		tr,tr,#16*8
00AD60 9C 20 2F FC 0C 		lmr		r32,r47,[tr]
00AD65 04 FC FC 80 00 		add		tr,tr,#16*8
00AD6A 9C 30 3F FC 0C 		lmr		r48,r63,[tr]
00AD70 04 FC FC 80 00 		add		tr,tr,#16*8
00AD75 9C 40 4F FC 0C 		lmr		r64,r79,[tr]
00AD7A 04 FC FC 80 00 		add		tr,tr,#16*8
00AD80 9C 50 5F FC 0C 		lmr		r80,r95,[tr]
00AD85 04 FC FC 80 00 		add		tr,tr,#16*8
00AD8A 9C 60 6F FC 0C 		lmr		r96,r111,[tr]
00AD90 04 FC FC 80 00 		add		tr,tr,#16*8
00AD95 9C 70 7F FC 0C 		lmr		r112,r127,[tr]
00AD9A 04 FC FC 80 00 		add		tr,tr,#16*8
00ADA0 9C 80 8F FC 0C 		lmr		r128,r143,[tr]
00ADA5 04 FC FC 80 00 		add		tr,tr,#16*8
00ADAA 9C 90 9F FC 0C 		lmr		r144,r159,[tr]
00ADB0 04 FC FC 80 00 		add		tr,tr,#16*8
00ADB5 9C A0 AF FC 0C 		lmr		r160,r175,[tr]
00ADBA 04 FC FC 80 00 		add		tr,tr,#16*8
00ADC0 9C B0 BF FC 0C 		lmr		r176,r191,[tr]
00ADC5 04 FC FC 80 00 		add		tr,tr,#16*8
00ADCA 9C C0 CF FC 0C 		lmr		r192,r207,[tr]
00ADD0 04 FC FC 80 00 		add		tr,tr,#16*8
00ADD5 9C D0 DF FC 0C 		lmr		r208,r223,[tr]
00ADDA 04 FC FC 80 00 		add		tr,tr,#16*8
00ADE0 9C E0 EF FC 0C 		lmr		r224,r239,[tr]
00ADE5 04 FC FC 80 00 		add		tr,tr,#16*8
00ADEA 9C F0 FB FC 0C 		lmr		r240,r251,[tr]
00ADF0 04 FC FC 60 00 		add		tr,tr,#12*8
00ADF5 86 FC FD 8C 00 		lw		r253,8[tr]
00ADFA 60 00 00 00 00 		rts

                        	RAMTest:
00AE00 56 00 1A EC FF 		bsr		CRLF
00AE05 16 01 00 00 01 		ldi		r1,$10000				; start past the ROM
00AE0A FD 55 AA AA AA 		ldi		r2,#$AAAAAAAA55555555	; Checkerboard pattern
00AE10 FE AA 00 00 00 
00AE15 16 02 55 55 55 
                        		
                        		; First store the checkerboard pattern to all memory locations
                        	.0002:
00AE1A A3 01 02 01 00 		sw		r2,[r1]
00AE20 0C 01 03 FF 0F 		andi	r3,r1,#$FFF				; display progress and check
00AE25 59 03 55 0E 00 		brnz	r3,.0001				; for CTRL-C every so often
00AE2A 56 00 85 EB FF 		bsr		DisplayHalf
00AE30 01 01 04 00 04 		mov		r4,r1
00AE35 16 01 0D 00 00 		ldi		r1,#CR
00AE3A 56 00 95 ED FF 		bsr		DisplayChar
00AE40 56 00 50 F5 FF 		bsr		KeybdGetCharDirectNB
00AE45 05 01 01 03 00 		sub		r1,r1,#CTRLC
00AE4A 58 01 E0 0E 00 		brz		r1,.0006
00AE50 01 04 01 00 04 		mov		r1,r4
                        	.0001:
00AE55 04 01 01 08 00 		addi	r1,r1,#8				; increment to next word
00AE5A FD 80 00 00 00 		cmp		flg0,r1,#$0800000		; 128MB is the RAM onboard
00AE60 06 01 F4 00 00 
00AE65 4F F4 1A 0E 00 		bltu	flg0,.0002
                        		
                        		; Readback the checkboard pattern from all memory locations
00AE6A 16 01 00 00 01 		ldi		r1,#$10000
                        	.0005:
00AE70 86 01 02 01 00 		lw		r2,[r1]
00AE75 FD 55 55 AA AA 		cmp		flg0,r2,#$AAAAAAAA55555555
00AE7A FE AA AA 00 00 
00AE80 06 02 F4 55 55 
00AE85 40 F4 95 0E 00 		beq		flg0,.0003
00AE8A 56 00 85 EB FF 		bsr		DisplayHalf
00AE90 56 00 1A EC FF 		bsr		CRLF
                        	.0003:
00AE95 0C 01 03 FF 0F 		andi	r3,r1,#$FFF			; display progress and check
00AE9A 59 03 CA 0E 00 		brnz	r3,.0004			; for CTRL-C every so often
00AEA0 56 00 85 EB FF 		bsr		DisplayHalf
00AEA5 01 01 04 00 04 		mov		r4,r1
00AEAA 16 01 0D 00 00 		ldi		r1,#CR
00AEB0 56 00 95 ED FF 		bsr		DisplayChar
00AEB5 56 00 50 F5 FF 		bsr		KeybdGetCharDirectNB
00AEBA 05 01 01 03 00 		sub		r1,r1,#CTRLC
00AEC0 58 01 E0 0E 00 		brz		r1,.0006
00AEC5 01 04 01 00 04 		mov		r1,r4
                        	.0004:
00AECA 04 01 01 08 00 		addi	r1,r1,#8			; increment to next word
00AED0 FD 80 00 00 00 		cmp		flg0,r1,#$0800000
00AED5 06 01 F4 00 00 
00AEDA 4F F4 70 0E 00 		bltu	flg0,.0005
                        	.0006:
00AEE0 60 00 00 00 00 		rts

                        	;------------------------------------------------------------------------------
                        	; An uninitialized interrupt occurred. Display the vector number and the
                        	; interrupt address.
                        	;------------------------------------------------------------------------------
                        	
                        	uninit_rout:
00AEE5 16 01 BA 00 00 		ldi		r1,#$ba
00AEEA FD C0 FD 0F 00 		sb		r1,LEDS
00AEF0 A0 00 01 01 60 
00AEF5 16 01 A5 B0 00 		ldi		r1,#msgUninit
00AEFA 56 00 15 EC FF 		bsr		DisplayStringCRLF
00AF00 01 0C 01 00 49 		mfspr	r1,ivno
00AF05 56 00 85 EB FF 		bsr		DisplayHalf
00AF0A 56 00 1A EC FF 		bsr		CRLF
00AF10 A7 01 00 00 00 		pop		r1
00AF15 56 00 85 EB FF 		bsr		DisplayHalf
00AF1A 56 00 1A EC FF 		bsr		CRLF
00AF20 16 03 3F 00 00 		ldi		r3,#63
                        	.0002:
00AF25 01 0D 01 00 49 		mfspr	r1,history
00AF2A 56 00 85 EB FF 		bsr		DisplayHalf
00AF30 16 01 20 00 00 		ldi		r1,#' '
00AF35 56 00 95 ED FF 		bsr		DisplayChar
00AF3A 5A 03 25 0F 00 		dbnz	r3,.0002
                        	.0001:
00AF40 46 00 40 0F 00 		bra .0001
                        	
                        	;------------------------------------------------------------------------------
                        	; Execution fault. Occurs when an attempt is made to execute code from a
                        	; page marked as non-executable.
                        	;------------------------------------------------------------------------------
                        	
                        	exf_rout:
00AF45 16 01 BB 00 00 		ldi		r1,#$bb
00AF4A FD C0 FD 0F 00 		sb		r1,LEDS
00AF50 A0 00 01 01 60 
00AF55 16 01 65 B0 00 		ldi		r1,#msgexf
00AF5A 56 00 15 EC FF 		bsr		DisplayStringCRLF
                        	.0001:
00AF60 46 00 60 0F 00 		bra .0001
                        	
                        	;------------------------------------------------------------------------------
                        	; Data read fault. Occurs when an attempt is made to read from a page marked
                        	; as non-readble.
                        	;------------------------------------------------------------------------------
                        	
                        	drf_rout:
00AF65 16 01 BB 00 00 		ldi		r1,#$bb
00AF6A FD C0 FD 0F 00 		sb		r1,LEDS
00AF70 A0 00 01 01 60 
00AF75 16 01 6A B0 00 		ldi		r1,#msgdrf
00AF7A 56 00 15 EC FF 		bsr		DisplayStringCRLF
                        	.0001:
00AF80 46 00 80 0F 00 		bra .0001
                        	
                        	;------------------------------------------------------------------------------
                        	; Data write fault. Occurs when an attempt is made to write to a page marked
                        	; as non-writeable.
                        	;------------------------------------------------------------------------------
                        	
                        	dwf_rout:
00AF85 16 01 BB 00 00 		ldi		r1,#$bb
00AF8A FD C0 FD 0F 00 		sb		r1,LEDS
00AF90 A0 00 01 01 60 
00AF95 16 01 70 B0 00 		ldi		r1,#msgdwf
00AF9A 56 00 15 EC FF 		bsr		DisplayStringCRLF
                        	.0001:
00AFA0 46 00 A0 0F 00 		bra .0001
                        	
                        	;------------------------------------------------------------------------------
                        	; Segment bounds violation fault.
                        	;------------------------------------------------------------------------------
                        	
                        	sbv_rout:
00AFA5 16 01 BB 00 00 		ldi		r1,#$bb
00AFAA FD C0 FD 0F 00 		sb		r1,LEDS
00AFB0 A0 00 01 01 60 
00AFB5 16 01 75 B0 00 		ldi		r1,#msgSBV
00AFBA 56 00 15 EC FF 		bsr		DisplayStringCRLF
                        	.0001:
00AFC0 46 00 C0 0F 00 		bra .0001
                        	
                        	;------------------------------------------------------------------------------
                        	; Privilege violation fault. Occurs when the current privilege level isn't
                        	; sufficient to allow access.
                        	;------------------------------------------------------------------------------
                        	
                        	priv_rout:
00AFC5 16 01 BC 00 00 		ldi		r1,#$bc
00AFCA FD C0 FD 0F 00 		st		r1,LEDS
00AFD0 A3 00 01 01 60 
00AFD5 16 01 80 B0 00 		ldi		r1,#msgPriv
00AFDA 56 00 15 EC FF 		bsr		DisplayStringCRLF
                        	.0001:
00AFE0 46 00 E0 0F 00 		bra .0001
                        	
                        	;------------------------------------------------------------------------------
                        	; Segment type violation. Occurs when an attempt is made to load a data
                        	; segment into the code segment or the code segment into a data segment
                        	; register.
                        	;------------------------------------------------------------------------------
                        	
                        	stv_rout:
00AFE5 16 01 BD 00 00 		ldi		r1,#$bd
00AFEA FD C0 FD 0F 00 		sb		r1,LEDS
00AFF0 A0 00 01 01 60 
00AFF5 16 01 90 B0 00 		ldi		r1,#msgSTV
00AFFA 56 00 15 DC FF 		bsr		DisplayStringCRLF
00B000 01 08 01 00 49 		mfspr	r1,fault_pc
00B005 56 00 75 DB FF 		bsr		DisplayWord
00B00A 56 00 1A DC FF 		bsr		CRLF
00B010 01 FF 01 00 49 		mfspr	r1,fault_cs
00B015 56 00 85 DB FF 		bsr		DisplayHalf
00B01A 56 00 1A DC FF 		bsr		CRLF
00B020 01 FF 01 00 49 		mfspr	r1,fault_seg
00B025 56 00 85 DB FF 		bsr		DisplayHalf
00B02A 56 00 1A DC FF 		bsr		CRLF
00B030 01 FF 01 00 49 		mfspr	r1,fault_st
00B035 56 00 A5 DB FF 		bsr		DisplayByte
00B03A 56 00 1A DC FF 		bsr		CRLF
                        	.0001:
00B040 46 00 40 00 00 		bra .0001
                        	
                        	;------------------------------------------------------------------------------
                        	; Segment not present. Occurs when the segment is marked as not present in
                        	; memory.
                        	;------------------------------------------------------------------------------
                        	
                        	snp_rout:
00B045 16 01 BE 00 00 		ldi		r1,#$be
00B04A FD C0 FD 0F 00 		sb		r1,LEDS
00B050 A0 00 01 01 60 
00B055 16 01 9A B0 00 		ldi		r1,#msgSNP
00B05A 56 00 15 DC FF 		bsr		DisplayStringCRLF
                        	.0001:
00B060 46 00 60 00 00 		bra .0001
                        	
                        	;------------------------------------------------------------------------------
                        	; Message strings for the faults.
                        	;------------------------------------------------------------------------------
                        	
                        	msgexf:
00B065 65 78 66 20 00 		db	"exf ",0
                        	msgdrf:
00B06A 64 72 66 20 00 		db	"drf ",0
                        	msgdwf:
00B070 64 77 66 20 00 		db	"dwf ",0
                        	msgSBV:
00B075 73 62 76 20 66 		db	"sbv fault",0
00B07A 61 75 6C 74 00 
                        	msgPriv:
00B080 70 72 69 76 20 		db	"priv fault",0
00B085 66 61 75 6C 74 
00B08A 00             
00B08B 00 00 00 00 00 	msgSTV:
00B090 73 74 76 20 66 		db	"stv fault",0
00B095 61 75 6C 74 00 
                        	msgSNP:
00B09A 73 6E 70 20 66 		db	"snp fault",0
00B0A0 75 6C 74 00    
00B0A4 00             	msgUninit:
00B0A5 75 6E 69 6E 69 		db	"uninit int.",0
00B0AA 74 20 69 6E 74 
00B0B0 00             
                        	
                        	;------------------------------------------------------------------------------
                        	; Bus error routine.
                        	;------------------------------------------------------------------------------
                        	
00B0B1 00 00 00 00    	berr_rout:
00B0B5 16 01 AA 00 00 		ldi		r1,#$AA
00B0BA FD C0 FD 0F 00 		st		r1,LEDS
00B0C0 A3 00 01 01 60 
00B0C5 01 FF 01 00 49 		mfspr	r1,bear
                        	;	bsr		DisplayWord
                        	.be1:
00B0CA 46 00 CA 00 00 		bra .be1
                        	AlgnFault:
00B0D0 01 08 01 00 49 		mfspr	r1,fault_pc
00B0D5 56 00 75 DB FF 		bsr		DisplayWord
00B0DA 56 00 1A DC FF 		bsr		CRLF
                        	AlgnFault2:
00B0E0 16 01 AF 00 00 		ldi		r1,#$AF
00B0E5 FD C0 FD 0F 00 		sw		r1,LEDS
00B0EA A3 00 01 01 60 
00B0F0 46 00 E0 00 00 		bra AlgnFault2
                        	
                        	;------------------------------------------------------------------------------
                        	;------------------------------------------------------------------------------
                        	
                        	DebugRout:
00B0F5 16 01 DB 00 00 		ldi		r1,#$DB
00B0FA FD C0 FD 0F 00 		sw		r1,LEDS
00B100 A3 00 01 01 60 
00B105 46 00 F5 00 00 		bra DebugRout
                        	
                        	;------------------------------------------------------------------------------
                        	;------------------------------------------------------------------------------
00B10A 00 00 00 00 00 		org		$0000FFB0		; Alignment fault
00B110 00 00 00 00 00 
00B115 00 00 00 00 00 
00B11A 00 00 00 00 00 
00B120 00 00 00 00 00 
00B125 00 00 00 00 00 
00B12A 00 00 00 00 00 
00B130 00 00 00 00 00 
00B135 00 00 00 00 00 
00B13A 00 00 00 00 00 
00B140 00 00 00 00 00 
00B145 00 00 00 00 00 
00B14A 00 00 00 00 00 
00B150 00 00 00 00 00 
00B155 00 00 00 00 00 
00B15A 00 00 00 00 00 
00B160 00 00 00 00 00 
00B165 00 00 00 00 00 
00B16A 00 00 00 00 00 
00B170 00 00 00 00 00 
00B175 00 00 00 00 00 
00B17A 00 00 00 00 00 
00B180 00 00 00 00 00 
00B185 00 00 00 00 00 
00B18A 00 00 00 00 00 
00B190 00 00 00 00 00 
00B195 00 00 00 00 00 
00B19A 00 00 00 00 00 
00B1A0 00 00 00 00 00 
00B1A5 00 00 00 00 00 
00B1AA 00 00 00 00 00 
00B1B0 00 00 00 00 00 
00B1B5 00 00 00 00 00 
00B1BA 00 00 00 00 00 
00B1C0 00 00 00 00 00 
00B1C5 00 00 00 00 00 
00B1CA 00 00 00 00 00 
00B1D0 00 00 00 00 00 
00B1D5 00 00 00 00 00 
00B1DA 00 00 00 00 00 
00B1E0 00 00 00 00 00 
00B1E5 00 00 00 00 00 
00B1EA 00 00 00 00 00 
00B1F0 00 00 00 00 00 
00B1F5 00 00 00 00 00 
00B1FA 00 00 00 00 00 
00B200 00 00 00 00 00 
00B205 00 00 00 00 00 
00B20A 00 00 00 00 00 
00B210 00 00 00 00 00 
00B215 00 00 00 00 00 
00B21A 00 00 00 00 00 
00B220 00 00 00 00 00 
00B225 00 00 00 00 00 
00B22A 00 00 00 00 00 
00B230 00 00 00 00 00 
00B235 00 00 00 00 00 
00B23A 00 00 00 00 00 
00B240 00 00 00 00 00 
00B245 00 00 00 00 00 
00B24A 00 00 00 00 00 
00B250 00 00 00 00 00 
00B255 00 00 00 00 00 
00B25A 00 00 00 00 00 
00B260 00 00 00 00 00 
00B265 00 00 00 00 00 
00B26A 00 00 00 00 00 
00B270 00 00 00 00 00 
00B275 00 00 00 00 00 
00B27A 00 00 00 00 00 
00B280 00 00 00 00 00 
00B285 00 00 00 00 00 
00B28A 00 00 00 00 00 
00B290 00 00 00 00 00 
00B295 00 00 00 00 00 
00B29A 00 00 00 00 00 
00B2A0 00 00 00 00 00 
00B2A5 00 00 00 00 00 
00B2AA 00 00 00 00 00 
00B2B0 00 00 00 00 00 
00B2B5 00 00 00 00 00 
00B2BA 00 00 00 00 00 
00B2C0 00 00 00 00 00 
00B2C5 00 00 00 00 00 
00B2CA 00 00 00 00 00 
00B2D0 00 00 00 00 00 
00B2D5 00 00 00 00 00 
00B2DA 00 00 00 00 00 
00B2E0 00 00 00 00 00 
00B2E5 00 00 00 00 00 
00B2EA 00 00 00 00 00 
00B2F0 00 00 00 00 00 
00B2F5 00 00 00 00 00 
00B2FA 00 00 00 00 00 
00B300 00 00 00 00 00 
00B305 00 00 00 00 00 
00B30A 00 00 00 00 00 
00B310 00 00 00 00 00 
00B315 00 00 00 00 00 
00B31A 00 00 00 00 00 
00B320 00 00 00 00 00 
00B325 00 00 00 00 00 
00B32A 00 00 00 00 00 
00B330 00 00 00 00 00 
00B335 00 00 00 00 00 
00B33A 00 00 00 00 00 
00B340 00 00 00 00 00 
00B345 00 00 00 00 00 
00B34A 00 00 00 00 00 
00B350 00 00 00 00 00 
00B355 00 00 00 00 00 
00B35A 00 00 00 00 00 
00B360 00 00 00 00 00 
00B365 00 00 00 00 00 
00B36A 00 00 00 00 00 
00B370 00 00 00 00 00 
00B375 00 00 00 00 00 
00B37A 00 00 00 00 00 
00B380 00 00 00 00 00 
00B385 00 00 00 00 00 
00B38A 00 00 00 00 00 
00B390 00 00 00 00 00 
00B395 00 00 00 00 00 
00B39A 00 00 00 00 00 
00B3A0 00 00 00 00 00 
00B3A5 00 00 00 00 00 
00B3AA 00 00 00 00 00 
00B3B0 00 00 00 00 00 
00B3B5 00 00 00 00 00 
00B3BA 00 00 00 00 00 
00B3C0 00 00 00 00 00 
00B3C5 00 00 00 00 00 
00B3CA 00 00 00 00 00 
00B3D0 00 00 00 00 00 
00B3D5 00 00 00 00 00 
00B3DA 00 00 00 00 00 
00B3E0 00 00 00 00 00 
00B3E5 00 00 00 00 00 
00B3EA 00 00 00 00 00 
00B3F0 00 00 00 00 00 
00B3F5 00 00 00 00 00 
00B3FA 00 00 00 00 00 
00B400 00 00 00 00 00 
00B405 00 00 00 00 00 
00B40A 00 00 00 00 00 
00B410 00 00 00 00 00 
00B415 00 00 00 00 00 
00B41A 00 00 00 00 00 
00B420 00 00 00 00 00 
00B425 00 00 00 00 00 
00B42A 00 00 00 00 00 
00B430 00 00 00 00 00 
00B435 00 00 00 00 00 
00B43A 00 00 00 00 00 
00B440 00 00 00 00 00 
00B445 00 00 00 00 00 
00B44A 00 00 00 00 00 
00B450 00 00 00 00 00 
00B455 00 00 00 00 00 
00B45A 00 00 00 00 00 
00B460 00 00 00 00 00 
00B465 00 00 00 00 00 
00B46A 00 00 00 00 00 
00B470 00 00 00 00 00 
00B475 00 00 00 00 00 
00B47A 00 00 00 00 00 
00B480 00 00 00 00 00 
00B485 00 00 00 00 00 
00B48A 00 00 00 00 00 
00B490 00 00 00 00 00 
00B495 00 00 00 00 00 
00B49A 00 00 00 00 00 
00B4A0 00 00 00 00 00 
00B4A5 00 00 00 00 00 
00B4AA 00 00 00 00 00 
00B4B0 00 00 00 00 00 
00B4B5 00 00 00 00 00 
00B4BA 00 00 00 00 00 
00B4C0 00 00 00 00 00 
00B4C5 00 00 00 00 00 
00B4CA 00 00 00 00 00 
00B4D0 00 00 00 00 00 
00B4D5 00 00 00 00 00 
00B4DA 00 00 00 00 00 
00B4E0 00 00 00 00 00 
00B4E5 00 00 00 00 00 
00B4EA 00 00 00 00 00 
00B4F0 00 00 00 00 00 
00B4F5 00 00 00 00 00 
00B4FA 00 00 00 00 00 
00B500 00 00 00 00 00 
00B505 00 00 00 00 00 
00B50A 00 00 00 00 00 
00B510 00 00 00 00 00 
00B515 00 00 00 00 00 
00B51A 00 00 00 00 00 
00B520 00 00 00 00 00 
00B525 00 00 00 00 00 
00B52A 00 00 00 00 00 
00B530 00 00 00 00 00 
00B535 00 00 00 00 00 
00B53A 00 00 00 00 00 
00B540 00 00 00 00 00 
00B545 00 00 00 00 00 
00B54A 00 00 00 00 00 
00B550 00 00 00 00 00 
00B555 00 00 00 00 00 
00B55A 00 00 00 00 00 
00B560 00 00 00 00 00 
00B565 00 00 00 00 00 
00B56A 00 00 00 00 00 
00B570 00 00 00 00 00 
00B575 00 00 00 00 00 
00B57A 00 00 00 00 00 
00B580 00 00 00 00 00 
00B585 00 00 00 00 00 
00B58A 00 00 00 00 00 
00B590 00 00 00 00 00 
00B595 00 00 00 00 00 
00B59A 00 00 00 00 00 
00B5A0 00 00 00 00 00 
00B5A5 00 00 00 00 00 
00B5AA 00 00 00 00 00 
00B5B0 00 00 00 00 00 
00B5B5 00 00 00 00 00 
00B5BA 00 00 00 00 00 
00B5C0 00 00 00 00 00 
00B5C5 00 00 00 00 00 
00B5CA 00 00 00 00 00 
00B5D0 00 00 00 00 00 
00B5D5 00 00 00 00 00 
00B5DA 00 00 00 00 00 
00B5E0 00 00 00 00 00 
00B5E5 00 00 00 00 00 
00B5EA 00 00 00 00 00 
00B5F0 00 00 00 00 00 
00B5F5 00 00 00 00 00 
00B5FA 00 00 00 00 00 
00B600 00 00 00 00 00 
00B605 00 00 00 00 00 
00B60A 00 00 00 00 00 
00B610 00 00 00 00 00 
00B615 00 00 00 00 00 
00B61A 00 00 00 00 00 
00B620 00 00 00 00 00 
00B625 00 00 00 00 00 
00B62A 00 00 00 00 00 
00B630 00 00 00 00 00 
00B635 00 00 00 00 00 
00B63A 00 00 00 00 00 
00B640 00 00 00 00 00 
00B645 00 00 00 00 00 
00B64A 00 00 00 00 00 
00B650 00 00 00 00 00 
00B655 00 00 00 00 00 
00B65A 00 00 00 00 00 
00B660 00 00 00 00 00 
00B665 00 00 00 00 00 
00B66A 00 00 00 00 00 
00B670 00 00 00 00 00 
00B675 00 00 00 00 00 
00B67A 00 00 00 00 00 
00B680 00 00 00 00 00 
00B685 00 00 00 00 00 
00B68A 00 00 00 00 00 
00B690 00 00 00 00 00 
00B695 00 00 00 00 00 
00B69A 00 00 00 00 00 
00B6A0 00 00 00 00 00 
00B6A5 00 00 00 00 00 
00B6AA 00 00 00 00 00 
00B6B0 00 00 00 00 00 
00B6B5 00 00 00 00 00 
00B6BA 00 00 00 00 00 
00B6C0 00 00 00 00 00 
00B6C5 00 00 00 00 00 
00B6CA 00 00 00 00 00 
00B6D0 00 00 00 00 00 
00B6D5 00 00 00 00 00 
00B6DA 00 00 00 00 00 
00B6E0 00 00 00 00 00 
00B6E5 00 00 00 00 00 
00B6EA 00 00 00 00 00 
00B6F0 00 00 00 00 00 
00B6F5 00 00 00 00 00 
00B6FA 00 00 00 00 00 
00B700 00 00 00 00 00 
00B705 00 00 00 00 00 
00B70A 00 00 00 00 00 
00B710 00 00 00 00 00 
00B715 00 00 00 00 00 
00B71A 00 00 00 00 00 
00B720 00 00 00 00 00 
00B725 00 00 00 00 00 
00B72A 00 00 00 00 00 
00B730 00 00 00 00 00 
00B735 00 00 00 00 00 
00B73A 00 00 00 00 00 
00B740 00 00 00 00 00 
00B745 00 00 00 00 00 
00B74A 00 00 00 00 00 
00B750 00 00 00 00 00 
00B755 00 00 00 00 00 
00B75A 00 00 00 00 00 
00B760 00 00 00 00 00 
00B765 00 00 00 00 00 
00B76A 00 00 00 00 00 
00B770 00 00 00 00 00 
00B775 00 00 00 00 00 
00B77A 00 00 00 00 00 
00B780 00 00 00 00 00 
00B785 00 00 00 00 00 
00B78A 00 00 00 00 00 
00B790 00 00 00 00 00 
00B795 00 00 00 00 00 
00B79A 00 00 00 00 00 
00B7A0 00 00 00 00 00 
00B7A5 00 00 00 00 00 
00B7AA 00 00 00 00 00 
00B7B0 00 00 00 00 00 
00B7B5 00 00 00 00 00 
00B7BA 00 00 00 00 00 
00B7C0 00 00 00 00 00 
00B7C5 00 00 00 00 00 
00B7CA 00 00 00 00 00 
00B7D0 00 00 00 00 00 
00B7D5 00 00 00 00 00 
00B7DA 00 00 00 00 00 
00B7E0 00 00 00 00 00 
00B7E5 00 00 00 00 00 
00B7EA 00 00 00 00 00 
00B7F0 00 00 00 00 00 
00B7F5 00 00 00 00 00 
00B7FA 00 00 00 00 00 
00B800 00 00 00 00 00 
00B805 00 00 00 00 00 
00B80A 00 00 00 00 00 
00B810 00 00 00 00 00 
00B815 00 00 00 00 00 
00B81A 00 00 00 00 00 
00B820 00 00 00 00 00 
00B825 00 00 00 00 00 
00B82A 00 00 00 00 00 
00B830 00 00 00 00 00 
00B835 00 00 00 00 00 
00B83A 00 00 00 00 00 
00B840 00 00 00 00 00 
00B845 00 00 00 00 00 
00B84A 00 00 00 00 00 
00B850 00 00 00 00 00 
00B855 00 00 00 00 00 
00B85A 00 00 00 00 00 
00B860 00 00 00 00 00 
00B865 00 00 00 00 00 
00B86A 00 00 00 00 00 
00B870 00 00 00 00 00 
00B875 00 00 00 00 00 
00B87A 00 00 00 00 00 
00B880 00 00 00 00 00 
00B885 00 00 00 00 00 
00B88A 00 00 00 00 00 
00B890 00 00 00 00 00 
00B895 00 00 00 00 00 
00B89A 00 00 00 00 00 
00B8A0 00 00 00 00 00 
00B8A5 00 00 00 00 00 
00B8AA 00 00 00 00 00 
00B8B0 00 00 00 00 00 
00B8B5 00 00 00 00 00 
00B8BA 00 00 00 00 00 
00B8C0 00 00 00 00 00 
00B8C5 00 00 00 00 00 
00B8CA 00 00 00 00 00 
00B8D0 00 00 00 00 00 
00B8D5 00 00 00 00 00 
00B8DA 00 00 00 00 00 
00B8E0 00 00 00 00 00 
00B8E5 00 00 00 00 00 
00B8EA 00 00 00 00 00 
00B8F0 00 00 00 00 00 
00B8F5 00 00 00 00 00 
00B8FA 00 00 00 00 00 
00B900 00 00 00 00 00 
00B905 00 00 00 00 00 
00B90A 00 00 00 00 00 
00B910 00 00 00 00 00 
00B915 00 00 00 00 00 
00B91A 00 00 00 00 00 
00B920 00 00 00 00 00 
00B925 00 00 00 00 00 
00B92A 00 00 00 00 00 
00B930 00 00 00 00 00 
00B935 00 00 00 00 00 
00B93A 00 00 00 00 00 
00B940 00 00 00 00 00 
00B945 00 00 00 00 00 
00B94A 00 00 00 00 00 
00B950 00 00 00 00 00 
00B955 00 00 00 00 00 
00B95A 00 00 00 00 00 
00B960 00 00 00 00 00 
00B965 00 00 00 00 00 
00B96A 00 00 00 00 00 
00B970 00 00 00 00 00 
00B975 00 00 00 00 00 
00B97A 00 00 00 00 00 
00B980 00 00 00 00 00 
00B985 00 00 00 00 00 
00B98A 00 00 00 00 00 
00B990 00 00 00 00 00 
00B995 00 00 00 00 00 
00B99A 00 00 00 00 00 
00B9A0 00 00 00 00 00 
00B9A5 00 00 00 00 00 
00B9AA 00 00 00 00 00 
00B9B0 00 00 00 00 00 
00B9B5 00 00 00 00 00 
00B9BA 00 00 00 00 00 
00B9C0 00 00 00 00 00 
00B9C5 00 00 00 00 00 
00B9CA 00 00 00 00 00 
00B9D0 00 00 00 00 00 
00B9D5 00 00 00 00 00 
00B9DA 00 00 00 00 00 
00B9E0 00 00 00 00 00 
00B9E5 00 00 00 00 00 
00B9EA 00 00 00 00 00 
00B9F0 00 00 00 00 00 
00B9F5 00 00 00 00 00 
00B9FA 00 00 00 00 00 
00BA00 00 00 00 00 00 
00BA05 00 00 00 00 00 
00BA0A 00 00 00 00 00 
00BA10 00 00 00 00 00 
00BA15 00 00 00 00 00 
00BA1A 00 00 00 00 00 
00BA20 00 00 00 00 00 
00BA25 00 00 00 00 00 
00BA2A 00 00 00 00 00 
00BA30 00 00 00 00 00 
00BA35 00 00 00 00 00 
00BA3A 00 00 00 00 00 
00BA40 00 00 00 00 00 
00BA45 00 00 00 00 00 
00BA4A 00 00 00 00 00 
00BA50 00 00 00 00 00 
00BA55 00 00 00 00 00 
00BA5A 00 00 00 00 00 
00BA60 00 00 00 00 00 
00BA65 00 00 00 00 00 
00BA6A 00 00 00 00 00 
00BA70 00 00 00 00 00 
00BA75 00 00 00 00 00 
00BA7A 00 00 00 00 00 
00BA80 00 00 00 00 00 
00BA85 00 00 00 00 00 
00BA8A 00 00 00 00 00 
00BA90 00 00 00 00 00 
00BA95 00 00 00 00 00 
00BA9A 00 00 00 00 00 
00BAA0 00 00 00 00 00 
00BAA5 00 00 00 00 00 
00BAAA 00 00 00 00 00 
00BAB0 00 00 00 00 00 
00BAB5 00 00 00 00 00 
00BABA 00 00 00 00 00 
00BAC0 00 00 00 00 00 
00BAC5 00 00 00 00 00 
00BACA 00 00 00 00 00 
00BAD0 00 00 00 00 00 
00BAD5 00 00 00 00 00 
00BADA 00 00 00 00 00 
00BAE0 00 00 00 00 00 
00BAE5 00 00 00 00 00 
00BAEA 00 00 00 00 00 
00BAF0 00 00 00 00 00 
00BAF5 00 00 00 00 00 
00BAFA 00 00 00 00 00 
00BB00 00 00 00 00 00 
00BB05 00 00 00 00 00 
00BB0A 00 00 00 00 00 
00BB10 00 00 00 00 00 
00BB15 00 00 00 00 00 
00BB1A 00 00 00 00 00 
00BB20 00 00 00 00 00 
00BB25 00 00 00 00 00 
00BB2A 00 00 00 00 00 
00BB30 00 00 00 00 00 
00BB35 00 00 00 00 00 
00BB3A 00 00 00 00 00 
00BB40 00 00 00 00 00 
00BB45 00 00 00 00 00 
00BB4A 00 00 00 00 00 
00BB50 00 00 00 00 00 
00BB55 00 00 00 00 00 
00BB5A 00 00 00 00 00 
00BB60 00 00 00 00 00 
00BB65 00 00 00 00 00 
00BB6A 00 00 00 00 00 
00BB70 00 00 00 00 00 
00BB75 00 00 00 00 00 
00BB7A 00 00 00 00 00 
00BB80 00 00 00 00 00 
00BB85 00 00 00 00 00 
00BB8A 00 00 00 00 00 
00BB90 00 00 00 00 00 
00BB95 00 00 00 00 00 
00BB9A 00 00 00 00 00 
00BBA0 00 00 00 00 00 
00BBA5 00 00 00 00 00 
00BBAA 00 00 00 00 00 
00BBB0 00 00 00 00 00 
00BBB5 00 00 00 00 00 
00BBBA 00 00 00 00 00 
00BBC0 00 00 00 00 00 
00BBC5 00 00 00 00 00 
00BBCA 00 00 00 00 00 
00BBD0 00 00 00 00 00 
00BBD5 00 00 00 00 00 
00BBDA 00 00 00 00 00 
00BBE0 00 00 00 00 00 
00BBE5 00 00 00 00 00 
00BBEA 00 00 00 00 00 
00BBF0 00 00 00 00 00 
00BBF5 00 00 00 00 00 
00BBFA 00 00 00 00 00 
00BC00 00 00 00 00 00 
00BC05 00 00 00 00 00 
00BC0A 00 00 00 00 00 
00BC10 00 00 00 00 00 
00BC15 00 00 00 00 00 
00BC1A 00 00 00 00 00 
00BC20 00 00 00 00 00 
00BC25 00 00 00 00 00 
00BC2A 00 00 00 00 00 
00BC30 00 00 00 00 00 
00BC35 00 00 00 00 00 
00BC3A 00 00 00 00 00 
00BC40 00 00 00 00 00 
00BC45 00 00 00 00 00 
00BC4A 00 00 00 00 00 
00BC50 00 00 00 00 00 
00BC55 00 00 00 00 00 
00BC5A 00 00 00 00 00 
00BC60 00 00 00 00 00 
00BC65 00 00 00 00 00 
00BC6A 00 00 00 00 00 
00BC70 00 00 00 00 00 
00BC75 00 00 00 00 00 
00BC7A 00 00 00 00 00 
00BC80 00 00 00 00 00 
00BC85 00 00 00 00 00 
00BC8A 00 00 00 00 00 
00BC90 00 00 00 00 00 
00BC95 00 00 00 00 00 
00BC9A 00 00 00 00 00 
00BCA0 00 00 00 00 00 
00BCA5 00 00 00 00 00 
00BCAA 00 00 00 00 00 
00BCB0 00 00 00 00 00 
00BCB5 00 00 00 00 00 
00BCBA 00 00 00 00 00 
00BCC0 00 00 00 00 00 
00BCC5 00 00 00 00 00 
00BCCA 00 00 00 00 00 
00BCD0 00 00 00 00 00 
00BCD5 00 00 00 00 00 
00BCDA 00 00 00 00 00 
00BCE0 00 00 00 00 00 
00BCE5 00 00 00 00 00 
00BCEA 00 00 00 00 00 
00BCF0 00 00 00 00 00 
00BCF5 00 00 00 00 00 
00BCFA 00 00 00 00 00 
00BD00 00 00 00 00 00 
00BD05 00 00 00 00 00 
00BD0A 00 00 00 00 00 
00BD10 00 00 00 00 00 
00BD15 00 00 00 00 00 
00BD1A 00 00 00 00 00 
00BD20 00 00 00 00 00 
00BD25 00 00 00 00 00 
00BD2A 00 00 00 00 00 
00BD30 00 00 00 00 00 
00BD35 00 00 00 00 00 
00BD3A 00 00 00 00 00 
00BD40 00 00 00 00 00 
00BD45 00 00 00 00 00 
00BD4A 00 00 00 00 00 
00BD50 00 00 00 00 00 
00BD55 00 00 00 00 00 
00BD5A 00 00 00 00 00 
00BD60 00 00 00 00 00 
00BD65 00 00 00 00 00 
00BD6A 00 00 00 00 00 
00BD70 00 00 00 00 00 
00BD75 00 00 00 00 00 
00BD7A 00 00 00 00 00 
00BD80 00 00 00 00 00 
00BD85 00 00 00 00 00 
00BD8A 00 00 00 00 00 
00BD90 00 00 00 00 00 
00BD95 00 00 00 00 00 
00BD9A 00 00 00 00 00 
00BDA0 00 00 00 00 00 
00BDA5 00 00 00 00 00 
00BDAA 00 00 00 00 00 
00BDB0 00 00 00 00 00 
00BDB5 00 00 00 00 00 
00BDBA 00 00 00 00 00 
00BDC0 00 00 00 00 00 
00BDC5 00 00 00 00 00 
00BDCA 00 00 00 00 00 
00BDD0 00 00 00 00 00 
00BDD5 00 00 00 00 00 
00BDDA 00 00 00 00 00 
00BDE0 00 00 00 00 00 
00BDE5 00 00 00 00 00 
00BDEA 00 00 00 00 00 
00BDF0 00 00 00 00 00 
00BDF5 00 00 00 00 00 
00BDFA 00 00 00 00 00 
00BE00 00 00 00 00 00 
00BE05 00 00 00 00 00 
00BE0A 00 00 00 00 00 
00BE10 00 00 00 00 00 
00BE15 00 00 00 00 00 
00BE1A 00 00 00 00 00 
00BE20 00 00 00 00 00 
00BE25 00 00 00 00 00 
00BE2A 00 00 00 00 00 
00BE30 00 00 00 00 00 
00BE35 00 00 00 00 00 
00BE3A 00 00 00 00 00 
00BE40 00 00 00 00 00 
00BE45 00 00 00 00 00 
00BE4A 00 00 00 00 00 
00BE50 00 00 00 00 00 
00BE55 00 00 00 00 00 
00BE5A 00 00 00 00 00 
00BE60 00 00 00 00 00 
00BE65 00 00 00 00 00 
00BE6A 00 00 00 00 00 
00BE70 00 00 00 00 00 
00BE75 00 00 00 00 00 
00BE7A 00 00 00 00 00 
00BE80 00 00 00 00 00 
00BE85 00 00 00 00 00 
00BE8A 00 00 00 00 00 
00BE90 00 00 00 00 00 
00BE95 00 00 00 00 00 
00BE9A 00 00 00 00 00 
00BEA0 00 00 00 00 00 
00BEA5 00 00 00 00 00 
00BEAA 00 00 00 00 00 
00BEB0 00 00 00 00 00 
00BEB5 00 00 00 00 00 
00BEBA 00 00 00 00 00 
00BEC0 00 00 00 00 00 
00BEC5 00 00 00 00 00 
00BECA 00 00 00 00 00 
00BED0 00 00 00 00 00 
00BED5 00 00 00 00 00 
00BEDA 00 00 00 00 00 
00BEE0 00 00 00 00 00 
00BEE5 00 00 00 00 00 
00BEEA 00 00 00 00 00 
00BEF0 00 00 00 00 00 
00BEF5 00 00 00 00 00 
00BEFA 00 00 00 00 00 
00BF00 00 00 00 00 00 
00BF05 00 00 00 00 00 
00BF0A 00 00 00 00 00 
00BF10 00 00 00 00 00 
00BF15 00 00 00 00 00 
00BF1A 00 00 00 00 00 
00BF20 00 00 00 00 00 
00BF25 00 00 00 00 00 
00BF2A 00 00 00 00 00 
00BF30 00 00 00 00 00 
00BF35 00 00 00 00 00 
00BF3A 00 00 00 00 00 
00BF40 00 00 00 00 00 
00BF45 00 00 00 00 00 
00BF4A 00 00 00 00 00 
00BF50 00 00 00 00 00 
00BF55 00 00 00 00 00 
00BF5A 00 00 00 00 00 
00BF60 00 00 00 00 00 
00BF65 00 00 00 00 00 
00BF6A 00 00 00 00 00 
00BF70 00 00 00 00 00 
00BF75 00 00 00 00 00 
00BF7A 00 00 00 00 00 
00BF80 00 00 00 00 00 
00BF85 00 00 00 00 00 
00BF8A 00 00 00 00 00 
00BF90 00 00 00 00 00 
00BF95 00 00 00 00 00 
00BF9A 00 00 00 00 00 
00BFA0 00 00 00 00 00 
00BFA5 00 00 00 00 00 
00BFAA 00 00 00 00 00 
00BFB0 00 00 00 00 00 
00BFB5 00 00 00 00 00 
00BFBA 00 00 00 00 00 
00BFC0 00 00 00 00 00 
00BFC5 00 00 00 00 00 
00BFCA 00 00 00 00 00 
00BFD0 00 00 00 00 00 
00BFD5 00 00 00 00 00 
00BFDA 00 00 00 00 00 
00BFE0 00 00 00 00 00 
00BFE5 00 00 00 00 00 
00BFEA 00 00 00 00 00 
00BFF0 00 00 00 00 00 
00BFF5 00 00 00 00 00 
00BFFA 00 00 00 00 00 
00C000 00 00 00 00 00 
00C005 00 00 00 00 00 
00C00A 00 00 00 00 00 
00C010 00 00 00 00 00 
00C015 00 00 00 00 00 
00C01A 00 00 00 00 00 
00C020 00 00 00 00 00 
00C025 00 00 00 00 00 
00C02A 00 00 00 00 00 
00C030 00 00 00 00 00 
00C035 00 00 00 00 00 
00C03A 00 00 00 00 00 
00C040 00 00 00 00 00 
00C045 00 00 00 00 00 
00C04A 00 00 00 00 00 
00C050 00 00 00 00 00 
00C055 00 00 00 00 00 
00C05A 00 00 00 00 00 
00C060 00 00 00 00 00 
00C065 00 00 00 00 00 
00C06A 00 00 00 00 00 
00C070 00 00 00 00 00 
00C075 00 00 00 00 00 
00C07A 00 00 00 00 00 
00C080 00 00 00 00 00 
00C085 00 00 00 00 00 
00C08A 00 00 00 00 00 
00C090 00 00 00 00 00 
00C095 00 00 00 00 00 
00C09A 00 00 00 00 00 
00C0A0 00 00 00 00 00 
00C0A5 00 00 00 00 00 
00C0AA 00 00 00 00 00 
00C0B0 00 00 00 00 00 
00C0B5 00 00 00 00 00 
00C0BA 00 00 00 00 00 
00C0C0 00 00 00 00 00 
00C0C5 00 00 00 00 00 
00C0CA 00 00 00 00 00 
00C0D0 00 00 00 00 00 
00C0D5 00 00 00 00 00 
00C0DA 00 00 00 00 00 
00C0E0 00 00 00 00 00 
00C0E5 00 00 00 00 00 
00C0EA 00 00 00 00 00 
00C0F0 00 00 00 00 00 
00C0F5 00 00 00 00 00 
00C0FA 00 00 00 00 00 
00C100 00 00 00 00 00 
00C105 00 00 00 00 00 
00C10A 00 00 00 00 00 
00C110 00 00 00 00 00 
00C115 00 00 00 00 00 
00C11A 00 00 00 00 00 
00C120 00 00 00 00 00 
00C125 00 00 00 00 00 
00C12A 00 00 00 00 00 
00C130 00 00 00 00 00 
00C135 00 00 00 00 00 
00C13A 00 00 00 00 00 
00C140 00 00 00 00 00 
00C145 00 00 00 00 00 
00C14A 00 00 00 00 00 
00C150 00 00 00 00 00 
00C155 00 00 00 00 00 
00C15A 00 00 00 00 00 
00C160 00 00 00 00 00 
00C165 00 00 00 00 00 
00C16A 00 00 00 00 00 
00C170 00 00 00 00 00 
00C175 00 00 00 00 00 
00C17A 00 00 00 00 00 
00C180 00 00 00 00 00 
00C185 00 00 00 00 00 
00C18A 00 00 00 00 00 
00C190 00 00 00 00 00 
00C195 00 00 00 00 00 
00C19A 00 00 00 00 00 
00C1A0 00 00 00 00 00 
00C1A5 00 00 00 00 00 
00C1AA 00 00 00 00 00 
00C1B0 00 00 00 00 00 
00C1B5 00 00 00 00 00 
00C1BA 00 00 00 00 00 
00C1C0 00 00 00 00 00 
00C1C5 00 00 00 00 00 
00C1CA 00 00 00 00 00 
00C1D0 00 00 00 00 00 
00C1D5 00 00 00 00 00 
00C1DA 00 00 00 00 00 
00C1E0 00 00 00 00 00 
00C1E5 00 00 00 00 00 
00C1EA 00 00 00 00 00 
00C1F0 00 00 00 00 00 
00C1F5 00 00 00 00 00 
00C1FA 00 00 00 00 00 
00C200 00 00 00 00 00 
00C205 00 00 00 00 00 
00C20A 00 00 00 00 00 
00C210 00 00 00 00 00 
00C215 00 00 00 00 00 
00C21A 00 00 00 00 00 
00C220 00 00 00 00 00 
00C225 00 00 00 00 00 
00C22A 00 00 00 00 00 
00C230 00 00 00 00 00 
00C235 00 00 00 00 00 
00C23A 00 00 00 00 00 
00C240 00 00 00 00 00 
00C245 00 00 00 00 00 
00C24A 00 00 00 00 00 
00C250 00 00 00 00 00 
00C255 00 00 00 00 00 
00C25A 00 00 00 00 00 
00C260 00 00 00 00 00 
00C265 00 00 00 00 00 
00C26A 00 00 00 00 00 
00C270 00 00 00 00 00 
00C275 00 00 00 00 00 
00C27A 00 00 00 00 00 
00C280 00 00 00 00 00 
00C285 00 00 00 00 00 
00C28A 00 00 00 00 00 
00C290 00 00 00 00 00 
00C295 00 00 00 00 00 
00C29A 00 00 00 00 00 
00C2A0 00 00 00 00 00 
00C2A5 00 00 00 00 00 
00C2AA 00 00 00 00 00 
00C2B0 00 00 00 00 00 
00C2B5 00 00 00 00 00 
00C2BA 00 00 00 00 00 
00C2C0 00 00 00 00 00 
00C2C5 00 00 00 00 00 
00C2CA 00 00 00 00 00 
00C2D0 00 00 00 00 00 
00C2D5 00 00 00 00 00 
00C2DA 00 00 00 00 00 
00C2E0 00 00 00 00 00 
00C2E5 00 00 00 00 00 
00C2EA 00 00 00 00 00 
00C2F0 00 00 00 00 00 
00C2F5 00 00 00 00 00 
00C2FA 00 00 00 00 00 
00C300 00 00 00 00 00 
00C305 00 00 00 00 00 
00C30A 00 00 00 00 00 
00C310 00 00 00 00 00 
00C315 00 00 00 00 00 
00C31A 00 00 00 00 00 
00C320 00 00 00 00 00 
00C325 00 00 00 00 00 
00C32A 00 00 00 00 00 
00C330 00 00 00 00 00 
00C335 00 00 00 00 00 
00C33A 00 00 00 00 00 
00C340 00 00 00 00 00 
00C345 00 00 00 00 00 
00C34A 00 00 00 00 00 
00C350 00 00 00 00 00 
00C355 00 00 00 00 00 
00C35A 00 00 00 00 00 
00C360 00 00 00 00 00 
00C365 00 00 00 00 00 
00C36A 00 00 00 00 00 
00C370 00 00 00 00 00 
00C375 00 00 00 00 00 
00C37A 00 00 00 00 00 
00C380 00 00 00 00 00 
00C385 00 00 00 00 00 
00C38A 00 00 00 00 00 
00C390 00 00 00 00 00 
00C395 00 00 00 00 00 
00C39A 00 00 00 00 00 
00C3A0 00 00 00 00 00 
00C3A5 00 00 00 00 00 
00C3AA 00 00 00 00 00 
00C3B0 00 00 00 00 00 
00C3B5 00 00 00 00 00 
00C3BA 00 00 00 00 00 
00C3C0 00 00 00 00 00 
00C3C5 00 00 00 00 00 
00C3CA 00 00 00 00 00 
00C3D0 00 00 00 00 00 
00C3D5 00 00 00 00 00 
00C3DA 00 00 00 00 00 
00C3E0 00 00 00 00 00 
00C3E5 00 00 00 00 00 
00C3EA 00 00 00 00 00 
00C3F0 00 00 00 00 00 
00C3F5 00 00 00 00 00 
00C3FA 00 00 00 00 00 
00C400 00 00 00 00 00 
00C405 00 00 00 00 00 
00C40A 00 00 00 00 00 
00C410 00 00 00 00 00 
00C415 00 00 00 00 00 
00C41A 00 00 00 00 00 
00C420 00 00 00 00 00 
00C425 00 00 00 00 00 
00C42A 00 00 00 00 00 
00C430 00 00 00 00 00 
00C435 00 00 00 00 00 
00C43A 00 00 00 00 00 
00C440 00 00 00 00 00 
00C445 00 00 00 00 00 
00C44A 00 00 00 00 00 
00C450 00 00 00 00 00 
00C455 00 00 00 00 00 
00C45A 00 00 00 00 00 
00C460 00 00 00 00 00 
00C465 00 00 00 00 00 
00C46A 00 00 00 00 00 
00C470 00 00 00 00 00 
00C475 00 00 00 00 00 
00C47A 00 00 00 00 00 
00C480 00 00 00 00 00 
00C485 00 00 00 00 00 
00C48A 00 00 00 00 00 
00C490 00 00 00 00 00 
00C495 00 00 00 00 00 
00C49A 00 00 00 00 00 
00C4A0 00 00 00 00 00 
00C4A5 00 00 00 00 00 
00C4AA 00 00 00 00 00 
00C4B0 00 00 00 00 00 
00C4B5 00 00 00 00 00 
00C4BA 00 00 00 00 00 
00C4C0 00 00 00 00 00 
00C4C5 00 00 00 00 00 
00C4CA 00 00 00 00 00 
00C4D0 00 00 00 00 00 
00C4D5 00 00 00 00 00 
00C4DA 00 00 00 00 00 
00C4E0 00 00 00 00 00 
00C4E5 00 00 00 00 00 
00C4EA 00 00 00 00 00 
00C4F0 00 00 00 00 00 
00C4F5 00 00 00 00 00 
00C4FA 00 00 00 00 00 
00C500 00 00 00 00 00 
00C505 00 00 00 00 00 
00C50A 00 00 00 00 00 
00C510 00 00 00 00 00 
00C515 00 00 00 00 00 
00C51A 00 00 00 00 00 
00C520 00 00 00 00 00 
00C525 00 00 00 00 00 
00C52A 00 00 00 00 00 
00C530 00 00 00 00 00 
00C535 00 00 00 00 00 
00C53A 00 00 00 00 00 
00C540 00 00 00 00 00 
00C545 00 00 00 00 00 
00C54A 00 00 00 00 00 
00C550 00 00 00 00 00 
00C555 00 00 00 00 00 
00C55A 00 00 00 00 00 
00C560 00 00 00 00 00 
00C565 00 00 00 00 00 
00C56A 00 00 00 00 00 
00C570 00 00 00 00 00 
00C575 00 00 00 00 00 
00C57A 00 00 00 00 00 
00C580 00 00 00 00 00 
00C585 00 00 00 00 00 
00C58A 00 00 00 00 00 
00C590 00 00 00 00 00 
00C595 00 00 00 00 00 
00C59A 00 00 00 00 00 
00C5A0 00 00 00 00 00 
00C5A5 00 00 00 00 00 
00C5AA 00 00 00 00 00 
00C5B0 00 00 00 00 00 
00C5B5 00 00 00 00 00 
00C5BA 00 00 00 00 00 
00C5C0 00 00 00 00 00 
00C5C5 00 00 00 00 00 
00C5CA 00 00 00 00 00 
00C5D0 00 00 00 00 00 
00C5D5 00 00 00 00 00 
00C5DA 00 00 00 00 00 
00C5E0 00 00 00 00 00 
00C5E5 00 00 00 00 00 
00C5EA 00 00 00 00 00 
00C5F0 00 00 00 00 00 
00C5F5 00 00 00 00 00 
00C5FA 00 00 00 00 00 
00C600 00 00 00 00 00 
00C605 00 00 00 00 00 
00C60A 00 00 00 00 00 
00C610 00 00 00 00 00 
00C615 00 00 00 00 00 
00C61A 00 00 00 00 00 
00C620 00 00 00 00 00 
00C625 00 00 00 00 00 
00C62A 00 00 00 00 00 
00C630 00 00 00 00 00 
00C635 00 00 00 00 00 
00C63A 00 00 00 00 00 
00C640 00 00 00 00 00 
00C645 00 00 00 00 00 
00C64A 00 00 00 00 00 
00C650 00 00 00 00 00 
00C655 00 00 00 00 00 
00C65A 00 00 00 00 00 
00C660 00 00 00 00 00 
00C665 00 00 00 00 00 
00C66A 00 00 00 00 00 
00C670 00 00 00 00 00 
00C675 00 00 00 00 00 
00C67A 00 00 00 00 00 
00C680 00 00 00 00 00 
00C685 00 00 00 00 00 
00C68A 00 00 00 00 00 
00C690 00 00 00 00 00 
00C695 00 00 00 00 00 
00C69A 00 00 00 00 00 
00C6A0 00 00 00 00 00 
00C6A5 00 00 00 00 00 
00C6AA 00 00 00 00 00 
00C6B0 00 00 00 00 00 
00C6B5 00 00 00 00 00 
00C6BA 00 00 00 00 00 
00C6C0 00 00 00 00 00 
00C6C5 00 00 00 00 00 
00C6CA 00 00 00 00 00 
00C6D0 00 00 00 00 00 
00C6D5 00 00 00 00 00 
00C6DA 00 00 00 00 00 
00C6E0 00 00 00 00 00 
00C6E5 00 00 00 00 00 
00C6EA 00 00 00 00 00 
00C6F0 00 00 00 00 00 
00C6F5 00 00 00 00 00 
00C6FA 00 00 00 00 00 
00C700 00 00 00 00 00 
00C705 00 00 00 00 00 
00C70A 00 00 00 00 00 
00C710 00 00 00 00 00 
00C715 00 00 00 00 00 
00C71A 00 00 00 00 00 
00C720 00 00 00 00 00 
00C725 00 00 00 00 00 
00C72A 00 00 00 00 00 
00C730 00 00 00 00 00 
00C735 00 00 00 00 00 
00C73A 00 00 00 00 00 
00C740 00 00 00 00 00 
00C745 00 00 00 00 00 
00C74A 00 00 00 00 00 
00C750 00 00 00 00 00 
00C755 00 00 00 00 00 
00C75A 00 00 00 00 00 
00C760 00 00 00 00 00 
00C765 00 00 00 00 00 
00C76A 00 00 00 00 00 
00C770 00 00 00 00 00 
00C775 00 00 00 00 00 
00C77A 00 00 00 00 00 
00C780 00 00 00 00 00 
00C785 00 00 00 00 00 
00C78A 00 00 00 00 00 
00C790 00 00 00 00 00 
00C795 00 00 00 00 00 
00C79A 00 00 00 00 00 
00C7A0 00 00 00 00 00 
00C7A5 00 00 00 00 00 
00C7AA 00 00 00 00 00 
00C7B0 00 00 00 00 00 
00C7B5 00 00 00 00 00 
00C7BA 00 00 00 00 00 
00C7C0 00 00 00 00 00 
00C7C5 00 00 00 00 00 
00C7CA 00 00 00 00 00 
00C7D0 00 00 00 00 00 
00C7D5 00 00 00 00 00 
00C7DA 00 00 00 00 00 
00C7E0 00 00 00 00 00 
00C7E5 00 00 00 00 00 
00C7EA 00 00 00 00 00 
00C7F0 00 00 00 00 00 
00C7F5 00 00 00 00 00 
00C7FA 00 00 00 00 00 
00C800 00 00 00 00 00 
00C805 00 00 00 00 00 
00C80A 00 00 00 00 00 
00C810 00 00 00 00 00 
00C815 00 00 00 00 00 
00C81A 00 00 00 00 00 
00C820 00 00 00 00 00 
00C825 00 00 00 00 00 
00C82A 00 00 00 00 00 
00C830 00 00 00 00 00 
00C835 00 00 00 00 00 
00C83A 00 00 00 00 00 
00C840 00 00 00 00 00 
00C845 00 00 00 00 00 
00C84A 00 00 00 00 00 
00C850 00 00 00 00 00 
00C855 00 00 00 00 00 
00C85A 00 00 00 00 00 
00C860 00 00 00 00 00 
00C865 00 00 00 00 00 
00C86A 00 00 00 00 00 
00C870 00 00 00 00 00 
00C875 00 00 00 00 00 
00C87A 00 00 00 00 00 
00C880 00 00 00 00 00 
00C885 00 00 00 00 00 
00C88A 00 00 00 00 00 
00C890 00 00 00 00 00 
00C895 00 00 00 00 00 
00C89A 00 00 00 00 00 
00C8A0 00 00 00 00 00 
00C8A5 00 00 00 00 00 
00C8AA 00 00 00 00 00 
00C8B0 00 00 00 00 00 
00C8B5 00 00 00 00 00 
00C8BA 00 00 00 00 00 
00C8C0 00 00 00 00 00 
00C8C5 00 00 00 00 00 
00C8CA 00 00 00 00 00 
00C8D0 00 00 00 00 00 
00C8D5 00 00 00 00 00 
00C8DA 00 00 00 00 00 
00C8E0 00 00 00 00 00 
00C8E5 00 00 00 00 00 
00C8EA 00 00 00 00 00 
00C8F0 00 00 00 00 00 
00C8F5 00 00 00 00 00 
00C8FA 00 00 00 00 00 
00C900 00 00 00 00 00 
00C905 00 00 00 00 00 
00C90A 00 00 00 00 00 
00C910 00 00 00 00 00 
00C915 00 00 00 00 00 
00C91A 00 00 00 00 00 
00C920 00 00 00 00 00 
00C925 00 00 00 00 00 
00C92A 00 00 00 00 00 
00C930 00 00 00 00 00 
00C935 00 00 00 00 00 
00C93A 00 00 00 00 00 
00C940 00 00 00 00 00 
00C945 00 00 00 00 00 
00C94A 00 00 00 00 00 
00C950 00 00 00 00 00 
00C955 00 00 00 00 00 
00C95A 00 00 00 00 00 
00C960 00 00 00 00 00 
00C965 00 00 00 00 00 
00C96A 00 00 00 00 00 
00C970 00 00 00 00 00 
00C975 00 00 00 00 00 
00C97A 00 00 00 00 00 
00C980 00 00 00 00 00 
00C985 00 00 00 00 00 
00C98A 00 00 00 00 00 
00C990 00 00 00 00 00 
00C995 00 00 00 00 00 
00C99A 00 00 00 00 00 
00C9A0 00 00 00 00 00 
00C9A5 00 00 00 00 00 
00C9AA 00 00 00 00 00 
00C9B0 00 00 00 00 00 
00C9B5 00 00 00 00 00 
00C9BA 00 00 00 00 00 
00C9C0 00 00 00 00 00 
00C9C5 00 00 00 00 00 
00C9CA 00 00 00 00 00 
00C9D0 00 00 00 00 00 
00C9D5 00 00 00 00 00 
00C9DA 00 00 00 00 00 
00C9E0 00 00 00 00 00 
00C9E5 00 00 00 00 00 
00C9EA 00 00 00 00 00 
00C9F0 00 00 00 00 00 
00C9F5 00 00 00 00 00 
00C9FA 00 00 00 00 00 
00CA00 00 00 00 00 00 
00CA05 00 00 00 00 00 
00CA0A 00 00 00 00 00 
00CA10 00 00 00 00 00 
00CA15 00 00 00 00 00 
00CA1A 00 00 00 00 00 
00CA20 00 00 00 00 00 
00CA25 00 00 00 00 00 
00CA2A 00 00 00 00 00 
00CA30 00 00 00 00 00 
00CA35 00 00 00 00 00 
00CA3A 00 00 00 00 00 
00CA40 00 00 00 00 00 
00CA45 00 00 00 00 00 
00CA4A 00 00 00 00 00 
00CA50 00 00 00 00 00 
00CA55 00 00 00 00 00 
00CA5A 00 00 00 00 00 
00CA60 00 00 00 00 00 
00CA65 00 00 00 00 00 
00CA6A 00 00 00 00 00 
00CA70 00 00 00 00 00 
00CA75 00 00 00 00 00 
00CA7A 00 00 00 00 00 
00CA80 00 00 00 00 00 
00CA85 00 00 00 00 00 
00CA8A 00 00 00 00 00 
00CA90 00 00 00 00 00 
00CA95 00 00 00 00 00 
00CA9A 00 00 00 00 00 
00CAA0 00 00 00 00 00 
00CAA5 00 00 00 00 00 
00CAAA 00 00 00 00 00 
00CAB0 00 00 00 00 00 
00CAB5 00 00 00 00 00 
00CABA 00 00 00 00 00 
00CAC0 00 00 00 00 00 
00CAC5 00 00 00 00 00 
00CACA 00 00 00 00 00 
00CAD0 00 00 00 00 00 
00CAD5 00 00 00 00 00 
00CADA 00 00 00 00 00 
00CAE0 00 00 00 00 00 
00CAE5 00 00 00 00 00 
00CAEA 00 00 00 00 00 
00CAF0 00 00 00 00 00 
00CAF5 00 00 00 00 00 
00CAFA 00 00 00 00 00 
00CB00 00 00 00 00 00 
00CB05 00 00 00 00 00 
00CB0A 00 00 00 00 00 
00CB10 00 00 00 00 00 
00CB15 00 00 00 00 00 
00CB1A 00 00 00 00 00 
00CB20 00 00 00 00 00 
00CB25 00 00 00 00 00 
00CB2A 00 00 00 00 00 
00CB30 00 00 00 00 00 
00CB35 00 00 00 00 00 
00CB3A 00 00 00 00 00 
00CB40 00 00 00 00 00 
00CB45 00 00 00 00 00 
00CB4A 00 00 00 00 00 
00CB50 00 00 00 00 00 
00CB55 00 00 00 00 00 
00CB5A 00 00 00 00 00 
00CB60 00 00 00 00 00 
00CB65 00 00 00 00 00 
00CB6A 00 00 00 00 00 
00CB70 00 00 00 00 00 
00CB75 00 00 00 00 00 
00CB7A 00 00 00 00 00 
00CB80 00 00 00 00 00 
00CB85 00 00 00 00 00 
00CB8A 00 00 00 00 00 
00CB90 00 00 00 00 00 
00CB95 00 00 00 00 00 
00CB9A 00 00 00 00 00 
00CBA0 00 00 00 00 00 
00CBA5 00 00 00 00 00 
00CBAA 00 00 00 00 00 
00CBB0 00 00 00 00 00 
00CBB5 00 00 00 00 00 
00CBBA 00 00 00 00 00 
00CBC0 00 00 00 00 00 
00CBC5 00 00 00 00 00 
00CBCA 00 00 00 00 00 
00CBD0 00 00 00 00 00 
00CBD5 00 00 00 00 00 
00CBDA 00 00 00 00 00 
00CBE0 00 00 00 00 00 
00CBE5 00 00 00 00 00 
00CBEA 00 00 00 00 00 
00CBF0 00 00 00 00 00 
00CBF5 00 00 00 00 00 
00CBFA 00 00 00 00 00 
00CC00 00 00 00 00 00 
00CC05 00 00 00 00 00 
00CC0A 00 00 00 00 00 
00CC10 00 00 00 00 00 
00CC15 00 00 00 00 00 
00CC1A 00 00 00 00 00 
00CC20 00 00 00 00 00 
00CC25 00 00 00 00 00 
00CC2A 00 00 00 00 00 
00CC30 00 00 00 00 00 
00CC35 00 00 00 00 00 
00CC3A 00 00 00 00 00 
00CC40 00 00 00 00 00 
00CC45 00 00 00 00 00 
00CC4A 00 00 00 00 00 
00CC50 00 00 00 00 00 
00CC55 00 00 00 00 00 
00CC5A 00 00 00 00 00 
00CC60 00 00 00 00 00 
00CC65 00 00 00 00 00 
00CC6A 00 00 00 00 00 
00CC70 00 00 00 00 00 
00CC75 00 00 00 00 00 
00CC7A 00 00 00 00 00 
00CC80 00 00 00 00 00 
00CC85 00 00 00 00 00 
00CC8A 00 00 00 00 00 
00CC90 00 00 00 00 00 
00CC95 00 00 00 00 00 
00CC9A 00 00 00 00 00 
00CCA0 00 00 00 00 00 
00CCA5 00 00 00 00 00 
00CCAA 00 00 00 00 00 
00CCB0 00 00 00 00 00 
00CCB5 00 00 00 00 00 
00CCBA 00 00 00 00 00 
00CCC0 00 00 00 00 00 
00CCC5 00 00 00 00 00 
00CCCA 00 00 00 00 00 
00CCD0 00 00 00 00 00 
00CCD5 00 00 00 00 00 
00CCDA 00 00 00 00 00 
00CCE0 00 00 00 00 00 
00CCE5 00 00 00 00 00 
00CCEA 00 00 00 00 00 
00CCF0 00 00 00 00 00 
00CCF5 00 00 00 00 00 
00CCFA 00 00 00 00 00 
00CD00 00 00 00 00 00 
00CD05 00 00 00 00 00 
00CD0A 00 00 00 00 00 
00CD10 00 00 00 00 00 
00CD15 00 00 00 00 00 
00CD1A 00 00 00 00 00 
00CD20 00 00 00 00 00 
00CD25 00 00 00 00 00 
00CD2A 00 00 00 00 00 
00CD30 00 00 00 00 00 
00CD35 00 00 00 00 00 
00CD3A 00 00 00 00 00 
00CD40 00 00 00 00 00 
00CD45 00 00 00 00 00 
00CD4A 00 00 00 00 00 
00CD50 00 00 00 00 00 
00CD55 00 00 00 00 00 
00CD5A 00 00 00 00 00 
00CD60 00 00 00 00 00 
00CD65 00 00 00 00 00 
00CD6A 00 00 00 00 00 
00CD70 00 00 00 00 00 
00CD75 00 00 00 00 00 
00CD7A 00 00 00 00 00 
00CD80 00 00 00 00 00 
00CD85 00 00 00 00 00 
00CD8A 00 00 00 00 00 
00CD90 00 00 00 00 00 
00CD95 00 00 00 00 00 
00CD9A 00 00 00 00 00 
00CDA0 00 00 00 00 00 
00CDA5 00 00 00 00 00 
00CDAA 00 00 00 00 00 
00CDB0 00 00 00 00 00 
00CDB5 00 00 00 00 00 
00CDBA 00 00 00 00 00 
00CDC0 00 00 00 00 00 
00CDC5 00 00 00 00 00 
00CDCA 00 00 00 00 00 
00CDD0 00 00 00 00 00 
00CDD5 00 00 00 00 00 
00CDDA 00 00 00 00 00 
00CDE0 00 00 00 00 00 
00CDE5 00 00 00 00 00 
00CDEA 00 00 00 00 00 
00CDF0 00 00 00 00 00 
00CDF5 00 00 00 00 00 
00CDFA 00 00 00 00 00 
00CE00 00 00 00 00 00 
00CE05 00 00 00 00 00 
00CE0A 00 00 00 00 00 
00CE10 00 00 00 00 00 
00CE15 00 00 00 00 00 
00CE1A 00 00 00 00 00 
00CE20 00 00 00 00 00 
00CE25 00 00 00 00 00 
00CE2A 00 00 00 00 00 
00CE30 00 00 00 00 00 
00CE35 00 00 00 00 00 
00CE3A 00 00 00 00 00 
00CE40 00 00 00 00 00 
00CE45 00 00 00 00 00 
00CE4A 00 00 00 00 00 
00CE50 00 00 00 00 00 
00CE55 00 00 00 00 00 
00CE5A 00 00 00 00 00 
00CE60 00 00 00 00 00 
00CE65 00 00 00 00 00 
00CE6A 00 00 00 00 00 
00CE70 00 00 00 00 00 
00CE75 00 00 00 00 00 
00CE7A 00 00 00 00 00 
00CE80 00 00 00 00 00 
00CE85 00 00 00 00 00 
00CE8A 00 00 00 00 00 
00CE90 00 00 00 00 00 
00CE95 00 00 00 00 00 
00CE9A 00 00 00 00 00 
00CEA0 00 00 00 00 00 
00CEA5 00 00 00 00 00 
00CEAA 00 00 00 00 00 
00CEB0 00 00 00 00 00 
00CEB5 00 00 00 00 00 
00CEBA 00 00 00 00 00 
00CEC0 00 00 00 00 00 
00CEC5 00 00 00 00 00 
00CECA 00 00 00 00 00 
00CED0 00 00 00 00 00 
00CED5 00 00 00 00 00 
00CEDA 00 00 00 00 00 
00CEE0 00 00 00 00 00 
00CEE5 00 00 00 00 00 
00CEEA 00 00 00 00 00 
00CEF0 00 00 00 00 00 
00CEF5 00 00 00 00 00 
00CEFA 00 00 00 00 00 
00CF00 00 00 00 00 00 
00CF05 00 00 00 00 00 
00CF0A 00 00 00 00 00 
00CF10 00 00 00 00 00 
00CF15 00 00 00 00 00 
00CF1A 00 00 00 00 00 
00CF20 00 00 00 00 00 
00CF25 00 00 00 00 00 
00CF2A 00 00 00 00 00 
00CF30 00 00 00 00 00 
00CF35 00 00 00 00 00 
00CF3A 00 00 00 00 00 
00CF40 00 00 00 00 00 
00CF45 00 00 00 00 00 
00CF4A 00 00 00 00 00 
00CF50 00 00 00 00 00 
00CF55 00 00 00 00 00 
00CF5A 00 00 00 00 00 
00CF60 00 00 00 00 00 
00CF65 00 00 00 00 00 
00CF6A 00 00 00 00 00 
00CF70 00 00 00 00 00 
00CF75 00 00 00 00 00 
00CF7A 00 00 00 00 00 
00CF80 00 00 00 00 00 
00CF85 00 00 00 00 00 
00CF8A 00 00 00 00 00 
00CF90 00 00 00 00 00 
00CF95 00 00 00 00 00 
00CF9A 00 00 00 00 00 
00CFA0 00 00 00 00 00 
00CFA5 00 00 00 00 00 
00CFAA 00 00 00 00 00 
00CFB0 00 00 00 00 00 
00CFB5 00 00 00 00 00 
00CFBA 00 00 00 00 00 
00CFC0 00 00 00 00 00 
00CFC5 00 00 00 00 00 
00CFCA 00 00 00 00 00 
00CFD0 00 00 00 00 00 
00CFD5 00 00 00 00 00 
00CFDA 00 00 00 00 00 
00CFE0 00 00 00 00 00 
00CFE5 00 00 00 00 00 
00CFEA 00 00 00 00 00 
00CFF0 00 00 00 00 00 
00CFF5 00 00 00 00 00 
00CFFA 00 00 00 00 00 
00D000 00 00 00 00 00 
00D005 00 00 00 00 00 
00D00A 00 00 00 00 00 
00D010 00 00 00 00 00 
00D015 00 00 00 00 00 
00D01A 00 00 00 00 00 
00D020 00 00 00 00 00 
00D025 00 00 00 00 00 
00D02A 00 00 00 00 00 
00D030 00 00 00 00 00 
00D035 00 00 00 00 00 
00D03A 00 00 00 00 00 
00D040 00 00 00 00 00 
00D045 00 00 00 00 00 
00D04A 00 00 00 00 00 
00D050 00 00 00 00 00 
00D055 00 00 00 00 00 
00D05A 00 00 00 00 00 
00D060 00 00 00 00 00 
00D065 00 00 00 00 00 
00D06A 00 00 00 00 00 
00D070 00 00 00 00 00 
00D075 00 00 00 00 00 
00D07A 00 00 00 00 00 
00D080 00 00 00 00 00 
00D085 00 00 00 00 00 
00D08A 00 00 00 00 00 
00D090 00 00 00 00 00 
00D095 00 00 00 00 00 
00D09A 00 00 00 00 00 
00D0A0 00 00 00 00 00 
00D0A5 00 00 00 00 00 
00D0AA 00 00 00 00 00 
00D0B0 00 00 00 00 00 
00D0B5 00 00 00 00 00 
00D0BA 00 00 00 00 00 
00D0C0 00 00 00 00 00 
00D0C5 00 00 00 00 00 
00D0CA 00 00 00 00 00 
00D0D0 00 00 00 00 00 
00D0D5 00 00 00 00 00 
00D0DA 00 00 00 00 00 
00D0E0 00 00 00 00 00 
00D0E5 00 00 00 00 00 
00D0EA 00 00 00 00 00 
00D0F0 00 00 00 00 00 
00D0F5 00 00 00 00 00 
00D0FA 00 00 00 00 00 
00D100 00 00 00 00 00 
00D105 00 00 00 00 00 
00D10A 00 00 00 00 00 
00D110 00 00 00 00 00 
00D115 00 00 00 00 00 
00D11A 00 00 00 00 00 
00D120 00 00 00 00 00 
00D125 00 00 00 00 00 
00D12A 00 00 00 00 00 
00D130 00 00 00 00 00 
00D135 00 00 00 00 00 
00D13A 00 00 00 00 00 
00D140 00 00 00 00 00 
00D145 00 00 00 00 00 
00D14A 00 00 00 00 00 
00D150 00 00 00 00 00 
00D155 00 00 00 00 00 
00D15A 00 00 00 00 00 
00D160 00 00 00 00 00 
00D165 00 00 00 00 00 
00D16A 00 00 00 00 00 
00D170 00 00 00 00 00 
00D175 00 00 00 00 00 
00D17A 00 00 00 00 00 
00D180 00 00 00 00 00 
00D185 00 00 00 00 00 
00D18A 00 00 00 00 00 
00D190 00 00 00 00 00 
00D195 00 00 00 00 00 
00D19A 00 00 00 00 00 
00D1A0 00 00 00 00 00 
00D1A5 00 00 00 00 00 
00D1AA 00 00 00 00 00 
00D1B0 00 00 00 00 00 
00D1B5 00 00 00 00 00 
00D1BA 00 00 00 00 00 
00D1C0 00 00 00 00 00 
00D1C5 00 00 00 00 00 
00D1CA 00 00 00 00 00 
00D1D0 00 00 00 00 00 
00D1D5 00 00 00 00 00 
00D1DA 00 00 00 00 00 
00D1E0 00 00 00 00 00 
00D1E5 00 00 00 00 00 
00D1EA 00 00 00 00 00 
00D1F0 00 00 00 00 00 
00D1F5 00 00 00 00 00 
00D1FA 00 00 00 00 00 
00D200 00 00 00 00 00 
00D205 00 00 00 00 00 
00D20A 00 00 00 00 00 
00D210 00 00 00 00 00 
00D215 00 00 00 00 00 
00D21A 00 00 00 00 00 
00D220 00 00 00 00 00 
00D225 00 00 00 00 00 
00D22A 00 00 00 00 00 
00D230 00 00 00 00 00 
00D235 00 00 00 00 00 
00D23A 00 00 00 00 00 
00D240 00 00 00 00 00 
00D245 00 00 00 00 00 
00D24A 00 00 00 00 00 
00D250 00 00 00 00 00 
00D255 00 00 00 00 00 
00D25A 00 00 00 00 00 
00D260 00 00 00 00 00 
00D265 00 00 00 00 00 
00D26A 00 00 00 00 00 
00D270 00 00 00 00 00 
00D275 00 00 00 00 00 
00D27A 00 00 00 00 00 
00D280 00 00 00 00 00 
00D285 00 00 00 00 00 
00D28A 00 00 00 00 00 
00D290 00 00 00 00 00 
00D295 00 00 00 00 00 
00D29A 00 00 00 00 00 
00D2A0 00 00 00 00 00 
00D2A5 00 00 00 00 00 
00D2AA 00 00 00 00 00 
00D2B0 00 00 00 00 00 
00D2B5 00 00 00 00 00 
00D2BA 00 00 00 00 00 
00D2C0 00 00 00 00 00 
00D2C5 00 00 00 00 00 
00D2CA 00 00 00 00 00 
00D2D0 00 00 00 00 00 
00D2D5 00 00 00 00 00 
00D2DA 00 00 00 00 00 
00D2E0 00 00 00 00 00 
00D2E5 00 00 00 00 00 
00D2EA 00 00 00 00 00 
00D2F0 00 00 00 00 00 
00D2F5 00 00 00 00 00 
00D2FA 00 00 00 00 00 
00D300 00 00 00 00 00 
00D305 00 00 00 00 00 
00D30A 00 00 00 00 00 
00D310 00 00 00 00 00 
00D315 00 00 00 00 00 
00D31A 00 00 00 00 00 
00D320 00 00 00 00 00 
00D325 00 00 00 00 00 
00D32A 00 00 00 00 00 
00D330 00 00 00 00 00 
00D335 00 00 00 00 00 
00D33A 00 00 00 00 00 
00D340 00 00 00 00 00 
00D345 00 00 00 00 00 
00D34A 00 00 00 00 00 
00D350 00 00 00 00 00 
00D355 00 00 00 00 00 
00D35A 00 00 00 00 00 
00D360 00 00 00 00 00 
00D365 00 00 00 00 00 
00D36A 00 00 00 00 00 
00D370 00 00 00 00 00 
00D375 00 00 00 00 00 
00D37A 00 00 00 00 00 
00D380 00 00 00 00 00 
00D385 00 00 00 00 00 
00D38A 00 00 00 00 00 
00D390 00 00 00 00 00 
00D395 00 00 00 00 00 
00D39A 00 00 00 00 00 
00D3A0 00 00 00 00 00 
00D3A5 00 00 00 00 00 
00D3AA 00 00 00 00 00 
00D3B0 00 00 00 00 00 
00D3B5 00 00 00 00 00 
00D3BA 00 00 00 00 00 
00D3C0 00 00 00 00 00 
00D3C5 00 00 00 00 00 
00D3CA 00 00 00 00 00 
00D3D0 00 00 00 00 00 
00D3D5 00 00 00 00 00 
00D3DA 00 00 00 00 00 
00D3E0 00 00 00 00 00 
00D3E5 00 00 00 00 00 
00D3EA 00 00 00 00 00 
00D3F0 00 00 00 00 00 
00D3F5 00 00 00 00 00 
00D3FA 00 00 00 00 00 
00D400 00 00 00 00 00 
00D405 00 00 00 00 00 
00D40A 00 00 00 00 00 
00D410 00 00 00 00 00 
00D415 00 00 00 00 00 
00D41A 00 00 00 00 00 
00D420 00 00 00 00 00 
00D425 00 00 00 00 00 
00D42A 00 00 00 00 00 
00D430 00 00 00 00 00 
00D435 00 00 00 00 00 
00D43A 00 00 00 00 00 
00D440 00 00 00 00 00 
00D445 00 00 00 00 00 
00D44A 00 00 00 00 00 
00D450 00 00 00 00 00 
00D455 00 00 00 00 00 
00D45A 00 00 00 00 00 
00D460 00 00 00 00 00 
00D465 00 00 00 00 00 
00D46A 00 00 00 00 00 
00D470 00 00 00 00 00 
00D475 00 00 00 00 00 
00D47A 00 00 00 00 00 
00D480 00 00 00 00 00 
00D485 00 00 00 00 00 
00D48A 00 00 00 00 00 
00D490 00 00 00 00 00 
00D495 00 00 00 00 00 
00D49A 00 00 00 00 00 
00D4A0 00 00 00 00 00 
00D4A5 00 00 00 00 00 
00D4AA 00 00 00 00 00 
00D4B0 00 00 00 00 00 
00D4B5 00 00 00 00 00 
00D4BA 00 00 00 00 00 
00D4C0 00 00 00 00 00 
00D4C5 00 00 00 00 00 
00D4CA 00 00 00 00 00 
00D4D0 00 00 00 00 00 
00D4D5 00 00 00 00 00 
00D4DA 00 00 00 00 00 
00D4E0 00 00 00 00 00 
00D4E5 00 00 00 00 00 
00D4EA 00 00 00 00 00 
00D4F0 00 00 00 00 00 
00D4F5 00 00 00 00 00 
00D4FA 00 00 00 00 00 
00D500 00 00 00 00 00 
00D505 00 00 00 00 00 
00D50A 00 00 00 00 00 
00D510 00 00 00 00 00 
00D515 00 00 00 00 00 
00D51A 00 00 00 00 00 
00D520 00 00 00 00 00 
00D525 00 00 00 00 00 
00D52A 00 00 00 00 00 
00D530 00 00 00 00 00 
00D535 00 00 00 00 00 
00D53A 00 00 00 00 00 
00D540 00 00 00 00 00 
00D545 00 00 00 00 00 
00D54A 00 00 00 00 00 
00D550 00 00 00 00 00 
00D555 00 00 00 00 00 
00D55A 00 00 00 00 00 
00D560 00 00 00 00 00 
00D565 00 00 00 00 00 
00D56A 00 00 00 00 00 
00D570 00 00 00 00 00 
00D575 00 00 00 00 00 
00D57A 00 00 00 00 00 
00D580 00 00 00 00 00 
00D585 00 00 00 00 00 
00D58A 00 00 00 00 00 
00D590 00 00 00 00 00 
00D595 00 00 00 00 00 
00D59A 00 00 00 00 00 
00D5A0 00 00 00 00 00 
00D5A5 00 00 00 00 00 
00D5AA 00 00 00 00 00 
00D5B0 00 00 00 00 00 
00D5B5 00 00 00 00 00 
00D5BA 00 00 00 00 00 
00D5C0 00 00 00 00 00 
00D5C5 00 00 00 00 00 
00D5CA 00 00 00 00 00 
00D5D0 00 00 00 00 00 
00D5D5 00 00 00 00 00 
00D5DA 00 00 00 00 00 
00D5E0 00 00 00 00 00 
00D5E5 00 00 00 00 00 
00D5EA 00 00 00 00 00 
00D5F0 00 00 00 00 00 
00D5F5 00 00 00 00 00 
00D5FA 00 00 00 00 00 
00D600 00 00 00 00 00 
00D605 00 00 00 00 00 
00D60A 00 00 00 00 00 
00D610 00 00 00 00 00 
00D615 00 00 00 00 00 
00D61A 00 00 00 00 00 
00D620 00 00 00 00 00 
00D625 00 00 00 00 00 
00D62A 00 00 00 00 00 
00D630 00 00 00 00 00 
00D635 00 00 00 00 00 
00D63A 00 00 00 00 00 
00D640 00 00 00 00 00 
00D645 00 00 00 00 00 
00D64A 00 00 00 00 00 
00D650 00 00 00 00 00 
00D655 00 00 00 00 00 
00D65A 00 00 00 00 00 
00D660 00 00 00 00 00 
00D665 00 00 00 00 00 
00D66A 00 00 00 00 00 
00D670 00 00 00 00 00 
00D675 00 00 00 00 00 
00D67A 00 00 00 00 00 
00D680 00 00 00 00 00 
00D685 00 00 00 00 00 
00D68A 00 00 00 00 00 
00D690 00 00 00 00 00 
00D695 00 00 00 00 00 
00D69A 00 00 00 00 00 
00D6A0 00 00 00 00 00 
00D6A5 00 00 00 00 00 
00D6AA 00 00 00 00 00 
00D6B0 00 00 00 00 00 
00D6B5 00 00 00 00 00 
00D6BA 00 00 00 00 00 
00D6C0 00 00 00 00 00 
00D6C5 00 00 00 00 00 
00D6CA 00 00 00 00 00 
00D6D0 00 00 00 00 00 
00D6D5 00 00 00 00 00 
00D6DA 00 00 00 00 00 
00D6E0 00 00 00 00 00 
00D6E5 00 00 00 00 00 
00D6EA 00 00 00 00 00 
00D6F0 00 00 00 00 00 
00D6F5 00 00 00 00 00 
00D6FA 00 00 00 00 00 
00D700 00 00 00 00 00 
00D705 00 00 00 00 00 
00D70A 00 00 00 00 00 
00D710 00 00 00 00 00 
00D715 00 00 00 00 00 
00D71A 00 00 00 00 00 
00D720 00 00 00 00 00 
00D725 00 00 00 00 00 
00D72A 00 00 00 00 00 
00D730 00 00 00 00 00 
00D735 00 00 00 00 00 
00D73A 00 00 00 00 00 
00D740 00 00 00 00 00 
00D745 00 00 00 00 00 
00D74A 00 00 00 00 00 
00D750 00 00 00 00 00 
00D755 00 00 00 00 00 
00D75A 00 00 00 00 00 
00D760 00 00 00 00 00 
00D765 00 00 00 00 00 
00D76A 00 00 00 00 00 
00D770 00 00 00 00 00 
00D775 00 00 00 00 00 
00D77A 00 00 00 00 00 
00D780 00 00 00 00 00 
00D785 00 00 00 00 00 
00D78A 00 00 00 00 00 
00D790 00 00 00 00 00 
00D795 00 00 00 00 00 
00D79A 00 00 00 00 00 
00D7A0 00 00 00 00 00 
00D7A5 00 00 00 00 00 
00D7AA 00 00 00 00 00 
00D7B0 00 00 00 00 00 
00D7B5 00 00 00 00 00 
00D7BA 00 00 00 00 00 
00D7C0 00 00 00 00 00 
00D7C5 00 00 00 00 00 
00D7CA 00 00 00 00 00 
00D7D0 00 00 00 00 00 
00D7D5 00 00 00 00 00 
00D7DA 00 00 00 00 00 
00D7E0 00 00 00 00 00 
00D7E5 00 00 00 00 00 
00D7EA 00 00 00 00 00 
00D7F0 00 00 00 00 00 
00D7F5 00 00 00 00 00 
00D7FA 00 00 00 00 00 
00D800 00 00 00 00 00 
00D805 00 00 00 00 00 
00D80A 00 00 00 00 00 
00D810 00 00 00 00 00 
00D815 00 00 00 00 00 
00D81A 00 00 00 00 00 
00D820 00 00 00 00 00 
00D825 00 00 00 00 00 
00D82A 00 00 00 00 00 
00D830 00 00 00 00 00 
00D835 00 00 00 00 00 
00D83A 00 00 00 00 00 
00D840 00 00 00 00 00 
00D845 00 00 00 00 00 
00D84A 00 00 00 00 00 
00D850 00 00 00 00 00 
00D855 00 00 00 00 00 
00D85A 00 00 00 00 00 
00D860 00 00 00 00 00 
00D865 00 00 00 00 00 
00D86A 00 00 00 00 00 
00D870 00 00 00 00 00 
00D875 00 00 00 00 00 
00D87A 00 00 00 00 00 
00D880 00 00 00 00 00 
00D885 00 00 00 00 00 
00D88A 00 00 00 00 00 
00D890 00 00 00 00 00 
00D895 00 00 00 00 00 
00D89A 00 00 00 00 00 
00D8A0 00 00 00 00 00 
00D8A5 00 00 00 00 00 
00D8AA 00 00 00 00 00 
00D8B0 00 00 00 00 00 
00D8B5 00 00 00 00 00 
00D8BA 00 00 00 00 00 
00D8C0 00 00 00 00 00 
00D8C5 00 00 00 00 00 
00D8CA 00 00 00 00 00 
00D8D0 00 00 00 00 00 
00D8D5 00 00 00 00 00 
00D8DA 00 00 00 00 00 
00D8E0 00 00 00 00 00 
00D8E5 00 00 00 00 00 
00D8EA 00 00 00 00 00 
00D8F0 00 00 00 00 00 
00D8F5 00 00 00 00 00 
00D8FA 00 00 00 00 00 
00D900 00 00 00 00 00 
00D905 00 00 00 00 00 
00D90A 00 00 00 00 00 
00D910 00 00 00 00 00 
00D915 00 00 00 00 00 
00D91A 00 00 00 00 00 
00D920 00 00 00 00 00 
00D925 00 00 00 00 00 
00D92A 00 00 00 00 00 
00D930 00 00 00 00 00 
00D935 00 00 00 00 00 
00D93A 00 00 00 00 00 
00D940 00 00 00 00 00 
00D945 00 00 00 00 00 
00D94A 00 00 00 00 00 
00D950 00 00 00 00 00 
00D955 00 00 00 00 00 
00D95A 00 00 00 00 00 
00D960 00 00 00 00 00 
00D965 00 00 00 00 00 
00D96A 00 00 00 00 00 
00D970 00 00 00 00 00 
00D975 00 00 00 00 00 
00D97A 00 00 00 00 00 
00D980 00 00 00 00 00 
00D985 00 00 00 00 00 
00D98A 00 00 00 00 00 
00D990 00 00 00 00 00 
00D995 00 00 00 00 00 
00D99A 00 00 00 00 00 
00D9A0 00 00 00 00 00 
00D9A5 00 00 00 00 00 
00D9AA 00 00 00 00 00 
00D9B0 00 00 00 00 00 
00D9B5 00 00 00 00 00 
00D9BA 00 00 00 00 00 
00D9C0 00 00 00 00 00 
00D9C5 00 00 00 00 00 
00D9CA 00 00 00 00 00 
00D9D0 00 00 00 00 00 
00D9D5 00 00 00 00 00 
00D9DA 00 00 00 00 00 
00D9E0 00 00 00 00 00 
00D9E5 00 00 00 00 00 
00D9EA 00 00 00 00 00 
00D9F0 00 00 00 00 00 
00D9F5 00 00 00 00 00 
00D9FA 00 00 00 00 00 
00DA00 00 00 00 00 00 
00DA05 00 00 00 00 00 
00DA0A 00 00 00 00 00 
00DA10 00 00 00 00 00 
00DA15 00 00 00 00 00 
00DA1A 00 00 00 00 00 
00DA20 00 00 00 00 00 
00DA25 00 00 00 00 00 
00DA2A 00 00 00 00 00 
00DA30 00 00 00 00 00 
00DA35 00 00 00 00 00 
00DA3A 00 00 00 00 00 
00DA40 00 00 00 00 00 
00DA45 00 00 00 00 00 
00DA4A 00 00 00 00 00 
00DA50 00 00 00 00 00 
00DA55 00 00 00 00 00 
00DA5A 00 00 00 00 00 
00DA60 00 00 00 00 00 
00DA65 00 00 00 00 00 
00DA6A 00 00 00 00 00 
00DA70 00 00 00 00 00 
00DA75 00 00 00 00 00 
00DA7A 00 00 00 00 00 
00DA80 00 00 00 00 00 
00DA85 00 00 00 00 00 
00DA8A 00 00 00 00 00 
00DA90 00 00 00 00 00 
00DA95 00 00 00 00 00 
00DA9A 00 00 00 00 00 
00DAA0 00 00 00 00 00 
00DAA5 00 00 00 00 00 
00DAAA 00 00 00 00 00 
00DAB0 00 00 00 00 00 
00DAB5 00 00 00 00 00 
00DABA 00 00 00 00 00 
00DAC0 00 00 00 00 00 
00DAC5 00 00 00 00 00 
00DACA 00 00 00 00 00 
00DAD0 00 00 00 00 00 
00DAD5 00 00 00 00 00 
00DADA 00 00 00 00 00 
00DAE0 00 00 00 00 00 
00DAE5 00 00 00 00 00 
00DAEA 00 00 00 00 00 
00DAF0 00 00 00 00 00 
00DAF5 00 00 00 00 00 
00DAFA 00 00 00 00 00 
00DB00 00 00 00 00 00 
00DB05 00 00 00 00 00 
00DB0A 00 00 00 00 00 
00DB10 00 00 00 00 00 
00DB15 00 00 00 00 00 
00DB1A 00 00 00 00 00 
00DB20 00 00 00 00 00 
00DB25 00 00 00 00 00 
00DB2A 00 00 00 00 00 
00DB30 00 00 00 00 00 
00DB35 00 00 00 00 00 
00DB3A 00 00 00 00 00 
00DB40 00 00 00 00 00 
00DB45 00 00 00 00 00 
00DB4A 00 00 00 00 00 
00DB50 00 00 00 00 00 
00DB55 00 00 00 00 00 
00DB5A 00 00 00 00 00 
00DB60 00 00 00 00 00 
00DB65 00 00 00 00 00 
00DB6A 00 00 00 00 00 
00DB70 00 00 00 00 00 
00DB75 00 00 00 00 00 
00DB7A 00 00 00 00 00 
00DB80 00 00 00 00 00 
00DB85 00 00 00 00 00 
00DB8A 00 00 00 00 00 
00DB90 00 00 00 00 00 
00DB95 00 00 00 00 00 
00DB9A 00 00 00 00 00 
00DBA0 00 00 00 00 00 
00DBA5 00 00 00 00 00 
00DBAA 00 00 00 00 00 
00DBB0 00 00 00 00 00 
00DBB5 00 00 00 00 00 
00DBBA 00 00 00 00 00 
00DBC0 00 00 00 00 00 
00DBC5 00 00 00 00 00 
00DBCA 00 00 00 00 00 
00DBD0 00 00 00 00 00 
00DBD5 00 00 00 00 00 
00DBDA 00 00 00 00 00 
00DBE0 00 00 00 00 00 
00DBE5 00 00 00 00 00 
00DBEA 00 00 00 00 00 
00DBF0 00 00 00 00 00 
00DBF5 00 00 00 00 00 
00DBFA 00 00 00 00 00 
00DC00 00 00 00 00 00 
00DC05 00 00 00 00 00 
00DC0A 00 00 00 00 00 
00DC10 00 00 00 00 00 
00DC15 00 00 00 00 00 
00DC1A 00 00 00 00 00 
00DC20 00 00 00 00 00 
00DC25 00 00 00 00 00 
00DC2A 00 00 00 00 00 
00DC30 00 00 00 00 00 
00DC35 00 00 00 00 00 
00DC3A 00 00 00 00 00 
00DC40 00 00 00 00 00 
00DC45 00 00 00 00 00 
00DC4A 00 00 00 00 00 
00DC50 00 00 00 00 00 
00DC55 00 00 00 00 00 
00DC5A 00 00 00 00 00 
00DC60 00 00 00 00 00 
00DC65 00 00 00 00 00 
00DC6A 00 00 00 00 00 
00DC70 00 00 00 00 00 
00DC75 00 00 00 00 00 
00DC7A 00 00 00 00 00 
00DC80 00 00 00 00 00 
00DC85 00 00 00 00 00 
00DC8A 00 00 00 00 00 
00DC90 00 00 00 00 00 
00DC95 00 00 00 00 00 
00DC9A 00 00 00 00 00 
00DCA0 00 00 00 00 00 
00DCA5 00 00 00 00 00 
00DCAA 00 00 00 00 00 
00DCB0 00 00 00 00 00 
00DCB5 00 00 00 00 00 
00DCBA 00 00 00 00 00 
00DCC0 00 00 00 00 00 
00DCC5 00 00 00 00 00 
00DCCA 00 00 00 00 00 
00DCD0 00 00 00 00 00 
00DCD5 00 00 00 00 00 
00DCDA 00 00 00 00 00 
00DCE0 00 00 00 00 00 
00DCE5 00 00 00 00 00 
00DCEA 00 00 00 00 00 
00DCF0 00 00 00 00 00 
00DCF5 00 00 00 00 00 
00DCFA 00 00 00 00 00 
00DD00 00 00 00 00 00 
00DD05 00 00 00 00 00 
00DD0A 00 00 00 00 00 
00DD10 00 00 00 00 00 
00DD15 00 00 00 00 00 
00DD1A 00 00 00 00 00 
00DD20 00 00 00 00 00 
00DD25 00 00 00 00 00 
00DD2A 00 00 00 00 00 
00DD30 00 00 00 00 00 
00DD35 00 00 00 00 00 
00DD3A 00 00 00 00 00 
00DD40 00 00 00 00 00 
00DD45 00 00 00 00 00 
00DD4A 00 00 00 00 00 
00DD50 00 00 00 00 00 
00DD55 00 00 00 00 00 
00DD5A 00 00 00 00 00 
00DD60 00 00 00 00 00 
00DD65 00 00 00 00 00 
00DD6A 00 00 00 00 00 
00DD70 00 00 00 00 00 
00DD75 00 00 00 00 00 
00DD7A 00 00 00 00 00 
00DD80 00 00 00 00 00 
00DD85 00 00 00 00 00 
00DD8A 00 00 00 00 00 
00DD90 00 00 00 00 00 
00DD95 00 00 00 00 00 
00DD9A 00 00 00 00 00 
00DDA0 00 00 00 00 00 
00DDA5 00 00 00 00 00 
00DDAA 00 00 00 00 00 
00DDB0 00 00 00 00 00 
00DDB5 00 00 00 00 00 
00DDBA 00 00 00 00 00 
00DDC0 00 00 00 00 00 
00DDC5 00 00 00 00 00 
00DDCA 00 00 00 00 00 
00DDD0 00 00 00 00 00 
00DDD5 00 00 00 00 00 
00DDDA 00 00 00 00 00 
00DDE0 00 00 00 00 00 
00DDE5 00 00 00 00 00 
00DDEA 00 00 00 00 00 
00DDF0 00 00 00 00 00 
00DDF5 00 00 00 00 00 
00DDFA 00 00 00 00 00 
00DE00 00 00 00 00 00 
00DE05 00 00 00 00 00 
00DE0A 00 00 00 00 00 
00DE10 00 00 00 00 00 
00DE15 00 00 00 00 00 
00DE1A 00 00 00 00 00 
00DE20 00 00 00 00 00 
00DE25 00 00 00 00 00 
00DE2A 00 00 00 00 00 
00DE30 00 00 00 00 00 
00DE35 00 00 00 00 00 
00DE3A 00 00 00 00 00 
00DE40 00 00 00 00 00 
00DE45 00 00 00 00 00 
00DE4A 00 00 00 00 00 
00DE50 00 00 00 00 00 
00DE55 00 00 00 00 00 
00DE5A 00 00 00 00 00 
00DE60 00 00 00 00 00 
00DE65 00 00 00 00 00 
00DE6A 00 00 00 00 00 
00DE70 00 00 00 00 00 
00DE75 00 00 00 00 00 
00DE7A 00 00 00 00 00 
00DE80 00 00 00 00 00 
00DE85 00 00 00 00 00 
00DE8A 00 00 00 00 00 
00DE90 00 00 00 00 00 
00DE95 00 00 00 00 00 
00DE9A 00 00 00 00 00 
00DEA0 00 00 00 00 00 
00DEA5 00 00 00 00 00 
00DEAA 00 00 00 00 00 
00DEB0 00 00 00 00 00 
00DEB5 00 00 00 00 00 
00DEBA 00 00 00 00 00 
00DEC0 00 00 00 00 00 
00DEC5 00 00 00 00 00 
00DECA 00 00 00 00 00 
00DED0 00 00 00 00 00 
00DED5 00 00 00 00 00 
00DEDA 00 00 00 00 00 
00DEE0 00 00 00 00 00 
00DEE5 00 00 00 00 00 
00DEEA 00 00 00 00 00 
00DEF0 00 00 00 00 00 
00DEF5 00 00 00 00 00 
00DEFA 00 00 00 00 00 
00DF00 00 00 00 00 00 
00DF05 00 00 00 00 00 
00DF0A 00 00 00 00 00 
00DF10 00 00 00 00 00 
00DF15 00 00 00 00 00 
00DF1A 00 00 00 00 00 
00DF20 00 00 00 00 00 
00DF25 00 00 00 00 00 
00DF2A 00 00 00 00 00 
00DF30 00 00 00 00 00 
00DF35 00 00 00 00 00 
00DF3A 00 00 00 00 00 
00DF40 00 00 00 00 00 
00DF45 00 00 00 00 00 
00DF4A 00 00 00 00 00 
00DF50 00 00 00 00 00 
00DF55 00 00 00 00 00 
00DF5A 00 00 00 00 00 
00DF60 00 00 00 00 00 
00DF65 00 00 00 00 00 
00DF6A 00 00 00 00 00 
00DF70 00 00 00 00 00 
00DF75 00 00 00 00 00 
00DF7A 00 00 00 00 00 
00DF80 00 00 00 00 00 
00DF85 00 00 00 00 00 
00DF8A 00 00 00 00 00 
00DF90 00 00 00 00 00 
00DF95 00 00 00 00 00 
00DF9A 00 00 00 00 00 
00DFA0 00 00 00 00 00 
00DFA5 00 00 00 00 00 
00DFAA 00 00 00 00 00 
00DFB0 00 00 00 00 00 
00DFB5 00 00 00 00 00 
00DFBA 00 00 00 00 00 
00DFC0 00 00 00 00 00 
00DFC5 00 00 00 00 00 
00DFCA 00 00 00 00 00 
00DFD0 00 00 00 00 00 
00DFD5 00 00 00 00 00 
00DFDA 00 00 00 00 00 
00DFE0 00 00 00 00 00 
00DFE5 00 00 00 00 00 
00DFEA 00 00 00 00 00 
00DFF0 00 00 00 00 00 
00DFF5 00 00 00 00 00 
00DFFA 00 00 00 00 00 
00E000 00 00 00 00 00 
00E005 00 00 00 00 00 
00E00A 00 00 00 00 00 
00E010 00 00 00 00 00 
00E015 00 00 00 00 00 
00E01A 00 00 00 00 00 
00E020 00 00 00 00 00 
00E025 00 00 00 00 00 
00E02A 00 00 00 00 00 
00E030 00 00 00 00 00 
00E035 00 00 00 00 00 
00E03A 00 00 00 00 00 
00E040 00 00 00 00 00 
00E045 00 00 00 00 00 
00E04A 00 00 00 00 00 
00E050 00 00 00 00 00 
00E055 00 00 00 00 00 
00E05A 00 00 00 00 00 
00E060 00 00 00 00 00 
00E065 00 00 00 00 00 
00E06A 00 00 00 00 00 
00E070 00 00 00 00 00 
00E075 00 00 00 00 00 
00E07A 00 00 00 00 00 
00E080 00 00 00 00 00 
00E085 00 00 00 00 00 
00E08A 00 00 00 00 00 
00E090 00 00 00 00 00 
00E095 00 00 00 00 00 
00E09A 00 00 00 00 00 
00E0A0 00 00 00 00 00 
00E0A5 00 00 00 00 00 
00E0AA 00 00 00 00 00 
00E0B0 00 00 00 00 00 
00E0B5 00 00 00 00 00 
00E0BA 00 00 00 00 00 
00E0C0 00 00 00 00 00 
00E0C5 00 00 00 00 00 
00E0CA 00 00 00 00 00 
00E0D0 00 00 00 00 00 
00E0D5 00 00 00 00 00 
00E0DA 00 00 00 00 00 
00E0E0 00 00 00 00 00 
00E0E5 00 00 00 00 00 
00E0EA 00 00 00 00 00 
00E0F0 00 00 00 00 00 
00E0F5 00 00 00 00 00 
00E0FA 00 00 00 00 00 
00E100 00 00 00 00 00 
00E105 00 00 00 00 00 
00E10A 00 00 00 00 00 
00E110 00 00 00 00 00 
00E115 00 00 00 00 00 
00E11A 00 00 00 00 00 
00E120 00 00 00 00 00 
00E125 00 00 00 00 00 
00E12A 00 00 00 00 00 
00E130 00 00 00 00 00 
00E135 00 00 00 00 00 
00E13A 00 00 00 00 00 
00E140 00 00 00 00 00 
00E145 00 00 00 00 00 
00E14A 00 00 00 00 00 
00E150 00 00 00 00 00 
00E155 00 00 00 00 00 
00E15A 00 00 00 00 00 
00E160 00 00 00 00 00 
00E165 00 00 00 00 00 
00E16A 00 00 00 00 00 
00E170 00 00 00 00 00 
00E175 00 00 00 00 00 
00E17A 00 00 00 00 00 
00E180 00 00 00 00 00 
00E185 00 00 00 00 00 
00E18A 00 00 00 00 00 
00E190 00 00 00 00 00 
00E195 00 00 00 00 00 
00E19A 00 00 00 00 00 
00E1A0 00 00 00 00 00 
00E1A5 00 00 00 00 00 
00E1AA 00 00 00 00 00 
00E1B0 00 00 00 00 00 
00E1B5 00 00 00 00 00 
00E1BA 00 00 00 00 00 
00E1C0 00 00 00 00 00 
00E1C5 00 00 00 00 00 
00E1CA 00 00 00 00 00 
00E1D0 00 00 00 00 00 
00E1D5 00 00 00 00 00 
00E1DA 00 00 00 00 00 
00E1E0 00 00 00 00 00 
00E1E5 00 00 00 00 00 
00E1EA 00 00 00 00 00 
00E1F0 00 00 00 00 00 
00E1F5 00 00 00 00 00 
00E1FA 00 00 00 00 00 
00E200 00 00 00 00 00 
00E205 00 00 00 00 00 
00E20A 00 00 00 00 00 
00E210 00 00 00 00 00 
00E215 00 00 00 00 00 
00E21A 00 00 00 00 00 
00E220 00 00 00 00 00 
00E225 00 00 00 00 00 
00E22A 00 00 00 00 00 
00E230 00 00 00 00 00 
00E235 00 00 00 00 00 
00E23A 00 00 00 00 00 
00E240 00 00 00 00 00 
00E245 00 00 00 00 00 
00E24A 00 00 00 00 00 
00E250 00 00 00 00 00 
00E255 00 00 00 00 00 
00E25A 00 00 00 00 00 
00E260 00 00 00 00 00 
00E265 00 00 00 00 00 
00E26A 00 00 00 00 00 
00E270 00 00 00 00 00 
00E275 00 00 00 00 00 
00E27A 00 00 00 00 00 
00E280 00 00 00 00 00 
00E285 00 00 00 00 00 
00E28A 00 00 00 00 00 
00E290 00 00 00 00 00 
00E295 00 00 00 00 00 
00E29A 00 00 00 00 00 
00E2A0 00 00 00 00 00 
00E2A5 00 00 00 00 00 
00E2AA 00 00 00 00 00 
00E2B0 00 00 00 00 00 
00E2B5 00 00 00 00 00 
00E2BA 00 00 00 00 00 
00E2C0 00 00 00 00 00 
00E2C5 00 00 00 00 00 
00E2CA 00 00 00 00 00 
00E2D0 00 00 00 00 00 
00E2D5 00 00 00 00 00 
00E2DA 00 00 00 00 00 
00E2E0 00 00 00 00 00 
00E2E5 00 00 00 00 00 
00E2EA 00 00 00 00 00 
00E2F0 00 00 00 00 00 
00E2F5 00 00 00 00 00 
00E2FA 00 00 00 00 00 
00E300 00 00 00 00 00 
00E305 00 00 00 00 00 
00E30A 00 00 00 00 00 
00E310 00 00 00 00 00 
00E315 00 00 00 00 00 
00E31A 00 00 00 00 00 
00E320 00 00 00 00 00 
00E325 00 00 00 00 00 
00E32A 00 00 00 00 00 
00E330 00 00 00 00 00 
00E335 00 00 00 00 00 
00E33A 00 00 00 00 00 
00E340 00 00 00 00 00 
00E345 00 00 00 00 00 
00E34A 00 00 00 00 00 
00E350 00 00 00 00 00 
00E355 00 00 00 00 00 
00E35A 00 00 00 00 00 
00E360 00 00 00 00 00 
00E365 00 00 00 00 00 
00E36A 00 00 00 00 00 
00E370 00 00 00 00 00 
00E375 00 00 00 00 00 
00E37A 00 00 00 00 00 
00E380 00 00 00 00 00 
00E385 00 00 00 00 00 
00E38A 00 00 00 00 00 
00E390 00 00 00 00 00 
00E395 00 00 00 00 00 
00E39A 00 00 00 00 00 
00E3A0 00 00 00 00 00 
00E3A5 00 00 00 00 00 
00E3AA 00 00 00 00 00 
00E3B0 00 00 00 00 00 
00E3B5 00 00 00 00 00 
00E3BA 00 00 00 00 00 
00E3C0 00 00 00 00 00 
00E3C5 00 00 00 00 00 
00E3CA 00 00 00 00 00 
00E3D0 00 00 00 00 00 
00E3D5 00 00 00 00 00 
00E3DA 00 00 00 00 00 
00E3E0 00 00 00 00 00 
00E3E5 00 00 00 00 00 
00E3EA 00 00 00 00 00 
00E3F0 00 00 00 00 00 
00E3F5 00 00 00 00 00 
00E3FA 00 00 00 00 00 
00E400 00 00 00 00 00 
00E405 00 00 00 00 00 
00E40A 00 00 00 00 00 
00E410 00 00 00 00 00 
00E415 00 00 00 00 00 
00E41A 00 00 00 00 00 
00E420 00 00 00 00 00 
00E425 00 00 00 00 00 
00E42A 00 00 00 00 00 
00E430 00 00 00 00 00 
00E435 00 00 00 00 00 
00E43A 00 00 00 00 00 
00E440 00 00 00 00 00 
00E445 00 00 00 00 00 
00E44A 00 00 00 00 00 
00E450 00 00 00 00 00 
00E455 00 00 00 00 00 
00E45A 00 00 00 00 00 
00E460 00 00 00 00 00 
00E465 00 00 00 00 00 
00E46A 00 00 00 00 00 
00E470 00 00 00 00 00 
00E475 00 00 00 00 00 
00E47A 00 00 00 00 00 
00E480 00 00 00 00 00 
00E485 00 00 00 00 00 
00E48A 00 00 00 00 00 
00E490 00 00 00 00 00 
00E495 00 00 00 00 00 
00E49A 00 00 00 00 00 
00E4A0 00 00 00 00 00 
00E4A5 00 00 00 00 00 
00E4AA 00 00 00 00 00 
00E4B0 00 00 00 00 00 
00E4B5 00 00 00 00 00 
00E4BA 00 00 00 00 00 
00E4C0 00 00 00 00 00 
00E4C5 00 00 00 00 00 
00E4CA 00 00 00 00 00 
00E4D0 00 00 00 00 00 
00E4D5 00 00 00 00 00 
00E4DA 00 00 00 00 00 
00E4E0 00 00 00 00 00 
00E4E5 00 00 00 00 00 
00E4EA 00 00 00 00 00 
00E4F0 00 00 00 00 00 
00E4F5 00 00 00 00 00 
00E4FA 00 00 00 00 00 
00E500 00 00 00 00 00 
00E505 00 00 00 00 00 
00E50A 00 00 00 00 00 
00E510 00 00 00 00 00 
00E515 00 00 00 00 00 
00E51A 00 00 00 00 00 
00E520 00 00 00 00 00 
00E525 00 00 00 00 00 
00E52A 00 00 00 00 00 
00E530 00 00 00 00 00 
00E535 00 00 00 00 00 
00E53A 00 00 00 00 00 
00E540 00 00 00 00 00 
00E545 00 00 00 00 00 
00E54A 00 00 00 00 00 
00E550 00 00 00 00 00 
00E555 00 00 00 00 00 
00E55A 00 00 00 00 00 
00E560 00 00 00 00 00 
00E565 00 00 00 00 00 
00E56A 00 00 00 00 00 
00E570 00 00 00 00 00 
00E575 00 00 00 00 00 
00E57A 00 00 00 00 00 
00E580 00 00 00 00 00 
00E585 00 00 00 00 00 
00E58A 00 00 00 00 00 
00E590 00 00 00 00 00 
00E595 00 00 00 00 00 
00E59A 00 00 00 00 00 
00E5A0 00 00 00 00 00 
00E5A5 00 00 00 00 00 
00E5AA 00 00 00 00 00 
00E5B0 00 00 00 00 00 
00E5B5 00 00 00 00 00 
00E5BA 00 00 00 00 00 
00E5C0 00 00 00 00 00 
00E5C5 00 00 00 00 00 
00E5CA 00 00 00 00 00 
00E5D0 00 00 00 00 00 
00E5D5 00 00 00 00 00 
00E5DA 00 00 00 00 00 
00E5E0 00 00 00 00 00 
00E5E5 00 00 00 00 00 
00E5EA 00 00 00 00 00 
00E5F0 00 00 00 00 00 
00E5F5 00 00 00 00 00 
00E5FA 00 00 00 00 00 
00E600 00 00 00 00 00 
00E605 00 00 00 00 00 
00E60A 00 00 00 00 00 
00E610 00 00 00 00 00 
00E615 00 00 00 00 00 
00E61A 00 00 00 00 00 
00E620 00 00 00 00 00 
00E625 00 00 00 00 00 
00E62A 00 00 00 00 00 
00E630 00 00 00 00 00 
00E635 00 00 00 00 00 
00E63A 00 00 00 00 00 
00E640 00 00 00 00 00 
00E645 00 00 00 00 00 
00E64A 00 00 00 00 00 
00E650 00 00 00 00 00 
00E655 00 00 00 00 00 
00E65A 00 00 00 00 00 
00E660 00 00 00 00 00 
00E665 00 00 00 00 00 
00E66A 00 00 00 00 00 
00E670 00 00 00 00 00 
00E675 00 00 00 00 00 
00E67A 00 00 00 00 00 
00E680 00 00 00 00 00 
00E685 00 00 00 00 00 
00E68A 00 00 00 00 00 
00E690 00 00 00 00 00 
00E695 00 00 00 00 00 
00E69A 00 00 00 00 00 
00E6A0 00 00 00 00 00 
00E6A5 00 00 00 00 00 
00E6AA 00 00 00 00 00 
00E6B0 00 00 00 00 00 
00E6B5 00 00 00 00 00 
00E6BA 00 00 00 00 00 
00E6C0 00 00 00 00 00 
00E6C5 00 00 00 00 00 
00E6CA 00 00 00 00 00 
00E6D0 00 00 00 00 00 
00E6D5 00 00 00 00 00 
00E6DA 00 00 00 00 00 
00E6E0 00 00 00 00 00 
00E6E5 00 00 00 00 00 
00E6EA 00 00 00 00 00 
00E6F0 00 00 00 00 00 
00E6F5 00 00 00 00 00 
00E6FA 00 00 00 00 00 
00E700 00 00 00 00 00 
00E705 00 00 00 00 00 
00E70A 00 00 00 00 00 
00E710 00 00 00 00 00 
00E715 00 00 00 00 00 
00E71A 00 00 00 00 00 
00E720 00 00 00 00 00 
00E725 00 00 00 00 00 
00E72A 00 00 00 00 00 
00E730 00 00 00 00 00 
00E735 00 00 00 00 00 
00E73A 00 00 00 00 00 
00E740 00 00 00 00 00 
00E745 00 00 00 00 00 
00E74A 00 00 00 00 00 
00E750 00 00 00 00 00 
00E755 00 00 00 00 00 
00E75A 00 00 00 00 00 
00E760 00 00 00 00 00 
00E765 00 00 00 00 00 
00E76A 00 00 00 00 00 
00E770 00 00 00 00 00 
00E775 00 00 00 00 00 
00E77A 00 00 00 00 00 
00E780 00 00 00 00 00 
00E785 00 00 00 00 00 
00E78A 00 00 00 00 00 
00E790 00 00 00 00 00 
00E795 00 00 00 00 00 
00E79A 00 00 00 00 00 
00E7A0 00 00 00 00 00 
00E7A5 00 00 00 00 00 
00E7AA 00 00 00 00 00 
00E7B0 00 00 00 00 00 
00E7B5 00 00 00 00 00 
00E7BA 00 00 00 00 00 
00E7C0 00 00 00 00 00 
00E7C5 00 00 00 00 00 
00E7CA 00 00 00 00 00 
00E7D0 00 00 00 00 00 
00E7D5 00 00 00 00 00 
00E7DA 00 00 00 00 00 
00E7E0 00 00 00 00 00 
00E7E5 00 00 00 00 00 
00E7EA 00 00 00 00 00 
00E7F0 00 00 00 00 00 
00E7F5 00 00 00 00 00 
00E7FA 00 00 00 00 00 
00E800 00 00 00 00 00 
00E805 00 00 00 00 00 
00E80A 00 00 00 00 00 
00E810 00 00 00 00 00 
00E815 00 00 00 00 00 
00E81A 00 00 00 00 00 
00E820 00 00 00 00 00 
00E825 00 00 00 00 00 
00E82A 00 00 00 00 00 
00E830 00 00 00 00 00 
00E835 00 00 00 00 00 
00E83A 00 00 00 00 00 
00E840 00 00 00 00 00 
00E845 00 00 00 00 00 
00E84A 00 00 00 00 00 
00E850 00 00 00 00 00 
00E855 00 00 00 00 00 
00E85A 00 00 00 00 00 
00E860 00 00 00 00 00 
00E865 00 00 00 00 00 
00E86A 00 00 00 00 00 
00E870 00 00 00 00 00 
00E875 00 00 00 00 00 
00E87A 00 00 00 00 00 
00E880 00 00 00 00 00 
00E885 00 00 00 00 00 
00E88A 00 00 00 00 00 
00E890 00 00 00 00 00 
00E895 00 00 00 00 00 
00E89A 00 00 00 00 00 
00E8A0 00 00 00 00 00 
00E8A5 00 00 00 00 00 
00E8AA 00 00 00 00 00 
00E8B0 00 00 00 00 00 
00E8B5 00 00 00 00 00 
00E8BA 00 00 00 00 00 
00E8C0 00 00 00 00 00 
00E8C5 00 00 00 00 00 
00E8CA 00 00 00 00 00 
00E8D0 00 00 00 00 00 
00E8D5 00 00 00 00 00 
00E8DA 00 00 00 00 00 
00E8E0 00 00 00 00 00 
00E8E5 00 00 00 00 00 
00E8EA 00 00 00 00 00 
00E8F0 00 00 00 00 00 
00E8F5 00 00 00 00 00 
00E8FA 00 00 00 00 00 
00E900 00 00 00 00 00 
00E905 00 00 00 00 00 
00E90A 00 00 00 00 00 
00E910 00 00 00 00 00 
00E915 00 00 00 00 00 
00E91A 00 00 00 00 00 
00E920 00 00 00 00 00 
00E925 00 00 00 00 00 
00E92A 00 00 00 00 00 
00E930 00 00 00 00 00 
00E935 00 00 00 00 00 
00E93A 00 00 00 00 00 
00E940 00 00 00 00 00 
00E945 00 00 00 00 00 
00E94A 00 00 00 00 00 
00E950 00 00 00 00 00 
00E955 00 00 00 00 00 
00E95A 00 00 00 00 00 
00E960 00 00 00 00 00 
00E965 00 00 00 00 00 
00E96A 00 00 00 00 00 
00E970 00 00 00 00 00 
00E975 00 00 00 00 00 
00E97A 00 00 00 00 00 
00E980 00 00 00 00 00 
00E985 00 00 00 00 00 
00E98A 00 00 00 00 00 
00E990 00 00 00 00 00 
00E995 00 00 00 00 00 
00E99A 00 00 00 00 00 
00E9A0 00 00 00 00 00 
00E9A5 00 00 00 00 00 
00E9AA 00 00 00 00 00 
00E9B0 00 00 00 00 00 
00E9B5 00 00 00 00 00 
00E9BA 00 00 00 00 00 
00E9C0 00 00 00 00 00 
00E9C5 00 00 00 00 00 
00E9CA 00 00 00 00 00 
00E9D0 00 00 00 00 00 
00E9D5 00 00 00 00 00 
00E9DA 00 00 00 00 00 
00E9E0 00 00 00 00 00 
00E9E5 00 00 00 00 00 
00E9EA 00 00 00 00 00 
00E9F0 00 00 00 00 00 
00E9F5 00 00 00 00 00 
00E9FA 00 00 00 00 00 
00EA00 00 00 00 00 00 
00EA05 00 00 00 00 00 
00EA0A 00 00 00 00 00 
00EA10 00 00 00 00 00 
00EA15 00 00 00 00 00 
00EA1A 00 00 00 00 00 
00EA20 00 00 00 00 00 
00EA25 00 00 00 00 00 
00EA2A 00 00 00 00 00 
00EA30 00 00 00 00 00 
00EA35 00 00 00 00 00 
00EA3A 00 00 00 00 00 
00EA40 00 00 00 00 00 
00EA45 00 00 00 00 00 
00EA4A 00 00 00 00 00 
00EA50 00 00 00 00 00 
00EA55 00 00 00 00 00 
00EA5A 00 00 00 00 00 
00EA60 00 00 00 00 00 
00EA65 00 00 00 00 00 
00EA6A 00 00 00 00 00 
00EA70 00 00 00 00 00 
00EA75 00 00 00 00 00 
00EA7A 00 00 00 00 00 
00EA80 00 00 00 00 00 
00EA85 00 00 00 00 00 
00EA8A 00 00 00 00 00 
00EA90 00 00 00 00 00 
00EA95 00 00 00 00 00 
00EA9A 00 00 00 00 00 
00EAA0 00 00 00 00 00 
00EAA5 00 00 00 00 00 
00EAAA 00 00 00 00 00 
00EAB0 00 00 00 00 00 
00EAB5 00 00 00 00 00 
00EABA 00 00 00 00 00 
00EAC0 00 00 00 00 00 
00EAC5 00 00 00 00 00 
00EACA 00 00 00 00 00 
00EAD0 00 00 00 00 00 
00EAD5 00 00 00 00 00 
00EADA 00 00 00 00 00 
00EAE0 00 00 00 00 00 
00EAE5 00 00 00 00 00 
00EAEA 00 00 00 00 00 
00EAF0 00 00 00 00 00 
00EAF5 00 00 00 00 00 
00EAFA 00 00 00 00 00 
00EB00 00 00 00 00 00 
00EB05 00 00 00 00 00 
00EB0A 00 00 00 00 00 
00EB10 00 00 00 00 00 
00EB15 00 00 00 00 00 
00EB1A 00 00 00 00 00 
00EB20 00 00 00 00 00 
00EB25 00 00 00 00 00 
00EB2A 00 00 00 00 00 
00EB30 00 00 00 00 00 
00EB35 00 00 00 00 00 
00EB3A 00 00 00 00 00 
00EB40 00 00 00 00 00 
00EB45 00 00 00 00 00 
00EB4A 00 00 00 00 00 
00EB50 00 00 00 00 00 
00EB55 00 00 00 00 00 
00EB5A 00 00 00 00 00 
00EB60 00 00 00 00 00 
00EB65 00 00 00 00 00 
00EB6A 00 00 00 00 00 
00EB70 00 00 00 00 00 
00EB75 00 00 00 00 00 
00EB7A 00 00 00 00 00 
00EB80 00 00 00 00 00 
00EB85 00 00 00 00 00 
00EB8A 00 00 00 00 00 
00EB90 00 00 00 00 00 
00EB95 00 00 00 00 00 
00EB9A 00 00 00 00 00 
00EBA0 00 00 00 00 00 
00EBA5 00 00 00 00 00 
00EBAA 00 00 00 00 00 
00EBB0 00 00 00 00 00 
00EBB5 00 00 00 00 00 
00EBBA 00 00 00 00 00 
00EBC0 00 00 00 00 00 
00EBC5 00 00 00 00 00 
00EBCA 00 00 00 00 00 
00EBD0 00 00 00 00 00 
00EBD5 00 00 00 00 00 
00EBDA 00 00 00 00 00 
00EBE0 00 00 00 00 00 
00EBE5 00 00 00 00 00 
00EBEA 00 00 00 00 00 
00EBF0 00 00 00 00 00 
00EBF5 00 00 00 00 00 
00EBFA 00 00 00 00 00 
00EC00 00 00 00 00 00 
00EC05 00 00 00 00 00 
00EC0A 00 00 00 00 00 
00EC10 00 00 00 00 00 
00EC15 00 00 00 00 00 
00EC1A 00 00 00 00 00 
00EC20 00 00 00 00 00 
00EC25 00 00 00 00 00 
00EC2A 00 00 00 00 00 
00EC30 00 00 00 00 00 
00EC35 00 00 00 00 00 
00EC3A 00 00 00 00 00 
00EC40 00 00 00 00 00 
00EC45 00 00 00 00 00 
00EC4A 00 00 00 00 00 
00EC50 00 00 00 00 00 
00EC55 00 00 00 00 00 
00EC5A 00 00 00 00 00 
00EC60 00 00 00 00 00 
00EC65 00 00 00 00 00 
00EC6A 00 00 00 00 00 
00EC70 00 00 00 00 00 
00EC75 00 00 00 00 00 
00EC7A 00 00 00 00 00 
00EC80 00 00 00 00 00 
00EC85 00 00 00 00 00 
00EC8A 00 00 00 00 00 
00EC90 00 00 00 00 00 
00EC95 00 00 00 00 00 
00EC9A 00 00 00 00 00 
00ECA0 00 00 00 00 00 
00ECA5 00 00 00 00 00 
00ECAA 00 00 00 00 00 
00ECB0 00 00 00 00 00 
00ECB5 00 00 00 00 00 
00ECBA 00 00 00 00 00 
00ECC0 00 00 00 00 00 
00ECC5 00 00 00 00 00 
00ECCA 00 00 00 00 00 
00ECD0 00 00 00 00 00 
00ECD5 00 00 00 00 00 
00ECDA 00 00 00 00 00 
00ECE0 00 00 00 00 00 
00ECE5 00 00 00 00 00 
00ECEA 00 00 00 00 00 
00ECF0 00 00 00 00 00 
00ECF5 00 00 00 00 00 
00ECFA 00 00 00 00 00 
00ED00 00 00 00 00 00 
00ED05 00 00 00 00 00 
00ED0A 00 00 00 00 00 
00ED10 00 00 00 00 00 
00ED15 00 00 00 00 00 
00ED1A 00 00 00 00 00 
00ED20 00 00 00 00 00 
00ED25 00 00 00 00 00 
00ED2A 00 00 00 00 00 
00ED30 00 00 00 00 00 
00ED35 00 00 00 00 00 
00ED3A 00 00 00 00 00 
00ED40 00 00 00 00 00 
00ED45 00 00 00 00 00 
00ED4A 00 00 00 00 00 
00ED50 00 00 00 00 00 
00ED55 00 00 00 00 00 
00ED5A 00 00 00 00 00 
00ED60 00 00 00 00 00 
00ED65 00 00 00 00 00 
00ED6A 00 00 00 00 00 
00ED70 00 00 00 00 00 
00ED75 00 00 00 00 00 
00ED7A 00 00 00 00 00 
00ED80 00 00 00 00 00 
00ED85 00 00 00 00 00 
00ED8A 00 00 00 00 00 
00ED90 00 00 00 00 00 
00ED95 00 00 00 00 00 
00ED9A 00 00 00 00 00 
00EDA0 00 00 00 00 00 
00EDA5 00 00 00 00 00 
00EDAA 00 00 00 00 00 
00EDB0 00 00 00 00 00 
00EDB5 00 00 00 00 00 
00EDBA 00 00 00 00 00 
00EDC0 00 00 00 00 00 
00EDC5 00 00 00 00 00 
00EDCA 00 00 00 00 00 
00EDD0 00 00 00 00 00 
00EDD5 00 00 00 00 00 
00EDDA 00 00 00 00 00 
00EDE0 00 00 00 00 00 
00EDE5 00 00 00 00 00 
00EDEA 00 00 00 00 00 
00EDF0 00 00 00 00 00 
00EDF5 00 00 00 00 00 
00EDFA 00 00 00 00 00 
00EE00 00 00 00 00 00 
00EE05 00 00 00 00 00 
00EE0A 00 00 00 00 00 
00EE10 00 00 00 00 00 
00EE15 00 00 00 00 00 
00EE1A 00 00 00 00 00 
00EE20 00 00 00 00 00 
00EE25 00 00 00 00 00 
00EE2A 00 00 00 00 00 
00EE30 00 00 00 00 00 
00EE35 00 00 00 00 00 
00EE3A 00 00 00 00 00 
00EE40 00 00 00 00 00 
00EE45 00 00 00 00 00 
00EE4A 00 00 00 00 00 
00EE50 00 00 00 00 00 
00EE55 00 00 00 00 00 
00EE5A 00 00 00 00 00 
00EE60 00 00 00 00 00 
00EE65 00 00 00 00 00 
00EE6A 00 00 00 00 00 
00EE70 00 00 00 00 00 
00EE75 00 00 00 00 00 
00EE7A 00 00 00 00 00 
00EE80 00 00 00 00 00 
00EE85 00 00 00 00 00 
00EE8A 00 00 00 00 00 
00EE90 00 00 00 00 00 
00EE95 00 00 00 00 00 
00EE9A 00 00 00 00 00 
00EEA0 00 00 00 00 00 
00EEA5 00 00 00 00 00 
00EEAA 00 00 00 00 00 
00EEB0 00 00 00 00 00 
00EEB5 00 00 00 00 00 
00EEBA 00 00 00 00 00 
00EEC0 00 00 00 00 00 
00EEC5 00 00 00 00 00 
00EECA 00 00 00 00 00 
00EED0 00 00 00 00 00 
00EED5 00 00 00 00 00 
00EEDA 00 00 00 00 00 
00EEE0 00 00 00 00 00 
00EEE5 00 00 00 00 00 
00EEEA 00 00 00 00 00 
00EEF0 00 00 00 00 00 
00EEF5 00 00 00 00 00 
00EEFA 00 00 00 00 00 
00EF00 00 00 00 00 00 
00EF05 00 00 00 00 00 
00EF0A 00 00 00 00 00 
00EF10 00 00 00 00 00 
00EF15 00 00 00 00 00 
00EF1A 00 00 00 00 00 
00EF20 00 00 00 00 00 
00EF25 00 00 00 00 00 
00EF2A 00 00 00 00 00 
00EF30 00 00 00 00 00 
00EF35 00 00 00 00 00 
00EF3A 00 00 00 00 00 
00EF40 00 00 00 00 00 
00EF45 00 00 00 00 00 
00EF4A 00 00 00 00 00 
00EF50 00 00 00 00 00 
00EF55 00 00 00 00 00 
00EF5A 00 00 00 00 00 
00EF60 00 00 00 00 00 
00EF65 00 00 00 00 00 
00EF6A 00 00 00 00 00 
00EF70 00 00 00 00 00 
00EF75 00 00 00 00 00 
00EF7A 00 00 00 00 00 
00EF80 00 00 00 00 00 
00EF85 00 00 00 00 00 
00EF8A 00 00 00 00 00 
00EF90 00 00 00 00 00 
00EF95 00 00 00 00 00 
00EF9A 00 00 00 00 00 
00EFA0 00 00 00 00 00 
00EFA5 00 00 00 00 00 
00EFAA 00 00 00 00 00 
00EFB0 00 00 00 00 00 
00EFB5 00 00 00 00 00 
00EFBA 00 00 00 00 00 
00EFC0 00 00 00 00 00 
00EFC5 00 00 00 00 00 
00EFCA 00 00 00 00 00 
00EFD0 00 00 00 00 00 
00EFD5 00 00 00 00 00 
00EFDA 00 00 00 00 00 
00EFE0 00 00 00 00 00 
00EFE5 00 00 00 00 00 
00EFEA 00 00 00 00 00 
00EFF0 00 00 00 00 00 
00EFF5 00 00 00 00 00 
00EFFA 00 00 00 00 00 
00F000 00 00 00 00 00 
00F005 00 00 00 00 00 
00F00A 00 00 00 00 00 
00F010 00 00 00 00 00 
00F015 00 00 00 00 00 
00F01A 00 00 00 00 00 
00F020 00 00 00 00 00 
00F025 00 00 00 00 00 
00F02A 00 00 00 00 00 
00F030 00 00 00 00 00 
00F035 00 00 00 00 00 
00F03A 00 00 00 00 00 
00F040 00 00 00 00 00 
00F045 00 00 00 00 00 
00F04A 00 00 00 00 00 
00F050 00 00 00 00 00 
00F055 00 00 00 00 00 
00F05A 00 00 00 00 00 
00F060 00 00 00 00 00 
00F065 00 00 00 00 00 
00F06A 00 00 00 00 00 
00F070 00 00 00 00 00 
00F075 00 00 00 00 00 
00F07A 00 00 00 00 00 
00F080 00 00 00 00 00 
00F085 00 00 00 00 00 
00F08A 00 00 00 00 00 
00F090 00 00 00 00 00 
00F095 00 00 00 00 00 
00F09A 00 00 00 00 00 
00F0A0 00 00 00 00 00 
00F0A5 00 00 00 00 00 
00F0AA 00 00 00 00 00 
00F0B0 00 00 00 00 00 
00F0B5 00 00 00 00 00 
00F0BA 00 00 00 00 00 
00F0C0 00 00 00 00 00 
00F0C5 00 00 00 00 00 
00F0CA 00 00 00 00 00 
00F0D0 00 00 00 00 00 
00F0D5 00 00 00 00 00 
00F0DA 00 00 00 00 00 
00F0E0 00 00 00 00 00 
00F0E5 00 00 00 00 00 
00F0EA 00 00 00 00 00 
00F0F0 00 00 00 00 00 
00F0F5 00 00 00 00 00 
00F0FA 00 00 00 00 00 
00F100 00 00 00 00 00 
00F105 00 00 00 00 00 
00F10A 00 00 00 00 00 
00F110 00 00 00 00 00 
00F115 00 00 00 00 00 
00F11A 00 00 00 00 00 
00F120 00 00 00 00 00 
00F125 00 00 00 00 00 
00F12A 00 00 00 00 00 
00F130 00 00 00 00 00 
00F135 00 00 00 00 00 
00F13A 00 00 00 00 00 
00F140 00 00 00 00 00 
00F145 00 00 00 00 00 
00F14A 00 00 00 00 00 
00F150 00 00 00 00 00 
00F155 00 00 00 00 00 
00F15A 00 00 00 00 00 
00F160 00 00 00 00 00 
00F165 00 00 00 00 00 
00F16A 00 00 00 00 00 
00F170 00 00 00 00 00 
00F175 00 00 00 00 00 
00F17A 00 00 00 00 00 
00F180 00 00 00 00 00 
00F185 00 00 00 00 00 
00F18A 00 00 00 00 00 
00F190 00 00 00 00 00 
00F195 00 00 00 00 00 
00F19A 00 00 00 00 00 
00F1A0 00 00 00 00 00 
00F1A5 00 00 00 00 00 
00F1AA 00 00 00 00 00 
00F1B0 00 00 00 00 00 
00F1B5 00 00 00 00 00 
00F1BA 00 00 00 00 00 
00F1C0 00 00 00 00 00 
00F1C5 00 00 00 00 00 
00F1CA 00 00 00 00 00 
00F1D0 00 00 00 00 00 
00F1D5 00 00 00 00 00 
00F1DA 00 00 00 00 00 
00F1E0 00 00 00 00 00 
00F1E5 00 00 00 00 00 
00F1EA 00 00 00 00 00 
00F1F0 00 00 00 00 00 
00F1F5 00 00 00 00 00 
00F1FA 00 00 00 00 00 
00F200 00 00 00 00 00 
00F205 00 00 00 00 00 
00F20A 00 00 00 00 00 
00F210 00 00 00 00 00 
00F215 00 00 00 00 00 
00F21A 00 00 00 00 00 
00F220 00 00 00 00 00 
00F225 00 00 00 00 00 
00F22A 00 00 00 00 00 
00F230 00 00 00 00 00 
00F235 00 00 00 00 00 
00F23A 00 00 00 00 00 
00F240 00 00 00 00 00 
00F245 00 00 00 00 00 
00F24A 00 00 00 00 00 
00F250 00 00 00 00 00 
00F255 00 00 00 00 00 
00F25A 00 00 00 00 00 
00F260 00 00 00 00 00 
00F265 00 00 00 00 00 
00F26A 00 00 00 00 00 
00F270 00 00 00 00 00 
00F275 00 00 00 00 00 
00F27A 00 00 00 00 00 
00F280 00 00 00 00 00 
00F285 00 00 00 00 00 
00F28A 00 00 00 00 00 
00F290 00 00 00 00 00 
00F295 00 00 00 00 00 
00F29A 00 00 00 00 00 
00F2A0 00 00 00 00 00 
00F2A5 00 00 00 00 00 
00F2AA 00 00 00 00 00 
00F2B0 00 00 00 00 00 
00F2B5 00 00 00 00 00 
00F2BA 00 00 00 00 00 
00F2C0 00 00 00 00 00 
00F2C5 00 00 00 00 00 
00F2CA 00 00 00 00 00 
00F2D0 00 00 00 00 00 
00F2D5 00 00 00 00 00 
00F2DA 00 00 00 00 00 
00F2E0 00 00 00 00 00 
00F2E5 00 00 00 00 00 
00F2EA 00 00 00 00 00 
00F2F0 00 00 00 00 00 
00F2F5 00 00 00 00 00 
00F2FA 00 00 00 00 00 
00F300 00 00 00 00 00 
00F305 00 00 00 00 00 
00F30A 00 00 00 00 00 
00F310 00 00 00 00 00 
00F315 00 00 00 00 00 
00F31A 00 00 00 00 00 
00F320 00 00 00 00 00 
00F325 00 00 00 00 00 
00F32A 00 00 00 00 00 
00F330 00 00 00 00 00 
00F335 00 00 00 00 00 
00F33A 00 00 00 00 00 
00F340 00 00 00 00 00 
00F345 00 00 00 00 00 
00F34A 00 00 00 00 00 
00F350 00 00 00 00 00 
00F355 00 00 00 00 00 
00F35A 00 00 00 00 00 
00F360 00 00 00 00 00 
00F365 00 00 00 00 00 
00F36A 00 00 00 00 00 
00F370 00 00 00 00 00 
00F375 00 00 00 00 00 
00F37A 00 00 00 00 00 
00F380 00 00 00 00 00 
00F385 00 00 00 00 00 
00F38A 00 00 00 00 00 
00F390 00 00 00 00 00 
00F395 00 00 00 00 00 
00F39A 00 00 00 00 00 
00F3A0 00 00 00 00 00 
00F3A5 00 00 00 00 00 
00F3AA 00 00 00 00 00 
00F3B0 00 00 00 00 00 
00F3B5 00 00 00 00 00 
00F3BA 00 00 00 00 00 
00F3C0 00 00 00 00 00 
00F3C5 00 00 00 00 00 
00F3CA 00 00 00 00 00 
00F3D0 00 00 00 00 00 
00F3D5 00 00 00 00 00 
00F3DA 00 00 00 00 00 
00F3E0 00 00 00 00 00 
00F3E5 00 00 00 00 00 
00F3EA 00 00 00 00 00 
00F3F0 00 00 00 00 00 
00F3F5 00 00 00 00 00 
00F3FA 00 00 00 00 00 
00F400 00 00 00 00 00 
00F405 00 00 00 00 00 
00F40A 00 00 00 00 00 
00F410 00 00 00 00 00 
00F415 00 00 00 00 00 
00F41A 00 00 00 00 00 
00F420 00 00 00 00 00 
00F425 00 00 00 00 00 
00F42A 00 00 00 00 00 
00F430 00 00 00 00 00 
00F435 00 00 00 00 00 
00F43A 00 00 00 00 00 
00F440 00 00 00 00 00 
00F445 00 00 00 00 00 
00F44A 00 00 00 00 00 
00F450 00 00 00 00 00 
00F455 00 00 00 00 00 
00F45A 00 00 00 00 00 
00F460 00 00 00 00 00 
00F465 00 00 00 00 00 
00F46A 00 00 00 00 00 
00F470 00 00 00 00 00 
00F475 00 00 00 00 00 
00F47A 00 00 00 00 00 
00F480 00 00 00 00 00 
00F485 00 00 00 00 00 
00F48A 00 00 00 00 00 
00F490 00 00 00 00 00 
00F495 00 00 00 00 00 
00F49A 00 00 00 00 00 
00F4A0 00 00 00 00 00 
00F4A5 00 00 00 00 00 
00F4AA 00 00 00 00 00 
00F4B0 00 00 00 00 00 
00F4B5 00 00 00 00 00 
00F4BA 00 00 00 00 00 
00F4C0 00 00 00 00 00 
00F4C5 00 00 00 00 00 
00F4CA 00 00 00 00 00 
00F4D0 00 00 00 00 00 
00F4D5 00 00 00 00 00 
00F4DA 00 00 00 00 00 
00F4E0 00 00 00 00 00 
00F4E5 00 00 00 00 00 
00F4EA 00 00 00 00 00 
00F4F0 00 00 00 00 00 
00F4F5 00 00 00 00 00 
00F4FA 00 00 00 00 00 
00F500 00 00 00 00 00 
00F505 00 00 00 00 00 
00F50A 00 00 00 00 00 
00F510 00 00 00 00 00 
00F515 00 00 00 00 00 
00F51A 00 00 00 00 00 
00F520 00 00 00 00 00 
00F525 00 00 00 00 00 
00F52A 00 00 00 00 00 
00F530 00 00 00 00 00 
00F535 00 00 00 00 00 
00F53A 00 00 00 00 00 
00F540 00 00 00 00 00 
00F545 00 00 00 00 00 
00F54A 00 00 00 00 00 
00F550 00 00 00 00 00 
00F555 00 00 00 00 00 
00F55A 00 00 00 00 00 
00F560 00 00 00 00 00 
00F565 00 00 00 00 00 
00F56A 00 00 00 00 00 
00F570 00 00 00 00 00 
00F575 00 00 00 00 00 
00F57A 00 00 00 00 00 
00F580 00 00 00 00 00 
00F585 00 00 00 00 00 
00F58A 00 00 00 00 00 
00F590 00 00 00 00 00 
00F595 00 00 00 00 00 
00F59A 00 00 00 00 00 
00F5A0 00 00 00 00 00 
00F5A5 00 00 00 00 00 
00F5AA 00 00 00 00 00 
00F5B0 00 00 00 00 00 
00F5B5 00 00 00 00 00 
00F5BA 00 00 00 00 00 
00F5C0 00 00 00 00 00 
00F5C5 00 00 00 00 00 
00F5CA 00 00 00 00 00 
00F5D0 00 00 00 00 00 
00F5D5 00 00 00 00 00 
00F5DA 00 00 00 00 00 
00F5E0 00 00 00 00 00 
00F5E5 00 00 00 00 00 
00F5EA 00 00 00 00 00 
00F5F0 00 00 00 00 00 
00F5F5 00 00 00 00 00 
00F5FA 00 00 00 00 00 
00F600 00 00 00 00 00 
00F605 00 00 00 00 00 
00F60A 00 00 00 00 00 
00F610 00 00 00 00 00 
00F615 00 00 00 00 00 
00F61A 00 00 00 00 00 
00F620 00 00 00 00 00 
00F625 00 00 00 00 00 
00F62A 00 00 00 00 00 
00F630 00 00 00 00 00 
00F635 00 00 00 00 00 
00F63A 00 00 00 00 00 
00F640 00 00 00 00 00 
00F645 00 00 00 00 00 
00F64A 00 00 00 00 00 
00F650 00 00 00 00 00 
00F655 00 00 00 00 00 
00F65A 00 00 00 00 00 
00F660 00 00 00 00 00 
00F665 00 00 00 00 00 
00F66A 00 00 00 00 00 
00F670 00 00 00 00 00 
00F675 00 00 00 00 00 
00F67A 00 00 00 00 00 
00F680 00 00 00 00 00 
00F685 00 00 00 00 00 
00F68A 00 00 00 00 00 
00F690 00 00 00 00 00 
00F695 00 00 00 00 00 
00F69A 00 00 00 00 00 
00F6A0 00 00 00 00 00 
00F6A5 00 00 00 00 00 
00F6AA 00 00 00 00 00 
00F6B0 00 00 00 00 00 
00F6B5 00 00 00 00 00 
00F6BA 00 00 00 00 00 
00F6C0 00 00 00 00 00 
00F6C5 00 00 00 00 00 
00F6CA 00 00 00 00 00 
00F6D0 00 00 00 00 00 
00F6D5 00 00 00 00 00 
00F6DA 00 00 00 00 00 
00F6E0 00 00 00 00 00 
00F6E5 00 00 00 00 00 
00F6EA 00 00 00 00 00 
00F6F0 00 00 00 00 00 
00F6F5 00 00 00 00 00 
00F6FA 00 00 00 00 00 
00F700 00 00 00 00 00 
00F705 00 00 00 00 00 
00F70A 00 00 00 00 00 
00F710 00 00 00 00 00 
00F715 00 00 00 00 00 
00F71A 00 00 00 00 00 
00F720 00 00 00 00 00 
00F725 00 00 00 00 00 
00F72A 00 00 00 00 00 
00F730 00 00 00 00 00 
00F735 00 00 00 00 00 
00F73A 00 00 00 00 00 
00F740 00 00 00 00 00 
00F745 00 00 00 00 00 
00F74A 00 00 00 00 00 
00F750 00 00 00 00 00 
00F755 00 00 00 00 00 
00F75A 00 00 00 00 00 
00F760 00 00 00 00 00 
00F765 00 00 00 00 00 
00F76A 00 00 00 00 00 
00F770 00 00 00 00 00 
00F775 00 00 00 00 00 
00F77A 00 00 00 00 00 
00F780 00 00 00 00 00 
00F785 00 00 00 00 00 
00F78A 00 00 00 00 00 
00F790 00 00 00 00 00 
00F795 00 00 00 00 00 
00F79A 00 00 00 00 00 
00F7A0 00 00 00 00 00 
00F7A5 00 00 00 00 00 
00F7AA 00 00 00 00 00 
00F7B0 00 00 00 00 00 
00F7B5 00 00 00 00 00 
00F7BA 00 00 00 00 00 
00F7C0 00 00 00 00 00 
00F7C5 00 00 00 00 00 
00F7CA 00 00 00 00 00 
00F7D0 00 00 00 00 00 
00F7D5 00 00 00 00 00 
00F7DA 00 00 00 00 00 
00F7E0 00 00 00 00 00 
00F7E5 00 00 00 00 00 
00F7EA 00 00 00 00 00 
00F7F0 00 00 00 00 00 
00F7F5 00 00 00 00 00 
00F7FA 00 00 00 00 00 
00F800 00 00 00 00 00 
00F805 00 00 00 00 00 
00F80A 00 00 00 00 00 
00F810 00 00 00 00 00 
00F815 00 00 00 00 00 
00F81A 00 00 00 00 00 
00F820 00 00 00 00 00 
00F825 00 00 00 00 00 
00F82A 00 00 00 00 00 
00F830 00 00 00 00 00 
00F835 00 00 00 00 00 
00F83A 00 00 00 00 00 
00F840 00 00 00 00 00 
00F845 00 00 00 00 00 
00F84A 00 00 00 00 00 
00F850 00 00 00 00 00 
00F855 00 00 00 00 00 
00F85A 00 00 00 00 00 
00F860 00 00 00 00 00 
00F865 00 00 00 00 00 
00F86A 00 00 00 00 00 
00F870 00 00 00 00 00 
00F875 00 00 00 00 00 
00F87A 00 00 00 00 00 
00F880 00 00 00 00 00 
00F885 00 00 00 00 00 
00F88A 00 00 00 00 00 
00F890 00 00 00 00 00 
00F895 00 00 00 00 00 
00F89A 00 00 00 00 00 
00F8A0 00 00 00 00 00 
00F8A5 00 00 00 00 00 
00F8AA 00 00 00 00 00 
00F8B0 00 00 00 00 00 
00F8B5 00 00 00 00 00 
00F8BA 00 00 00 00 00 
00F8C0 00 00 00 00 00 
00F8C5 00 00 00 00 00 
00F8CA 00 00 00 00 00 
00F8D0 00 00 00 00 00 
00F8D5 00 00 00 00 00 
00F8DA 00 00 00 00 00 
00F8E0 00 00 00 00 00 
00F8E5 00 00 00 00 00 
00F8EA 00 00 00 00 00 
00F8F0 00 00 00 00 00 
00F8F5 00 00 00 00 00 
00F8FA 00 00 00 00 00 
00F900 00 00 00 00 00 
00F905 00 00 00 00 00 
00F90A 00 00 00 00 00 
00F910 00 00 00 00 00 
00F915 00 00 00 00 00 
00F91A 00 00 00 00 00 
00F920 00 00 00 00 00 
00F925 00 00 00 00 00 
00F92A 00 00 00 00 00 
00F930 00 00 00 00 00 
00F935 00 00 00 00 00 
00F93A 00 00 00 00 00 
00F940 00 00 00 00 00 
00F945 00 00 00 00 00 
00F94A 00 00 00 00 00 
00F950 00 00 00 00 00 
00F955 00 00 00 00 00 
00F95A 00 00 00 00 00 
00F960 00 00 00 00 00 
00F965 00 00 00 00 00 
00F96A 00 00 00 00 00 
00F970 00 00 00 00 00 
00F975 00 00 00 00 00 
00F97A 00 00 00 00 00 
00F980 00 00 00 00 00 
00F985 00 00 00 00 00 
00F98A 00 00 00 00 00 
00F990 00 00 00 00 00 
00F995 00 00 00 00 00 
00F99A 00 00 00 00 00 
00F9A0 00 00 00 00 00 
00F9A5 00 00 00 00 00 
00F9AA 00 00 00 00 00 
00F9B0 00 00 00 00 00 
00F9B5 00 00 00 00 00 
00F9BA 00 00 00 00 00 
00F9C0 00 00 00 00 00 
00F9C5 00 00 00 00 00 
00F9CA 00 00 00 00 00 
00F9D0 00 00 00 00 00 
00F9D5 00 00 00 00 00 
00F9DA 00 00 00 00 00 
00F9E0 00 00 00 00 00 
00F9E5 00 00 00 00 00 
00F9EA 00 00 00 00 00 
00F9F0 00 00 00 00 00 
00F9F5 00 00 00 00 00 
00F9FA 00 00 00 00 00 
00FA00 00 00 00 00 00 
00FA05 00 00 00 00 00 
00FA0A 00 00 00 00 00 
00FA10 00 00 00 00 00 
00FA15 00 00 00 00 00 
00FA1A 00 00 00 00 00 
00FA20 00 00 00 00 00 
00FA25 00 00 00 00 00 
00FA2A 00 00 00 00 00 
00FA30 00 00 00 00 00 
00FA35 00 00 00 00 00 
00FA3A 00 00 00 00 00 
00FA40 00 00 00 00 00 
00FA45 00 00 00 00 00 
00FA4A 00 00 00 00 00 
00FA50 00 00 00 00 00 
00FA55 00 00 00 00 00 
00FA5A 00 00 00 00 00 
00FA60 00 00 00 00 00 
00FA65 00 00 00 00 00 
00FA6A 00 00 00 00 00 
00FA70 00 00 00 00 00 
00FA75 00 00 00 00 00 
00FA7A 00 00 00 00 00 
00FA80 00 00 00 00 00 
00FA85 00 00 00 00 00 
00FA8A 00 00 00 00 00 
00FA90 00 00 00 00 00 
00FA95 00 00 00 00 00 
00FA9A 00 00 00 00 00 
00FAA0 00 00 00 00 00 
00FAA5 00 00 00 00 00 
00FAAA 00 00 00 00 00 
00FAB0 00 00 00 00 00 
00FAB5 00 00 00 00 00 
00FABA 00 00 00 00 00 
00FAC0 00 00 00 00 00 
00FAC5 00 00 00 00 00 
00FACA 00 00 00 00 00 
00FAD0 00 00 00 00 00 
00FAD5 00 00 00 00 00 
00FADA 00 00 00 00 00 
00FAE0 00 00 00 00 00 
00FAE5 00 00 00 00 00 
00FAEA 00 00 00 00 00 
00FAF0 00 00 00 00 00 
00FAF5 00 00 00 00 00 
00FAFA 00 00 00 00 00 
00FB00 00 00 00 00 00 
00FB05 00 00 00 00 00 
00FB0A 00 00 00 00 00 
00FB10 00 00 00 00 00 
00FB15 00 00 00 00 00 
00FB1A 00 00 00 00 00 
00FB20 00 00 00 00 00 
00FB25 00 00 00 00 00 
00FB2A 00 00 00 00 00 
00FB30 00 00 00 00 00 
00FB35 00 00 00 00 00 
00FB3A 00 00 00 00 00 
00FB40 00 00 00 00 00 
00FB45 00 00 00 00 00 
00FB4A 00 00 00 00 00 
00FB50 00 00 00 00 00 
00FB55 00 00 00 00 00 
00FB5A 00 00 00 00 00 
00FB60 00 00 00 00 00 
00FB65 00 00 00 00 00 
00FB6A 00 00 00 00 00 
00FB70 00 00 00 00 00 
00FB75 00 00 00 00 00 
00FB7A 00 00 00 00 00 
00FB80 00 00 00 00 00 
00FB85 00 00 00 00 00 
00FB8A 00 00 00 00 00 
00FB90 00 00 00 00 00 
00FB95 00 00 00 00 00 
00FB9A 00 00 00 00 00 
00FBA0 00 00 00 00 00 
00FBA5 00 00 00 00 00 
00FBAA 00 00 00 00 00 
00FBB0 00 00 00 00 00 
00FBB5 00 00 00 00 00 
00FBBA 00 00 00 00 00 
00FBC0 00 00 00 00 00 
00FBC5 00 00 00 00 00 
00FBCA 00 00 00 00 00 
00FBD0 00 00 00 00 00 
00FBD5 00 00 00 00 00 
00FBDA 00 00 00 00 00 
00FBE0 00 00 00 00 00 
00FBE5 00 00 00 00 00 
00FBEA 00 00 00 00 00 
00FBF0 00 00 00 00 00 
00FBF5 00 00 00 00 00 
00FBFA 00 00 00 00 00 
00FC00 00 00 00 00 00 
00FC05 00 00 00 00 00 
00FC0A 00 00 00 00 00 
00FC10 00 00 00 00 00 
00FC15 00 00 00 00 00 
00FC1A 00 00 00 00 00 
00FC20 00 00 00 00 00 
00FC25 00 00 00 00 00 
00FC2A 00 00 00 00 00 
00FC30 00 00 00 00 00 
00FC35 00 00 00 00 00 
00FC3A 00 00 00 00 00 
00FC40 00 00 00 00 00 
00FC45 00 00 00 00 00 
00FC4A 00 00 00 00 00 
00FC50 00 00 00 00 00 
00FC55 00 00 00 00 00 
00FC5A 00 00 00 00 00 
00FC60 00 00 00 00 00 
00FC65 00 00 00 00 00 
00FC6A 00 00 00 00 00 
00FC70 00 00 00 00 00 
00FC75 00 00 00 00 00 
00FC7A 00 00 00 00 00 
00FC80 00 00 00 00 00 
00FC85 00 00 00 00 00 
00FC8A 00 00 00 00 00 
00FC90 00 00 00 00 00 
00FC95 00 00 00 00 00 
00FC9A 00 00 00 00 00 
00FCA0 00 00 00 00 00 
00FCA5 00 00 00 00 00 
00FCAA 00 00 00 00 00 
00FCB0 00 00 00 00 00 
00FCB5 00 00 00 00 00 
00FCBA 00 00 00 00 00 
00FCC0 00 00 00 00 00 
00FCC5 00 00 00 00 00 
00FCCA 00 00 00 00 00 
00FCD0 00 00 00 00 00 
00FCD5 00 00 00 00 00 
00FCDA 00 00 00 00 00 
00FCE0 00 00 00 00 00 
00FCE5 00 00 00 00 00 
00FCEA 00 00 00 00 00 
00FCF0 00 00 00 00 00 
00FCF5 00 00 00 00 00 
00FCFA 00 00 00 00 00 
00FD00 00 00 00 00 00 
00FD05 00 00 00 00 00 
00FD0A 00 00 00 00 00 
00FD10 00 00 00 00 00 
00FD15 00 00 00 00 00 
00FD1A 00 00 00 00 00 
00FD20 00 00 00 00 00 
00FD25 00 00 00 00 00 
00FD2A 00 00 00 00 00 
00FD30 00 00 00 00 00 
00FD35 00 00 00 00 00 
00FD3A 00 00 00 00 00 
00FD40 00 00 00 00 00 
00FD45 00 00 00 00 00 
00FD4A 00 00 00 00 00 
00FD50 00 00 00 00 00 
00FD55 00 00 00 00 00 
00FD5A 00 00 00 00 00 
00FD60 00 00 00 00 00 
00FD65 00 00 00 00 00 
00FD6A 00 00 00 00 00 
00FD70 00 00 00 00 00 
00FD75 00 00 00 00 00 
00FD7A 00 00 00 00 00 
00FD80 00 00 00 00 00 
00FD85 00 00 00 00 00 
00FD8A 00 00 00 00 00 
00FD90 00 00 00 00 00 
00FD95 00 00 00 00 00 
00FD9A 00 00 00 00 00 
00FDA0 00 00 00 00 00 
00FDA5 00 00 00 00 00 
00FDAA 00 00 00 00 00 
00FDB0 00 00 00 00 00 
00FDB5 00 00 00 00 00 
00FDBA 00 00 00 00 00 
00FDC0 00 00 00 00 00 
00FDC5 00 00 00 00 00 
00FDCA 00 00 00 00 00 
00FDD0 00 00 00 00 00 
00FDD5 00 00 00 00 00 
00FDDA 00 00 00 00 00 
00FDE0 00 00 00 00 00 
00FDE5 00 00 00 00 00 
00FDEA 00 00 00 00 00 
00FDF0 00 00 00 00 00 
00FDF5 00 00 00 00 00 
00FDFA 00 00 00 00 00 
00FE00 00 00 00 00 00 
00FE05 00 00 00 00 00 
00FE0A 00 00 00 00 00 
00FE10 00 00 00 00 00 
00FE15 00 00 00 00 00 
00FE1A 00 00 00 00 00 
00FE20 00 00 00 00 00 
00FE25 00 00 00 00 00 
00FE2A 00 00 00 00 00 
00FE30 00 00 00 00 00 
00FE35 00 00 00 00 00 
00FE3A 00 00 00 00 00 
00FE40 00 00 00 00 00 
00FE45 00 00 00 00 00 
00FE4A 00 00 00 00 00 
00FE50 00 00 00 00 00 
00FE55 00 00 00 00 00 
00FE5A 00 00 00 00 00 
00FE60 00 00 00 00 00 
00FE65 00 00 00 00 00 
00FE6A 00 00 00 00 00 
00FE70 00 00 00 00 00 
00FE75 00 00 00 00 00 
00FE7A 00 00 00 00 00 
00FE80 00 00 00 00 00 
00FE85 00 00 00 00 00 
00FE8A 00 00 00 00 00 
00FE90 00 00 00 00 00 
00FE95 00 00 00 00 00 
00FE9A 00 00 00 00 00 
00FEA0 00 00 00 00 00 
00FEA5 00 00 00 00 00 
00FEAA 00 00 00 00 00 
00FEB0 00 00 00 00 00 
00FEB5 00 00 00 00 00 
00FEBA 00 00 00 00 00 
00FEC0 00 00 00 00 00 
00FEC5 00 00 00 00 00 
00FECA 00 00 00 00 00 
00FED0 00 00 00 00 00 
00FED5 00 00 00 00 00 
00FEDA 00 00 00 00 00 
00FEE0 00 00 00 00 00 
00FEE5 00 00 00 00 00 
00FEEA 00 00 00 00 00 
00FEF0 00 00 00 00 00 
00FEF5 00 00 00 00 00 
00FEFA 00 00 00 00 00 
00FF00 00 00 00 00 00 
00FF05 00 00 00 00 00 
00FF0A 00 00 00 00 00 
00FF10 00 00 00 00 00 
00FF15 00 00 00 00 00 
00FF1A 00 00 00 00 00 
00FF20 00 00 00 00 00 
00FF25 00 00 00 00 00 
00FF2A 00 00 00 00 00 
00FF30 00 00 00 00 00 
00FF35 00 00 00 00 00 
00FF3A 00 00 00 00 00 
00FF40 00 00 00 00 00 
00FF45 00 00 00 00 00 
00FF4A 00 00 00 00 00 
00FF50 00 00 00 00 00 
00FF55 00 00 00 00 00 
00FF5A 00 00 00 00 00 
00FF60 00 00 00 00 00 
00FF65 00 00 00 00 00 
00FF6A 00 00 00 00 00 
00FF70 00 00 00 00 00 
00FF75 00 00 00 00 00 
00FF7A 00 00 00 00 00 
00FF80 00 00 00 00 00 
00FF85 00 00 00 00 00 
00FF8A 00 00 00 00 00 
00FF90 00 00 00 00 00 
00FF95 00 00 00 00 00 
00FF9A 00 00 00 00 00 
00FFA0 00 00 00 00 00 
00FFA5 00 00 00 00 00 
00FFAA 00 00 00 00 00 
00FFB0 46 00 D0 C0 1F 		bra AlgnFault
                        	
00FFB5 00 00 00 00 00 		org		$0000FFC0		; debug vector
00FFBA 00 00 00 00 00 
00FFC0 46 00 F5 C0 1F 		bra DebugRout
                        	
00FFC5 00 00 00 00 00 		org		$0000FFE0		; NMI vector
00FFCA 00 00 00 00 00 
00FFD0 00 00 00 00 00 
00FFD5 00 00 00 00 00 
00FFDA 00 00 00 00 00 
00FFE0 01 00 00 00 40 		rti
                        	
00FFE5 00 00 00 00 00 		org		$0000FFF0
00FFEA 00 00 00 00 00 
00FFF0 50 00 82 00 00 		jmp		start
00FFF5 50 00 82 00 00 		jmp		start
526 symbols
  Symbol Name                              seg     address
  AddOSPT                                    code  008a60
  AddTaskToReadyList                         code  00a97a
  AddTaskToReadyList.initQ                   code  00a9fa
  AlgnFault                                  code  00b0d0
  AlgnFault2                                 code  00b0e0
  AsciiToHexNybble                           code  00944a
  AsciiToHexNybble.gthx3                     code  0094b5
  AsciiToHexNybble.gthx5                     code  00946a
  AsciiToHexNybble.gthx6                     code  009490
  AsciiToScreen                              code  008a60
  AsciiToScreen.00001                        code  008a85
  BMP_CLUT                                  const  0c5800
  BSI_BootSig                               const  000026
  BSI_DriveNum                              const  000024
  BSI_FATS                                  const  000010
  BSI_FileSysType                           const  000036
  BSI_Heads                                 const  00001a
  BSI_HiddenSecs                            const  00001c
  BSI_HugeSecs                              const  00001e
  BSI_JMP                                   const  000000
  BSI_Media                                 const  000015
  BSI_OEMName                               const  000003
  BSI_ResSectors                            const  00000e
  BSI_RootDirEnts                           const  000011
  BSI_Rsvd1                                 const  000025
  BSI_SecPerCluster                         const  00000d
  BSI_SecPerFAT                             const  000016
  BSI_SecPerTrack                           const  000018
  BSI_Sectors                               const  000013
  BSI_VolID                                 const  000027
  BSI_VolLabel                              const  00002b
  BSI_bps                                   const  00000b
  BYTE_SECTOR_BUF                           const  070000
  BlankLine                                  code  00906a
  BlankLine.0001                             code  0090aa
  BlocksToSectors                            code  00a0f0
  CR                                        const  00000d
  CRLF                                       code  008c1a
  CTRLC                                     const  000003
  CTRLCCheck                                 code  0093b0
  CTRLCCheck.0001                            code  0093d0
  CTRLH                                     const  000008
  CTRLI                                     const  000009
  CTRLJ                                     const  00000a
  CTRLK                                     const  00000b
  CTRLM                                     const  00000d
  CTRLS                                     const  000013
  CTRLX                                     const  000018
  CalcScreenLoc                              code  008d40
  CheckKeys                                  code  0093a5
  CheckScrollLock                            code  0093da
  CheckScrollLock.0001                       code  0093f5
  CheckScrollLock.0002                       code  0093e0
  ClearBmpScreen                             code  008b5a
  ClearBmpScreen.0001                        code  008b65
  ClearPageTable                             code  008980
  ClearPageTable.0001                        code  00898a
  ClearScreen                                code  008aca
  ClearScreen.cs1                            code  008b10
  CopyROMtoRAM                               code  008520
  CopyROMtoRAM.st1                           code  00852a
  CursorCol                                   bss  000081
  CursorOff                                  code  008aa5
  CursorOn                                   code  008aaa
  CursorRow                                   bss  000080
  DebugRout                                  code  00b0f5
  DispCharQ                                  code  008c40
  DispLed                                    code  00850a
  DispStartMsg                               code  008c55
  DisplayByte                                code  008ba5
  DisplayChar                                code  008d95
  DisplayChar.dcx12                          code  008ee0
  DisplayChar.dcx4                           code  008e35
  DisplayChar.dcx5                           code  008f25
  DisplayChar.dcx7                           code  008e6a
  DisplayChar.doBackspace                    code  008f00
  DisplayChar.doCursorDown                   code  008eaa
  DisplayChar.doCursorHome                   code  008eca
  DisplayChar.doCursorLeft                   code  008e90
  DisplayChar.doCursorRight                  code  008e50
  DisplayChar.doCursorUp                     code  008e75
  DisplayChar.doDelete                       code  008eea
  DisplayChar.doLinefeed                     code  008f6a
  DisplayChar.docr                           code  008e40
  DisplayCharHex                             code  008b95
  DisplayErr                                 code  0094c0
  DisplayHalf                                code  008b85
  DisplayMemBytes                            code  0092d5
  DisplayMemBytes.001                        code  00930a
  DisplayMemBytes.002                        code  009350
  DisplayMemBytes.003                        code  00937a
  DisplayMemBytes.004                        code  00936a
  DisplayNybble                              code  008bb5
  DisplayNybble.0001                         code  008bd5
  DisplayString                              code  008be5
  DisplayString.dm1                          code  008c0a
  DisplayString.dm2                          code  008bf0
  DisplayStringCRLF                          code  008c15
  DisplayWord                                code  008b75
  Dummy1                                      bss  000082
  E_Arg                                     const  000001
  E_BadAlarm                                const  000011
  E_BadBlockNum                             const  000025
  E_BadDevNum                               const  000020
  E_BadDevOp                                const  000022
  E_BadMbx                                  const  000004
  E_DCBInUse                                const  000019
  E_NoDev                                   const  000021
  E_NoMem                                   const  00000c
  E_NoMoreAlarmBlks                         const  000044
  E_NoMoreMbx                               const  000040
  E_NoMoreMsgBlks                           const  000041
  E_NoMoreTCBs                              const  000045
  E_NoMsg                                   const  00000b
  E_NoThread                                const  000006
  E_NotAlloc                                const  000009
  E_NotOwner                                const  000012
  E_Ok                                      const  000000
  E_QueFull                                 const  000005
  E_QueStrategy                             const  000013
  E_ReadError                               const  000023
  E_Timeout                                 const  000010
  E_TooManyBlocks                           const  000026
  E_WriteError                              const  000024
  EndStaticAllocations                        bss  075000
  ExitTask                                   code  00a935
  ExitTask.0001                              code  00a970
  FMTKInitialize                             code  00a73a
  FMTKInitialize.0001                        code  00a7c0
  FMTKScheduler                              code  00aaba
  FMTKScheduler.0002                         code  00aae0
  FMTKTick                                   code  00ab30
  FMTKTick.0001                              code  00ab50
  FMTKTick.0002                              code  00ab70
  FindHiPage                                 code  0089da
  FindHiPage.0001                            code  008a10
  FindHiPage.0002                            code  0089e5
  FindHiPage.0003                            code  008a2a
  FindHiPage.0004                            code  008a1a
  FreeTCB                                     bss  000030
  GDTBaseAddress                              bss  012000
  GetCurrAttr                                code  008cf0
  GetHexNumber                               code  009400
  GetHexNumber.gthxn1                        code  00943a
  GetHexNumber.gthxn2                        code  009410
  GetRange                                   code  009220
  GetScreenLocation                          code  008ce0
  GetTwoParams                               code  009200
  HomeCursor                                 code  008ab0
  IOPgTbl                                     bss  04c000
  IVTBaseAddress                              bss  010000
  IdleTask                                   code  00a860
  IdleTask.it1                               code  00a860
  IncCursorPos                               code  008f75
  IncCursorRow                               code  008fa0
  InitBMP                                    code  008b25
  InitBMP.ibmp1                              code  008b40
  InitPIC                                    code  0086e5
  KEYBD                                     const  ffdc0000
  KEYBDCLR                                  const  ffdc0004
  KEYBD_DELAY                               const  0003e8
  KeySTate2                                  code  000000
  KeyState1                                   bss  000088
  KeyState2                                   bss  000089
  KeybdBad                                    bss  000085
  KeybdEcho                                   bss  000084
  KeybdGetChar                               code  009885
  KeybdGetChar.0001                          code  0098b5
  KeybdGetChar.0003                          code  00988a
  KeybdGetChar.0004                          code  009a20
  KeybdGetChar.0005                          code  009a5a
  KeybdGetChar.0006                          code  0098b0
  KeybdGetChar.0007                          code  0099a0
  KeybdGetChar.0008                          code  0099ba
  KeybdGetChar.0009                          code  009980
  KeybdGetChar.0010                          code  00995a
  KeybdGetChar.doCapsLock                    code  009a8a
  KeybdGetChar.doCtrl                        code  0099fa
  KeybdGetChar.doExtend                      code  0099e5
  KeybdGetChar.doKeyup                       code  0099d5
  KeybdGetChar.doNumLock                     code  009a70
  KeybdGetChar.doScrollLock                  code  009aa5
  KeybdGetChar.doScrolllock                  code  000000
  KeybdGetChar.doShift                       code  009a35
  KeybdGetCharDirect                         code  009605
  KeybdGetCharDirect.0001                    code  00961a
  KeybdGetCharDirect.gk1                     code  009680
  KeybdGetCharDirect.gk2                     code  00967a
  KeybdGetCharDirectNB                       code  009550
  KeybdGetCharDirectNB.0001                  code  0095e5
  KeybdGetCharDirectNB.0002                  code  0095da
  KeybdGetCharDirectNB.0003                  code  0095d5
  KeybdGetCharNoWait                         code  009870
  KeybdGetCharWait                           code  00987a
  KeybdGetScancode                           code  0097aa
  KeybdGetStatus                             code  009775
  KeybdIRQ                                   code  008c8a
  KeybdInit                                  code  0096a5
  KeybdInit.0001                             code  0096aa
  KeybdInit.0002                             code  0096c0
  KeybdInit.0004                             code  00975a
  KeybdInit.config                           code  009710
  KeybdInit.keybdErr                         code  00974a
  KeybdInit.tryAgain                         code  009745
  KeybdLEDs                                   bss  00008b
  KeybdLocks                                  bss  000086
  KeybdRecvByte                              code  0097ea
  KeybdRecvByte.0003                         code  0097f5
  KeybdRecvByte.0004                         code  00981a
  KeybdSendByte                              code  009b5a
  KeybdSetLEDStatus                          code  009ac0
  KeybdSetLEDStatus.0001                     code  009b50
  KeybdSetLEDStatus.0002                     code  009ae5
  KeybdSetLEDStatus.0003                     code  009b00
  KeybdSetLEDStatus.0004                     code  009b1a
  KeybdWaitFlag                               bss  00008a
  KeybdWaitTx                                code  00982a
  KeybdWaitTx.0001                           code  009835
  KeybdWaitTx.0002                           code  009860
  LEDS                                      const  ffdc0600
  LF                                        const  00000a
  MRTest                                     code  009ed0
  MRTest.0001                                code  009eda
  Milliseconds                                bss  000010
  MonGetch                                   code  0091ca
  Monitor                                    code  0090c0
  NR_PTBL                                   const  000020
  NR_TCB                                    const  000010
  NormAttr                                    bss  000078
  OutChar                                    code  00928a
  OutputVec                                   bss  000018
  PAM1                                        bss  022000
  PAM2                                        bss  023000
  PIC                                       const  ffdc0fc0
  PIC_ES                                    const  ffdc0fd0
  PIC_IE                                    const  ffdc0fc4
  PIC_RSTE                                  const  ffdc0fd4
  PROG_LOAD_AREA                            const  071000
  PgSD0                                       bss  044000
  PgSD3                                       bss  045000
  PgTbl0                                      bss  046000
  PgTbl1                                      bss  047000
  PgTbl2                                      bss  048000
  PgTbl3                                      bss  049000
  PgTbl4                                      bss  04a000
  PgTbl5                                      bss  04b000
  QNdx0                                       bss  000038
  RAMTest                                    code  00ae00
  RAMTest.0001                               code  00ae55
  RAMTest.0002                               code  00ae1a
  RAMTest.0003                               code  00ae95
  RAMTest.0004                               code  00aeca
  RAMTest.0005                               code  00ae70
  RAMTest.0006                               code  00aee0
  ROOTDIR_BUF                                 bss  071000
  RW_READ_SD_BLOCK                          const  000002
  RW_WRITE_SD_BLOCK                         const  000003
  RemoveTaskFromReadyList                    code  00aa35
  RemoveTaskFromReadyList.0001               code  00aa90
  RestoreContext                             code  00ad4a
  RootPageTbl                                 bss  024000
  RunningTCB                                  bss  000028
  SC_ALT                                    const  000011
  SC_CAPSLOCK                               const  000058
  SC_CTRL                                   const  000014
  SC_DEL                                    const  000071
  SC_EXTEND                                 const  0000e0
  SC_KEYUP                                  const  0000f0
  SC_LCTRL                                  const  000058
  SC_LSHIFT                                 const  000012
  SC_NUMLOCK                                const  000077
  SC_RSHIFT                                 const  000059
  SC_SCROLLLOCK                             const  00007e
  SDDiskSize                                 code  00a340
  SDInit                                     code  009f0a
  SDInit.spi_error                           code  009f8a
  SDInit.spi_init1                           code  009f45
  SDReadBlocks                               code  00a0fa
  SDReadBoot                                 code  00a34a
  SDReadMultiple                             code  00a215
  SDReadMultiple.spi_rm1                     code  00a220
  SDReadPart                                 code  00a2a0
  SDReadPart.spi_rp1                         code  00a330
  SDReadSector                               code  009ff0
  SDReadSector.spi_read_error                code  00a0c0
  SDReadSector.spi_read_ret                  code  00a0da
  SDReadSector.spi_read_retry                code  00a03a
  SDReadSector.spi_read_sect1                code  00a060
  SDReadSector.spi_read_sect2                code  00a095
  SDWriteBlocks                              code  00a100
  SDWriteMultiple                            code  00a25a
  SDWriteMultiple.spi_wm1                    code  00a265
  SDWriteSector                              code  00a105
  SDWriteSector.spi_write_error              code  00a1f0
  SDWriteSector.spi_write_ret                code  00a205
  SDWriteSector.spi_write_sect1              code  00a140
  SDWriteSector.spi_write_sect2              code  00a1b0
  SECTOR_BUF                                  bss  070000
  SPIMASTER                                 const  ffdc0500
  SPI_DIRECT_ACCESS_DATA_REG                const  000018
  SPI_INIT_NO_ERROR                         const  000000
  SPI_INIT_SD                               const  000001
  SPI_MASTER_CONTROL_REG                    const  000004
  SPI_MASTER_VERSION_REG                    const  000000
  SPI_READ_NO_ERROR                         const  000000
  SPI_RESP_BYTE1                            const  0000c0
  SPI_RESP_BYTE2                            const  0000c4
  SPI_RESP_BYTE3                            const  0000c8
  SPI_RESP_BYTE4                            const  0000cc
  SPI_RX_FIFO_CTRL_REG                      const  000050
  SPI_RX_FIFO_DATA_COUNT_LSB                const  00004c
  SPI_RX_FIFO_DATA_COUNT_MSB                const  000048
  SPI_RX_FIFO_DATA_REG                      const  000040
  SPI_SD_SECT_15_8_REG                      const  000020
  SPI_SD_SECT_23_16_REG                     const  000024
  SPI_SD_SECT_31_24_REG                     const  000028
  SPI_SD_SECT_7_0_REG                       const  00001c
  SPI_TRANS_BUSY                            const  000001
  SPI_TRANS_CTRL_REG                        const  00000c
  SPI_TRANS_ERROR_REG                       const  000014
  SPI_TRANS_START                           const  000001
  SPI_TRANS_STATUS_REG                      const  000010
  SPI_TRANS_TYPE_REG                        const  000008
  SPI_TX_FIFO_CTRL_REG                      const  000090
  SPI_TX_FIFO_DATA_REG                      const  000080
  SPI_WRITE_NO_ERROR                        const  000000
  SaveContext                                code  00ac90
  ScreenChar                                 code  008a8a
  ScreenToAscii                              code  008a8a
  ScreenToAscii.stasc1                       code  008aa0
  ScrollUp                                   code  008fe0
  ScrollUp.0001                              code  009030
  SelectTaskToRun                            code  00ab9a
  SelectTaskToRun.qagain                     code  00abc5
  SelectTaskToRun.qempty                     code  00ac05
  SelectTaskToRun.qerr                       code  00ac2a
  SelectTaskToRun.qxit                       code  00ac40
  SetVector                                  code  0086d0
  SetupBMTable                               code  0089a0
  SetupBMTable.0006                          code  0089b0
  SetupIntVectors                            code  008540
  SetupIntVectors.siv1                       code  00858a
  SetupPageTbl                               code  00870a
  SetupPageTbl.0002                          code  008770
  SetupPageTbl.0003                          code  00884a
  SetupPageTbl.0005                          code  008960
  SetupPageTbl.0006                          code  008875
  SetupPageTbl.0007                          code  0088f5
  SetupPageTbl.0008                          code  008910
  StartTask                                  code  00a875
  TAB                                       const  000009
  TCB_BackLink                              const  000000
  TCB_Next                                  const  000a00
  TCB_PCSave                                const  000980
  TCB_Prev                                  const  000a08
  TCB_Priority                              const  000a20
  TCB_Regs                                  const  000008
  TCB_SP0Save                               const  000800
  TCB_SP10Save                              const  0008a0
  TCB_SP11Save                              const  0008b0
  TCB_SP12Save                              const  0008c0
  TCB_SP13Save                              const  0008d0
  TCB_SP14Save                              const  0008e0
  TCB_SP15Save                              const  0008f0
  TCB_SP1Save                               const  000810
  TCB_SP2Save                               const  000820
  TCB_SP3Save                               const  000830
  TCB_SP4Save                               const  000840
  TCB_SP5Save                               const  000850
  TCB_SP6Save                               const  000860
  TCB_SP7Save                               const  000870
  TCB_SP8Save                               const  000880
  TCB_SP9Save                               const  000890
  TCB_SPSave                                const  000988
  TCB_SS0Save                               const  000808
  TCB_SS10Save                              const  0008a8
  TCB_SS11Save                              const  0008b8
  TCB_SS12Save                              const  0008c8
  TCB_SS13Save                              const  0008d8
  TCB_SS14Save                              const  0008e8
  TCB_SS15Save                              const  0008f8
  TCB_SS1Save                               const  000818
  TCB_SS2Save                               const  000828
  TCB_SS3Save                               const  000838
  TCB_SS4Save                               const  000848
  TCB_SS5Save                               const  000858
  TCB_SS6Save                               const  000868
  TCB_SS7Save                               const  000878
  TCB_SS8Save                               const  000888
  TCB_SS9Save                               const  000898
  TCB_Seg0Save                              const  000900
  TCB_Seg10Save                             const  000950
  TCB_Seg11Save                             const  000958
  TCB_Seg12Save                             const  000960
  TCB_Seg13Save                             const  000968
  TCB_Seg14Save                             const  000970
  TCB_Seg15Save                             const  000978
  TCB_Seg1Save                              const  000908
  TCB_Seg2Save                              const  000910
  TCB_Seg3Save                              const  000918
  TCB_Seg4Save                              const  000920
  TCB_Seg5Save                              const  000928
  TCB_Seg6Save                              const  000930
  TCB_Seg7Save                              const  000938
  TCB_Seg8Save                              const  000940
  TCB_Seg9Save                              const  000948
  TCB_Size                                  const  002000
  TCB_Status                                const  000a18
  TCB_hJob                                  const  000a28
  TCBs                                        bss  050000
  TEXTREG                                   const  0a0000
  TEXTSCR                                   const  000000
  TEXT_COLS                                 const  000000
  TEXT_CURCTL                               const  000020
  TEXT_CURPOS                               const  00002c
  TEXT_ROWS                                 const  000004
  TSSBaseAddress                              bss  050000
  TS_PREEMPT                                const  000004
  TS_READY                                  const  000001
  TS_RUNNING                                const  000002
  TXTCOLS                                   const  000054
  TXTROWS                                   const  00001f
  TempTCB                                     bss  04d000
  Tick1000Rout                               code  008cb0
  TickRout                                   code  008c9a
  TickVec                                     bss  000020
  Ticks                                       bss  000008
  UpdateCursorPos                            code  008cfa
  Wait10ms                                   code  009b90
  Wait10ms.0001                              code  009b9a
  Wait10ms.0002                              code  009bba
  XOFF                                      const  000013
  XON                                       const  000011
  bear                                       code  00b0ca
  bear.be1                                   code  00b0ca
  berr_rout                                  code  00b0b5
  cpy_br_desc                                code  00a60a
  cpy_br_desc.lbf0001                        code  00a615
  disk_size                                   bss  000090
  doCLS                                      code  009540
  doCS                                       code  0092c0
  doDumpmem                                  code  009235
  doDumpmem.001                              code  009245
  doRand                                     code  009290
  doRand.0001                                code  0092a5
  doSDBoot                                   code  009260
  drf_rout                                   code  00af65
  drf_rout.0001                              code  00af80
  dwf_rout                                   code  00af85
  dwf_rout.0001                              code  00afa0
  exf_rout                                   code  00af45
  exf_rout.0001                              code  00af60
  fault_cs                                   code  00b015
  fault_seg                                  code  00b025
  fault_st                                   code  00b035
  fault_st.0001                              code  00b040
  icc1                                       code  008fd0
  icr1                                       code  008fa5
  ignBlanks                                  code  0091e5
  ignBlanks1                                 code  0091e5
  j1                                         code  0084e0
  kbdi5                                      code  00968a
  kernel_panic                               code  00ac85
  keybdControlCodes                          code  009dd0
  keybdExtendedCodes                         code  009e50
  loadBootFile                               code  00a410
  loadBootFile1                              code  00a585
  loadBootFile2                              code  00a5e0
  loadBootFile3                              code  00a5aa
  loadBootFile6                              code  00a560
  loadBootFile7                              code  00a440
  loadBootFile7.0001                         code  00a52a
  loadBootFile7.0002                         code  00a4ca
  loadBootFileTmp                            code  00a565
  mon1                                       code  0090e0
  mon1.Prompt1                               code  009145
  mon1.Prompt2                               code  00916a
  mon1.Prompt3                               code  009125
  mon1.PromptLn                              code  009115
  mon1.doHelp                                code  0091ba
  msgBadKeybd                                code  00968a
  msgDOSNotFound                             code  00a725
  msgErr                                     code  0094d0
  msgFoundEB                                 code  00a3ea
  msgHelp                                    code  0094da
  msgJumpingToBoot                           code  00a67a
  msgMonitorStarted                          code  00952a
  msgNoTasks                                 code  00ac70
  msgNotBootable                             code  00a68a
  msgNotFoundEB                              code  00a3fa
  msgPriv                                    code  00b080
  msgSBV                                     code  00b075
  msgSNP                                     code  00b09a
  msgSTV                                     code  00b090
  msgStart                                   code  008c6a
  msgUninit                                  code  00b0a5
  msgdrf                                     code  00b06a
  msgdwf                                     code  00b070
  msgexf                                     code  00b065
  nStartQue                                  code  00ab10
  priv_rout                                  code  00afc5
  priv_rout.0001                             code  00afe0
  sbv_rout                                   code  00afa5
  sbv_rout.0001                              code  00afc0
  shiftedScanCodes                           code  009cd0
  snp_rout                                   code  00b045
  snp_rout.0001                              code  00b060
  spi_boot_error_msg                         code  00a6e5
  spi_delay                                  code  009fe0
  spi_eb_err                                 code  00a3d0
  spi_init_error_msg                         code  00a6ba
  spi_init_ok_msg                            code  00a6a0
  spi_read_boot2                             code  00a37a
  spi_read_boot_err                          code  00a3c0
  spi_read_error_msg                         code  00a6fa
  spi_write_error_msg                        code  00a710
  start                                      code  008200
  start.st0003                               code  008335
  start.strt1                                code  008235
  start.strt2                                code  008390
  startSector                                 bss  00008c
  stv_rout                                   code  00afe5
  uninit_rout                                code  00aee5
  uninit_rout.0001                           code  00af40
  uninit_rout.0002                           code  00af25
  unshiftedScanCodes                         code  009bd0
